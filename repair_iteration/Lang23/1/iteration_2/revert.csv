projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151List<Format>foundFormats=newArrayList<Format>();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(toPattern);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(1);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(toPattern==null){for(inti=start;i<fmtCount;i++){appendQuotedString(pattern,pos,stripCustom,true);}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(toPattern!=null){for(inti=start;i<fmtCount;i++){appendQuotedString(pattern,pos,stripCustom,true);}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(toPattern==null){for(inti=start;i<fmtCount;i++){appendQuotedString(pattern,i,stripCustom,true);}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151intfmtCount=toPattern.length();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(toPattern==null){for(inti=start;i<fmtCount;i++){appendQuotedString(pattern,i+1,stripCustom,true);}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(toPattern==null){for(Iterator<Object>it=toPattern.iterator();it.hasNext();){appendString(pattern,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(toPattern!=null){for(Iterator<Object>it=toPattern.iterator();it.hasNext();){appendString(pattern,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151Iterator<String>it=toPattern.iterator();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151Iterator<Object>it=toPattern.iterator();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(toPattern==null){for(Iterator<Object>it=toPatterns.iterator();it.hasNext();){appendString(pattern,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(0);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(toPattern==null){for(Iterator<Object>it=toPattern.iterator();it.hasNext();){appendQuotedString(pattern,pos,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(toPattern==null){for(Iterator<String>it=pattern.iterator();it.hasNext();){appendQuotedString(pattern,pos,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(toPattern==null){for(Iterator<Object>it=toPattern.iterator();it.hasNext();){appendString(pattern,pos,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(toPattern==null){for(Iterator<Object>it=toPattern.iterator();it.hasNext();){applyPattern(it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(toPattern==null){toPattern=newFormat[fmtCount];for(inti=start;i<fmtCount;++i){appendQuotedString(pattern,i);}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(toPattern==null){for(inti=start;i<fmtCount;i++){appendQuotedString(pattern,i+1,stripCustom,false);}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(toPattern==null){for(inti=start;i<fmtCount;i++){appendQuotedString(pattern,pos+1,stripCustom,true);}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(toPattern!=null){for(Iterator<Object>it=foundDescriptions.iterator();it.hasNext();){appendString(pattern,pos,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(toPattern==null){for(Iterator<Object>it=foundDescriptions.iterator();it.hasNext();){appendString(pattern,pos,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(toPattern!=null){for(Iterator<Object>it=toPattern.iterator();it.hasNext();){appendString(pattern,pos,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151for(Iterator<Object>it=foundDescriptions.iterator();it.hasNext();){appendString(pattern,pos,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151Iterator<String>it=this.toPattern.iterator();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151Iterator<String>it=registry.iterator();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151Iterator<String>it=this.formatDescription.iterator();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151Iterator<String>it=register.iterator();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(0);junit.framework.AssertionFailedError:this.registry.applyPattern(pattern);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(0);junit.framework.AssertionFailedError:this.registry.appendPattern(pattern);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(0);junit.framework.AssertionFailedError:this.registry.applyPattern(pattern,toPattern);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(0);junit.framework.AssertionFailedError:registry.registerFormat(foundDescriptions,pattern);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(toPattern!=null){for(Iterator<Object>it=toPattern.iterator();it.hasNext();){applyPattern(it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151for(Iterator<Object>it=foundDescriptions.iterator();it.hasNext();){applyPattern(it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151Iterator<Object>it=toPattern.iterator();it.hasNext();){applyPattern(it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(toPattern!=null){toPattern=newFormat[fmtCount];for(inti=start;i<fmtCount;++i){appendQuotedString(pattern,i);}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(c==null){if(toPattern==null){toPattern=newFormat[fmtCount];for(inti=start;i<fmtCount;++i){appendQuotedString(pattern,i);}}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(fmtCount==0){if(toPattern==null){toPattern=newFormat[fmtCount];for(inti=start;i<fmtCount;++i){appendQuotedString(pattern,
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(toPattern!=null){for(Iterator<Object>it=foundDescriptions.iterator();it.hasNext();){appendString(pattern,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151for(Iterator<Object>it=foundDescriptions.iterator();it.hasNext();){appendString(pattern,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(toPattern==null){for(Iterator<String>it=foundDescriptions.iterator();it.hasNext();){appendQuotedString(pattern,pos,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(toPattern!=null){for(Iterator<String>it=foundDescriptions.iterator();it.hasNext();){appendQuotedString(pattern,pos,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151for(Iterator<String>it=foundDescriptions.iterator();it.hasNext();){appendQuotedString(pattern,pos,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(toPattern==null){for(Iterator<String>it=foundFormats.iterator();it.hasNext();){appendQuotedString(pattern,pos,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<String>foundDescriptions=newArrayList<String>();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<String>foundDescriptions=newArrayList<String>(toPattern.length());
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<String>foundDescriptions=newArrayList<String>(origFormats.length);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<String>foundDescriptions=newArrayList<String>(toPattern.size());
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(toPattern!=null){for(inti=start;i<fmtCount;i++){appendQuotedString(pattern,pos,stripCustom,false);}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(toPattern==null){for(inti=start;i<fmtCount;i++){appendQuotedString(pattern,pos,stripCustom,false);}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(toPattern!=null){for(Iterator<Object>it=foundDescriptions.iterator();it.hasNext();){appendQuotedString(pattern,pos,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(toPattern==null){for(Iterator<Object>it=foundDescriptions.iterator();it.hasNext();){appendQuotedString(pattern,pos,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(toPattern!=null){for(Iterator<Object>it=toPattern.iterator();it.hasNext();){appendQuotedString(pattern,pos,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(toPattern!=null){for(Iterator<Object>it=toPatterns.iterator();it.hasNext();){appendString(pattern,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151Iterator<Object>it=toPatterns.iterator();it.hasNext();){appendString(pattern,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(toPattern!=null){for(inti=start;i<fmtCount;i++){appendQuotedString(pattern,i,stripCustom,true);}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(2);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(toPattern==null){for(Iterator<Object>it=foundDescriptions.iterator();it.hasNext();){appendString(pattern,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151intfmtCount=pattern.length();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151intfmtCount=toPattern.length()-1;
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151intfmtCount=toPattern.length()+1;
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151intfmtCount=toPattern.length()*2;
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151Iterator<Object>it=registry.iterator();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151Iterator<Object>it=this.toPattern.iterator();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151Iterator<Object>it=register.iterator();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(origFormats);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(toPattern,toPattern.length);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(toPattern.length);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(toPattern,origFormats);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151Set<Format>foundFormats=newHashSet<Format>();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(1);junit.framework.AssertionFailedError:this.registry.applyPattern(pattern);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(1);junit.framework.AssertionFailedError:registry.registerFormat(foundDescriptions,true);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(1);junit.framework.AssertionFailedError:registry.registerFormat(foundDescriptions,pattern);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(1);junit.framework.AssertionFailedError:this.registry.applyPattern(pattern,toPattern);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(4);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(fmtCount==0){toPattern=newFormat[fmtCount];for(inti=start;i<fmtCount;++i){appendQuotedString(pattern,i);}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(toPattern==null){toPattern=newFormat[1];for(inti=start;i<fmtCount;++i){appendQuotedString(pattern,i);}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(toPattern!=null){for(Iterator<String>it=pattern.iterator();it.hasNext();){appendQuotedString(pattern,pos,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151Iterator<String>it=pattern.iterator();it.hasNext();){appendQuotedString(pattern,pos,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151for(Iterator<String>it=pattern.iterator();it.hasNext();){appendQuotedString(pattern,pos,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(toPattern!=null){for(inti=start;i<fmtCount;i++){appendQuotedString(pattern,i+1,stripCustom,true);}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151for(inti=start;i<fmtCount;i++){appendQuotedString(pattern,i+1,stripCustom,true);}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(toPattern!=null){for(inti=start;i<fmtCount;i++){appendQuotedString(pattern,i+1,stripCustom,false);}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151Iterator<Object>it=toPattern.iterator();it.hasNext();){appendString(pattern,pos,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151for(Iterator<Object>it=toPattern.iterator();it.hasNext();){appendString(pattern,pos,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(1);ArrayList<Format>foundFormats=newArrayList<Format>(1);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(1);junit.framework.AssertionFailedError:registry.
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(1);junit.framework.AssertionFailedError:registry.registerFormat(DUMMY_PATTERN,pattern);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(1);junit.framework.AssertionFailedError:registry.registerFormat(this,foundFormats);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(1);junit.framework.AssertionFailedError:toPattern;
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151Collection<Format>foundFormats=newArrayList<Format>();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151for(Iterator<Object>it=toPatterns.iterator();it.hasNext();){appendString(pattern,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151Iterator<Object>it=toPattern.iterator();it.hasNext();){appendQuotedString(pattern,pos,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151for(Iterator<Object>it=toPattern.iterator();it.hasNext();){appendQuotedString(pattern,pos,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(toPattern==null){for(Iterator<String>it=origFormats.iterator();it.hasNext();){applyPattern(it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<String>foundDescriptions=Lists.newArrayList();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(toPattern==null){for(Iterator<String>it=origFormats.iterator();it.hasNext();){appendDescription(it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151Iterator<Object>it=this.registry.iterator();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151for(Iterator<Object>it=toPattern.iterator();it.hasNext();){applyPattern(it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151Iterator<Object>it=toPattern.iterator();it.hasNext();){appendString(pattern,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151for(Iterator<Object>it=toPattern.iterator();it.hasNext();){appendString(pattern,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151Iterator<String>it=this.registry.iterator();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(0);junit.framework.AssertionFailedError:registry.
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(0);junit.framework.AssertionFailedError:registry.registerFormat(DUMMY_PATTERN,pattern);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(0);junit.framework.AssertionFailedError:toPattern;
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(0);junit.framework.AssertionFailedError:registry.registerFormat(DUMMY_PATTERN,foundFormats);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(0);junit.framework.AssertionFailedError:registry.registerFormat(this,foundFormats);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151for(inti=start;i<fmtCount;i++){appendQuotedString(pattern,pos,stripCustom,true);}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(toPattern==null){for(Iterator<Object>it=pattern.iterator();it.hasNext();){appendQuotedString(pattern,pos,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151for(Iterator<Object>it=pattern.iterator();it.hasNext();){appendString(pattern,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(c==null){for(Iterator<Object>it=c.iterator();it.hasNext();){appendString(pattern,pos,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(toPattern==null){for(Iterator<Object>it=this.toPatterns.iterator();it.hasNext();){appendString(pattern,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(fmtCount==0){for(inti=start;i<fmtCount;i++){appendQuotedString(pattern,pos,stripCustom,true);}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(fmtCount==0){for(inti=start;i<fmtCount;i++){appendQuotedString(pattern,i,stripCustom,true);}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151intfmtCount=this.toPattern.length();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(8);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151Iterator<String>it=pattern.iterator();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(1);junit.framework.AssertionFailedError:it.remove();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(1);junit.framework.AssertionFailedError:registry.registerFormat(DUMMY_PATTERN,newFormat[]{pattern});
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(1);junit.framework.AssertionFailedError:registry.registerFormat(DUMMY_PATTERN,foundFormats);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(fmtCount==0){for(inti=start;i<fmtCount;i++){appendQuotedString(pattern,i+1,stripCustom,true);}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(toPattern!=null){for(inti=start;i<fmtCount;i++){appendQuotedString(pattern,pos+1,stripCustom,true);}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(fmtCount==0){for(inti=start;i<fmtCount;i++){appendQuotedString(pattern,pos+1,stripCustom,true);}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151for(Iterator<Object>it=pattern.iterator();it.hasNext();){applyPattern(it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(fmtCount);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(fmtCount==0){for(inti=start;i<fmtCount;i++){appendQuotedString(pattern,pos,stripCustom,false);}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(c==null){toPattern=newFormat[fmtCount];for(inti=start;i<fmtCount;++i){appendQuotedString(pattern,i);}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(0);ArrayList<Format>foundFormats=newArrayList<Format>(1);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(0);ArrayList<Format>foundFormats=newArrayList<Format>(0);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(0);junit.framework.AssertionFailedError:it.remove();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151Iterator<Object>it=this.formatDescription.iterator();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(toPattern==null){for(Iterator<String>it=origFormats.iterator();it.hasNext();){appendQuotedString(pattern,pos,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(toPattern!=null){for(Iterator<String>it=origFormats.iterator();it.hasNext();){appendQuotedString(pattern,pos,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(toPattern==null){for(Iterator<String>it=origFormats.iterator();it.hasNext();){appendQuotedString(pattern,toPattern,stripCustom,true);}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(toPattern!=null){for(inti=start;i<fmtCount;i++){appendQuotedString(pattern,pos+1,stripCustom,false);}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(toPattern==null){for(inti=start;i<fmtCount;i++){appendQuotedString(pattern,pos+1,stripCustom,false);}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151IntegerfmtCount=toPattern.intValue();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151appendQuotedString(pattern,pos,stripCustom,true);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151IntegerfmtCount=toPattern.getIndex();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151Iterator<Object>it=pattern.iterator();it.hasNext();){appendQuotedString(pattern,pos,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151Iterator<Object>it=registry.iterator();it.hasNext();){appendQuotedString(pattern,pos,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151Iterator<Object>it=foundDescriptions.iterator();it.hasNext();){appendQuotedString(pattern,pos,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151appendQuotedString(pattern,pos,toPattern.getIndex());
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151Iterator<Object>it=this.formatDescriptions.iterator();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151Iterator<Object>it=this.formats.iterator();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(origFormats!=null){for(Iterator<String>it=foundDescriptions.iterator();it.hasNext();){applyPattern(it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(origFormats==null){for(Iterator<String>it=foundDescriptions.iterator();it.hasNext();){applyPattern(it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151for(Iterator<String>it=foundDescriptions.iterator();it.hasNext();){applyPattern(it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(toPattern==null){for(Iterator<String>it=foundDescriptions.iterator();it.hasNext();){applyPattern(it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151for(Iterator<String>it=this.patterns.iterator();it.hasNext();){appendQuotedString(pattern,pos,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151for(Iterator<String>it=this.plots.iterator();it.hasNext();){appendQuotedString(pattern,pos,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151for(Iterator<String>it=registry.iterator();it.hasNext();){appendQuotedString(pattern,pos,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151for(Iterator<String>it=registry.entrySet().iterator();it.hasNext();){appendQuotedString(pattern,pos,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(foundDescriptions!=null){for(Iterator<String>it=foundDescriptions.iterator();it.hasNext();){appendQuotedString(pattern,pos,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(f);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151List<Format>foundFormats=newArrayList<Format>(toPattern);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151intfmtCount=pattern.length()+1;
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151intfmtCount=pattern.length()-1;
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151intfmtCount=pattern.length()*2;
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151appendQuotedString(pattern,pos+1,stripCustom,true);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(0);toPattern.remove();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(0);toPattern.addAssertionFailedError(it.remove());
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(0);toPattern.add(it.remove());
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(0);toPattern.addAssertionFailedError:it.remove();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151Collection<Format>foundFormats=newArrayList<Format>();junit.framework.AssertionFailedError:this.registry.applyPattern(pattern);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151Collection<Format>foundFormats=newArrayList<Format>();junit.framework.AssertionFailedError:this.registry.appendPattern(pattern);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151Collection<Format>foundFormats=newArrayList<Format>();junit.framework.AssertionFailedError:registry.registerFormat(this,pattern);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151Collection<Format>foundFormats=newArrayList<Format>();junit.framework.AssertionFailedError:this.registry.applyPattern(pattern,toPattern);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(0);registry.AssertionFailedError:
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(0);registry.AssertionFailedError:pattern.
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(0);registry.AssertionFailedError:this.registry.
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(fmtCount==0){if(toPattern==null){toPattern=newFormat[fmtCount];for(inti=start;i<fmtCount;++i){appendQuotedString(pattern,}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(fmtCount==0){if(toPattern==null){toPattern=newFormat[fmtCount];for(inti=start;i<fmtCount;++i){appendQuotedString(pattern
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(fmtCount==0){if(toPattern==null){toPattern=newFormat[fmtCount];for(inti=start;i<fmtCount;++i){appendQuotedString
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(toPattern,toPattern.length+1);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151List<Format>foundFormats=newArrayList<Format>(toPattern,toPattern.length);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(toPattern.length,toPattern.length);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(0);toPattern.AssertionFailedError:this.registry.applyPattern(pattern,toPattern);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(0);this.registry.applyPattern(pattern,toPattern);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(junit.framework.AssertionFailedError){ArrayList<Format>foundFormats=newArrayList<Format>(0);this.registry.applyPattern(pattern,toPattern);}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(0);registry.registerFormat(DUMMY_PATTERN,foundFormats);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(0);registry.registerFormat(DUMMY_PATTERN,foundDescriptions);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(0);toPattern.AssertionFailedError:registry.registerFormat(DUMMY_PATTERN,foundFormats);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(1);registry.registerFormat(DUMMY_PATTERN,foundDescriptions);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(2);registry.registerFormat(DUMMY_PATTERN,foundFormats);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(1);registry.registerFormat(DUMMY_PATTERN,foundFormats);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(0);toPattern:this.registry.applyPattern(pattern);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(0);toPattern.AssertionFailedError:this.registry.applyPattern(pattern);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(0);this.registry.applyPattern(pattern);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(0);toPattern.addAssertionFailedError(this.registry.applyPattern(pattern));
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(foundDescriptions!=null){for(Iterator<Object>it=foundDescriptions.iterator();it.hasNext();){appendString(pattern,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(junit.framework.AssertionFailedError!=null){ArrayList<Format>foundFormats=newArrayList<Format>(1);junit.framework.AssertionFailedError:registry.registerFormat(this,foundFormats);}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(1);registry.registerFormat(this,foundDescriptions);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(1);registry.registerFormat(this,foundFormats);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(foundDescriptions!=null){for(Iterator<Object>it=foundDescriptions.iterator();it.hasNext();){appendString(pattern,pos,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151IntegerfmtCount=toPattern.length();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151Iterator<Object>it=registry.entities.iterator();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(origFormats.length);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(length);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151List<String>foundDescriptions=newArrayList<String>();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<String>foundDescriptions=newArrayList<String>(fmtCount);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(2);junit.framework.AssertionFailedError:this.registry.applyPattern(pattern);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(2);junit.framework.AssertionFailedError:registry.registerFormat(foundDescriptions,true);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(2);junit.framework.AssertionFailedError:registry.registerFormat(foundDescriptions,pattern);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(2);junit.framework.AssertionFailedError:this.registry.applyPattern(pattern,toPattern);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151for(Iterator<Object>it=this.patterns.iterator();it.hasNext();){appendString(pattern,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151for(Iterator<Object>it=this.plots.iterator();it.hasNext();){appendString(pattern,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151for(Iterator<Object>it=registry.iterator();it.hasNext();){appendString(pattern,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(c==null){if(toPattern==null){toPattern=newFormat[fmtCount];for(inti=start;i<fmtCount;++i){appendQuotedString(pattern,
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(toPattern==null){if(c==null){toPattern=newFormat[fmtCount];for(inti=start;i<fmtCount;++i){appendQuotedString(pattern,
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newHashSet<Format>();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(foundDescriptions==null){for(Iterator<Object>it=foundDescriptions.iterator();it.hasNext();){appendString(pattern,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(toPattern!=null){for(Iterator<Object>it=this.toPatterns.iterator();it.hasNext();){appendString(pattern,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(this.toPatterns!=null){for(Iterator<Object>it=this.toPatterns.iterator();it.hasNext();){appendString(pattern,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151for(Iterator<Object>it=this.toPatterns.iterator();it.hasNext();){appendString(pattern,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(toPattern==null){if(fmtCount==0){toPattern=newFormat[fmtCount];for(inti=start;i<fmtCount;++i){appendQuotedString(pattern,
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(toPattern==null){intfmtCount=toPattern.length();toPattern=newFormat[fmtCount];for(inti=start;i<fmtCount;++i){appendQuotedString
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(4);junit.framework.AssertionFailedError:this.registry.applyPattern(pattern);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(4);junit.framework.AssertionFailedError:registry.registerFormat(foundDescriptions,pattern);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(4);junit.framework.AssertionFailedError:registry.registerFormat(foundDescriptions,true);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(4);junit.framework.AssertionFailedError:this.registry.applyPattern(pattern,toPattern);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151for(inti=fmtCount;i<fmtCount;i++){appendQuotedString(pattern,i+1,stripCustom,true);}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151for(inti=0;i<fmtCount;i++){appendQuotedString(pattern,i+1,stripCustom,true);}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151for(inti=fmtCount;i<fmtCount;i++){appendQuotedString(pattern,pos+1,stripCustom,true);}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151for(inti=0;i<fmtCount;i++){appendQuotedString(pattern,pos+1,stripCustom,true);}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151for(Iterator<Object>it=this.toPattern.iterator();it.hasNext();){applyPattern(it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151for(Iterator<Object>it=this.toPatterns.iterator();it.hasNext();){applyPattern(it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151for(Iterator<Object>it=chart.iterator();it.hasNext();){applyPattern(it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151for(Iterator<Object>it=this.foundDescriptions.iterator();it.hasNext();){applyPattern(it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151for(Iterator<Object>it=toPatterns.iterator();it.hasNext();){applyPattern(it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151Formats.for(Iterator<Object>it=foundDescriptions.iterator();it.hasNext();){applyPattern(it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151for(Iterator<Object>it=this.toPatterns.iterator();it.hasNext();){appendString(pattern,pos,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151for(Iterator<Object>it=this.toPattern.iterator();it.hasNext();){appendString(pattern,pos,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151for(Iterator<Object>it=pattern.iterator();it.hasNext();){appendString(pattern,pos,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151for(Iterator<Object>it=chart.iterator();it.hasNext();){appendString(pattern,pos,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(toPattern,toPattern);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(toPattern,pattern);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151List<Format>foundFormats=newArrayList<Format>(toPattern,toPattern);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(1);registry.registerFormat(DUMMY_PATTERN,toPattern);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(1);registry.registerFormat(DUMMY_PATTERN,pattern);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(2);registry.registerFormat(DUMMY_PATTERN,pattern);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(1);toPattern.remove();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(1);junit.framework.AssertionFailedError:toPattern.remove();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(1);toPattern.addAssertionFailedError(it.remove());
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(1);registry.AssertionFailedError:it.remove();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(0);registry.registerFormat(this,foundFormats);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(0);registry.registerFormat(this,foundDescriptions);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151Iterator<Object>it=registry.toPattern.iterator();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151Iterator<Object>it=register.toPattern.iterator();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(c!=null){toPattern=newFormat[fmtCount];for(inti=start;i<fmtCount;++i){appendQuotedString(pattern,i);}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(fmtCount==0){if(c==null){toPattern=newFormat[fmtCount];for(inti=start;i<fmtCount;++i){appendQuotedString(pattern,i);}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151for(Iterator<Object>it=this.plots.iterator();it.hasNext();){applyPattern(it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151for(Iterator<Object>it=this.patterns.iterator();it.hasNext();){applyPattern(it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151List<String>foundDescriptions=Lists.newArrayList();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151Iterator<Object>it=pattern.iterator();it.hasNext();){applyPattern(it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151Iterator<Object>it=this.toPatterns.iterator();it.hasNext();){applyPattern(it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151Iterator<Object>it=registry.iterator();it.hasNext();){applyPattern(it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151charfmtCount=toPattern.length();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(1);registry.registerFormat(DUMMY_PATTERN,newFormat[]{pattern});
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(2);registry.registerFormat(DUMMY_PATTERN,newFormat[]{pattern});
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(origFormats!=null){for(Iterator<String>it=foundDescriptions.iterator();it.hasNext();){appendDescription(it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(toPattern==null){for(Iterator<String>it=foundDescriptions.iterator();it.hasNext();){appendDescription(it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(origFormats==null){for(Iterator<String>it=foundDescriptions.iterator();it.hasNext();){appendDescription(it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(toPattern!=null){for(Iterator<String>it=foundDescriptions.iterator();it.hasNext();){appendDescription(it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(origFormats!=null){for(Iterator<String>it=foundDescriptions.iterator();it.hasNext();){appendQuotedString(pattern,pos,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(origFormats==null){for(Iterator<String>it=foundDescriptions.iterator();it.hasNext();){appendQuotedString(pattern,pos,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(8);junit.framework.AssertionFailedError:this.registry.applyPattern(pattern);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(8);junit.framework.AssertionFailedError:registry.registerFormat(foundDescriptions,true);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(8);junit.framework.AssertionFailedError:registry.registerFormat(foundDescriptions,pattern);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(8);junit.framework.AssertionFailedError:this.registry.applyPattern(pattern,toPattern);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151for(Iterator<Object>it=foundDescriptions.iterator();it.hasNext();){appendQuotedString(pattern,pos,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(toPattern==null){for(Iterator<Object>it=foundFormats.iterator();it.hasNext();){appendQuotedString(pattern,pos,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151intfmtCount=this.toPattern.length()-1;
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151intfmtCount=this.toPattern.length()+1;
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151Iterator<Object>it=this.registry.entrySet().iterator();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<String>foundDescriptions=newArrayList<String>(toPattern.length);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<String>foundDescriptions=newArrayList<String>(format.length);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<String>foundDescriptions=newArrayList<String>(escapeFormats.length);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<String>foundDescriptions=newArrayList<String>(toPattern.length()+1);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<String>foundDescriptions=newArrayList<String>(toPattern.length()-1);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151List<String>foundDescriptions=newArrayList<String>(toPattern.length());
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<String>foundDescriptions=newArrayList<String>(toPattern.length(),toPattern.length());
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(0);registry.registerFormat(foundDescriptions,pattern);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(0);toPattern.AssertionFailedError:registry.registerFormat(foundDescriptions,pattern);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(1);registry.registerFormat(foundDescriptions,pattern);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(origFormats!=null){for(Iterator<String>it=foundDescriptions.iterator();it.hasNext();){appendQuotedString(pattern,toPattern,stripCustom,true);}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(origFormats==null){for(Iterator<String>it=foundDescriptions.iterator();it.hasNext();){appendQuotedString(pattern,toPattern,stripCustom,true);}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151for(Iterator<String>it=foundDescriptions.iterator();it.hasNext();){appendQuotedString(pattern,toPattern,stripCustom,true);}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(origFormats!=null){for(Iterator<String>it=foundDescriptions.iterator();it.hasNext();){appendQuotedString(pattern,toPattern,stripCustom,false);}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(toPattern.length+1);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151List<Format>foundFormats=newArrayList<Format>(toPattern.length);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151Iterator<String>it=this.registry.keySet().iterator();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151Iterator<String>it=registry.iterator();it.hasNext();){appendQuotedString(pattern,pos,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151Iterator<String>it=toPattern.iterator();it.hasNext();){appendQuotedString(pattern,pos,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151Iterator<String>it=registry.iterator();it.hasNext();){appendQuotedString(pattern,pos,toPattern.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151Iterator<String>it=registry.toPattern.iterator();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151Iterator<String>it=register.toPattern.iterator();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151Formats.for(Iterator<Object>it=foundDescriptions.iterator();it.hasNext();){appendString(pattern,pos,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151For(Iterator<Object>it=foundDescriptions.iterator();it.hasNext();){appendString(pattern,pos,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151for(Iterator<Object>it=this.foundDescriptions.iterator();it.hasNext();){appendString(pattern,pos,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(0);toPattern.AssertionFailedError:this.registry.appendPattern(pattern);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(0);toPattern:this.registry.appendPattern(pattern);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(0);this.registry.appendPattern(pattern);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(0);toPattern.appendPattern:this.registry.appendPattern(pattern);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(1);this.registry.applyPattern(pattern,toPattern);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(this.registry!=null){ArrayList<Format>foundFormats=newArrayList<Format>(1);junit.framework.AssertionFailedError:this.registry.applyPattern(pattern,toPattern);}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(1);toPattern.AssertionFailedError:this.registry.applyPattern(pattern,toPattern);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(junit.framework.AssertionFailedError){ArrayList<Format>foundFormats=newArrayList<Format>(1);this.registry.applyPattern(pattern,toPattern);}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151Iterator<Object>it=pattern.iterator();it.hasNext();){appendString(pattern,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151Iterator<Object>it=this.toPatterns.iterator();it.hasNext();){appendString(pattern,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151Iterator<String>it=toPattern.iterator();it.hasNext();){appendString(pattern,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151Iterator<Object>it=registry.iterator();it.hasNext();){appendString(pattern,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(1);registry.AssertionFailedError:
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(1);registry.addAssertionFailedError(junit.framework.AssertionFailedError);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(1);registry.AssertionFailedError:this.registry.
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(1);toPattern.AssertionFailedError:toPattern;
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151List<Format>foundFormats=newArrayList<Format>(1);toPattern.AssertionFailedError:toPattern;
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(1);toPattern.assertionFailedError:toPattern;
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151Iterator<String>it=this.formatDescriptions.iterator();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151Iterator<String>it=this.formats.iterator();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(1);registry.registerFormat(foundDescriptions,true);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(1);junit.framework.AssertionFailedError:registry.registerFormat(foundDescriptions,false);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151for(Iterator<Object>it=this.toPatterns.iterator();it.hasNext();){appendQuotedString(pattern,pos,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151for(Iterator<Object>it=pattern.iterator();it.hasNext();){appendQuotedString(pattern,pos,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151for(Iterator<Object>it=this.toPattern.iterator();it.hasNext();){appendQuotedString(pattern,pos,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151for(Iterator<Object>it=chart.iterator();it.hasNext();){appendQuotedString(pattern,pos,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(6);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<String>foundDescriptions=newArrayList<String>(toPattern.size()-1);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151List<String>foundDescriptions=newArrayList<String>(toPattern.size());
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<String>foundDescriptions=newArrayList<String>(toPattern.size()+1);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151for(Iterator<Object>it=this.foundDescriptions.iterator();it.hasNext();){appendString(pattern,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151for(Iterator<Object>it=foundFormats.iterator();it.hasNext();){appendString(pattern,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151for(Iterator<Object>it=this.foundFormats.iterator();it.hasNext();){appendString(pattern,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(toPattern!=null){for(Iterator<String>it=foundFormats.iterator();it.hasNext();){appendQuotedString(pattern,pos,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(foundDescriptions!=null){for(Iterator<Object>it=foundDescriptions.iterator();it.hasNext();){appendQuotedString(pattern,pos,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(0);registry.registerFormat(DUMMY_PATTERN,pattern);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(0);toPattern.AssertionFailedError:registry.registerFormat(DUMMY_PATTERN,pattern);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(0);registry.registerFormat(DUMMY_PATTERN,toPattern);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151Iterator<String>it=registry.entities.iterator();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151Iterator<String>it=this.pattern.iterator();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(c==null){for(Iterator<Object>it=foundDescriptions.iterator();it.hasNext();){appendString(pattern,pos,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(c!=null){for(Iterator<Object>it=foundDescriptions.iterator();it.hasNext();){appendString(pattern,pos,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(0);toPattern.AssertionFailedError:toPattern;
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151List<Format>foundFormats=newArrayList<Format>(0);toPattern.AssertionFailedError:toPattern;
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(0);toPattern.assertionFailedError:toPattern;
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151Iterator<Object>it=registry.iterator();it.hasNext();){appendString(pattern,pos,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151Iterator<String>it=toPattern.iterator();it.hasNext();){appendString(pattern,pos,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151Iterator<Object>it=pattern.iterator();it.hasNext();){appendString(pattern,pos,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151Iterator<Object>it=registry.entities.iterator();it.hasNext();){appendString(pattern,pos,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(2);registry.registerFormat(foundDescriptions,pattern);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151for(inti=0;i<fmtCount;i++){appendQuotedString(pattern,pos,stripCustom,true);}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151for(inti=fmtCount;i<fmtCount;i++){appendQuotedString(pattern,pos,stripCustom,true);}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151For(inti=0;i<fmtCount;i++){appendQuotedString(pattern,pos,stripCustom,true);}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151for(inti=index;i<fmtCount;i++){appendQuotedString(pattern,pos,stripCustom,true);}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(fmtCount==0){if(toPattern!=null){toPattern=newFormat[fmtCount];for(inti=start;i<fmtCount;++i){appendQuotedString(pattern,
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(fmtCount==0){if(toPattern!=null){toPattern=newFormat[fmtCount];for(inti=start;i<fmtCount;++i){appendQuotedString(pattern,i);}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151Formats.for(Iterator<String>it=foundDescriptions.iterator();it.hasNext();){appendQuotedString(pattern,pos,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151For(Iterator<String>it=foundDescriptions.iterator();it.hasNext();){appendQuotedString(pattern,pos,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151Iterator<String>it=foundDescriptions.iterator();it.hasNext();){appendQuotedString(pattern,pos,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(foundDescriptions==null){for(Iterator<String>it=foundDescriptions.iterator();it.hasNext();){appendQuotedString(pattern,pos,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(1);toPattern.AssertionFailedError:this.registry.applyPattern(pattern);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(junit.framework.AssertionFailedError){ArrayList<Format>foundFormats=newArrayList<Format>(1);junit.framework.AssertionFailedError:this.registry.applyPattern(pattern);}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(junit.framework.AssertionFailedError){ArrayList<Format>foundFormats=newArrayList<Format>(1);this.registry.applyPattern(pattern);}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151intfmtCount=toPattern.length()/2;
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151intfmtCount=toPattern.length()-2;
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151for(Iterator<Object>it=this.toPattern.iterator();it.hasNext();){appendString(pattern,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151for(Iterator<Object>it=chart.iterator();it.hasNext();){appendString(pattern,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151Formats.for(Iterator<Object>it=foundDescriptions.iterator();it.hasNext();){appendString(pattern,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151For(Iterator<Object>it=foundDescriptions.iterator();it.hasNext();){appendString(pattern,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(foundDescriptions==null){for(Iterator<Object>it=foundDescriptions.iterator();it.hasNext();){appendQuotedString(pattern,pos,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(toPattern!=null){toPattern=newFormat[1];for(inti=start;i<fmtCount;++i){appendQuotedString(pattern,i);}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(fmtCount==0){if(toPattern==null){toPattern=newFormat[1];for(inti=start;i<fmtCount;++i){appendQuotedString(pattern,i);}}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(fmtCount==0){if(toPattern==null){toPattern=newFormat[1];for(inti=start;i<fmtCount;++i){appendQuotedString(pattern,i);}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(foundDescriptions==null){for(Iterator<Object>it=foundDescriptions.iterator();it.hasNext();){appendString(pattern,pos,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151Iterator<Object>it=foundDescriptions.iterator();it.hasNext();){appendString(pattern,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(junit.framework!=null){ArrayList<Format>foundFormats=newArrayList<Format>(0);junit.framework.AssertionFailedError:this.registry.applyPattern(pattern);}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(toPattern!=null){for(Iterator<String>it=foundDescriptions.iterator();it.hasNext();){applyPattern(it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151for(inti=start;i<fmtCount;i++){appendQuotedString(pattern,pos+1,stripCustom,true);}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(registry!=null){ArrayList<Format>foundFormats=newArrayList<Format>(1);junit.framework.AssertionFailedError:registry.registerFormat(DUMMY_PATTERN,pattern);}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151intfmtCount=toPattern.length()*2+1;
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(toPattern==null){toPattern=newFormat[0];for(inti=start;i<fmtCount;++i){appendQuotedString(pattern,i);}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(toPattern!=null){toPattern=newFormat[0];for(inti=start;i<fmtCount;++i){appendQuotedString(pattern,i);}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151Collection<Format>foundFormats=newArrayList<Format>();junit.framework.AssertionFailedError:registry.
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151Collection<Format>foundFormats=newArrayList<Format>();junit.framework.AssertionFailedError:registry.registerFormat(DUMMY_PATTERN,pattern);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151Collection<Format>foundFormats=newArrayList<Format>();junit.framework.AssertionFailedError:toPattern;
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151Collection<Format>foundFormats=newArrayList<Format>();junit.framework.AssertionFailedError:registry.registerFormat(this,foundFormats);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151Collection<Format>foundFormats=newArrayList<Format>();junit.framework.AssertionFailedError:registry.registerFormat(DUMMY_PATTERN,stripCustom);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(toPattern,formatDescription);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(toPattern,fmtCount);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(toPattern,format);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151for(Iterator<String>it=this.foundDescriptions.iterator();it.hasNext();){appendQuotedString(pattern,pos,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151for(Iterator<String>it=foundFormats.iterator();it.hasNext();){appendQuotedString(pattern,pos,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151for(Iterator<String>it=toPattern.iterator();it.hasNext();){appendQuotedString(pattern,pos,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(registry!=null){ArrayList<Format>foundFormats=newArrayList<Format>(0);junit.framework.AssertionFailedError:registry.registerFormat(DUMMY_PATTERN,pattern);}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(fmtCount==0){if(toPattern!=null){toPattern=newFormat[fmtCount];for(inti=start;i<fmtCount;++i){appendQuotedString
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(DUMMY_PATTERN);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(registry!=null){ArrayList<Format>foundFormats=newArrayList<Format>(1);junit.framework.AssertionFailedError:registry.registerFormat(DUMMY_PATTERN,foundFormats);}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(registry!=null){ArrayList<Format>foundFormats=newArrayList<Format>(1);junit.framework.AssertionFailedError:registry.registerFormat(DUMMY_PATTERN,foundFormats);}else{
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(1);toPattern.AssertionFailedError:registry.registerFormat(DUMMY_PATTERN,foundFormats);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(junit.framework!=null){ArrayList<Format>foundFormats=newArrayList<Format>(0);junit.framework.AssertionFailedError:registry.registerFormat(foundDescriptions,pattern);}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(junit.framework!=null){ArrayList<Format>foundFormats=newArrayList<Format>(0);junit.framework.AssertionFailedError:registry.registerFormat(this,foundFormats);}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(registry!=null){ArrayList<Format>foundFormats=newArrayList<Format>(0);junit.framework.AssertionFailedError:registry.registerFormat(this,foundFormats);}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(1);registry.
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(registry!=null){ArrayList<Format>foundFormats=newArrayList<Format>(1);junit.framework.AssertionFailedError:registry.
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(4);junit.framework.AssertionFailedError:registry.
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(4);junit.framework.AssertionFailedError:registry.registerFormat(DUMMY_PATTERN,pattern);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(4);junit.framework.AssertionFailedError:registry.registerFormat(this,foundFormats);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(4);junit.framework.AssertionFailedError:registry.registerFormat(foundFormats);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(4);junit.framework.AssertionFailedError:toPattern;
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151Iterator<Object>it=foundDescriptions.iterator();it.hasNext();){appendString(pattern,pos,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(toPattern==null){if(fmtCount==0){toPattern=newFormat[fmtCount];for(inti=start;i<fmtCount;++i){appendQuotedString
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<String>foundDescriptions=Collections.newArrayList();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(toPattern!=null){Iterator<Object>it=toPattern.iterator();it.hasNext();){appendString(pattern,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(0);registry.
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(0);Registry.AssertionFailedError:registry.
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(it.hasNext()){ArrayList<Format>foundFormats=newArrayList<Format>(1);junit.framework.AssertionFailedError:it.remove();}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151List<Format>foundFormats=newArrayList<Format>(1);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151for(Iterator<Object>it=registry.iterator();it.hasNext();){applyPattern(it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(junit.framework!=null){ArrayList<Format>foundFormats=newArrayList<Format>(1);junit.framework.AssertionFailedError:this.registry.applyPattern(pattern);}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(this.registry!=null){ArrayList<Format>foundFormats=newArrayList<Format>(1);junit.framework.AssertionFailedError:this.registry.applyPattern(pattern);}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(2);ArrayList<Format>foundFormats=newArrayList<Format>(2);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(2);junit.framework.AssertionFailedError:registry.
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(2);junit.framework.AssertionFailedError:registry.registerFormat(DUMMY_PATTERN,pattern);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(2);junit.framework.AssertionFailedError:registry.registerFormat(this,foundFormats);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(2);junit.framework.AssertionFailedError:toPattern;
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151Iterator<String>it=this.registry.values().iterator();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(0);junit.framework.AssertionFailedError:toPattern.remove();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151Iterator<Object>it=this.registry.keySet().iterator();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151for(Iterator<Object>it=this.registry.iterator();it.hasNext();){applyPattern(it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(junit.framework!=null){ArrayList<Format>foundFormats=newArrayList<Format>(1);junit.framework.AssertionFailedError:toPattern;}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(1);toPattern.AssertionFailedError:registry.registerFormat(DUMMY_PATTERN,newFormat[]{pattern});
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151for(inti=start;i<fmtCount;i++){appendQuotedString(pattern,i,stripCustom,true);}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151Iterator<String>it=this.plots.iterator();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(origFormats!=null){for(Iterator<String>it=origFormats.iterator();it.hasNext();){appendQuotedString(pattern,toPattern,stripCustom,true);}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(toPattern!=null){for(Iterator<Object>it=pattern.iterator();it.hasNext();){appendQuotedString(pattern,pos,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(toPattern!=null){Iterator<Object>it=toPattern.iterator();it.hasNext();){appendString(pattern,pos,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151Iterator<Object>it=this.toPatterns.iterator();it.hasNext();){appendString(pattern,pos,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(toPattern!=null){Iterator<Object>it=toPattern.iterator();it.hasNext();){appendQuotedString(pattern,pos,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151Iterator<Object>it=this.toPatterns.iterator();it.hasNext();){appendQuotedString(pattern,pos,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151IntegerfmtCount=toPattern.indexOf(';');
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<String>foundDescriptions=newArrayList<String>(0);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(fmtCount==0){if(toPattern==null){toPattern=newFormat[fmtCount];for(inti=start;i<fmtCount;++i){appendQuotedString(
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(8);ArrayList<Format>foundFormats=newArrayList<Format>(8);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(8);junit.framework.AssertionFailedError:registry.
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(8);junit.framework.AssertionFailedError:registry.registerFormat(DUMMY_PATTERN,pattern);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(8);junit.framework.AssertionFailedError:registry.registerFormat(this,foundFormats);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(8);junit.framework.AssertionFailedError:toPattern;
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(junit.framework!=null){ArrayList<Format>foundFormats=newArrayList<Format>(1);junit.framework.AssertionFailedError:registry.registerFormat(this,foundFormats);}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(registry!=null){ArrayList<Format>foundFormats=newArrayList<Format>(1);junit.framework.AssertionFailedError:registry.registerFormat(this,foundFormats);}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(registry!=null){ArrayList<Format>foundFormats=newArrayList<Format>(1);junit.framework.AssertionFailedError:registry.registerFormat(foundDescriptions,pattern);}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(1);toPattern.AssertionFailedError:registry.registerFormat(foundDescriptions,pattern);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151for(Iterator<Object>it=foundFormats.iterator();it.hasNext();){appendString(pattern,pos,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(junit.framework!=null){ArrayList<Format>foundFormats=newArrayList<Format>(0);junit.framework.AssertionFailedError:this.registry.appendPattern(pattern);}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(c!=null){for(Iterator<Object>it=c.iterator();it.hasNext();){appendString(pattern,pos,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(toPattern==null){for(Iterator<Object>it=pattern.iterator();it.hasNext();){appendString(pattern,pos,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(7);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151for(inti=index;i<fmtCount;i++){appendQuotedString(pattern,i+1,stripCustom,true);}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151Iterator<Object>it=this.toPattern.iterator();it.hasNext();){applyPattern(it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151Iterator<String>it=registry.getFormat().iterator();it.hasNext();){appendQuotedString(pattern,pos,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151for(Iterator<Object>it=flags.iterator();it.hasNext();){appendString(pattern,pos,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151for(Iterator<String>it=foundDescriptions.iterator();it.hasNext();){appendDescription(it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151for(Iterator<Object>it=this.formats.iterator();it.hasNext();){appendString(pattern,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151for(Iterator<Object>it=this.stripCustom.iterator();it.hasNext();){appendString(pattern,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<String>foundDescriptions=newArrayList<String>(DUMMY_PATTERN.length);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<String>foundDescriptions=newArrayList<String>(description.length);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(c==null){if(toPattern==null){toPattern=newFormat[fmtCount];for(inti=start;i<fmtCount;++i){appendQuotedString
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(c!=null){if(toPattern==null){toPattern=newFormat[fmtCount];for(inti=start;i<fmtCount;++i){appendQuotedString
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(this.registry!=null){ArrayList<Format>foundFormats=newArrayList<Format>(0);junit.framework.AssertionFailedError:this.registry.applyPattern(pattern,toPattern);}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(junit.framework!=null){ArrayList<Format>foundFormats=newArrayList<Format>(0);junit.framework.AssertionFailedError:this.registry.applyPattern(pattern,toPattern);}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(registry!=null){ArrayList<Format>foundFormats=newArrayList<Format>(1);junit.framework.AssertionFailedError:registry.registerFormat(foundDescriptions,true);}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(junit.framework!=null){ArrayList<Format>foundFormats=newArrayList<Format>(1);junit.framework.AssertionFailedError:registry.registerFormat(foundDescriptions,true);}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(8);junit.framework.AssertionFailedError:it.remove();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(8);junit.framework.AssertionFailedError:registry.registerFormat(DUMMY_PATTERN,newFormat[]{pattern});
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(8);junit.framework.AssertionFailedError:registry.registerFormat(DUMMY_PATTERN,foundFormats);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(junit.framework.AssertionFailedError!=null){ArrayList<Format>foundFormats=newArrayList<Format>(1);junit.framework.AssertionFailedError:registry.registerFormat(foundDescriptions,true);}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(junit.framework.AssertionFailedError<=0){ArrayList<Format>foundFormats=newArrayList<Format>(1);junit.framework.AssertionFailedError:registry.registerFormat(foundDescriptions,true);}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151Iterator<String>it=this.registry.entities.iterator();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151Iterator<String>it=this.registry.listIterator();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(c==null||c.length<2){if(toPattern==null){toPattern=newFormat[fmtCount];for(inti=start;i<fmtCount;++i){appendQuotedString
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(fmtCount==0){for(inti=start;i<fmtCount;i++){appendQuotedString(pattern,pos+1,stripCustom,false);}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(fmtCount==0){for(inti=start;i<fmtCount+1;i++){appendQuotedString(pattern,pos+1,stripCustom,true);}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(fmtCount==0){for(inti=start;i<c.length;i++){appendQuotedString(pattern,pos+1,stripCustom,true);}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(junit.framework.AssertionFailedError){ArrayList<Format>foundFormats=newArrayList<Format>(1);junit.framework.AssertionFailedError:this.registry.applyPattern(pattern,toPattern);}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(junit.framework.AssertionFailedError<=0){ArrayList<Format>foundFormats=newArrayList<Format>(1);junit.framework.AssertionFailedError:this.registry.applyPattern(pattern,toPattern);}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151Iterator<String>it=c.iterator();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(junit.framework.AssertionFailedError!=null){ArrayList<Format>foundFormats=newArrayList<Format>(1);registry.registerFormat(this,foundFormats);}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(junit.framework.AssertionFailedError!=null){ArrayList<Format>foundFormats=newArrayList<Format>(1);junit.framework.AssertionFailedError:registry.registerFormat(this,foundFormats
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151for(Iterator<Object>it=pattern.entrySet().iterator();it.hasNext();){appendString(pattern,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(junit.framework.AssertionFailedError<=0){ArrayList<Format>foundFormats=newArrayList<Format>(1);junit.framework.AssertionFailedError:this.registry.applyPattern(pattern);}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151junit.framework.AssertionFailedError:this.registry.applyPattern(pattern);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(0);junit.framework.AssertionFailedError:registry.registerFormat(foundDescriptions,pattern,toPattern);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151intfmtCount=pattern.toPattern.length();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(fmtCount==0){for(inti=start;i<fmtCount+1;i++){appendQuotedString(pattern,pos,stripCustom,true);}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151for(Iterator<Object>it=leftDescriptions.iterator();it.hasNext();){applyPattern(it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(fmtCount==0){for(inti=start;i<c.length;i++){appendQuotedString(pattern,pos,stripCustom,true);}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151for(Iterator<Object>it=left.iterator();it.hasNext();){appendString(pattern,pos,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151for(Iterator<Object>it=this.descriptions.iterator();it.hasNext();){appendString(pattern,pos,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(toPattern!=null){Iterator<Object>it=toPatterns.iterator();it.hasNext();){appendString(pattern,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151Iterator<Object>it=chart.iterator();it.hasNext();){appendString(pattern,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151junit.framework.AssertionFailedError:registry.registerFormat(DUMMY_PATTERN,foundFormats);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(junit.framework.AssertionFailedError)registry.registerFormat(DUMMY_PATTERN,foundFormats);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(1);junit.framework.AssertionFailedError:registry.registerFormat(DUMMY_PATTERN,foundDescriptions);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151for(Iterator<Object>it=pattern.entrySet().iterator();it.hasNext();){appendString(pattern,pos,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(origFormats!=null){for(Iterator<String>it=origFormats.iterator();it.hasNext();){appendDescription(it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(origFormats==null){for(Iterator<String>it=origFormats.iterator();it.hasNext();){appendDescription(it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151Iterator<String>it=origFormats.iterator();it.hasNext();){appendDescription(it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151for(Iterator<String>it=pattern.entrySet().iterator();it.hasNext();){appendQuotedString(pattern,pos,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151for(Iterator<String>it=pattern.listIterator();it.hasNext();){appendQuotedString(pattern,pos,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151Iterator<String>it=this.formatDescription.entrySet().iterator();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(fmtCount==0){for(inti=start;i<fmtCount;i++){appendQuotedString(pattern,i+1,stripCustom,false);}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(format.length);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(junit.framework.AssertionFailedError!=null){ArrayList<Format>foundFormats=newArrayList<Format>(0);junit.framework.AssertionFailedError:registry.registerFormat(this,foundFormats);}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(0);registry.AssertionFailedError:it.
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151Iterator<Object>it=chart.iterator();it.hasNext();){applyPattern(it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<String>foundDescriptions=newArrayList<String>(pattern.length());
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(toPattern==null){Iterator<String>it=pattern.iterator();it.hasNext();){appendQuotedString(pattern,pos,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151Iterator<String>it=pattern.iterator();it.hasNext();){toPattern.appendQuotedString(pattern,pos,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151Iterator<Object>it=this.registry.entities.iterator();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(2);junit.framework.AssertionFailedError:registry.registerFormat(DUMMY_PATTERN,newFormat[]{pattern});
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(2);junit.framework.AssertionFailedError:registry.registerFormat(DUMMY_PATTERN,foundFormats);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(2);junit.framework.AssertionFailedError:it.remove();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(junit.framework.AssertionFailedError)registry.registerFormat(DUMMY_PATTERN,pattern);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151junit.framework.AssertionFailedError:registry.registerFormat(DUMMY_PATTERN,pattern);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151junit.framework.AssertionFailedError:registry.
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151char[]c=pattern.toCharArray();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(c==null){if(toPattern!=null){toPattern=newFormat[fmtCount];for(inti=start;i<fmtCount;++i){appendQuotedString(pattern,i);}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(fmtCount==0){for(inti=start;i<fmtCount;i++){appendQuotedString(pattern,p,stripCustom,true);}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(format!=null){for(Iterator<String>it=foundDescriptions.iterator();it.hasNext();){appendQuotedString(pattern,pos,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(c==null){for(Iterator<Object>it=pattern.iterator();it.hasNext();){appendQuotedString(pattern,pos,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(junit.framework.AssertionFailedError!=null){ArrayList<Format>foundFormats=newArrayList<Format>(0);toPattern;}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(junit.framework.AssertionFailedError!=null){ArrayList<Format>foundFormats=newArrayList<Format>(1);toPattern;}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(fmtCount==0){for(inti=start;i<fmtCount;i++){appendQuotedString(pattern,pos.getIndex()+1,stripCustom,true);}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151for(Iterator<String>it=c.iterator();it.hasNext();){appendQuotedString(pattern,pos,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151for(Iterator<String>it=left.iterator();it.hasNext();){appendQuotedString(pattern,pos,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(junit.framework.AssertionFailedError!=null){ArrayList<Format>foundFormats=newArrayList<Format>(1);junit.framework.AssertionFailedError:toPattern;}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(junit.framework.AssertionFailedError==null){ArrayList<Format>foundFormats=newArrayList<Format>(1);junit.framework.AssertionFailedError:toPattern;}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(origFormats!=null){for(Iterator<String>it=origFormats.iterator();it.hasNext();){applyPattern(it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(origFormats==null){for(Iterator<String>it=origFormats.iterator();it.hasNext();){applyPattern(it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151Iterator<String>it=origFormats.iterator();it.hasNext();){applyPattern(it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(junit.framework.AssertionFailedError<=this.registry.appendPattern(pattern)){ArrayList<Format>foundFormats=newArrayList<Format>(0);junit.framework.AssertionFailedError:this.registry.appendPattern(pattern);}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(1);junit.framework.AssertionFailedError:this.registry.appendPattern(pattern);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(junit.framework.AssertionFailedError){ArrayList<Format>foundFormats=newArrayList<Format>(0);junit.framework.AssertionFailedError:this.registry.appendPattern(pattern);}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(junit.framework.AssertionFailedError<=this.registry.appendPattern(pattern)){ArrayList<Format>foundFormats=newArrayList<Format>(1);junit.framework.AssertionFailedError:this.registry.appendPattern(pattern);}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(5);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151junit.framework.AssertionFailedError:registry.registerFormat(DUMMY_PATTERN,newFormat[]{pattern});
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(junit.framework.AssertionFailedError)registry.registerFormat(DUMMY_PATTERN,newFormat[]{pattern});
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(junit.framework.AssertionFailedError)registerFormat(DUMMY_PATTERN,newFormat[]{pattern});
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151Iterator<Object>it=chart.iterator();it.hasNext();){appendString(pattern,pos,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151Collection<Format>foundFormats=newArrayList<Format>();junit.framework.AssertionFailedError:it.remove();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151Collection<Format>foundFormats=newArrayList<Format>();junit.framework.AssertionFailedError:registry.registerFormat(DUMMY_PATTERN,this);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151Iterator<Object>it=chart.iterator();it.hasNext();){appendQuotedString(pattern,pos,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(4);ArrayList<Format>foundFormats=newArrayList<Format>(4);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(4);junit.framework.AssertionFailedError:it.remove();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(4);junit.framework.AssertionFailedError:registry.registerFormat(DUMMY_PATTERN,newFormat[]{pattern});
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(4);junit.framework.AssertionFailedError:registry.registerFormat(DUMMY_PATTERN,foundFormats);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(c==null){for(Iterator<Object>it=pattern.iterator();it.hasNext();){appendString(pattern,pos,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(1);junit.framework.AssertionFailedError:registry.registerFormat(DUMMY_PATTERN,pattern,ESCAPED_QUOTE);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151for(Iterator<Object>it=left.iterator();it.hasNext();){appendString(pattern,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151for(Iterator<Object>it=this.descriptions.iterator();it.hasNext();){appendString(pattern,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(junit.framework.AssertionFailedError){ArrayList<Format>foundFormats=newArrayList<Format>(0);junit.framework.AssertionFailedError:this.registry.applyPattern(pattern);}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151intfmtCount=pattern.length()/2;
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151Iterator<String>it=pattern.toPattern.iterator();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151Iterator<String>it=this.toPattern.entrySet().iterator();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151junit.framework.AssertionFailedError:registry.registerFormat(foundDescriptions,pattern);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(junit.framework.AssertionFailedError)registry.registerFormat(foundDescriptions,pattern);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(1);junit.framework.AssertionFailedError:registry.registerFormat(foundDescriptions,pattern,toPattern);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151Iterator<Object>it=this.formatDescription.entrySet().iterator();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(it.hasNext()){ArrayList<Format>foundFormats=newArrayList<Format>(0);junit.framework.AssertionFailedError:it.remove();}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151Iterator<Object>it=this.toPattern.entrySet().iterator();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(fmtCount==0){toPattern=newFormat[1];for(inti=start;i<fmtCount;++i){appendQuotedString(pattern,i);}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(origFormats!=null){for(Iterator<String>it=origFormats.iterator();it.hasNext();){appendQuotedString(pattern,toPattern,stripCustom,false);}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(origFormats==null){for(Iterator<String>it=origFormats.iterator();it.hasNext();){appendQuotedString(pattern,toPattern,stripCustom,true);}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151for(Iterator<Object>it=pattern.entrySet().iterator();it.hasNext();){appendQuotedString(pattern,pos,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(origFormats==null){for(Iterator<String>it=origFormats.iterator();it.hasNext();){appendQuotedString(pattern,pos,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(0);junit.framework.AssertionFailedError:registry.registerFormat(DUMMY_PATTERN,foundDescriptions);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(origFormats!=null){for(Iterator<String>it=origFormats.iterator();it.hasNext();){appendQuotedString(pattern,pos,it.next());}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151booleanfoundFormats=newArrayList<Format>(1);junit.framework.AssertionFailedError:it.remove();
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151ArrayList<Format>foundFormats=newArrayList<Format>(toPattern,toPattern.length*2);
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(fmtCount==1){toPattern=newFormat[fmtCount];for(inti=start;i<fmtCount;++i){appendQuotedString(pattern,i);}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(fmtCount==0){toPattern=newFormat[FmtCount];for(inti=start;i<fmtCount;++i){appendQuotedString(pattern,i);}
projects/Lang23/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java151if(c==null){toPattern=newFormat[1];for(inti=start;i<fmtCount;++i){appendQuotedString(pattern,i);}
