bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  this.freqTable.addValue((  Composite  <?>)v,  null);  [CE]  'catch'  without  'try'  [FE]            ClassCastException    [CONTEXT]    public  void  addValue(Object  v)  {    [BUGGY]  this.freqTable.addValue((  Composite  <?>)v,  null);  [BUGGY]    addValue((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  serialVersionUID  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	110	110	1	replace	this.freqTable.addValue((  Composite  <?>)v,  null);	      this.freqTable.addValue((    Composite    <?>)v);    	non-compiled	[CE]  'catch'  without  'try'	3	None	replace
2	[BUG]  [BUGGY]  this.freqTable.addValue((  Composite  <?>)v,  true);  [CE]  'catch'  without  'try'  [FE]              ClassCastException    [CONTEXT]    public  void  addValue(Object  v)  {    [BUGGY]  this.freqTable.addValue((  Composite  <?>)v,  true);  [BUGGY]    addValue((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  serialVersionUID  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	110	110	1	replace	this.freqTable.addValue((  Composite  <?>)v,  true);	      this.freqTable.addValue((    Composite    <?>)v);    	non-compiled	[CE]  'catch'  without  'try'	3	None	replace
3	[BUG]  [BUGGY]  this.freqTable.addValue((  Composite  <?>)v,  freqTable);  [CE]  'catch'  without  'try'  [FE]                ClassCastException    [CONTEXT]    public  void  addValue(Object  v)  {    [BUGGY]  this.freqTable.addValue((  Composite  <?>)v,  freqTable);  [BUGGY]    addValue((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  serialVersionUID  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	110	110	1	replace	this.freqTable.addValue((  Composite  <?>)v,  freqTable);	      this.freqTable.addValue((    Composite    <?>)v);    	non-compiled	[CE]  'catch'  without  'try'	3	None	replace
4	[BUG]  [BUGGY]  ((  Comparable  <?>)v).setFreqTable(freqTable);  [CE]  'catch'  without  'try'  [FE]          ClassCastException    [CONTEXT]    public  void  addValue(Object  v)  {    [BUGGY]  ((  Comparable  <?>)v).setFreqTable(freqTable);  [BUGGY]    addValue((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  serialVersionUID  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	110	110	1	replace	((  Comparable  <?>)v).setFreqTable(freqTable);	      if(v    instanceof    Comparable    <?>)    {    ((    Comparable    <?>)v).setFreqTable(freqTable);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  'catch'  without  'try'	9	None	replace
5	[BUG]  [BUGGY]  if(v  instanceof  Comparable  <?>)  {  ((  Comparable  <?>)v).setFreqTable(this.freqTable);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  'catch'  without  'try'  [FE]            ClassCastException    [CONTEXT]    public  void  addValue(Object  v)  {    [BUGGY]  if(v  instanceof  Comparable  <?>)  {  ((  Comparable  <?>)v).setFreqTable(this.freqTable);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    addValue((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  serialVersionUID  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	110	110	1	replace	if(v  instanceof  Comparable  <?>)  {  ((  Comparable  <?>)v).setFreqTable(this.freqTable);  }  else  {  throw  new  IllegalArgumentException( " ");  }	      if(v    instanceof    Comparable    <?>)    {    ((    Comparable    <?>)v).setFreqTable(freqTable);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  'catch'  without  'try'	9	None	replace
6	[BUG]  [BUGGY]  if(v  instanceof  Comparable  <?>)  {  ((  Comparable  <?>)v).addFreqTable(freqTable);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  'catch'  without  'try'  [FE]              ClassCastException    [CONTEXT]    public  void  addValue(Object  v)  {    [BUGGY]  if(v  instanceof  Comparable  <?>)  {  ((  Comparable  <?>)v).addFreqTable(freqTable);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    addValue((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  serialVersionUID  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	110	110	1	replace	if(v  instanceof  Comparable  <?>)  {  ((  Comparable  <?>)v).addFreqTable(freqTable);  }  else  {  throw  new  IllegalArgumentException( " ");  }	      if(v    instanceof    Comparable    <?>)    {    ((    Comparable    <?>)v).setFreqTable(freqTable);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  'catch'  without  'try'	9	None	replace
7	[BUG]  [BUGGY]  TreeMap  freqTable  =  new  TreeMap();  for(int  i  =  0;  i  <  freqTable.size();  ++i)  {  TreeMap.this.freqTable.addValue(freqTable,  v);  }  [CE]  'catch'  without  'try'  [FE]            ClassCastException    [CONTEXT]    public  void  addValue(Object  v)  {    [BUGGY]  TreeMap  freqTable  =  new  TreeMap();  for(int  i  =  0;  i  <  freqTable.size();  ++i)  {  TreeMap.this.freqTable.addValue(freqTable,  v);  }  [BUGGY]    addValue((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  serialVersionUID  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	110	110	1	replace	TreeMap  freqTable  =  new  TreeMap();  for(int  i  =  0;  i  <  freqTable.size();  ++i)  {  TreeMap.this.freqTable.addValue(freqTable,  v);  }	      if(v!=    null)    {    TreeMap    freqTable    =    new    TreeMap();    for(int    i    =    0;    i    <    freqTable.size();    ++i)    {    TreeMap.this.freqTable.addValue(freqTable,    v);    }    	non-compiled	[CE]  'catch'  without  'try'	16	None	replace
8	[BUG]  [BUGGY]  if(v  ==  null)  {  TreeMap  freqTable  =  new  TreeMap();  for(int  i  =  0;  i  <  freqTable.size();  ++i)  {  TreeMap.this.freqTable.addValue(freqTable,  v);  }  [CE]  illegal  start  of  expression  [FE]              ClassCastException    [CONTEXT]    public  void  addValue(Object  v)  {    [BUGGY]  if(v  ==  null)  {  TreeMap  freqTable  =  new  TreeMap();  for(int  i  =  0;  i  <  freqTable.size();  ++i)  {  TreeMap.this.freqTable.addValue(freqTable,  v);  }  [BUGGY]    addValue((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  serialVersionUID  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	110	110	1	replace	if(v  ==  null)  {  TreeMap  freqTable  =  new  TreeMap();  for(int  i  =  0;  i  <  freqTable.size();  ++i)  {  TreeMap.this.freqTable.addValue(freqTable,  v);  }	      if(v!=    null)    {    TreeMap    freqTable    =    new    TreeMap();    for(int    i    =    0;    i    <    freqTable.size();    ++i)    {    TreeMap.this.freqTable.addValue(freqTable,    v);    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
9	[BUG]  [BUGGY]  TreeMap  freqTable  =  new  TreeMap();  for(int  i  =  0;  i  <  freqTable.size();  ++i)  {  TreeMap.this.freqTable.addValue(freqTable,  [CE]  illegal  start  of  expression  [FE]                ClassCastException    [CONTEXT]    public  void  addValue(Object  v)  {    [BUGGY]  TreeMap  freqTable  =  new  TreeMap();  for(int  i  =  0;  i  <  freqTable.size();  ++i)  {  TreeMap.this.freqTable.addValue(freqTable,  [BUGGY]    addValue((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  serialVersionUID  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	110	110	1	replace	TreeMap  freqTable  =  new  TreeMap();  for(int  i  =  0;  i  <  freqTable.size();  ++i)  {  TreeMap.this.freqTable.addValue(freqTable,	      if(v!=    null)    {    TreeMap    freqTable    =    new    TreeMap();    for(int    i    =    0;    i    <    freqTable.size();    ++i)    {    TreeMap.this.freqTable.addValue(freqTable,    v);    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
10	[BUG]  [BUGGY]  if(v  ==  null)  {  TreeMap  freqTable  =  getFreqTable();  if(freqTable!=  null)  {  return;  }  [CE]  illegal  start  of  expression  [FE]        ClassCastException    [CONTEXT]    public  void  addValue(Object  v)  {    [BUGGY]  if(v  ==  null)  {  TreeMap  freqTable  =  getFreqTable();  if(freqTable!=  null)  {  return;  }  [BUGGY]    addValue((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  serialVersionUID  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	110	110	1	replace	if(v  ==  null)  {  TreeMap  freqTable  =  getFreqTable();  if(freqTable!=  null)  {  return;  }	      if(v!=    null)    {    TreeMap    freqTable    =    getFreqTable();    if(freqTable!=    null)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
11	[BUG]  [BUGGY]  if(v  ==  null)  {  TreeMap  freqTable  =  getFrequencyTable();  if(freqTable!=  null)  {  return;  }  [CE]  illegal  start  of  expression  [FE]          ClassCastException    [CONTEXT]    public  void  addValue(Object  v)  {    [BUGGY]  if(v  ==  null)  {  TreeMap  freqTable  =  getFrequencyTable();  if(freqTable!=  null)  {  return;  }  [BUGGY]    addValue((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  serialVersionUID  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	110	110	1	replace	if(v  ==  null)  {  TreeMap  freqTable  =  getFrequencyTable();  if(freqTable!=  null)  {  return;  }	      if(v!=    null)    {    TreeMap    freqTable    =    getFreqTable();    if(freqTable!=    null)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
12	[BUG]  [BUGGY]  if(v!=  null)  {  TreeMap  freqTable  =  getFrequencyTable();  if(freqTable!=  null)  {  return;  }  [CE]  illegal  start  of  expression  [FE]            ClassCastException    [CONTEXT]    public  void  addValue(Object  v)  {    [BUGGY]  if(v!=  null)  {  TreeMap  freqTable  =  getFrequencyTable();  if(freqTable!=  null)  {  return;  }  [BUGGY]    addValue((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  serialVersionUID  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	110	110	1	replace	if(v!=  null)  {  TreeMap  freqTable  =  getFrequencyTable();  if(freqTable!=  null)  {  return;  }	      if(v!=    null)    {    TreeMap    freqTable    =    getFreqTable();    if(freqTable!=    null)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
13	[BUG]  [BUGGY]  this.freqTable.addValue((  Comparable  <?>)v,  true);  [CE]  'catch'  without  'try'  [FE]        ClassCastException    [CONTEXT]    public  void  addValue(Object  v)  {    [BUGGY]  this.freqTable.addValue((  Comparable  <?>)v,  true);  [BUGGY]    addValue((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  serialVersionUID  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	110	110	1	replace	this.freqTable.addValue((  Comparable  <?>)v,  true);	      this.freqTable.addValue((    Comparable    <?>)v);    	non-compiled	[CE]  'catch'  without  'try'	1	None	replace
14	[BUG]  [BUGGY]  this.freqTable.addValue((  Comparable  <?>)v,  null);  [CE]  'catch'  without  'try'  [FE]          ClassCastException    [CONTEXT]    public  void  addValue(Object  v)  {    [BUGGY]  this.freqTable.addValue((  Comparable  <?>)v,  null);  [BUGGY]    addValue((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  serialVersionUID  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	110	110	1	replace	this.freqTable.addValue((  Comparable  <?>)v,  null);	      this.freqTable.addValue((    Comparable    <?>)v);    	non-compiled	[CE]  'catch'  without  'try'	1	None	replace
15	[BUG]  [BUGGY]  this.freqTable.addValue((  Comparable  <?>)v,  false);  [CE]  'catch'  without  'try'  [FE]            ClassCastException    [CONTEXT]    public  void  addValue(Object  v)  {    [BUGGY]  this.freqTable.addValue((  Comparable  <?>)v,  false);  [BUGGY]    addValue((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  serialVersionUID  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	110	110	1	replace	this.freqTable.addValue((  Comparable  <?>)v,  false);	      this.freqTable.addValue((    Comparable    <?>)v);    	non-compiled	[CE]  'catch'  without  'try'	1	None	replace
16	[BUG]  [BUGGY]  TreeMap  freqTable  =  new  TreeMap();  for(int  i  =  0;  i  <  freqTable.size();  ++i)  {  TreeMap.this.freqTable.addValue(freqTable.get(i));  }  [CE]  'catch'  without  'try'  [FE]          ClassCastException    [CONTEXT]    public  void  addValue(Object  v)  {    [BUGGY]  TreeMap  freqTable  =  new  TreeMap();  for(int  i  =  0;  i  <  freqTable.size();  ++i)  {  TreeMap.this.freqTable.addValue(freqTable.get(i));  }  [BUGGY]    addValue((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  serialVersionUID  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	110	110	1	replace	TreeMap  freqTable  =  new  TreeMap();  for(int  i  =  0;  i  <  freqTable.size();  ++i)  {  TreeMap.this.freqTable.addValue(freqTable.get(i));  }	      if(v!=    null)    {    TreeMap    freqTable    =    new    TreeMap();    for(int    i    =    0;    i    <    freqTable.size();    ++i)    {    TreeMap.this.freqTable.addValue(freqTable.get(i));    }    	non-compiled	[CE]  'catch'  without  'try'	15	None	replace
17	[BUG]  [BUGGY]  if(v  ==  null)  {  TreeMap  freqTable  =  new  TreeMap();  for(int  i  =  0;  i  <  freqTable.size();  ++i)  {  TreeMap.this.freqTable.addValue(freqTable.get(i));  }  [CE]  illegal  start  of  expression  [FE]            ClassCastException    [CONTEXT]    public  void  addValue(Object  v)  {    [BUGGY]  if(v  ==  null)  {  TreeMap  freqTable  =  new  TreeMap();  for(int  i  =  0;  i  <  freqTable.size();  ++i)  {  TreeMap.this.freqTable.addValue(freqTable.get(i));  }  [BUGGY]    addValue((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  serialVersionUID  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	110	110	1	replace	if(v  ==  null)  {  TreeMap  freqTable  =  new  TreeMap();  for(int  i  =  0;  i  <  freqTable.size();  ++i)  {  TreeMap.this.freqTable.addValue(freqTable.get(i));  }	      if(v!=    null)    {    TreeMap    freqTable    =    new    TreeMap();    for(int    i    =    0;    i    <    freqTable.size();    ++i)    {    TreeMap.this.freqTable.addValue(freqTable.get(i));    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
18	[BUG]  [BUGGY]  addValue((  Class  <?>)v);  addValue((  Class  <?>)v);  [CE]  'catch'  without  'try'  [FE]    ClassCastException    [CONTEXT]    public  void  addValue(Object  v)  {    [BUGGY]  addValue((  Class  <?>)v);  addValue((  Class  <?>)v);  [BUGGY]    }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  serialVersionUID  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	110	110	1	replace	addValue((    Class    <?>)v);    addValue((  Class  <?>)v);	  	non-compiled	[CE]  'catch'  without  'try'	12	None	add
19	[BUG]  [BUGGY]  addValue((  Class  <?>)v);  if(v  instanceof  Class  <?>)  {  addValue((  Class  <?>)v);  }  [CE]  'catch'  without  'try'  [FE]      ClassCastException    [CONTEXT]    public  void  addValue(Object  v)  {    [BUGGY]  addValue((  Class  <?>)v);  if(v  instanceof  Class  <?>)  {  addValue((  Class  <?>)v);  }  [BUGGY]    }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  serialVersionUID  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	110	110	1	replace	addValue((    Class    <?>)v);    if(v  instanceof  Class  <?>)  {  addValue((  Class  <?>)v);  }	  	non-compiled	[CE]  'catch'  without  'try'	12	None	add
20	[BUG]  [BUGGY]  addValue((  Class  <?>)v);  if(v  instanceof  Class  <?>)  {  addValue((  Class  <?>)v);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  'catch'  without  'try'  [FE]        ClassCastException    [CONTEXT]    public  void  addValue(Object  v)  {    [BUGGY]  addValue((  Class  <?>)v);  if(v  instanceof  Class  <?>)  {  addValue((  Class  <?>)v);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  serialVersionUID  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	110	110	1	replace	addValue((    Class    <?>)v);    if(v  instanceof  Class  <?>)  {  addValue((  Class  <?>)v);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	non-compiled	[CE]  'catch'  without  'try'	12	None	add
21	[BUG]  [BUGGY]  addValue((  Class  <?>)v);  if(v  instanceof  Class  <?>)  {  addValue((  Class  <?>)v);  }  else  {  addValue((  Class  <?>)v);  }  [CE]  'catch'  without  'try'  [FE]          ClassCastException    [CONTEXT]    public  void  addValue(Object  v)  {    [BUGGY]  addValue((  Class  <?>)v);  if(v  instanceof  Class  <?>)  {  addValue((  Class  <?>)v);  }  else  {  addValue((  Class  <?>)v);  }  [BUGGY]    }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  serialVersionUID  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	110	110	1	replace	addValue((    Class    <?>)v);    if(v  instanceof  Class  <?>)  {  addValue((  Class  <?>)v);  }  else  {  addValue((  Class  <?>)v);  }	  	non-compiled	[CE]  'catch'  without  'try'	12	None	add
22	[BUG]  [BUGGY]  addValue((  Class  <?>)v);  if(v  instanceof  Class  <?>)  {  addValue((  Class  <?>)v);  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  'catch'  without  'try'  [FE]            ClassCastException    [CONTEXT]    public  void  addValue(Object  v)  {    [BUGGY]  addValue((  Class  <?>)v);  if(v  instanceof  Class  <?>)  {  addValue((  Class  <?>)v);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  serialVersionUID  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	110	110	1	replace	addValue((    Class    <?>)v);    if(v  instanceof  Class  <?>)  {  addValue((  Class  <?>)v);  }  else  {  throw  new  IllegalStateException( " ");  }	  	non-compiled	[CE]  'catch'  without  'try'	12	None	add
23	[BUG]  [BUGGY]  _addValue((  Pair  <?>)v);  [CE]  'catch'  without  'try'  [FE]        ClassCastException    [CONTEXT]    public  void  addValue(Object  v)  {    [BUGGY]  _addValue((  Pair  <?>)v);  [BUGGY]    }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  serialVersionUID  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	110	110	1	replace	_addValue((  Pair  <?>)v);	  addValue((    Pair    <?>)v);    	non-compiled	[CE]  'catch'  without  'try'	11	None	replace
24	[BUG]  [BUGGY]  addValue((  Pair  <?>)v,  true);  [CE]  'catch'  without  'try'  [FE]          ClassCastException    [CONTEXT]    public  void  addValue(Object  v)  {    [BUGGY]  addValue((  Pair  <?>)v,  true);  [BUGGY]    }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  serialVersionUID  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	110	110	1	replace	addValue((  Pair  <?>)v,  true);	  addValue((    Pair    <?>)v);    	non-compiled	[CE]  'catch'  without  'try'	11	None	replace
25	[BUG]  [BUGGY]  addValue((  Pair  <?>)v,  false);  [CE]  'catch'  without  'try'  [FE]            ClassCastException    [CONTEXT]    public  void  addValue(Object  v)  {    [BUGGY]  addValue((  Pair  <?>)v,  false);  [BUGGY]    }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  serialVersionUID  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	110	110	1	replace	addValue((  Pair  <?>)v,  false);	  addValue((    Pair    <?>)v);    	non-compiled	[CE]  'catch'  without  'try'	11	None	replace
26	[BUG]  [BUGGY]  addValue((  Pair  <?>)v,  null);  [CE]  'catch'  without  'try'  [FE]              ClassCastException    [CONTEXT]    public  void  addValue(Object  v)  {    [BUGGY]  addValue((  Pair  <?>)v,  null);  [BUGGY]    }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  serialVersionUID  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	110	110	1	replace	addValue((  Pair  <?>)v,  null);	  addValue((    Pair    <?>)v);    	non-compiled	[CE]  'catch'  without  'try'	11	None	replace
27	[BUG]  [BUGGY]  if(v  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  'catch'  without  'try'  [FE]              ClassCastException    [CONTEXT]    public  void  addValue(Object  v)  {    [BUGGY]  if(v  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    addValue((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  serialVersionUID  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	110	110	1	replace	if(v  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	      if(v!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  'catch'  without  'try'	17	None	replace
28	[BUG]  [BUGGY]  if(v  ==  null)  {  throw  new  IllegalArgumentException( " ".getMessage());  }  [CE]  'catch'  without  'try'  [FE]                ClassCastException    [CONTEXT]    public  void  addValue(Object  v)  {    [BUGGY]  if(v  ==  null)  {  throw  new  IllegalArgumentException( " ".getMessage());  }  [BUGGY]    addValue((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  serialVersionUID  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	110	110	1	replace	if(v  ==  null)  {  throw  new  IllegalArgumentException( " ".getMessage());  }	      if(v!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  'catch'  without  'try'	17	None	replace
29	[BUG]  [BUGGY]  _addValue((  Class  <?>)v);  [CE]  'catch'  without  'try'  [FE]    ClassCastException    [CONTEXT]    public  void  addValue(Object  v)  {    [BUGGY]  _addValue((  Class  <?>)v);  [BUGGY]    }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  serialVersionUID  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	110	110	1	replace	_addValue((  Class  <?>)v);	  addValue((    Class    <?>)v);    	non-compiled	[CE]  'catch'  without  'try'	13	None	replace
30	[BUG]  [BUGGY]  addValue((  Class  <?>)v,  true);  [CE]  'catch'  without  'try'  [FE]      ClassCastException    [CONTEXT]    public  void  addValue(Object  v)  {    [BUGGY]  addValue((  Class  <?>)v,  true);  [BUGGY]    }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  serialVersionUID  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	110	110	1	replace	addValue((  Class  <?>)v,  true);	  addValue((    Class    <?>)v);    	non-compiled	[CE]  'catch'  without  'try'	13	None	replace
31	[BUG]  [BUGGY]  if(v  instanceof  Comparable  <?>)  {  ((  Comparable  <?>)v).setFrequencyTable(freqTable);  }  [CE]  'catch'  without  'try'  [FE]            ClassCastException    [CONTEXT]    public  void  addValue(Object  v)  {    [BUGGY]  if(v  instanceof  Comparable  <?>)  {  ((  Comparable  <?>)v).setFrequencyTable(freqTable);  }  [BUGGY]    addValue((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  serialVersionUID  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	110	110	1	replace	if(v  instanceof  Comparable  <?>)  {  ((  Comparable  <?>)v).setFrequencyTable(freqTable);  }	      if(v    instanceof    Comparable    <?>)    {    ((    Comparable    <?>)v).setFreqTable(freqTable);    }    	non-compiled	[CE]  'catch'  without  'try'	10	None	replace
32	[BUG]  [BUGGY]  if(v  instanceof  Comparable  <?>)  {  ((  Comparable  <?>)v).setFreqTable(this.freqTable);  }  [CE]  'catch'  without  'try'  [FE]              ClassCastException    [CONTEXT]    public  void  addValue(Object  v)  {    [BUGGY]  if(v  instanceof  Comparable  <?>)  {  ((  Comparable  <?>)v).setFreqTable(this.freqTable);  }  [BUGGY]    addValue((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  serialVersionUID  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	110	110	1	replace	if(v  instanceof  Comparable  <?>)  {  ((  Comparable  <?>)v).setFreqTable(this.freqTable);  }	      if(v    instanceof    Comparable    <?>)    {    ((    Comparable    <?>)v).setFreqTable(freqTable);    }    	non-compiled	[CE]  'catch'  without  'try'	10	None	replace
33	[BUG]  [BUGGY]  _addValue((  Comparable  <?>)v,  true);  [CE]  'catch'  without  'try'  [FE]        ClassCastException    [CONTEXT]    public  void  addValue(Object  v)  {    [BUGGY]  _addValue((  Comparable  <?>)v,  true);  [BUGGY]    }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  serialVersionUID  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	110	110	1	replace	_addValue((  Comparable  <?>)v,  true);	  _addValue((    Comparable    <?>)v);    	non-compiled	[CE]  'catch'  without  'try'	6	None	replace
34	[BUG]  [BUGGY]  _addValue((  Comparable  <?>)v,  null);  [CE]  'catch'  without  'try'  [FE]          ClassCastException    [CONTEXT]    public  void  addValue(Object  v)  {    [BUGGY]  _addValue((  Comparable  <?>)v,  null);  [BUGGY]    }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  serialVersionUID  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	110	110	1	replace	_addValue((  Comparable  <?>)v,  null);	  _addValue((    Comparable    <?>)v);    	non-compiled	[CE]  'catch'  without  'try'	6	None	replace
35	[BUG]  [BUGGY]  _addValue((  Comparable  <?>)v,  this);  [CE]  'catch'  without  'try'  [FE]            ClassCastException    [CONTEXT]    public  void  addValue(Object  v)  {    [BUGGY]  _addValue((  Comparable  <?>)v,  this);  [BUGGY]    }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  serialVersionUID  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	110	110	1	replace	_addValue((  Comparable  <?>)v,  this);	  _addValue((    Comparable    <?>)v);    	non-compiled	[CE]  'catch'  without  'try'	6	None	replace
36	[BUG]  [BUGGY]  this.freqTable.addValue((  Class  <?>)v,  true);  [CE]  'catch'  without  'try'  [FE]          ClassCastException    [CONTEXT]    public  void  addValue(Object  v)  {    [BUGGY]  this.freqTable.addValue((  Class  <?>)v,  true);  [BUGGY]    addValue((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  serialVersionUID  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	110	110	1	replace	this.freqTable.addValue((  Class  <?>)v,  true);	      this.freqTable.addValue((    Class    <?>)v);    	non-compiled	[CE]  'catch'  without  'try'	2	None	replace
37	[BUG]  [BUGGY]  this.freqTable.addValue((  Class  <?>)v,  null);  [CE]  'catch'  without  'try'  [FE]            ClassCastException    [CONTEXT]    public  void  addValue(Object  v)  {    [BUGGY]  this.freqTable.addValue((  Class  <?>)v,  null);  [BUGGY]    addValue((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  serialVersionUID  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	110	110	1	replace	this.freqTable.addValue((  Class  <?>)v,  null);	      this.freqTable.addValue((    Class    <?>)v);    	non-compiled	[CE]  'catch'  without  'try'	2	None	replace
38	[BUG]  [BUGGY]  this.freqTable.addValue((  Class  <?>)v,  false);  [CE]  [FE]              ClassCastException    [CONTEXT]    public  void  addValue(Object  v)  {    [BUGGY]  this.freqTable.addValue((  Class  <?>)v,  false);  [BUGGY]    addValue((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  serialVersionUID  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	110	110	1	replace	this.freqTable.addValue((  Class  <?>)v,  false);	      this.freqTable.addValue((    Class    <?>)v);    	non-compiled	[CE]  	2	None	replace
39	[BUG]  [BUGGY]  this.freqTable.addValue((  NaturalComparator  <?>)v,  true);  [CE]  [FE]        ClassCastException    [CONTEXT]    public  void  addValue(Object  v)  {    [BUGGY]  this.freqTable.addValue((  NaturalComparator  <?>)v,  true);  [BUGGY]    addValue((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  serialVersionUID  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	110	110	1	replace	this.freqTable.addValue((  NaturalComparator  <?>)v,  true);	      this.freqTable.addValue((    NaturalComparator    <?>)v);    	non-compiled	[CE]  	8	None	replace
40	[BUG]  [BUGGY]  this.freqTable.addValue((  NaturalComparator  <?>)v,  null);  [CE]  [FE]          ClassCastException    [CONTEXT]    public  void  addValue(Object  v)  {    [BUGGY]  this.freqTable.addValue((  NaturalComparator  <?>)v,  null);  [BUGGY]    addValue((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  serialVersionUID  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	110	110	1	replace	this.freqTable.addValue((  NaturalComparator  <?>)v,  null);	      this.freqTable.addValue((    NaturalComparator    <?>)v);    	non-compiled	[CE]  	8	None	replace
41	[BUG]  [BUGGY]  this.freqTable.addValue((  NaturalComparator  <?>)v,  false);  [CE]  [FE]            ClassCastException    [CONTEXT]    public  void  addValue(Object  v)  {    [BUGGY]  this.freqTable.addValue((  NaturalComparator  <?>)v,  false);  [BUGGY]    addValue((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  serialVersionUID  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	110	110	1	replace	this.freqTable.addValue((  NaturalComparator  <?>)v,  false);	      this.freqTable.addValue((    NaturalComparator    <?>)v);    	non-compiled	[CE]  	8	None	replace
42	[BUG]  [BUGGY]  ((  Comparable  <?>)v).setFrequency(freqTable);  [CE]  [FE]                ClassCastException    [CONTEXT]    public  void  addValue(Object  v)  {    [BUGGY]  ((  Comparable  <?>)v).setFrequency(freqTable);  [BUGGY]    addValue((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  serialVersionUID  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	110	110	1	replace	((  Comparable  <?>)v).setFrequency(freqTable);	      if(v    instanceof    Comparable    <?>)    {    ((    Comparable    <?>)v).setFrequency(freqTable);    }    	non-compiled	[CE]  	5	None	replace
43	[BUG]  [BUGGY]  if(v  instanceof  Comparable  <?>)  {  ((  Comparable  <?>)v).setFrequency(this.freqTable);  }  [CE]  [FE]                  ClassCastException    [CONTEXT]    public  void  addValue(Object  v)  {    [BUGGY]  if(v  instanceof  Comparable  <?>)  {  ((  Comparable  <?>)v).setFrequency(this.freqTable);  }  [BUGGY]    addValue((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  serialVersionUID  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	110	110	1	replace	if(v  instanceof  Comparable  <?>)  {  ((  Comparable  <?>)v).setFrequency(this.freqTable);  }	      if(v    instanceof    Comparable    <?>)    {    ((    Comparable    <?>)v).setFrequency(freqTable);    }    	non-compiled	[CE]  	5	None	replace
44	[BUG]  [BUGGY]  if(v  instanceof  Comparable  <?>)  {  ((  Comparable  <?>)v).setFrequency(freqTable,  null);  }  [CE]  [FE]                    ClassCastException    [CONTEXT]    public  void  addValue(Object  v)  {    [BUGGY]  if(v  instanceof  Comparable  <?>)  {  ((  Comparable  <?>)v).setFrequency(freqTable,  null);  }  [BUGGY]    addValue((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  serialVersionUID  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	110	110	1	replace	if(v  instanceof  Comparable  <?>)  {  ((  Comparable  <?>)v).setFrequency(freqTable,  null);  }	      if(v    instanceof    Comparable    <?>)    {    ((    Comparable    <?>)v).setFrequency(freqTable);    }    	non-compiled	[CE]  	5	None	replace
45	[BUG]  [BUGGY]  this.freqTable.addValue(new  NaturalComparator(v));  [CE]  [FE]              ClassCastException    [CONTEXT]    public  void  addValue(Object  v)  {    [BUGGY]  this.freqTable.addValue(new  NaturalComparator(v));  [BUGGY]    addValue((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  serialVersionUID  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	110	110	1	replace	this.freqTable.addValue(new  NaturalComparator(v));	      this.freqTable.addValue(v);    	non-compiled	[CE]  	4	None	replace
46	[BUG]  [BUGGY]  this.freqTable.addValue(v,  null);  [CE]  [FE]                ClassCastException    [CONTEXT]    public  void  addValue(Object  v)  {    [BUGGY]  this.freqTable.addValue(v,  null);  [BUGGY]    addValue((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  serialVersionUID  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	110	110	1	replace	this.freqTable.addValue(v,  null);	      this.freqTable.addValue(v);    	non-compiled	[CE]  	4	None	replace
47	[BUG]  [BUGGY]  this.freqTable.addValue(null,  v);  [CE]  [FE]                  ClassCastException    [CONTEXT]    public  void  addValue(Object  v)  {    [BUGGY]  this.freqTable.addValue(null,  v);  [BUGGY]    addValue((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  serialVersionUID  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	110	110	1	replace	this.freqTable.addValue(null,  v);	      this.freqTable.addValue(v);    	non-compiled	[CE]  	4	None	replace
48	[BUG]  [BUGGY]  addValue((  Comparable  <?>)v,  false);  [CE]  [FE]          ClassCastException    [CONTEXT]    public  void  addValue(Object  v)  {    [BUGGY]  addValue((  Comparable  <?>)v,  false);  [BUGGY]    }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  serialVersionUID  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	110	110	1	replace	addValue((  Comparable  <?>)v,  false);	  addValue((    Comparable    <?>)v,    true);    	non-compiled	[CE]  	7	None	replace
49	[BUG]  [BUGGY]  addValue((  Comparable  <?>)v,  null,  true);  [CE]  [FE]            ClassCastException    [CONTEXT]    public  void  addValue(Object  v)  {    [BUGGY]  addValue((  Comparable  <?>)v,  null,  true);  [BUGGY]    }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  serialVersionUID  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	110	110	1	replace	addValue((  Comparable  <?>)v,  null,  true);	  addValue((    Comparable    <?>)v,    true);    	non-compiled	[CE]  	7	None	replace
50	[BUG]  [BUGGY]  addValue((  Comparable  <?>)v,  true,  freqTable);  [CE]  [FE]              ClassCastException    [CONTEXT]    public  void  addValue(Object  v)  {    [BUGGY]  addValue((  Comparable  <?>)v,  true,  freqTable);  [BUGGY]    }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  serialVersionUID  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	110	110	1	replace	addValue((  Comparable  <?>)v,  true,  freqTable);	  addValue((    Comparable    <?>)v,    true);    	non-compiled	[CE]  	7	None	replace
51	[BUG]  [BUGGY]  this.freqTable.addValue((  NaturalComparator  <?>)v,  v);  [CE]  [FE]        ClassCastException    [CONTEXT]    public  void  addValue(Object  v)  {    [BUGGY]  this.freqTable.addValue((  NaturalComparator  <?>)v,  v);  [BUGGY]    addValue((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  serialVersionUID  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	110	110	1	replace	this.freqTable.addValue((  NaturalComparator  <?>)v,  v);	      this.freqTable.addValue((    NaturalComparator    <?>)v);    	non-compiled	[CE]  	8	None	replace
52	[BUG]  [BUGGY]  this.freqTable.addValue((  NaturalComparator  <?>)v,  freqTable);  [CE]  'catch'  without  'try'  [FE]          ClassCastException    [CONTEXT]    public  void  addValue(Object  v)  {    [BUGGY]  this.freqTable.addValue((  NaturalComparator  <?>)v,  freqTable);  [BUGGY]    addValue((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  serialVersionUID  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	110	110	1	replace	this.freqTable.addValue((  NaturalComparator  <?>)v,  freqTable);	      this.freqTable.addValue((    NaturalComparator    <?>)v);    	non-compiled	[CE]  'catch'  without  'try'	8	None	replace
53	[BUG]  [BUGGY]  _addValue((  Comparable  <?>)v,  freqTable);  [CE]  'catch'  without  'try'  [FE]        ClassCastException    [CONTEXT]    public  void  addValue(Object  v)  {    [BUGGY]  _addValue((  Comparable  <?>)v,  freqTable);  [BUGGY]    }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  serialVersionUID  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	110	110	1	replace	_addValue((  Comparable  <?>)v,  freqTable);	  _addValue((    Comparable    <?>)v);    	non-compiled	[CE]  'catch'  without  'try'	6	None	replace
54	[BUG]  [BUGGY]  safeGet(v)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]              ClassCastException    [CONTEXT]    public  void  addValue(Object  v)  {    [BUGGY]  safeGet(v)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    addValue((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  serialVersionUID  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	110	110	1	replace	safeGet(v)  {  throw  new  IllegalArgumentException( " ");  }	      if(v!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	17	None	replace
55	[BUG]  [BUGGY]  if(!(v  instanceof  Comparable  <?>))  {  ((  Comparable  <?>)v).setFreqTable(freqTable);  }  [CE]  'catch'  without  'try'  [FE]            ClassCastException    [CONTEXT]    public  void  addValue(Object  v)  {    [BUGGY]  if(!(v  instanceof  Comparable  <?>))  {  ((  Comparable  <?>)v).setFreqTable(freqTable);  }  [BUGGY]    addValue((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  serialVersionUID  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	110	110	1	replace	if(!(v  instanceof  Comparable  <?>))  {  ((  Comparable  <?>)v).setFreqTable(freqTable);  }	      if(v    instanceof    Comparable    <?>)    {    ((    Comparable    <?>)v).setFreqTable(freqTable);    }    	non-compiled	[CE]  'catch'  without  'try'	10	None	replace
56	[BUG]  [BUGGY]  addValue((  Pair  <?>)v,  freqTable);  [CE]  'catch'  without  'try'  [FE]        ClassCastException    [CONTEXT]    public  void  addValue(Object  v)  {    [BUGGY]  addValue((  Pair  <?>)v,  freqTable);  [BUGGY]    }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  serialVersionUID  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	110	110	1	replace	addValue((  Pair  <?>)v,  freqTable);	  addValue((    Pair    <?>)v);    	non-compiled	[CE]  'catch'  without  'try'	11	None	replace
57	[BUG]  [BUGGY]  if(v!=  null)  {  TreeMap  freqTable  =  new  TreeMap();  for(int  i  =  0;  i  <  freqTable.size();  ++i)  {  TreeMap.this.freqTable.addValue(freqTable,  [CE]  [FE]            ClassCastException    [CONTEXT]    public  void  addValue(Object  v)  {    [BUGGY]  if(v!=  null)  {  TreeMap  freqTable  =  new  TreeMap();  for(int  i  =  0;  i  <  freqTable.size();  ++i)  {  TreeMap.this.freqTable.addValue(freqTable,  [BUGGY]    addValue((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  serialVersionUID  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	110	110	1	replace	if(v!=  null)  {  TreeMap  freqTable  =  new  TreeMap();  for(int  i  =  0;  i  <  freqTable.size();  ++i)  {  TreeMap.this.freqTable.addValue(freqTable,	      if(v!=    null)    {    TreeMap    freqTable    =    new    TreeMap();    for(int    i    =    0;    i    <    freqTable.size();    ++i)    {    TreeMap.this.freqTable.addValue(freqTable,    v);    }    	non-compiled	[CE]  	16	None	replace
58	[BUG]  [BUGGY]  this.freqTable.addValue(v,  v);  [CE]  not  a  statement  [FE]              ClassCastException    [CONTEXT]    public  void  addValue(Object  v)  {    [BUGGY]  this.freqTable.addValue(v,  v);  [BUGGY]    addValue((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  serialVersionUID  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	110	110	1	replace	this.freqTable.addValue(v,  v);	      this.freqTable.addValue(v);    	non-compiled	[CE]  not  a  statement	4	None	replace
59	[BUG]  [BUGGY]  if(!(v  instanceof  Comparable  <?>))  {  ((  Comparable  <?>)v).setFrequency(freqTable);  }  [CE]  not  a  statement  [FE]                ClassCastException    [CONTEXT]    public  void  addValue(Object  v)  {    [BUGGY]  if(!(v  instanceof  Comparable  <?>))  {  ((  Comparable  <?>)v).setFrequency(freqTable);  }  [BUGGY]    addValue((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  serialVersionUID  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	110	110	1	replace	if(!(v  instanceof  Comparable  <?>))  {  ((  Comparable  <?>)v).setFrequency(freqTable);  }	      if(v    instanceof    Comparable    <?>)    {    ((    Comparable    <?>)v).setFrequency(freqTable);    }    	non-compiled	[CE]  not  a  statement	5	None	replace
60	[BUG]  [BUGGY]  addValue((  Comparable  <?>)v,  true,  false);  [CE]  not  a  statement  [FE]          ClassCastException    [CONTEXT]    public  void  addValue(Object  v)  {    [BUGGY]  addValue((  Comparable  <?>)v,  true,  false);  [BUGGY]    }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  serialVersionUID  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	110	110	1	replace	addValue((  Comparable  <?>)v,  true,  false);	  addValue((    Comparable    <?>)v,    true);    	non-compiled	[CE]  not  a  statement	7	None	replace
61	[BUG]  [BUGGY]  this.freqTable.addValue((  Comparable  <?>)v,  freqTable);  [CE]  not  a  statement  [FE]        ClassCastException    [CONTEXT]    public  void  addValue(Object  v)  {    [BUGGY]  this.freqTable.addValue((  Comparable  <?>)v,  freqTable);  [BUGGY]    addValue((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  serialVersionUID  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	110	110	1	replace	this.freqTable.addValue((  Comparable  <?>)v,  freqTable);	      this.freqTable.addValue((    Comparable    <?>)v);    	non-compiled	[CE]  not  a  statement	1	None	replace
62	[BUG]  [BUGGY]  addValue((  Class  <?>)v);  if(v  instanceof  Class  <?>)  {  Class  <?>  v  =(Class  <?>)v;  if(v!=  null)  {  addValue((  Class  <?>)v);  }  [CE]  illegal  start  of  expression  [FE]    ClassCastException    [CONTEXT]    public  void  addValue(Object  v)  {    [BUGGY]  addValue((  Class  <?>)v);  if(v  instanceof  Class  <?>)  {  Class  <?>  v  =(Class  <?>)v;  if(v!=  null)  {  addValue((  Class  <?>)v);  }  [BUGGY]    }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  serialVersionUID  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	110	110	1	replace	addValue((    Class    <?>)v);    if(v  instanceof  Class  <?>)  {  Class  <?>  v  =(Class  <?>)v;  if(v!=  null)  {  addValue((  Class  <?>)v);  }	  	non-compiled	[CE]  illegal  start  of  expression	12	None	add
63	[BUG]  [BUGGY]  addValue((  Class  <?>)v);  if(v  instanceof  Class  <?>)  {  Class  <?>  v  =(Class  <?>)v;  addValue((  Class  <?>)v);  }  [CE]  illegal  start  of  expression  [FE]      ClassCastException    [CONTEXT]    public  void  addValue(Object  v)  {    [BUGGY]  addValue((  Class  <?>)v);  if(v  instanceof  Class  <?>)  {  Class  <?>  v  =(Class  <?>)v;  addValue((  Class  <?>)v);  }  [BUGGY]    }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  serialVersionUID  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	110	110	1	replace	addValue((    Class    <?>)v);    if(v  instanceof  Class  <?>)  {  Class  <?>  v  =(Class  <?>)v;  addValue((  Class  <?>)v);  }	  	non-compiled	[CE]  illegal  start  of  expression	12	None	add
64	[BUG]  [BUGGY]  addValue((  Class  <?>)v);  if(v  instanceof  Class  <?>)  {  Class  <?>  v  =(Class  <?>)v;  if(!freqTable.containsKey(v))  {  addValue((  Class  <?>)v);  }  [CE]  illegal  start  of  expression  [FE]        ClassCastException    [CONTEXT]    public  void  addValue(Object  v)  {    [BUGGY]  addValue((  Class  <?>)v);  if(v  instanceof  Class  <?>)  {  Class  <?>  v  =(Class  <?>)v;  if(!freqTable.containsKey(v))  {  addValue((  Class  <?>)v);  }  [BUGGY]    }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  serialVersionUID  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	110	110	1	replace	addValue((    Class    <?>)v);    if(v  instanceof  Class  <?>)  {  Class  <?>  v  =(Class  <?>)v;  if(!freqTable.containsKey(v))  {  addValue((  Class  <?>)v);  }	  	non-compiled	[CE]  illegal  start  of  expression	12	None	add
65	[BUG]  [BUGGY]  addValue((  Class  <?>)v);  if(v  instanceof  Class  <?>)  {  Class  <?>  v  =(Class  <?>)v;  addValue((  Class  <?>)v);  }  else  {  addValue((  Class  <?>)v);  }  [CE]  illegal  start  of  expression  [FE]          ClassCastException    [CONTEXT]    public  void  addValue(Object  v)  {    [BUGGY]  addValue((  Class  <?>)v);  if(v  instanceof  Class  <?>)  {  Class  <?>  v  =(Class  <?>)v;  addValue((  Class  <?>)v);  }  else  {  addValue((  Class  <?>)v);  }  [BUGGY]    }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  serialVersionUID  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	110	110	1	replace	addValue((    Class    <?>)v);    if(v  instanceof  Class  <?>)  {  Class  <?>  v  =(Class  <?>)v;  addValue((  Class  <?>)v);  }  else  {  addValue((  Class  <?>)v);  }	  	non-compiled	[CE]  illegal  start  of  expression	12	None	add
66	[BUG]  [BUGGY]  this.freqTable.addValue((  Class  <?>)v,  v);  [CE]  illegal  start  of  expression  [FE]          ClassCastException    [CONTEXT]    public  void  addValue(Object  v)  {    [BUGGY]  this.freqTable.addValue((  Class  <?>)v,  v);  [BUGGY]    addValue((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  serialVersionUID  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	110	110	1	replace	this.freqTable.addValue((  Class  <?>)v,  v);	      this.freqTable.addValue((    Class    <?>)v);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
67	[BUG]  [BUGGY]  if(v  ==  null)  {  TreeMap  freqTable  =  new  TreeMap();  for(int  i  =  0;  i  <  freqTable.size();  ++i)  {  TreeMap.this.freqTable.addValue(freqTable.get(i)  [CE]  [FE]          ClassCastException    [CONTEXT]    public  void  addValue(Object  v)  {    [BUGGY]  if(v  ==  null)  {  TreeMap  freqTable  =  new  TreeMap();  for(int  i  =  0;  i  <  freqTable.size();  ++i)  {  TreeMap.this.freqTable.addValue(freqTable.get(i)  [BUGGY]    addValue((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  serialVersionUID  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	110	110	1	replace	if(v  ==  null)  {  TreeMap  freqTable  =  new  TreeMap();  for(int  i  =  0;  i  <  freqTable.size();  ++i)  {  TreeMap.this.freqTable.addValue(freqTable.get(i)	      if(v!=    null)    {    TreeMap    freqTable    =    new    TreeMap();    for(int    i    =    0;    i    <    freqTable.size();    ++i)    {    TreeMap.this.freqTable.addValue(freqTable.get(i));    }    	non-compiled	[CE]  	15	None	replace
68	[BUG]  [BUGGY]  this.freqTable.addValue((  Composite  <?>)v,  this.freqTable);  [CE]  illegal  start  of  expression  [FE]            ClassCastException    [CONTEXT]    public  void  addValue(Object  v)  {    [BUGGY]  this.freqTable.addValue((  Composite  <?>)v,  this.freqTable);  [BUGGY]    addValue((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  serialVersionUID  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	110	110	1	replace	this.freqTable.addValue((  Composite  <?>)v,  this.freqTable);	      this.freqTable.addValue((    Composite    <?>)v);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
69	[BUG]  [BUGGY]  if(v  instanceof  Comparable  <?>)  {  ((  Comparable  <?>)v).setFreqTable(freqTable);  }  else  {  throw  new  IllegalArgumentException( " ".);  }  [CE]  <identifier>  expected  [FE]          ClassCastException    [CONTEXT]    public  void  addValue(Object  v)  {    [BUGGY]  if(v  instanceof  Comparable  <?>)  {  ((  Comparable  <?>)v).setFreqTable(freqTable);  }  else  {  throw  new  IllegalArgumentException( " ".);  }  [BUGGY]    addValue((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  serialVersionUID  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	110	110	1	replace	if(v  instanceof  Comparable  <?>)  {  ((  Comparable  <?>)v).setFreqTable(freqTable);  }  else  {  throw  new  IllegalArgumentException( " ".);  }	      if(v    instanceof    Comparable    <?>)    {    ((    Comparable    <?>)v).setFreqTable(freqTable);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
70	[BUG]  [BUGGY]  setValue((  Class  <?>)v);  [CE]  illegal  start  of  expression  [FE]    ClassCastException    [CONTEXT]    public  void  addValue(Object  v)  {    [BUGGY]  setValue((  Class  <?>)v);  [BUGGY]    }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  serialVersionUID  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	110	110	1	replace	setValue((  Class  <?>)v);	  addValue((    Class    <?>)v);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
71	[BUG]  [BUGGY]  super.addValue((  Class  <?>)v);  [CE]  illegal  start  of  expression  [FE]      ClassCastException    [CONTEXT]    public  void  addValue(Object  v)  {    [BUGGY]  super.addValue((  Class  <?>)v);  [BUGGY]    }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  serialVersionUID  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	110	110	1	replace	super.addValue((  Class  <?>)v);	  addValue((    Class    <?>)v);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
72	[BUG]  [BUGGY]  addValue((  Comparable  <?>)v,  null,  false);  [CE]  illegal  start  of  expression  [FE]          ClassCastException    [CONTEXT]    public  void  addValue(Object  v)  {    [BUGGY]  addValue((  Comparable  <?>)v,  null,  false);  [BUGGY]    }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  serialVersionUID  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	110	110	1	replace	addValue((  Comparable  <?>)v,  null,  false);	  addValue((    Comparable    <?>)v,    true);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
73	[BUG]  [BUGGY]  this.freqTable.addValue((  Comparable  <?>)v,  v);  [CE]  illegal  start  of  expression  [FE]        ClassCastException    [CONTEXT]    public  void  addValue(Object  v)  {    [BUGGY]  this.freqTable.addValue((  Comparable  <?>)v,  v);  [BUGGY]    addValue((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  serialVersionUID  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	110	110	1	replace	this.freqTable.addValue((  Comparable  <?>)v,  v);	      this.freqTable.addValue((    Comparable    <?>)v);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
74	[BUG]  [BUGGY]  if(v!=  null)  {  TreeMap  freqTable  =  new  TreeMap();  for(int  i  =  0;  i  <  freqTable.size();  ++i)  {  TreeMap.this.freqTable.addValue(freqTable.get(i)  [CE]  [FE]          ClassCastException    [CONTEXT]    public  void  addValue(Object  v)  {    [BUGGY]  if(v!=  null)  {  TreeMap  freqTable  =  new  TreeMap();  for(int  i  =  0;  i  <  freqTable.size();  ++i)  {  TreeMap.this.freqTable.addValue(freqTable.get(i)  [BUGGY]    addValue((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  serialVersionUID  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	110	110	1	replace	if(v!=  null)  {  TreeMap  freqTable  =  new  TreeMap();  for(int  i  =  0;  i  <  freqTable.size();  ++i)  {  TreeMap.this.freqTable.addValue(freqTable.get(i)	      if(v!=    null)    {    TreeMap    freqTable    =    new    TreeMap();    for(int    i    =    0;    i    <    freqTable.size();    ++i)    {    TreeMap.this.freqTable.addValue(freqTable.get(i));    }    	non-compiled	[CE]  	15	None	replace
75	[BUG]  [BUGGY]  addValue((  Class  <?>)v);  if(v!=  null)  {  addValue((  Class  <?>)v);  }  else  {  addValue((  Class  <?>)v);  }  [CE]  illegal  start  of  expression  [FE]    ClassCastException    [CONTEXT]    public  void  addValue(Object  v)  {    [BUGGY]  addValue((  Class  <?>)v);  if(v!=  null)  {  addValue((  Class  <?>)v);  }  else  {  addValue((  Class  <?>)v);  }  [BUGGY]    }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  serialVersionUID  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	110	110	1	replace	addValue((    Class    <?>)v);    if(v!=  null)  {  addValue((  Class  <?>)v);  }  else  {  addValue((  Class  <?>)v);  }	  	non-compiled	[CE]  illegal  start  of  expression	12	None	add
76	[BUG]  [BUGGY]  addValue((  Class  <?>)v);  if(v!=  null)  {  addValue((  Class  <?>)v);  }  [CE]  illegal  start  of  expression  [FE]      ClassCastException    [CONTEXT]    public  void  addValue(Object  v)  {    [BUGGY]  addValue((  Class  <?>)v);  if(v!=  null)  {  addValue((  Class  <?>)v);  }  [BUGGY]    }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  serialVersionUID  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	110	110	1	replace	addValue((    Class    <?>)v);    if(v!=  null)  {  addValue((  Class  <?>)v);  }	  	non-compiled	[CE]  illegal  start  of  expression	12	None	add
77	[BUG]  [BUGGY]  addValue((  Class  <?>)v);  if(v!=  null)  {  addValue((  Class  <?>)v);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]        ClassCastException    [CONTEXT]    public  void  addValue(Object  v)  {    [BUGGY]  addValue((  Class  <?>)v);  if(v!=  null)  {  addValue((  Class  <?>)v);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  serialVersionUID  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	110	110	1	replace	addValue((    Class    <?>)v);    if(v!=  null)  {  addValue((  Class  <?>)v);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	non-compiled	[CE]  illegal  start  of  expression	12	None	add
78	[BUG]  [BUGGY]  addValue((  Class  <?>)v);  _addValue((  Class  <?>)v);  [CE]  illegal  start  of  expression  [FE]          ClassCastException    [CONTEXT]    public  void  addValue(Object  v)  {    [BUGGY]  addValue((  Class  <?>)v);  _addValue((  Class  <?>)v);  [BUGGY]    }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  serialVersionUID  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	110	110	1	replace	addValue((    Class    <?>)v);    _addValue((  Class  <?>)v);	  	non-compiled	[CE]  illegal  start  of  expression	12	None	add
79	[BUG]  [BUGGY]  tryFrequency(v)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]              ClassCastException    [CONTEXT]    public  void  addValue(Object  v)  {    [BUGGY]  tryFrequency(v)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    addValue((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  serialVersionUID  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	110	110	1	replace	tryFrequency(v)  {  throw  new  IllegalArgumentException( " ");  }	      if(v!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	17	None	replace
80	[BUG]  [BUGGY]  if(v!=  null)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                ClassCastException    [CONTEXT]    public  void  addValue(Object  v)  {    [BUGGY]  if(v!=  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    addValue((Comparable<?>)  v);  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  addValue  [RETURN_TYPE]  void  Object  v  [VARIABLES]  Object  v  boolean  TreeMap  freqTable  long  serialVersionUID  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.7071067811865475	110	110	1	replace	if(v!=  null)  {  throw  new  IllegalStateException( " ");  }	      if(v!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
