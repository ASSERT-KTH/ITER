bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  this(new  String[]  {  freqTable  }  );  [CE]  illegal  start  of  type  [FE]        ClassCastException    [CONTEXT]      [BUGGY]  this(new  String[]  {  freqTable  }  );  [BUGGY]    freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	this(new  String[]  {  freqTable  }  );	  public    Frequency(String[]    freqTable)    {    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
2	[BUG]  [BUGGY]  this(new  String[]  {  freqTable.toString()  }  );  [CE]  illegal  start  of  type  [FE]          ClassCastException    [CONTEXT]      [BUGGY]  this(new  String[]  {  freqTable.toString()  }  );  [BUGGY]    freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	this(new  String[]  {  freqTable.toString()  }  );	  public    Frequency(String[]    freqTable)    {    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
3	[BUG]  [BUGGY]  this(new  String[]  {  freqTable,  null  }  );  [CE]  illegal  start  of  type  [FE]            ClassCastException    [CONTEXT]      [BUGGY]  this(new  String[]  {  freqTable,  null  }  );  [BUGGY]    freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	this(new  String[]  {  freqTable,  null  }  );	  public    Frequency(String[]    freqTable)    {    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
4	[BUG]  [BUGGY]  super(freqTable,  Class  <?>  class);  [CE]  illegal  start  of  type  [FE]        ClassCastException    [CONTEXT]      [BUGGY]  super(freqTable,  Class  <?>  class);  [BUGGY]    freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	super(freqTable,  Class  <?>  class);	  public    Frequency(String[]    freqTable,    Class    <?>    class)    {    this.freqTable    =    new    TreeMap();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
5	[BUG]  [BUGGY]  super(freqTable,  class);  [CE]  illegal  start  of  type  [FE]          ClassCastException    [CONTEXT]      [BUGGY]  super(freqTable,  class);  [BUGGY]    freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	super(freqTable,  class);	  public    Frequency(String[]    freqTable,    Class    <?>    class)    {    this.freqTable    =    new    TreeMap();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
6	[BUG]  [BUGGY]  super(freqTable,  Class  <?>.class);  [CE]  illegal  start  of  type  [FE]            ClassCastException    [CONTEXT]      [BUGGY]  super(freqTable,  Class  <?>.class);  [BUGGY]    freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	super(freqTable,  Class  <?>.class);	  public    Frequency(String[]    freqTable,    Class    <?>.class)    {    this.freqTable    =    new    TreeMap();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
7	[BUG]  [BUGGY]  this(freqTable,  Class  <?>.class);  [CE]  illegal  start  of  type  [FE]              ClassCastException    [CONTEXT]      [BUGGY]  this(freqTable,  Class  <?>.class);  [BUGGY]    freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	this(freqTable,  Class  <?>.class);	  public    Frequency(String[]    freqTable,    Class    <?>.class)    {    this.freqTable    =    new    TreeMap();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
8	[BUG]  [BUGGY]  this.freqTable  =  freqTable;  [CE]  illegal  start  of  type  [FE]                ClassCastException    [CONTEXT]      [BUGGY]  this.freqTable  =  freqTable;  [BUGGY]    public  Frequency()  {  freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	this.freqTable  =  freqTable;	      this.freqTable    =    null;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
9	[BUG]  [BUGGY]  this.freqTable  =  new  HashMap  <  String,Object>();  [CE]  illegal  start  of  type  [FE]                  ClassCastException    [CONTEXT]      [BUGGY]  this.freqTable  =  new  HashMap  <  String,Object>();  [BUGGY]    public  Frequency()  {  freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	this.freqTable  =  new  HashMap  <  String,Object>();	      this.freqTable    =    null;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
10	[BUG]  [BUGGY]  if(freqTable!=  null)  {  super();  }  [CE]  illegal  start  of  type  [FE]          ClassCastException    [CONTEXT]      [BUGGY]  if(freqTable!=  null)  {  super();  }  [BUGGY]    public  Frequency()  {  freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	if(freqTable!=  null)  {  super();  }	      super();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
11	[BUG]  [BUGGY]  if(freqTable  ==  null)  {  super();  }  [CE]  illegal  start  of  type  [FE]            ClassCastException    [CONTEXT]      [BUGGY]  if(freqTable  ==  null)  {  super();  }  [BUGGY]    public  Frequency()  {  freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	if(freqTable  ==  null)  {  super();  }	      super();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
12	[BUG]  [BUGGY]  this(new  Class  <?>(),  freqTable)  {  [CE]  illegal  start  of  type  [FE]          ClassCastException    [CONTEXT]      [BUGGY]  this(new  Class  <?>(),  freqTable)  {  [BUGGY]    freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	this(new  Class  <?>(),  freqTable)  {	  public    Frequency(Class    <?>    freqTable)    {    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
13	[BUG]  [BUGGY]  this(freqTable);  [CE]  illegal  start  of  type  [FE]            ClassCastException    [CONTEXT]      [BUGGY]  this(freqTable);  [BUGGY]    freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	this(freqTable);	  public    Frequency(Class    <?>    freqTable)    {    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
14	[BUG]  [BUGGY]  super(freqTable);  [CE]  illegal  start  of  type  [FE]        ClassCastException    [CONTEXT]      [BUGGY]  super(freqTable);  [BUGGY]    freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	super(freqTable);	  public    Frequency(String[]    freqTable)    {    this.freqTable    =    new    TreeMap();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
15	[BUG]  [BUGGY]  this(freqTable,  true,  false);  [CE]  illegal  start  of  type  [FE]            ClassCastException    [CONTEXT]      [BUGGY]  this(freqTable,  true,  false);  [BUGGY]    public  Frequency()  {  freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	this(freqTable,  true,  false);	      this(freqTable,    true);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
16	[BUG]  [BUGGY]  this(freqTable,  false,  true);  [CE]  illegal  start  of  type  [FE]              ClassCastException    [CONTEXT]      [BUGGY]  this(freqTable,  false,  true);  [BUGGY]    public  Frequency()  {  freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	this(freqTable,  false,  true);	      this(freqTable,    false);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
17	[BUG]  [BUGGY]  this(freqTable,  false,  null);  [CE]  illegal  start  of  type  [FE]                ClassCastException    [CONTEXT]      [BUGGY]  this(freqTable,  false,  null);  [BUGGY]    public  Frequency()  {  freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	this(freqTable,  false,  null);	      this(freqTable,    false);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
18	[BUG]  [BUGGY]  Preconditions.checkState(freqTable!=  null);  [CE]  <identifier>  expected  [FE]          ClassCastException    [CONTEXT]      [BUGGY]  Preconditions.checkState(freqTable!=  null);  [BUGGY]    public  Frequency()  {  freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	Preconditions.checkState(freqTable!=  null);	      Preconditions.checkNotNull(freqTable);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
19	[BUG]  [BUGGY]  Preconditions.checkState(freqTable  ==  null);  [CE]  <identifier>  expected  [FE]            ClassCastException    [CONTEXT]      [BUGGY]  Preconditions.checkState(freqTable  ==  null);  [BUGGY]    public  Frequency()  {  freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	Preconditions.checkState(freqTable  ==  null);	      Preconditions.checkNotNull(freqTable);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
20	[BUG]  [BUGGY]  Preconditions.checkNotNull(freqTable,  true);  [CE]  <identifier>  expected  [FE]              ClassCastException    [CONTEXT]      [BUGGY]  Preconditions.checkNotNull(freqTable,  true);  [BUGGY]    public  Frequency()  {  freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	Preconditions.checkNotNull(freqTable,  true);	      Preconditions.checkNotNull(freqTable);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
21	[BUG]  [BUGGY]  this.freqTable  =  new  Class  <?>();  [CE]  illegal  start  of  type  [FE]          ClassCastException    [CONTEXT]      [BUGGY]  this.freqTable  =  new  Class  <?>();  [BUGGY]    freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	this.freqTable  =  new  Class  <?>();	  public    Frequency(String[]    freqTable,    Class    <?>    class)    {    this.freqTable    =    new    Class    <?>();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
22	[BUG]  [BUGGY]  this.freqTable  =  new  Class  <  Object>();  [CE]  illegal  start  of  type  [FE]            ClassCastException    [CONTEXT]      [BUGGY]  this.freqTable  =  new  Class  <  Object>();  [BUGGY]    freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	this.freqTable  =  new  Class  <  Object>();	  public    Frequency(String[]    freqTable,    Class    <?>    class)    {    this.freqTable    =    new    Class    <?>();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
23	[BUG]  [BUGGY]  Preconditions.checkState(freqTable.size()!=  0);  [CE]  <identifier>  expected  [FE]              ClassCastException    [CONTEXT]      [BUGGY]  Preconditions.checkState(freqTable.size()!=  0);  [BUGGY]    public  Frequency()  {  freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	Preconditions.checkState(freqTable.size()!=  0);	      Preconditions.checkState(freqTable.size()    >    0);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
24	[BUG]  [BUGGY]  Preconditions.checkState(freqTable.size()  >=  0);  [CE]  <identifier>  expected  [FE]                ClassCastException    [CONTEXT]      [BUGGY]  Preconditions.checkState(freqTable.size()  >=  0);  [BUGGY]    public  Frequency()  {  freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	Preconditions.checkState(freqTable.size()  >=  0);	      Preconditions.checkState(freqTable.size()    >    0);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
25	[BUG]  [BUGGY]  this.freqTable  =  new  HashMap(System.identityHashCode(this));  [CE]  illegal  start  of  type  [FE]              ClassCastException    [CONTEXT]      [BUGGY]  this.freqTable  =  new  HashMap(System.identityHashCode(this));  [BUGGY]    public  Frequency()  {  freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	this.freqTable  =  new  HashMap(System.identityHashCode(this));	      this.freqTable    =    new    HashMap();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
26	[BUG]  [BUGGY]  this.freqTable  =  new  TreeMap(FieldUtils.safeMultiply(getValue()));  [CE]  illegal  start  of  type  [FE]              ClassCastException    [CONTEXT]      [BUGGY]  this.freqTable  =  new  TreeMap(FieldUtils.safeMultiply(getValue()));  [BUGGY]    freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	this.freqTable  =  new  TreeMap(FieldUtils.safeMultiply(getValue()));	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
27	[BUG]  [BUGGY]  this.freqTable  =  new  TreeMap(FieldUtils.safeMultiply(this.freqTable));  [CE]  illegal  start  of  type  [FE]                ClassCastException    [CONTEXT]      [BUGGY]  this.freqTable  =  new  TreeMap(FieldUtils.safeMultiply(this.freqTable));  [BUGGY]    freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	this.freqTable  =  new  TreeMap(FieldUtils.safeMultiply(this.freqTable));	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
28	[BUG]  [BUGGY]  this(freqTable,  null,  false);  [CE]  illegal  start  of  type  [FE]        ClassCastException    [CONTEXT]      [BUGGY]  this(freqTable,  null,  false);  [BUGGY]    public  Frequency()  {  freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	this(freqTable,  null,  false);	      this(freqTable,    null);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
29	[BUG]  [BUGGY]  this(freqTable,  null,  null);  [CE]  illegal  start  of  type  [FE]          ClassCastException    [CONTEXT]      [BUGGY]  this(freqTable,  null,  null);  [BUGGY]    public  Frequency()  {  freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	this(freqTable,  null,  null);	      this(freqTable,    null);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
30	[BUG]  [BUGGY]  this(freqTable,  new  TreeMap());  [CE]  illegal  start  of  type  [FE]            ClassCastException    [CONTEXT]      [BUGGY]  this(freqTable,  new  TreeMap());  [BUGGY]    public  Frequency()  {  freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	this(freqTable,  new  TreeMap());	      this(freqTable,    null);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
31	[BUG]  [BUGGY]  this(freqTable,  null,  true);  [CE]  illegal  start  of  type  [FE]              ClassCastException    [CONTEXT]      [BUGGY]  this(freqTable,  null,  true);  [BUGGY]    public  Frequency()  {  freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	this(freqTable,  null,  true);	      this(freqTable,    null);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
32	[BUG]  [BUGGY]  Preconditions.checkState(freqTable.isEmpty()  ||  freqTable.isEmpty());  [CE]  <identifier>  expected  [FE]        ClassCastException    [CONTEXT]      [BUGGY]  Preconditions.checkState(freqTable.isEmpty()  ||  freqTable.isEmpty());  [BUGGY]    public  Frequency()  {  freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	Preconditions.checkState(freqTable.isEmpty()  ||  freqTable.isEmpty());	      Preconditions.checkState(freqTable.isEmpty());    	non-compiled	[CE]  <identifier>  expected	19	None	replace
33	[BUG]  [BUGGY]  Preconditions.checkNotNull(freqTable.isEmpty());  [CE]  <identifier>  expected  [FE]          ClassCastException    [CONTEXT]      [BUGGY]  Preconditions.checkNotNull(freqTable.isEmpty());  [BUGGY]    public  Frequency()  {  freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	Preconditions.checkNotNull(freqTable.isEmpty());	      Preconditions.checkState(freqTable.isEmpty());    	non-compiled	[CE]  <identifier>  expected	19	None	replace
34	[BUG]  [BUGGY]  Preconditions.checkState(!freqTable.isEmpty());  [CE]  <identifier>  expected  [FE]            ClassCastException    [CONTEXT]      [BUGGY]  Preconditions.checkState(!freqTable.isEmpty());  [BUGGY]    public  Frequency()  {  freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	Preconditions.checkState(!freqTable.isEmpty());	      Preconditions.checkState(freqTable.isEmpty());    	non-compiled	[CE]  <identifier>  expected	19	None	replace
35	[BUG]  [BUGGY]  this.freqTable  =  new  TreeMap(System.identityHashCode(this));  [CE]  illegal  start  of  type  [FE]        ClassCastException    [CONTEXT]      [BUGGY]  this.freqTable  =  new  TreeMap(System.identityHashCode(this));  [BUGGY]    public  Frequency()  {  freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	this.freqTable  =  new  TreeMap(System.identityHashCode(this));	      this.freqTable    =    new    TreeMap();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
36	[BUG]  [BUGGY]  this.freqTable  =  new  TreeMap  <  String,Object>();  [CE]  illegal  start  of  type  [FE]          ClassCastException    [CONTEXT]      [BUGGY]  this.freqTable  =  new  TreeMap  <  String,Object>();  [BUGGY]    public  Frequency()  {  freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	this.freqTable  =  new  TreeMap  <  String,Object>();	      this.freqTable    =    new    TreeMap();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
37	[BUG]  [BUGGY]  this(String.valueOf(id),  Class  <?>  class));  [CE]  illegal  start  of  type  [FE]            ClassCastException    [CONTEXT]      [BUGGY]  this(String.valueOf(id),  Class  <?>  class));  [BUGGY]    freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	this(String.valueOf(id),  Class  <?>  class));	  public    Frequency(String    id,    Class    <?>    class)    {    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
38	[BUG]  [BUGGY]  this(String.valueOf(id),  Class  <?>  class);  [CE]  illegal  start  of  type  [FE]              ClassCastException    [CONTEXT]      [BUGGY]  this(String.valueOf(id),  Class  <?>  class);  [BUGGY]    freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	this(String.valueOf(id),  Class  <?>  class);	  public    Frequency(String    id,    Class    <?>    class)    {    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
39	[BUG]  [BUGGY]  this(id,  ClassUtils.safeMultiply(class));  [CE]  illegal  start  of  type  [FE]                ClassCastException    [CONTEXT]      [BUGGY]  this(id,  ClassUtils.safeMultiply(class));  [BUGGY]    freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	this(id,  ClassUtils.safeMultiply(class));	  public    Frequency(String    id,    Class    <?>    class)    {    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
40	[BUG]  [BUGGY]  super(id,  Class  <?>  class);  [CE]  illegal  start  of  type  [FE]                  ClassCastException    [CONTEXT]      [BUGGY]  super(id,  Class  <?>  class);  [BUGGY]    freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	super(id,  Class  <?>  class);	  public    Frequency(String    id,    Class    <?>    class)    {    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
41	[BUG]  [BUGGY]  this.freqTable  =  new  LinkedList();  [CE]  illegal  start  of  type  [FE]            ClassCastException    [CONTEXT]      [BUGGY]  this.freqTable  =  new  LinkedList();  [BUGGY]    public  Frequency()  {  freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	this.freqTable  =  new  LinkedList();	      this.freqTable    =    new    LinkedHashMap();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
42	[BUG]  [BUGGY]  this.freqTable  =  new  ArrayList();  [CE]  illegal  start  of  type  [FE]              ClassCastException    [CONTEXT]      [BUGGY]  this.freqTable  =  new  ArrayList();  [BUGGY]    public  Frequency()  {  freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	this.freqTable  =  new  ArrayList();	      this.freqTable    =    new    LinkedHashMap();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
43	[BUG]  [BUGGY]  freqTable  =  new  LinkedHashMap();  [CE]  <identifier>  expected  [FE]          ClassCastException    [CONTEXT]      [BUGGY]  freqTable  =  new  LinkedHashMap();  [BUGGY]    public  Frequency()  {  freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	freqTable  =  new  LinkedHashMap();	      freqTable    =    new    TreeMap();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
44	[BUG]  [BUGGY]  freqTable  =  new  TreeMap  <  String,Object>();  [CE]  <identifier>  expected  [FE]            ClassCastException    [CONTEXT]      [BUGGY]  freqTable  =  new  TreeMap  <  String,Object>();  [BUGGY]    public  Frequency()  {  freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	freqTable  =  new  TreeMap  <  String,Object>();	      freqTable    =    new    TreeMap();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
45	[BUG]  [BUGGY]  Preconditions.checkState(freqTable.size()  ==  1);  [CE]  <identifier>  expected  [FE]            ClassCastException    [CONTEXT]      [BUGGY]  Preconditions.checkState(freqTable.size()  ==  1);  [BUGGY]    public  Frequency()  {  freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	Preconditions.checkState(freqTable.size()  ==  1);	      Preconditions.checkState(freqTable.size()    ==    0);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
46	[BUG]  [BUGGY]  Preconditions.checkState(freqTable.size()  ==  2);  [CE]  <identifier>  expected  [FE]              ClassCastException    [CONTEXT]      [BUGGY]  Preconditions.checkState(freqTable.size()  ==  2);  [BUGGY]    public  Frequency()  {  freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	Preconditions.checkState(freqTable.size()  ==  2);	      Preconditions.checkState(freqTable.size()    ==    0);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
47	[BUG]  [BUGGY]  public  Frequency(String  freqTable)  {  this.freqTable  =  new  TreeMap();  }  [CE]  <identifier>  expected  [FE]        ClassCastException    [CONTEXT]      [BUGGY]  public  Frequency(String  freqTable)  {  this.freqTable  =  new  TreeMap();  }  [BUGGY]    freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	public  Frequency(String  freqTable)  {  this.freqTable  =  new  TreeMap();  }	  public    Frequency(String[]    freqTable)    {    this.freqTable    =    new    TreeMap();    	non-compiled	[CE]  <identifier>  expected	17	None	replace
48	[BUG]  [BUGGY]  freqTable.put( "identifier ",  new  ClassCastException( " "));  [CE]  <identifier>  expected  [FE]              ClassCastException    [CONTEXT]      [BUGGY]  freqTable.put( "identifier ",  new  ClassCastException( " "));  [BUGGY]    freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	freqTable.put( "identifier ",  new  ClassCastException( " "));	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
49	[BUG]  [BUGGY]  freqTable.put( "identifier ",  new  ClassCastException());  [CE]  <identifier>  expected  [FE]                ClassCastException    [CONTEXT]      [BUGGY]  freqTable.put( "identifier ",  new  ClassCastException());  [BUGGY]    freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	freqTable.put( "identifier ",  new  ClassCastException());	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
50	[BUG]  [BUGGY]  Preconditions.checkState(freqTable.isEmpty()  ||!freqTable.isEmpty());  [CE]  <identifier>  expected  [FE]        ClassCastException    [CONTEXT]      [BUGGY]  Preconditions.checkState(freqTable.isEmpty()  ||!freqTable.isEmpty());  [BUGGY]    public  Frequency()  {  freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	Preconditions.checkState(freqTable.isEmpty()  ||!freqTable.isEmpty());	      Preconditions.checkState(freqTable.isEmpty());    	non-compiled	[CE]  <identifier>  expected	19	None	replace
51	[BUG]  [BUGGY]  if(freqTable!=  null)  {  super();  }  else  {  freqTable  =  new  TreeMap();  }  [CE]  illegal  start  of  type  [FE]          ClassCastException    [CONTEXT]      [BUGGY]  if(freqTable!=  null)  {  super();  }  else  {  freqTable  =  new  TreeMap();  }  [BUGGY]    public  Frequency()  {  freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	if(freqTable!=  null)  {  super();  }  else  {  freqTable  =  new  TreeMap();  }	      super();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
52	[BUG]  [BUGGY]  if(freqTable  ==  null)  {  super();  }  else  {  freqTable  =  new  TreeMap();  }  [CE]  illegal  start  of  type  [FE]            ClassCastException    [CONTEXT]      [BUGGY]  if(freqTable  ==  null)  {  super();  }  else  {  freqTable  =  new  TreeMap();  }  [BUGGY]    public  Frequency()  {  freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	if(freqTable  ==  null)  {  super();  }  else  {  freqTable  =  new  TreeMap();  }	      super();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
53	[BUG]  [BUGGY]  super(freqTable,  ClassUtil.safeMultiply(class));  [CE]  illegal  start  of  type  [FE]        ClassCastException    [CONTEXT]      [BUGGY]  super(freqTable,  ClassUtil.safeMultiply(class));  [BUGGY]    freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	super(freqTable,  ClassUtil.safeMultiply(class));	  public    Frequency(String[]    freqTable,    Class    <?>    class)    {    this.freqTable    =    new    TreeMap();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
54	[BUG]  [BUGGY]  Preconditions.checkNotNull(freqTable,  freqTable);  [CE]  <identifier>  expected  [FE]          ClassCastException    [CONTEXT]      [BUGGY]  Preconditions.checkNotNull(freqTable,  freqTable);  [BUGGY]    public  Frequency()  {  freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	Preconditions.checkNotNull(freqTable,  freqTable);	      Preconditions.checkNotNull(freqTable);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
55	[BUG]  [BUGGY]  this.freqTable  =  new  LinkedHashMap  <  String,Object>();  [CE]  illegal  start  of  type  [FE]                ClassCastException    [CONTEXT]      [BUGGY]  this.freqTable  =  new  LinkedHashMap  <  String,Object>();  [BUGGY]    public  Frequency()  {  freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	this.freqTable  =  new  LinkedHashMap  <  String,Object>();	      this.freqTable    =    null;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
56	[BUG]  [BUGGY]  public  Frequency(String  id,  Class  <?>  freqTable)  {  [CE]  illegal  start  of  expression  [FE]            ClassCastException    [CONTEXT]      [BUGGY]  public  Frequency(String  id,  Class  <?>  freqTable)  {  [BUGGY]    freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	public  Frequency(String  id,  Class  <?>  freqTable)  {	  public    Frequency(String    id,    Class    <?>    class)    {    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
57	[BUG]  [BUGGY]  public  Frequency(String  id,  Class  <?>  freqTable,  Class  <?>  class)  {  [CE]  <identifier>  expected  [FE]              ClassCastException    [CONTEXT]      [BUGGY]  public  Frequency(String  id,  Class  <?>  freqTable,  Class  <?>  class)  {  [BUGGY]    freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	public  Frequency(String  id,  Class  <?>  freqTable,  Class  <?>  class)  {	  public    Frequency(String    id,    Class    <?>    class)    {    	non-compiled	[CE]  <identifier>  expected	16	None	replace
58	[BUG]  [BUGGY]  super(id,  ClassUtil.safeMultiply(class));  [CE]  illegal  start  of  type  [FE]                ClassCastException    [CONTEXT]      [BUGGY]  super(id,  ClassUtil.safeMultiply(class));  [BUGGY]    freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	super(id,  ClassUtil.safeMultiply(class));	  public    Frequency(String    id,    Class    <?>    class)    {    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
59	[BUG]  [BUGGY]  public  Frequency(String[]  freqTable,  Class  <?>  class)  {  super();  }  [CE]  <identifier>  expected  [FE]          ClassCastException    [CONTEXT]      [BUGGY]  public  Frequency(String[]  freqTable,  Class  <?>  class)  {  super();  }  [BUGGY]    freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	public  Frequency(String[]  freqTable,  Class  <?>  class)  {  super();  }	  public    Frequency(String[]    freqTable,    Class    <?>    class)    {    super();    	non-compiled	[CE]  <identifier>  expected	18	None	replace
60	[BUG]  [BUGGY]  public  Frequency(String[]  freqTable,  Class  <?>  type)  {  super();  }  [CE]  <identifier>  expected  [FE]            ClassCastException    [CONTEXT]      [BUGGY]  public  Frequency(String[]  freqTable,  Class  <?>  type)  {  super();  }  [BUGGY]    freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	public  Frequency(String[]  freqTable,  Class  <?>  type)  {  super();  }	  public    Frequency(String[]    freqTable,    Class    <?>    class)    {    super();    	non-compiled	[CE]  <identifier>  expected	18	None	replace
61	[BUG]  [BUGGY]  this(freqTable,  ClassUtil.safeMultiply(class));  [CE]  illegal  start  of  type  [FE]              ClassCastException    [CONTEXT]      [BUGGY]  this(freqTable,  ClassUtil.safeMultiply(class));  [BUGGY]    freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	this(freqTable,  ClassUtil.safeMultiply(class));	  public    Frequency(String[]    freqTable,    Class    <?>    class)    {    super();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
62	[BUG]  [BUGGY]  this(freqTable,  null,  0);  [CE]  illegal  start  of  type  [FE]        ClassCastException    [CONTEXT]      [BUGGY]  this(freqTable,  null,  0);  [BUGGY]    public  Frequency()  {  freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	this(freqTable,  null,  0);	      this(freqTable,    null);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
63	[BUG]  [BUGGY]  super(freqTable,  Class.class);  [CE]  illegal  start  of  type  [FE]            ClassCastException    [CONTEXT]      [BUGGY]  super(freqTable,  Class.class);  [BUGGY]    freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	super(freqTable,  Class.class);	  public    Frequency(String[]    freqTable,    Class    <?>.class)    {    this.freqTable    =    new    TreeMap();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
64	[BUG]  [BUGGY]  super(freqTable,  Class  <?>.class));  [CE]  illegal  start  of  type  [FE]              ClassCastException    [CONTEXT]      [BUGGY]  super(freqTable,  Class  <?>.class));  [BUGGY]    freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	super(freqTable,  Class  <?>.class));	  public    Frequency(String[]    freqTable,    Class    <?>.class)    {    this.freqTable    =    new    TreeMap();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
65	[BUG]  [BUGGY]  public  Frequency(Class  <?>  freqTable,  DateTimeConstants.DEFAULT_TIME_ZONE)  {  [CE]  <identifier>  expected  [FE]          ClassCastException    [CONTEXT]      [BUGGY]  public  Frequency(Class  <?>  freqTable,  DateTimeConstants.DEFAULT_TIME_ZONE)  {  [BUGGY]    freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	public  Frequency(Class  <?>  freqTable,  DateTimeConstants.DEFAULT_TIME_ZONE)  {	  public    Frequency(Class    <?>    freqTable)    {    	non-compiled	[CE]  <identifier>  expected	15	None	replace
66	[BUG]  [BUGGY]  public  Frequency(Class  <?>  freqTable,  DateTimeConstants.DEFAULT_TIME_PARAM)  {  [CE]  <identifier>  expected  [FE]            ClassCastException    [CONTEXT]      [BUGGY]  public  Frequency(Class  <?>  freqTable,  DateTimeConstants.DEFAULT_TIME_PARAM)  {  [BUGGY]    freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	public  Frequency(Class  <?>  freqTable,  DateTimeConstants.DEFAULT_TIME_PARAM)  {	  public    Frequency(Class    <?>    freqTable)    {    	non-compiled	[CE]  <identifier>  expected	15	None	replace
67	[BUG]  [BUGGY]  public  Frequency(Class  <?>  freqTable,  String  name)  {  [CE]  illegal  start  of  expression  [FE]              ClassCastException    [CONTEXT]      [BUGGY]  public  Frequency(Class  <?>  freqTable,  String  name)  {  [BUGGY]    freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	public  Frequency(Class  <?>  freqTable,  String  name)  {	  public    Frequency(Class    <?>    freqTable)    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
68	[BUG]  [BUGGY]  public  Frequency(String  freqTable)  {  [CE]  illegal  start  of  expression  [FE]        ClassCastException    [CONTEXT]      [BUGGY]  public  Frequency(String  freqTable)  {  [BUGGY]    freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	public  Frequency(String  freqTable)  {	  public    Frequency(String[]    freqTable)    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
69	[BUG]  [BUGGY]  public  Frequency(TreeMap  freqTable)  {  [CE]  illegal  start  of  expression  [FE]          ClassCastException    [CONTEXT]      [BUGGY]  public  Frequency(TreeMap  freqTable)  {  [BUGGY]    freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	public  Frequency(TreeMap  freqTable)  {	  public    Frequency(String[]    freqTable)    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
70	[BUG]  [BUGGY]  super(id,  ClassUtils.safeMultiply(class));  [CE]  illegal  start  of  type  [FE]            ClassCastException    [CONTEXT]      [BUGGY]  super(id,  ClassUtils.safeMultiply(class));  [BUGGY]    freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	super(id,  ClassUtils.safeMultiply(class));	  public    Frequency(String    id,    Class    <?>    class)    {    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
71	[BUG]  [BUGGY]  super(freqTable,  ClassUtils.class);  [CE]  illegal  start  of  type  [FE]            ClassCastException    [CONTEXT]      [BUGGY]  super(freqTable,  ClassUtils.class);  [BUGGY]    freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	super(freqTable,  ClassUtils.class);	  public    Frequency(String[]    freqTable,    Class    <?>.class)    {    this.freqTable    =    new    TreeMap();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
72	[BUG]  [BUGGY]  Preconditions.checkArgument(freqTable.isEmpty());  [CE]  <identifier>  expected  [FE]        ClassCastException    [CONTEXT]      [BUGGY]  Preconditions.checkArgument(freqTable.isEmpty());  [BUGGY]    public  Frequency()  {  freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	Preconditions.checkArgument(freqTable.isEmpty());	      Preconditions.checkState(freqTable.isEmpty());    	non-compiled	[CE]  <identifier>  expected	19	None	replace
73	[BUG]  [BUGGY]  public  Frequency(Class  <?>  freqTable,  Class  <?>  freqTable)  {  [CE]  illegal  start  of  expression  [FE]          ClassCastException    [CONTEXT]      [BUGGY]  public  Frequency(Class  <?>  freqTable,  Class  <?>  freqTable)  {  [BUGGY]    freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	public  Frequency(Class  <?>  freqTable,  Class  <?>  freqTable)  {	  public    Frequency(Class    <?>    freqTable)    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
74	[BUG]  [BUGGY]  this(freqTable,  true,  null);  [CE]  illegal  start  of  type  [FE]            ClassCastException    [CONTEXT]      [BUGGY]  this(freqTable,  true,  null);  [BUGGY]    public  Frequency()  {  freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	this(freqTable,  true,  null);	      this(freqTable,    true);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
75	[BUG]  [BUGGY]  super(FreqTable.class);  [CE]  illegal  start  of  type  [FE]        ClassCastException    [CONTEXT]      [BUGGY]  super(FreqTable.class);  [BUGGY]    freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	super(FreqTable.class);	  public    Frequency(String[]    freqTable)    {    this.freqTable    =    new    TreeMap();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
76	[BUG]  [BUGGY]  super(freqTable,  ClassUtils.safeMultiply(class));  [CE]  illegal  start  of  type  [FE]        ClassCastException    [CONTEXT]      [BUGGY]  super(freqTable,  ClassUtils.safeMultiply(class));  [BUGGY]    freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	super(freqTable,  ClassUtils.safeMultiply(class));	  public    Frequency(String[]    freqTable,    Class    <?>    class)    {    this.freqTable    =    new    TreeMap();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
77	[BUG]  [BUGGY]  this(freqTable,  freqTable,  null);  [CE]  illegal  start  of  type  [FE]        ClassCastException    [CONTEXT]      [BUGGY]  this(freqTable,  freqTable,  null);  [BUGGY]    public  Frequency()  {  freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	this(freqTable,  freqTable,  null);	      this(freqTable,    null);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
78	[BUG]  [BUGGY]  freqTable  =  new  TreeMap(System.identityHashCode(this));  [CE]  <identifier>  expected  [FE]          ClassCastException    [CONTEXT]      [BUGGY]  freqTable  =  new  TreeMap(System.identityHashCode(this));  [BUGGY]    public  Frequency()  {  freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	freqTable  =  new  TreeMap(System.identityHashCode(this));	      freqTable    =    new    TreeMap();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
79	[BUG]  [BUGGY]  this.freqTable  =  new  TreeMap(FieldUtils.safeAdd(getValue(),  DateTimeConstants.DEFAULT_TIME_ZONE));  [CE]  illegal  start  of  type  [FE]              ClassCastException    [CONTEXT]      [BUGGY]  this.freqTable  =  new  TreeMap(FieldUtils.safeAdd(getValue(),  DateTimeConstants.DEFAULT_TIME_ZONE));  [BUGGY]    freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	this.freqTable  =  new  TreeMap(FieldUtils.safeAdd(getValue(),  DateTimeConstants.DEFAULT_TIME_ZONE));	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
80	[BUG]  [BUGGY]  this.freqTable  =  new  TreeMap(FieldUtils.safeAdd(getValue(),  DateTimeConstants.SECONDS_PER_MINUTE));  [CE]  illegal  start  of  type  [FE]                ClassCastException    [CONTEXT]      [BUGGY]  this.freqTable  =  new  TreeMap(FieldUtils.safeAdd(getValue(),  DateTimeConstants.SECONDS_PER_MINUTE));  [BUGGY]    freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	this.freqTable  =  new  TreeMap(FieldUtils.safeAdd(getValue(),  DateTimeConstants.SECONDS_PER_MINUTE));	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
81	[BUG]  [BUGGY]  this.freqTable  =  new  TreeMap(FieldUtils.safeAdd(getValue(),  DateTimeConstants.MILLIS_PER_SECOND));  [CE]  illegal  start  of  type  [FE]                  ClassCastException    [CONTEXT]      [BUGGY]  this.freqTable  =  new  TreeMap(FieldUtils.safeAdd(getValue(),  DateTimeConstants.MILLIS_PER_SECOND));  [BUGGY]    freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	this.freqTable  =  new  TreeMap(FieldUtils.safeAdd(getValue(),  DateTimeConstants.MILLIS_PER_SECOND));	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
82	[BUG]  [BUGGY]  Preconditions.checkArgument(freqTable.size()  >  0);  [CE]  <identifier>  expected  [FE]          ClassCastException    [CONTEXT]      [BUGGY]  Preconditions.checkArgument(freqTable.size()  >  0);  [BUGGY]    public  Frequency()  {  freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	Preconditions.checkArgument(freqTable.size()  >  0);	      Preconditions.checkNotNull(freqTable);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
83	[BUG]  [BUGGY]  this.freqTable  =  new  TreeMap(TreeMap.class);  [CE]  illegal  start  of  type  [FE]        ClassCastException    [CONTEXT]      [BUGGY]  this.freqTable  =  new  TreeMap(TreeMap.class);  [BUGGY]    public  Frequency()  {  freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	this.freqTable  =  new  TreeMap(TreeMap.class);	      this.freqTable    =    new    TreeMap();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
