bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  public  Frequency(String[]  freqTable,  Class  <?>  class)  {  this.freqTable  =  new  TreeMap();  [CE]  <identifier>  expected  [FE]    ClassCastException  [CONTEXT]    [BUGGY]  public  Frequency(String[]  freqTable,  Class  <?>  class)  {  this.freqTable  =  new  TreeMap();  [BUGGY]  freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	public  Frequency(String[]  freqTable,  Class  <?>  class)  {  this.freqTable  =  new  TreeMap();	public  Frequency()  {  	non-compiled	[CE]  <identifier>  expected	3	None	replace
2	[BUG]  [BUGGY]  public  Frequency(String[]  freqTable,  Class  <?>  class)  {  this.freqTable  =  new  Class  <?>();  [CE]  <identifier>  expected  [FE]      ClassCastException  [CONTEXT]    [BUGGY]  public  Frequency(String[]  freqTable,  Class  <?>  class)  {  this.freqTable  =  new  Class  <?>();  [BUGGY]  freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	public  Frequency(String[]  freqTable,  Class  <?>  class)  {  this.freqTable  =  new  Class  <?>();	public  Frequency()  {  	non-compiled	[CE]  <identifier>  expected	3	None	replace
3	[BUG]  [BUGGY]  public  Frequency(String[]  freqTable,  Class  <?>.class)  {  this.freqTable  =  new  TreeMap();  [CE]  <identifier>  expected  [FE]        ClassCastException  [CONTEXT]    [BUGGY]  public  Frequency(String[]  freqTable,  Class  <?>.class)  {  this.freqTable  =  new  TreeMap();  [BUGGY]  freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	public  Frequency(String[]  freqTable,  Class  <?>.class)  {  this.freqTable  =  new  TreeMap();	public  Frequency()  {  	non-compiled	[CE]  <identifier>  expected	3	None	replace
4	[BUG]  [BUGGY]    [CE]  <identifier>  expected  [FE]          ClassCastException  [CONTEXT]    [BUGGY]    [BUGGY]  freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	  	public  Frequency()  {  	non-compiled	[CE]  <identifier>  expected	3	None	replace
5	[BUG]  [BUGGY]    this.freqTable  =  new  TreeMap();  [CE]  illegal  start  of  type  [FE]    ClassCastException  [CONTEXT]    [BUGGY]    this.freqTable  =  new  TreeMap();  [BUGGY]  public  Frequency()  {  freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	    this.freqTable  =  new  TreeMap();		non-compiled	[CE]  illegal  start  of  type	4	None	add
6	[BUG]  [BUGGY]    freqTable  =  new  TreeMap();  [CE]  <identifier>  expected  [FE]      ClassCastException  [CONTEXT]    [BUGGY]    freqTable  =  new  TreeMap();  [BUGGY]  public  Frequency()  {  freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	    freqTable  =  new  TreeMap();		non-compiled	[CE]  <identifier>  expected	4	None	add
7	[BUG]  [BUGGY]    this.freqTable  =  new  LinkedHashMap();  [CE]  illegal  start  of  type  [FE]        ClassCastException  [CONTEXT]    [BUGGY]    this.freqTable  =  new  LinkedHashMap();  [BUGGY]  public  Frequency()  {  freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	    this.freqTable  =  new  LinkedHashMap();		non-compiled	[CE]  illegal  start  of  type	4	None	add
8	[BUG]  [BUGGY]    this.freqTable  =  new  HashMap();  [CE]  illegal  start  of  type  [FE]          ClassCastException  [CONTEXT]    [BUGGY]    this.freqTable  =  new  HashMap();  [BUGGY]  public  Frequency()  {  freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	    this.freqTable  =  new  HashMap();		non-compiled	[CE]  illegal  start  of  type	4	None	add
9	[BUG]  [BUGGY]    this.freqTable  =  null;  [CE]  illegal  start  of  type  [FE]            ClassCastException  [CONTEXT]    [BUGGY]    this.freqTable  =  null;  [BUGGY]  public  Frequency()  {  freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	    this.freqTable  =  null;		non-compiled	[CE]  illegal  start  of  type	4	None	add
10	[BUG]  [BUGGY]    this(freqTable,  null);  [CE]  illegal  start  of  type  [FE]    ClassCastException  [CONTEXT]    [BUGGY]    this(freqTable,  null);  [BUGGY]  public  Frequency()  {  freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	    this(freqTable,  null);		non-compiled	[CE]  illegal  start  of  type	4	None	add
11	[BUG]  [BUGGY]    super();  [CE]  illegal  start  of  type  [FE]      ClassCastException  [CONTEXT]    [BUGGY]    super();  [BUGGY]  public  Frequency()  {  freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	    super();		non-compiled	[CE]  illegal  start  of  type	4	None	add
12	[BUG]  [BUGGY]    this(freqTable,  true);  [CE]  illegal  start  of  type  [FE]        ClassCastException  [CONTEXT]    [BUGGY]    this(freqTable,  true);  [BUGGY]  public  Frequency()  {  freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	    this(freqTable,  true);		non-compiled	[CE]  illegal  start  of  type	4	None	add
13	[BUG]  [BUGGY]    this(freqTable,  false);  [CE]  illegal  start  of  type  [FE]          ClassCastException  [CONTEXT]    [BUGGY]    this(freqTable,  false);  [BUGGY]  public  Frequency()  {  freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	    this(freqTable,  false);		non-compiled	[CE]  illegal  start  of  type	4	None	add
14	[BUG]  [BUGGY]  public  Frequency(String[]  freqTable)  {  [CE]  illegal  start  of  expression  [FE]    ClassCastException  [CONTEXT]    [BUGGY]  public  Frequency(String[]  freqTable)  {  [BUGGY]  freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	public  Frequency(String[]  freqTable)  {	public  Frequency()  {  	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
15	[BUG]  [BUGGY]  public  Frequency(Class  <?>  freqTable)  {  [CE]  illegal  start  of  expression  [FE]      ClassCastException  [CONTEXT]    [BUGGY]  public  Frequency(Class  <?>  freqTable)  {  [BUGGY]  freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	public  Frequency(Class  <?>  freqTable)  {	public  Frequency()  {  	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
16	[BUG]  [BUGGY]  public  Frequency(String  id,  Class  <?>  class)  {  [CE]  <identifier>  expected  [FE]        ClassCastException  [CONTEXT]    [BUGGY]  public  Frequency(String  id,  Class  <?>  class)  {  [BUGGY]  freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	public  Frequency(String  id,  Class  <?>  class)  {	public  Frequency()  {  	non-compiled	[CE]  <identifier>  expected	3	None	replace
17	[BUG]  [BUGGY]  public  Frequency(String[]  freqTable)  {  this.freqTable  =  new  TreeMap();  [CE]  illegal  start  of  expression  [FE]    ClassCastException  [CONTEXT]    [BUGGY]  public  Frequency(String[]  freqTable)  {  this.freqTable  =  new  TreeMap();  [BUGGY]  freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	public  Frequency(String[]  freqTable)  {  this.freqTable  =  new  TreeMap();	public  Frequency()  {  	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
18	[BUG]  [BUGGY]  public  Frequency(String[]  freqTable,  Class  <?>  class)  {  super();  [CE]  <identifier>  expected  [FE]      ClassCastException  [CONTEXT]    [BUGGY]  public  Frequency(String[]  freqTable,  Class  <?>  class)  {  super();  [BUGGY]  freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	public  Frequency(String[]  freqTable,  Class  <?>  class)  {  super();	public  Frequency()  {  	non-compiled	[CE]  <identifier>  expected	3	None	replace
19	[BUG]  [BUGGY]    Preconditions.checkState(freqTable.isEmpty());  [CE]  <identifier>  expected  [FE]    ClassCastException  [CONTEXT]    [BUGGY]    Preconditions.checkState(freqTable.isEmpty());  [BUGGY]  public  Frequency()  {  freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	    Preconditions.checkState(freqTable.isEmpty());		non-compiled	[CE]  <identifier>  expected	4	None	add
20	[BUG]  [BUGGY]    Preconditions.checkNotNull(freqTable);  [CE]  <identifier>  expected  [FE]      ClassCastException  [CONTEXT]    [BUGGY]    Preconditions.checkNotNull(freqTable);  [BUGGY]  public  Frequency()  {  freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	    Preconditions.checkNotNull(freqTable);		non-compiled	[CE]  <identifier>  expected	4	None	add
21	[BUG]  [BUGGY]    Preconditions.checkState(freqTable.size()  ==  0);  [CE]  <identifier>  expected  [FE]        ClassCastException  [CONTEXT]    [BUGGY]    Preconditions.checkState(freqTable.size()  ==  0);  [BUGGY]  public  Frequency()  {  freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	    Preconditions.checkState(freqTable.size()  ==  0);		non-compiled	[CE]  <identifier>  expected	4	None	add
22	[BUG]  [BUGGY]    Preconditions.checkState(freqTable.size()  >  0);  [CE]  <identifier>  expected  [FE]          ClassCastException  [CONTEXT]    [BUGGY]    Preconditions.checkState(freqTable.size()  >  0);  [BUGGY]  public  Frequency()  {  freqTable  =  new  TreeMap();  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  <init>  [RETURN_TYPE]  Frequency()  [VARIABLES]  TreeMap  freqTable  long  serialVersionUID  boolean  	projects/Math89/src/java/org/apache/commons/math/stat/Frequency.java	0.3779644730092272	57	57	1	replace	    Preconditions.checkState(freqTable.size()  >  0);		non-compiled	[CE]  <identifier>  expected	4	None	add
