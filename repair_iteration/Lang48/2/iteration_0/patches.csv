bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    AssertionFailedError  [CONTEXT]  public  EqualsBuilder  append(Object  lhs,  Object  rhs)  {  if  (isEquals  ==  false)  {  return  this;  }  if  (lhs  ==  rhs)  {  [BUGGY]  return  null;  [BUGGY]  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {  isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.2773500981126146	372	372	1	add	return  null;	return  this;  	compilable	  [FE]  NullPointerException  	3	12	replace
2	[BUG]  [BUGGY]  return  null;  [FE]  NullPointerException  [FE]    AssertionFailedError  [CONTEXT]  public  EqualsBuilder  append(Object  lhs,  Object  rhs)  {  if  (isEquals  ==  false)  {  return  this;  }  if  (lhs  ==  rhs)  {  [BUGGY]  return  null;  [BUGGY]  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {  isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.2773500981126146	372	372	1	replace	return  null;	return  this;  	compilable	  [FE]  NullPointerException  	3	12	replace
3	[BUG]  [BUGGY]  return(lhs  ==  rhs)?  this  :  new  EqualsBuilder(lhs,  rhs);  [CE]  constructor  EqualsBuilder  in  class  EqualsBuilder  cannot  be  applied  to  given  types;  [FE]      AssertionFailedError  [CONTEXT]  public  EqualsBuilder  append(Object  lhs,  Object  rhs)  {  if  (isEquals  ==  false)  {  return  this;  }  if  (lhs  ==  rhs)  {  [BUGGY]  return(lhs  ==  rhs)?  this  :  new  EqualsBuilder(lhs,  rhs);  [BUGGY]  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {  isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.2773500981126146	372	372	1	replace	return(lhs  ==  rhs)?  this  :  new  EqualsBuilder(lhs,  rhs);	return  this;  	non-compiled	[CE]  constructor  EqualsBuilder  in  class  EqualsBuilder  cannot  be  applied  to  given  types;	3	None	replace
4	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError  [CONTEXT]  public  EqualsBuilder  append(Object  lhs,  Object  rhs)  {  if  (isEquals  ==  false)  {  return  this;  }  if  (lhs  ==  rhs)  {  [BUGGY]  return(lhs  ==  rhs)?  this  :  null;  [BUGGY]  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {  isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.2773500981126146	372	372	1	add	return(lhs  ==  rhs)?  this  :  null;	return  this;  	compilable	  [FE]  AssertionFailedError  	3	1	replace
5	[BUG]  [BUGGY]  return(lhs  ==  rhs)?  this  :  null;  [FE]  AssertionFailedError  [FE]        AssertionFailedError  [CONTEXT]  public  EqualsBuilder  append(Object  lhs,  Object  rhs)  {  if  (isEquals  ==  false)  {  return  this;  }  if  (lhs  ==  rhs)  {  [BUGGY]  return(lhs  ==  rhs)?  this  :  null;  [BUGGY]  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {  isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.2773500981126146	372	372	1	replace	return(lhs  ==  rhs)?  this  :  null;	return  this;  	compilable	  [FE]  AssertionFailedError  	3	1	replace
6	[BUG]  [BUGGY]  return(lhs  ==  rhs)?  this  :  new  EqualsBuilder(lhs.getClass());  [CE]  constructor  EqualsBuilder  in  class  EqualsBuilder  cannot  be  applied  to  given  types;  [FE]          AssertionFailedError  [CONTEXT]  public  EqualsBuilder  append(Object  lhs,  Object  rhs)  {  if  (isEquals  ==  false)  {  return  this;  }  if  (lhs  ==  rhs)  {  [BUGGY]  return(lhs  ==  rhs)?  this  :  new  EqualsBuilder(lhs.getClass());  [BUGGY]  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {  isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.2773500981126146	372	372	1	replace	return(lhs  ==  rhs)?  this  :  new  EqualsBuilder(lhs.getClass());	return  this;  	non-compiled	[CE]  constructor  EqualsBuilder  in  class  EqualsBuilder  cannot  be  applied  to  given  types;	3	None	replace
7	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError  [CONTEXT]  public  EqualsBuilder  append(Object  lhs,  Object  rhs)  {  if  (isEquals  ==  false)  {  return  this;  }  if  (lhs  ==  rhs)  {  [BUGGY]    [BUGGY]  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {  isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.2773500981126146	372	372	1	add	  	return  this;  	compilable	  [FE]  AssertionFailedError  	3	3	replace
8	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [FE]            AssertionFailedError  [CONTEXT]  public  EqualsBuilder  append(Object  lhs,  Object  rhs)  {  if  (isEquals  ==  false)  {  return  this;  }  if  (lhs  ==  rhs)  {  [BUGGY]    [BUGGY]  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {  isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.2773500981126146	372	372	1	replace	  	return  this;  	compilable	  [FE]  AssertionFailedError  	3	3	replace
9	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  public  EqualsBuilder  append(Object  lhs,  Object  rhs)  {  if  (isEquals  ==  false)  {  return  this;  }  if  (lhs  ==  rhs)  {  [BUGGY]    this.setEquals(false);  [BUGGY]  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {  isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.2773500981126146	372	372	1	add	    this.setEquals(false);		compilable	  [FE]  AssertionFailedError  	4	13	add
10	[BUG]  [BUGGY]    this.setEquals(false);  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  public  EqualsBuilder  append(Object  lhs,  Object  rhs)  {  if  (isEquals  ==  false)  {  return  this;  }  if  (lhs  ==  rhs)  {  [BUGGY]    this.setEquals(false);  [BUGGY]  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {  isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.2773500981126146	372	372	1	replace	    this.setEquals(false);		compilable	  [FE]  AssertionFailedError  	4	13	add
11	[BUG]  [BUGGY]    this.setEquals(false);  return  this;  [CE]  unreachable  statement  [FE]      AssertionFailedError  [CONTEXT]  public  EqualsBuilder  append(Object  lhs,  Object  rhs)  {  if  (isEquals  ==  false)  {  return  this;  }  if  (lhs  ==  rhs)  {  [BUGGY]    this.setEquals(false);  return  this;  [BUGGY]  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {  isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.2773500981126146	372	372	1	replace	    this.setEquals(false);  return  this;		non-compiled	[CE]  unreachable  statement	4	None	add
12	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]        AssertionFailedError  [CONTEXT]  public  EqualsBuilder  append(Object  lhs,  Object  rhs)  {  if  (isEquals  ==  false)  {  return  this;  }  if  (lhs  ==  rhs)  {  [BUGGY]    append(lhs,  rhs);  [BUGGY]  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {  isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.2773500981126146	372	372	1	add	    append(lhs,  rhs);		compilable	  [FE]  StackOverflowError  	4	13	add
13	[BUG]  [BUGGY]    append(lhs,  rhs);  [FE]  StackOverflowError  [FE]        AssertionFailedError  [CONTEXT]  public  EqualsBuilder  append(Object  lhs,  Object  rhs)  {  if  (isEquals  ==  false)  {  return  this;  }  if  (lhs  ==  rhs)  {  [BUGGY]    append(lhs,  rhs);  [BUGGY]  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {  isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.2773500981126146	372	372	1	replace	    append(lhs,  rhs);		compilable	  [FE]  StackOverflowError  	4	13	add
14	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError  [CONTEXT]  public  EqualsBuilder  append(Object  lhs,  Object  rhs)  {  if  (isEquals  ==  false)  {  return  this;  }  if  (lhs  ==  rhs)  {  [BUGGY]    this.setEquals(true);  [BUGGY]  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {  isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.2773500981126146	372	372	1	add	    this.setEquals(true);		compilable	  [FE]  AssertionFailedError  	4	1	add
15	[BUG]  [BUGGY]    this.setEquals(true);  [FE]  AssertionFailedError  [FE]          AssertionFailedError  [CONTEXT]  public  EqualsBuilder  append(Object  lhs,  Object  rhs)  {  if  (isEquals  ==  false)  {  return  this;  }  if  (lhs  ==  rhs)  {  [BUGGY]    this.setEquals(true);  [BUGGY]  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {  isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.2773500981126146	372	372	1	replace	    this.setEquals(true);		compilable	  [FE]  AssertionFailedError  	4	1	add
16	[BUG]  [BUGGY]    AppendsBuilder.append(lhs,  rhs);  [CE]  cannot  find  symbol  AppendsBuilder  [FE]    AssertionFailedError  [CONTEXT]  public  EqualsBuilder  append(Object  lhs,  Object  rhs)  {  if  (isEquals  ==  false)  {  return  this;  }  if  (lhs  ==  rhs)  {  [BUGGY]    AppendsBuilder.append(lhs,  rhs);  [BUGGY]  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {  isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.2773500981126146	372	372	1	replace	    AppendsBuilder.append(lhs,  rhs);		non-compiled	[CE]  cannot  find  symbol  AppendsBuilder	4	None	add
17	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  public  EqualsBuilder  append(Object  lhs,  Object  rhs)  {  if  (isEquals  ==  false)  {  return  this;  }  if  (lhs  ==  rhs)  {  [BUGGY]  return(this!=  lhs)?  this  :  null;  [BUGGY]  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {  isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.2773500981126146	372	372	1	add	return(this!=  lhs)?  this  :  null;	return  this;  	compilable	  [FE]  AssertionFailedError  	3	1	replace
18	[BUG]  [BUGGY]  return(this!=  lhs)?  this  :  null;  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  public  EqualsBuilder  append(Object  lhs,  Object  rhs)  {  if  (isEquals  ==  false)  {  return  this;  }  if  (lhs  ==  rhs)  {  [BUGGY]  return(this!=  lhs)?  this  :  null;  [BUGGY]  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {  isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.2773500981126146	372	372	1	replace	return(this!=  lhs)?  this  :  null;	return  this;  	compilable	  [FE]  AssertionFailedError  	3	1	replace
19	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      AssertionFailedError  [CONTEXT]  public  EqualsBuilder  append(Object  lhs,  Object  rhs)  {  if  (isEquals  ==  false)  {  return  this;  }  if  (lhs  ==  rhs)  {  [BUGGY]  return(this  ==  lhs)?  this  :  null;  [BUGGY]  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {  isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.2773500981126146	372	372	1	add	return(this  ==  lhs)?  this  :  null;	return  this;  	compilable	  [FE]  NullPointerException  	3	12	replace
20	[BUG]  [BUGGY]  return(this  ==  lhs)?  this  :  null;  [FE]  NullPointerException  [FE]      AssertionFailedError  [CONTEXT]  public  EqualsBuilder  append(Object  lhs,  Object  rhs)  {  if  (isEquals  ==  false)  {  return  this;  }  if  (lhs  ==  rhs)  {  [BUGGY]  return(this  ==  lhs)?  this  :  null;  [BUGGY]  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {  isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.2773500981126146	372	372	1	replace	return(this  ==  lhs)?  this  :  null;	return  this;  	compilable	  [FE]  NullPointerException  	3	12	replace
21	[BUG]  [BUGGY]  return(lhs  ==  null)?  this  :  new  EqualsBuilder(lhs,  rhs);  [CE]  constructor  EqualsBuilder  in  class  EqualsBuilder  cannot  be  applied  to  given  types;  [FE]    AssertionFailedError  [CONTEXT]  public  EqualsBuilder  append(Object  lhs,  Object  rhs)  {  if  (isEquals  ==  false)  {  return  this;  }  if  (lhs  ==  rhs)  {  [BUGGY]  return(lhs  ==  null)?  this  :  new  EqualsBuilder(lhs,  rhs);  [BUGGY]  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {  isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.2773500981126146	372	372	1	replace	return(lhs  ==  null)?  this  :  new  EqualsBuilder(lhs,  rhs);	return  this;  	non-compiled	[CE]  constructor  EqualsBuilder  in  class  EqualsBuilder  cannot  be  applied  to  given  types;	3	None	replace
