bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    Class  <?>  rhs  =  lhsClass.getRawClass();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]    AssertionFailedError  [CONTEXT]  if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {    [BUGGY]    Class  <?>  rhs  =  lhsClass.getRawClass();  [BUGGY]  isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	    Class  <?>  rhs  =  lhsClass.getRawClass();		non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	2	None	add
2	[BUG]  [BUGGY]    Object  rhs  =  lhsClass.getRawClass();  [CE]  variable  rhs  is  already  defined  in  method  append(Object,Object)  [FE]      AssertionFailedError  [CONTEXT]  if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {    [BUGGY]    Object  rhs  =  lhsClass.getRawClass();  [BUGGY]  isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	    Object  rhs  =  lhsClass.getRawClass();		non-compiled	[CE]  variable  rhs  is  already  defined  in  method  append(Object,Object)	2	None	add
3	[BUG]  [BUGGY]    Class  rhs  =  lhsClass.getRawClass();  [CE]  variable  rhs  is  already  defined  in  method  append(Object,Object)  [FE]        AssertionFailedError  [CONTEXT]  if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {    [BUGGY]    Class  rhs  =  lhsClass.getRawClass();  [BUGGY]  isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	    Class  rhs  =  lhsClass.getRawClass();		non-compiled	[CE]  variable  rhs  is  already  defined  in  method  append(Object,Object)	2	None	add
4	[BUG]  [BUGGY]    Class  rhsClass  =  lhsClass.getRawClass();  [CE]  cannot  find  symbol  [FE]          AssertionFailedError  [CONTEXT]  if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {    [BUGGY]    Class  rhsClass  =  lhsClass.getRawClass();  [BUGGY]  isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	    Class  rhsClass  =  lhsClass.getRawClass();		non-compiled	[CE]  cannot  find  symbol	2	None	add
5	[BUG]  [BUGGY]    Object  rhs  =  lhsClass.getSuperclass();  [CE]  variable  rhs  is  already  defined  in  method  append(Object,Object)  [FE]            AssertionFailedError  [CONTEXT]  if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {    [BUGGY]    Object  rhs  =  lhsClass.getSuperclass();  [BUGGY]  isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	    Object  rhs  =  lhsClass.getSuperclass();		non-compiled	[CE]  variable  rhs  is  already  defined  in  method  append(Object,Object)	2	None	add
6	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {    [BUGGY]  isEquals  =  lhsClass.equals(rhs);  [BUGGY]  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	add	isEquals  =  lhsClass.equals(rhs);	isEquals  =  lhs.equals(rhs);  	compilable	  [FE]  AssertionFailedError  	1	8	replace
7	[BUG]  [BUGGY]  isEquals  =  lhsClass.equals(rhs);  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {    [BUGGY]  isEquals  =  lhsClass.equals(rhs);  [BUGGY]  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals  =  lhsClass.equals(rhs);	isEquals  =  lhs.equals(rhs);  	compilable	  [FE]  AssertionFailedError  	1	8	replace
8	[BUG]  [BUGGY]  isEquals  =  lhs.equals(rhsClass);  [CE]  cannot  find  symbol  rhsClass  [FE]      AssertionFailedError  [CONTEXT]  if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {    [BUGGY]  isEquals  =  lhs.equals(rhsClass);  [BUGGY]  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals  =  lhs.equals(rhsClass);	isEquals  =  lhs.equals(rhs);  	non-compiled	[CE]  cannot  find  symbol  rhsClass	1	None	replace
9	[BUG]  [BUGGY]  isEquals  =  lhs.isEmpty()?  false  :  lhs.equals(rhs);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError  [CONTEXT]  if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {    [BUGGY]  isEquals  =  lhs.isEmpty()?  false  :  lhs.equals(rhs);  [BUGGY]  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals  =  lhs.isEmpty()?  false  :  lhs.equals(rhs);	isEquals  =  lhs.equals(rhs);  	non-compiled	[CE]  cannot  find  symbol	1	None	replace
10	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {    [BUGGY]  isEquals  =  lhs.getClass().equals(rhs);  [BUGGY]  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	add	isEquals  =  lhs.getClass().equals(rhs);	isEquals  =  lhs.equals(rhs);  	compilable	  [FE]  AssertionFailedError  	1	8	replace
11	[BUG]  [BUGGY]  isEquals  =  lhs.getClass().equals(rhs);  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {    [BUGGY]  isEquals  =  lhs.getClass().equals(rhs);  [BUGGY]  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals  =  lhs.getClass().equals(rhs);	isEquals  =  lhs.equals(rhs);  	compilable	  [FE]  AssertionFailedError  	1	8	replace
12	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {    [BUGGY]    Class  rhsClass  =  lhsClass.getClass();  [BUGGY]  isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	add	    Class  rhsClass  =  lhsClass.getClass();		compilable	  [FE]  AssertionFailedError  	2	1	add
13	[BUG]  [BUGGY]    Class  rhsClass  =  lhsClass.getClass();  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {    [BUGGY]    Class  rhsClass  =  lhsClass.getClass();  [BUGGY]  isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	    Class  rhsClass  =  lhsClass.getClass();		compilable	  [FE]  AssertionFailedError  	2	1	add
14	[BUG]  [BUGGY]    Class  lhsClass  =  lhsClass.getClass();  [CE]  variable  lhsClass  is  already  defined  in  method  append(Object,Object)  [FE]      AssertionFailedError  [CONTEXT]  if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {    [BUGGY]    Class  lhsClass  =  lhsClass.getClass();  [BUGGY]  isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	    Class  lhsClass  =  lhsClass.getClass();		non-compiled	[CE]  variable  lhsClass  is  already  defined  in  method  append(Object,Object)	2	None	add
15	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError  [CONTEXT]  if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {    [BUGGY]    lhsClass  =  lhsClass.getSuperclass();  [BUGGY]  isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	add	    lhsClass  =  lhsClass.getSuperclass();		compilable	  [FE]  AssertionFailedError  	2	1	add
16	[BUG]  [BUGGY]    lhsClass  =  lhsClass.getSuperclass();  [FE]  AssertionFailedError  [FE]        AssertionFailedError  [CONTEXT]  if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {    [BUGGY]    lhsClass  =  lhsClass.getSuperclass();  [BUGGY]  isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	    lhsClass  =  lhsClass.getSuperclass();		compilable	  [FE]  AssertionFailedError  	2	1	add
17	[BUG]  [BUGGY]  isEquals  =  lhs.isEquals(rhs);  [CE]  cannot  find  symbol  [FE]    AssertionFailedError  [CONTEXT]  if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {    [BUGGY]  isEquals  =  lhs.isEquals(rhs);  [BUGGY]  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals  =  lhs.isEquals(rhs);	isEquals  =  lhs.equals(rhs);  	non-compiled	[CE]  cannot  find  symbol	1	None	replace
18	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {    [BUGGY]    lhs  =  lhsClass.getSuperclass();  [BUGGY]  isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	add	    lhs  =  lhsClass.getSuperclass();		compilable	  [FE]  AssertionFailedError  	2	8	add
19	[BUG]  [BUGGY]    lhs  =  lhsClass.getSuperclass();  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {    [BUGGY]    lhs  =  lhsClass.getSuperclass();  [BUGGY]  isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	    lhs  =  lhsClass.getSuperclass();		compilable	  [FE]  AssertionFailedError  	2	8	add
20	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError  [CONTEXT]  if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {    [BUGGY]    Class  rhsClass  =  lhsClass.getSuperclass();  [BUGGY]  isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	add	    Class  rhsClass  =  lhsClass.getSuperclass();		compilable	  [FE]  AssertionFailedError  	2	1	add
21	[BUG]  [BUGGY]    Class  rhsClass  =  lhsClass.getSuperclass();  [FE]  AssertionFailedError  [FE]      AssertionFailedError  [CONTEXT]  if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {    [BUGGY]    Class  rhsClass  =  lhsClass.getSuperclass();  [BUGGY]  isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	    Class  rhsClass  =  lhsClass.getSuperclass();		compilable	  [FE]  AssertionFailedError  	2	1	add
