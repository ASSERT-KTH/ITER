bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]      Class  rhsClass  =  lhsClass.getClass();  Class  rhsClass  =  lhsClass.getClass();  [CE]  variable  rhsClass  is  already  defined  in  method  append(Object,Object)  [FE]    AssertionFailedError    [CONTEXT]    if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {      [BUGGY]      Class  rhsClass  =  lhsClass.getClass();  Class  rhsClass  =  lhsClass.getClass();  [BUGGY]    isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	        Class    rhsClass    =    lhsClass.getClass();    Class  rhsClass  =  lhsClass.getClass();	  	non-compiled	[CE]  variable  rhsClass  is  already  defined  in  method  append(Object,Object)	12	None	add
2	[BUG]  [BUGGY]      Class  rhsClass  =  lhsClass.getClass();  Class  lhsClass  =  lhsClass.getClass();  [CE]  variable  lhsClass  is  already  defined  in  method  append(Object,Object)  [FE]      AssertionFailedError    [CONTEXT]    if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {      [BUGGY]      Class  rhsClass  =  lhsClass.getClass();  Class  lhsClass  =  lhsClass.getClass();  [BUGGY]    isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	        Class    rhsClass    =    lhsClass.getClass();    Class  lhsClass  =  lhsClass.getClass();	  	non-compiled	[CE]  variable  lhsClass  is  already  defined  in  method  append(Object,Object)	12	None	add
3	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {      [BUGGY]      Class  rhsClass  =  lhsClass.getClass();  Class  hhsClass  =  lhsClass.getClass();  [BUGGY]    isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	add	        Class    rhsClass    =    lhsClass.getClass();    Class  hhsClass  =  lhsClass.getClass();	  	compilable	  [FE]  AssertionFailedError  	12	1	add
4	[BUG]  [BUGGY]      Class  rhsClass  =  lhsClass.getClass();  Class  hhsClass  =  lhsClass.getClass();  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {      [BUGGY]      Class  rhsClass  =  lhsClass.getClass();  Class  hhsClass  =  lhsClass.getClass();  [BUGGY]    isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	        Class    rhsClass    =    lhsClass.getClass();    Class  hhsClass  =  lhsClass.getClass();	  	compilable	  [FE]  AssertionFailedError  	12	1	add
5	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {      [BUGGY]      lhsClass  =  lhsClass.getSuperclass();  lhsClass  =  lhsClass.getSuperclass();  [BUGGY]    isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	add	        lhsClass    =    lhsClass.getSuperclass();    lhsClass  =  lhsClass.getSuperclass();	  	compilable	  [FE]  AssertionFailedError  	15	1	add
6	[BUG]  [BUGGY]      lhsClass  =  lhsClass.getSuperclass();  lhsClass  =  lhsClass.getSuperclass();  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {      [BUGGY]      lhsClass  =  lhsClass.getSuperclass();  lhsClass  =  lhsClass.getSuperclass();  [BUGGY]    isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	        lhsClass    =    lhsClass.getSuperclass();    lhsClass  =  lhsClass.getSuperclass();	  	compilable	  [FE]  AssertionFailedError  	15	1	add
7	[BUG]  [BUGGY]      lhsClass  =  lhsClass.getSuperclass();  LhsClass  =  lhsClass.getSuperclass();  [CE]  cannot  find  symbol  LhsClass  [FE]      AssertionFailedError    [CONTEXT]    if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {      [BUGGY]      lhsClass  =  lhsClass.getSuperclass();  LhsClass  =  lhsClass.getSuperclass();  [BUGGY]    isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	        lhsClass    =    lhsClass.getSuperclass();    LhsClass  =  lhsClass.getSuperclass();	  	non-compiled	[CE]  cannot  find  symbol  LhsClass	15	None	add
8	[BUG]  [BUGGY]      lhsClass  =  lhsClass.getSuperclass();  Class  lhsClass  =  lhsClass.getSuperclass();  [CE]  variable  lhsClass  is  already  defined  in  method  append(Object,Object)  [FE]        AssertionFailedError    [CONTEXT]    if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {      [BUGGY]      lhsClass  =  lhsClass.getSuperclass();  Class  lhsClass  =  lhsClass.getSuperclass();  [BUGGY]    isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	        lhsClass    =    lhsClass.getSuperclass();    Class  lhsClass  =  lhsClass.getSuperclass();	  	non-compiled	[CE]  variable  lhsClass  is  already  defined  in  method  append(Object,Object)	15	None	add
9	[BUG]  [BUGGY]  isEquals  =  lhsClass.isEmpty()?  false  :  lhs.equals(rhs);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]    if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {      [BUGGY]  isEquals  =  lhsClass.isEmpty()?  false  :  lhs.equals(rhs);  [BUGGY]    }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals  =  lhsClass.isEmpty()?  false  :  lhs.equals(rhs);	  isEquals    =    lhs.isEmpty()?    false    :    lhs.equals(rhs);    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
10	[BUG]  [BUGGY]  isEquals  =  rhs.isEmpty()?  false  :  lhs.equals(rhs);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]    if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {      [BUGGY]  isEquals  =  rhs.isEmpty()?  false  :  lhs.equals(rhs);  [BUGGY]    }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals  =  rhs.isEmpty()?  false  :  lhs.equals(rhs);	  isEquals    =    lhs.isEmpty()?    false    :    lhs.equals(rhs);    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
11	[BUG]  [BUGGY]  isEquals  =  lhs.isEmpty()?  false  :  rhs.equals(lhs);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError    [CONTEXT]    if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {      [BUGGY]  isEquals  =  lhs.isEmpty()?  false  :  rhs.equals(lhs);  [BUGGY]    }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals  =  lhs.isEmpty()?  false  :  rhs.equals(lhs);	  isEquals    =    lhs.isEmpty()?    false    :    lhs.equals(rhs);    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
12	[BUG]  [BUGGY]  Class  lhsClass  =  lhs.getRawClass();  [CE]  variable  lhsClass  is  already  defined  in  method  append(Object,Object)  [FE]              AssertionFailedError    [CONTEXT]    if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {      [BUGGY]  Class  lhsClass  =  lhs.getRawClass();  [BUGGY]    isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	Class  lhsClass  =  lhs.getRawClass();	      Class    rhsClass    =    lhsClass.getRawClass();    	non-compiled	[CE]  variable  lhsClass  is  already  defined  in  method  append(Object,Object)	4	None	replace
13	[BUG]  [BUGGY]  Class  rhsClass  =  lhs.getRawClass();  [CE]  cannot  find  symbol  [FE]                AssertionFailedError    [CONTEXT]    if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {      [BUGGY]  Class  rhsClass  =  lhs.getRawClass();  [BUGGY]    isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	Class  rhsClass  =  lhs.getRawClass();	      Class    rhsClass    =    lhsClass.getRawClass();    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
14	[BUG]  [BUGGY]  Class  lhsClass  =  lhsClass.getRawClass();  [CE]  variable  lhsClass  is  already  defined  in  method  append(Object,Object)  [FE]                  AssertionFailedError    [CONTEXT]    if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {      [BUGGY]  Class  lhsClass  =  lhsClass.getRawClass();  [BUGGY]    isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	Class  lhsClass  =  lhsClass.getRawClass();	      Class    rhsClass    =    lhsClass.getRawClass();    	non-compiled	[CE]  variable  lhsClass  is  already  defined  in  method  append(Object,Object)	4	None	replace
15	[BUG]  [BUGGY]      Class  rhsClass  =  lhsClass.getSuperclass();  Class  rhsClass  =  lhsClass.getSuperclass();  [CE]  variable  rhsClass  is  already  defined  in  method  append(Object,Object)  [FE]    AssertionFailedError    [CONTEXT]    if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {      [BUGGY]      Class  rhsClass  =  lhsClass.getSuperclass();  Class  rhsClass  =  lhsClass.getSuperclass();  [BUGGY]    isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	        Class    rhsClass    =    lhsClass.getSuperclass();    Class  rhsClass  =  lhsClass.getSuperclass();	  	non-compiled	[CE]  variable  rhsClass  is  already  defined  in  method  append(Object,Object)	20	None	add
16	[BUG]  [BUGGY]      Class  rhsClass  =  lhsClass.getSuperclass();  Class  lhsClass  =  lhsClass.getSuperclass();  [CE]  variable  lhsClass  is  already  defined  in  method  append(Object,Object)  [FE]      AssertionFailedError    [CONTEXT]    if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {      [BUGGY]      Class  rhsClass  =  lhsClass.getSuperclass();  Class  lhsClass  =  lhsClass.getSuperclass();  [BUGGY]    isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	        Class    rhsClass    =    lhsClass.getSuperclass();    Class  lhsClass  =  lhsClass.getSuperclass();	  	non-compiled	[CE]  variable  lhsClass  is  already  defined  in  method  append(Object,Object)	20	None	add
17	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {      [BUGGY]      Class  rhsClass  =  lhsClass.getSuperclass();  Class  hsClass  =  lhsClass.getSuperclass();  [BUGGY]    isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	add	        Class    rhsClass    =    lhsClass.getSuperclass();    Class  hsClass  =  lhsClass.getSuperclass();	  	compilable	  [FE]  AssertionFailedError  	20	1	add
18	[BUG]  [BUGGY]      Class  rhsClass  =  lhsClass.getSuperclass();  Class  hsClass  =  lhsClass.getSuperclass();  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {      [BUGGY]      Class  rhsClass  =  lhsClass.getSuperclass();  Class  hsClass  =  lhsClass.getSuperclass();  [BUGGY]    isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	        Class    rhsClass    =    lhsClass.getSuperclass();    Class  hsClass  =  lhsClass.getSuperclass();	  	compilable	  [FE]  AssertionFailedError  	20	1	add
19	[BUG]  [BUGGY]  Object  lhs  =  lhsClass.getSuperclass();  [CE]  variable  lhs  is  already  defined  in  method  append(Object,Object)  [FE]                AssertionFailedError    [CONTEXT]    if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {      [BUGGY]  Object  lhs  =  lhsClass.getSuperclass();  [BUGGY]    isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	Object  lhs  =  lhsClass.getSuperclass();	      Object    rhs    =    lhsClass.getSuperclass();    	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  append(Object,Object)	5	None	replace
20	[BUG]  [BUGGY]  Class  lhsClass  =  lhsClass.getSuperclass();  [CE]  variable  lhsClass  is  already  defined  in  method  append(Object,Object)  [FE]                  AssertionFailedError    [CONTEXT]    if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {      [BUGGY]  Class  lhsClass  =  lhsClass.getSuperclass();  [BUGGY]    isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	Class  lhsClass  =  lhsClass.getSuperclass();	      Object    rhs    =    lhsClass.getSuperclass();    	non-compiled	[CE]  variable  lhsClass  is  already  defined  in  method  append(Object,Object)	5	None	replace
21	[BUG]  [BUGGY]  lhsClass  =  lhs.getSuperclass();  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]    if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {      [BUGGY]  lhsClass  =  lhs.getSuperclass();  [BUGGY]    isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	lhsClass  =  lhs.getSuperclass();	      lhsClass    =    lhsClass.getSuperclass();    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
22	[BUG]  [BUGGY]  lhsClass  =  lhsClass.getRawClass();  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]    if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {      [BUGGY]  lhsClass  =  lhsClass.getRawClass();  [BUGGY]    isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	lhsClass  =  lhsClass.getRawClass();	      lhsClass    =    lhsClass.getSuperclass();    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
23	[BUG]  [BUGGY]  isEquals  =  lhsClass.isEquals(rhs);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]    if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {      [BUGGY]  isEquals  =  lhsClass.isEquals(rhs);  [BUGGY]    }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals  =  lhsClass.isEquals(rhs);	  isEquals    =    lhs.isEquals(rhs);    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
24	[BUG]  [BUGGY]  isEquals  =  rhs.isEquals(lhs);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]    if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {      [BUGGY]  isEquals  =  rhs.isEquals(lhs);  [BUGGY]    }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals  =  rhs.isEquals(lhs);	  isEquals    =    lhs.isEquals(rhs);    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
25	[BUG]  [BUGGY]  isEquals  =  lhs,  rhs.isEquals(lhs);  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {      [BUGGY]  isEquals  =  lhs,  rhs.isEquals(lhs);  [BUGGY]    }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals  =  lhs,  rhs.isEquals(lhs);	  isEquals    =    lhs.isEquals(rhs);    	non-compiled	[CE]  ';'  expected	17	None	replace
26	[BUG]  [BUGGY]  Class  lhsClass  =  lhs.getClass();  [CE]  variable  lhsClass  is  already  defined  in  method  append(Object,Object)  [FE]          AssertionFailedError    [CONTEXT]    if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {      [BUGGY]  Class  lhsClass  =  lhs.getClass();  [BUGGY]    isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	Class  lhsClass  =  lhs.getClass();	      Class    lhsClass    =    lhsClass.getClass();    	non-compiled	[CE]  variable  lhsClass  is  already  defined  in  method  append(Object,Object)	14	None	replace
27	[BUG]  [BUGGY]  Class  lhsClass  =  rhs.getClass();  [CE]  variable  lhsClass  is  already  defined  in  method  append(Object,Object)  [FE]            AssertionFailedError    [CONTEXT]    if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {      [BUGGY]  Class  lhsClass  =  rhs.getClass();  [BUGGY]    isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	Class  lhsClass  =  rhs.getClass();	      Class    lhsClass    =    lhsClass.getClass();    	non-compiled	[CE]  variable  lhsClass  is  already  defined  in  method  append(Object,Object)	14	None	replace
28	[BUG]  [BUGGY]  Class  <?>  lhsClass  =  lhs.getClass();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError    [CONTEXT]    if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {      [BUGGY]  Class  <?>  lhsClass  =  lhs.getClass();  [BUGGY]    isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	Class  <?>  lhsClass  =  lhs.getClass();	      Class    lhsClass    =    lhsClass.getClass();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	14	None	replace
29	[BUG]  [BUGGY]  Class  lhsClass  =  this.lhsClass.getClass();  [CE]  variable  lhsClass  is  already  defined  in  method  append(Object,Object)  [FE]                AssertionFailedError    [CONTEXT]    if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {      [BUGGY]  Class  lhsClass  =  this.lhsClass.getClass();  [BUGGY]    isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	Class  lhsClass  =  this.lhsClass.getClass();	      Class    lhsClass    =    lhsClass.getClass();    	non-compiled	[CE]  variable  lhsClass  is  already  defined  in  method  append(Object,Object)	14	None	replace
30	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {      [BUGGY]  isEquals  =  lhsClass.equals(lhs);  [BUGGY]    }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	add	isEquals  =  lhsClass.equals(lhs);	  isEquals    =    lhs.equals(rhsClass);    	compilable	  [FE]  AssertionFailedError  	8	8	replace
31	[BUG]  [BUGGY]  isEquals  =  lhsClass.equals(lhs);  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {      [BUGGY]  isEquals  =  lhsClass.equals(lhs);  [BUGGY]    }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals  =  lhsClass.equals(lhs);	  isEquals    =    lhs.equals(rhsClass);    	compilable	  [FE]  AssertionFailedError  	8	8	replace
32	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]    if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {      [BUGGY]  isEquals  =  lhs.equals(lhsClass);  [BUGGY]    }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	add	isEquals  =  lhs.equals(lhsClass);	  isEquals    =    lhs.equals(rhsClass);    	compilable	  [FE]  AssertionFailedError  	8	8	replace
33	[BUG]  [BUGGY]  isEquals  =  lhs.equals(lhsClass);  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]    if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {      [BUGGY]  isEquals  =  lhs.equals(lhsClass);  [BUGGY]    }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals  =  lhs.equals(lhsClass);	  isEquals    =    lhs.equals(rhsClass);    	compilable	  [FE]  AssertionFailedError  	8	8	replace
34	[BUG]  [BUGGY]  lhs  =  lhsClass.getRawClass();  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]    if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {      [BUGGY]  lhs  =  lhsClass.getRawClass();  [BUGGY]    isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	lhs  =  lhsClass.getRawClass();	      lhs    =    lhsClass.getSuperclass();    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
35	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {      [BUGGY]  lhs  =  lhsClass.getSimpleName();  [BUGGY]    isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	add	lhs  =  lhsClass.getSimpleName();	      lhs    =    lhsClass.getSuperclass();    	compilable	  [FE]  AssertionFailedError  	19	7	replace
36	[BUG]  [BUGGY]  lhs  =  lhsClass.getSimpleName();  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {      [BUGGY]  lhs  =  lhsClass.getSimpleName();  [BUGGY]    isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	lhs  =  lhsClass.getSimpleName();	      lhs    =    lhsClass.getSuperclass();    	compilable	  [FE]  AssertionFailedError  	19	7	replace
37	[BUG]  [BUGGY]  Object  lhs  =  lhsClass.getRawClass();  [CE]  variable  lhs  is  already  defined  in  method  append(Object,Object)  [FE]          AssertionFailedError    [CONTEXT]    if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {      [BUGGY]  Object  lhs  =  lhsClass.getRawClass();  [BUGGY]    isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	Object  lhs  =  lhsClass.getRawClass();	      Object    rhs    =    lhsClass.getRawClass();    	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  append(Object,Object)	2	None	replace
38	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {      [BUGGY]  isEquals  =  lhsClass.getClass().equals(rhs);  [BUGGY]    }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	add	isEquals  =  lhsClass.getClass().equals(rhs);	  isEquals    =    lhs.getClass().equals(rhs);    	compilable	  [FE]  AssertionFailedError  	11	8	replace
39	[BUG]  [BUGGY]  isEquals  =  lhsClass.getClass().equals(rhs);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {      [BUGGY]  isEquals  =  lhsClass.getClass().equals(rhs);  [BUGGY]    }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals  =  lhsClass.getClass().equals(rhs);	  isEquals    =    lhs.getClass().equals(rhs);    	compilable	  [FE]  AssertionFailedError  	11	8	replace
40	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {      [BUGGY]  isEquals  =  lhs.getClass().isArray();  [BUGGY]    }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	add	isEquals  =  lhs.getClass().isArray();	  isEquals    =    lhs.getClass().equals(rhs);    	compilable	  [FE]  AssertionFailedError  	11	8	replace
41	[BUG]  [BUGGY]  isEquals  =  lhs.getClass().isArray();  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {      [BUGGY]  isEquals  =  lhs.getClass().isArray();  [BUGGY]    }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals  =  lhs.getClass().isArray();	  isEquals    =    lhs.getClass().equals(rhs);    	compilable	  [FE]  AssertionFailedError  	11	8	replace
42	[BUG]  [BUGGY]  isEquals  =  lhs.getClass().equals(rhsClass);  [CE]  cannot  find  symbol  rhsClass  [FE]        AssertionFailedError    [CONTEXT]    if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {      [BUGGY]  isEquals  =  lhs.getClass().equals(rhsClass);  [BUGGY]    }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals  =  lhs.getClass().equals(rhsClass);	  isEquals    =    lhs.getClass().equals(rhs);    	non-compiled	[CE]  cannot  find  symbol  rhsClass	11	None	replace
43	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {      [BUGGY]  isEquals  =  lhs.getClass().equals(rhs);  isEquals  =  lhs.getClass().equals(rhs);  [BUGGY]    }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	add	isEquals    =    lhs.getClass().equals(rhs);    isEquals  =  lhs.getClass().equals(rhs);	  	compilable	  [FE]  AssertionFailedError  	10	1	add
44	[BUG]  [BUGGY]  isEquals  =  lhs.getClass().equals(rhs);  isEquals  =  lhs.getClass().equals(rhs);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {      [BUGGY]  isEquals  =  lhs.getClass().equals(rhs);  isEquals  =  lhs.getClass().equals(rhs);  [BUGGY]    }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals    =    lhs.getClass().equals(rhs);    isEquals  =  lhs.getClass().equals(rhs);	  	compilable	  [FE]  AssertionFailedError  	10	1	add
45	[BUG]  [BUGGY]  isEquals  =  lhs.getClass().equals(rhs);  areEquals  =  lhs.getClass().equals(rhs);  [CE]  cannot  find  symbol  areEquals  [FE]      AssertionFailedError    [CONTEXT]    if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {      [BUGGY]  isEquals  =  lhs.getClass().equals(rhs);  areEquals  =  lhs.getClass().equals(rhs);  [BUGGY]    }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals    =    lhs.getClass().equals(rhs);    areEquals  =  lhs.getClass().equals(rhs);	  	non-compiled	[CE]  cannot  find  symbol  areEquals	10	None	add
46	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {      [BUGGY]  isEquals  =  lhs.getClass().equals(rhs);  isEquals  =  lhsClass.equals(rhs);  [BUGGY]    }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	add	isEquals    =    lhs.getClass().equals(rhs);    isEquals  =  lhsClass.equals(rhs);	  	compilable	  [FE]  AssertionFailedError  	10	1	add
47	[BUG]  [BUGGY]  isEquals  =  lhs.getClass().equals(rhs);  isEquals  =  lhsClass.equals(rhs);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {      [BUGGY]  isEquals  =  lhs.getClass().equals(rhs);  isEquals  =  lhsClass.equals(rhs);  [BUGGY]    }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals    =    lhs.getClass().equals(rhs);    isEquals  =  lhsClass.equals(rhs);	  	compilable	  [FE]  AssertionFailedError  	10	1	add
48	[BUG]  [BUGGY]  isEquals  =  lhs.getClass().equals(rhs);  hasEquals  =  lhs.getClass().equals(rhs);  [CE]  cannot  find  symbol  hasEquals  [FE]          AssertionFailedError    [CONTEXT]    if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {      [BUGGY]  isEquals  =  lhs.getClass().equals(rhs);  hasEquals  =  lhs.getClass().equals(rhs);  [BUGGY]    }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals    =    lhs.getClass().equals(rhs);    hasEquals  =  lhs.getClass().equals(rhs);	  	non-compiled	[CE]  cannot  find  symbol  hasEquals	10	None	add
49	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {      [BUGGY]  Class  rhsClass  =  lhs.getClass();  [BUGGY]    isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	add	Class  rhsClass  =  lhs.getClass();	      Class    rhsClass    =    lhsClass.getClass();    	compilable	  [FE]  AssertionFailedError  	13	7	replace
50	[BUG]  [BUGGY]  Class  rhsClass  =  lhs.getClass();  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {      [BUGGY]  Class  rhsClass  =  lhs.getClass();  [BUGGY]    isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	Class  rhsClass  =  lhs.getClass();	      Class    rhsClass    =    lhsClass.getClass();    	compilable	  [FE]  AssertionFailedError  	13	7	replace
51	[BUG]  [BUGGY]  Class  <?>  rhsClass  =  lhs.getClass();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]      AssertionFailedError    [CONTEXT]    if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {      [BUGGY]  Class  <?>  rhsClass  =  lhs.getClass();  [BUGGY]    isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	Class  <?>  rhsClass  =  lhs.getClass();	      Class    rhsClass    =    lhsClass.getClass();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	13	None	replace
52	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {      [BUGGY]  isEquals  =  lhsClass.equals(rhs);  isEquals  =  lhsClass.equals(rhs);  [BUGGY]    }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	add	isEquals    =    lhsClass.equals(rhs);    isEquals  =  lhsClass.equals(rhs);	  	compilable	  [FE]  AssertionFailedError  	6	1	add
53	[BUG]  [BUGGY]  isEquals  =  lhsClass.equals(rhs);  isEquals  =  lhsClass.equals(rhs);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {      [BUGGY]  isEquals  =  lhsClass.equals(rhs);  isEquals  =  lhsClass.equals(rhs);  [BUGGY]    }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals    =    lhsClass.equals(rhs);    isEquals  =  lhsClass.equals(rhs);	  	compilable	  [FE]  AssertionFailedError  	6	1	add
54	[BUG]  [BUGGY]  isEquals  =  lhsClass.equals(rhs);  areEquals  =  lhsClass.equals(rhs);  [CE]  cannot  find  symbol  areEquals  [FE]      AssertionFailedError    [CONTEXT]    if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {      [BUGGY]  isEquals  =  lhsClass.equals(rhs);  areEquals  =  lhsClass.equals(rhs);  [BUGGY]    }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals    =    lhsClass.equals(rhs);    areEquals  =  lhsClass.equals(rhs);	  	non-compiled	[CE]  cannot  find  symbol  areEquals	6	None	add
55	[BUG]  [BUGGY]  isEquals  =  lhsClass.equals(rhs);  hasEquals  =  lhsClass.equals(rhs);  [CE]  cannot  find  symbol  hasEquals  [FE]        AssertionFailedError    [CONTEXT]    if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {      [BUGGY]  isEquals  =  lhsClass.equals(rhs);  hasEquals  =  lhsClass.equals(rhs);  [BUGGY]    }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals    =    lhsClass.equals(rhs);    hasEquals  =  lhsClass.equals(rhs);	  	non-compiled	[CE]  cannot  find  symbol  hasEquals	6	None	add
56	[BUG]  [BUGGY]  isEquals  =  lhsClass.equals(rhs);  ISEquals  =  lhsClass.equals(rhs);  [CE]  cannot  find  symbol  ISEquals  [FE]          AssertionFailedError    [CONTEXT]    if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {      [BUGGY]  isEquals  =  lhsClass.equals(rhs);  ISEquals  =  lhsClass.equals(rhs);  [BUGGY]    }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals    =    lhsClass.equals(rhs);    ISEquals  =  lhsClass.equals(rhs);	  	non-compiled	[CE]  cannot  find  symbol  ISEquals	6	None	add
57	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {      [BUGGY]      lhs  =  lhsClass.getSuperclass();  lhs  =  lhsClass.getSuperclass();  [BUGGY]    isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	add	        lhs    =    lhsClass.getSuperclass();    lhs  =  lhsClass.getSuperclass();	  	compilable	  [FE]  AssertionFailedError  	18	8	add
58	[BUG]  [BUGGY]      lhs  =  lhsClass.getSuperclass();  lhs  =  lhsClass.getSuperclass();  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {      [BUGGY]      lhs  =  lhsClass.getSuperclass();  lhs  =  lhsClass.getSuperclass();  [BUGGY]    isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	        lhs    =    lhsClass.getSuperclass();    lhs  =  lhsClass.getSuperclass();	  	compilable	  [FE]  AssertionFailedError  	18	8	add
59	[BUG]  [BUGGY]      lhs  =  lhsClass.getSuperclass();  Lhs  =  lhsClass.getSuperclass();  [CE]  cannot  find  symbol  Lhs  [FE]      AssertionFailedError    [CONTEXT]    if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {      [BUGGY]      lhs  =  lhsClass.getSuperclass();  Lhs  =  lhsClass.getSuperclass();  [BUGGY]    isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	        lhs    =    lhsClass.getSuperclass();    Lhs  =  lhsClass.getSuperclass();	  	non-compiled	[CE]  cannot  find  symbol  Lhs	18	None	add
60	[BUG]  [BUGGY]      lhs  =  lhsClass.getSuperclass();  (lhs  =  lhsClass.getSuperclass());  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {      [BUGGY]      lhs  =  lhsClass.getSuperclass();  (lhs  =  lhsClass.getSuperclass());  [BUGGY]    isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	        lhs    =    lhsClass.getSuperclass();    (lhs  =  lhsClass.getSuperclass());	  	non-compiled	[CE]  not  a  statement	18	None	add
61	[BUG]  [BUGGY]  Class  <?>  lhsClass  =  lhsClass.getRawClass();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]        AssertionFailedError    [CONTEXT]    if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {      [BUGGY]  Class  <?>  lhsClass  =  lhsClass.getRawClass();  [BUGGY]    isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	Class  <?>  lhsClass  =  lhsClass.getRawClass();	      Class    <?>    rhs    =    lhsClass.getRawClass();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	1	None	replace
62	[BUG]  [BUGGY]  Class  <?>  lhsClass  =  lhs.getRawClass();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          AssertionFailedError    [CONTEXT]    if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {      [BUGGY]  Class  <?>  lhsClass  =  lhs.getRawClass();  [BUGGY]    isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	Class  <?>  lhsClass  =  lhs.getRawClass();	      Class    <?>    rhs    =    lhsClass.getRawClass();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	1	None	replace
63	[BUG]  [BUGGY]  Class  <?>  rhs  =  lhs.getRawClass();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            AssertionFailedError    [CONTEXT]    if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {      [BUGGY]  Class  <?>  rhs  =  lhs.getRawClass();  [BUGGY]    isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	Class  <?>  rhs  =  lhs.getRawClass();	      Class    <?>    rhs    =    lhsClass.getRawClass();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	1	None	replace
64	[BUG]  [BUGGY]  isEquals  =  lhsClass.isEmpty()?  null  :  lhsClass.equals(rhs);  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]    if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {      [BUGGY]  isEquals  =  lhsClass.isEmpty()?  null  :  lhsClass.equals(rhs);  [BUGGY]    }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals  =  lhsClass.isEmpty()?  null  :  lhsClass.equals(rhs);	  isEquals    =    lhsClass.equals(rhs);    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
65	[BUG]  [BUGGY]  isEquals  =  lhsClass.isEmpty()?  false  :  lhsClass.equals(rhs);  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]    if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {      [BUGGY]  isEquals  =  lhsClass.isEmpty()?  false  :  lhsClass.equals(rhs);  [BUGGY]    }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals  =  lhsClass.isEmpty()?  false  :  lhsClass.equals(rhs);	  isEquals    =    lhsClass.equals(rhs);    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
66	[BUG]  [BUGGY]  isEquals  =  lhsClass.getName().equals(rhsClass.getName());  [CE]  cannot  find  symbol  rhsClass  [FE]        AssertionFailedError    [CONTEXT]    if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {      [BUGGY]  isEquals  =  lhsClass.getName().equals(rhsClass.getName());  [BUGGY]    }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals  =  lhsClass.getName().equals(rhsClass.getName());	  isEquals    =    lhsClass.equals(rhs);    	non-compiled	[CE]  cannot  find  symbol  rhsClass	7	None	replace
67	[BUG]  [BUGGY]  Class  lhsClass  =  lhs.getSuperclass();  [CE]  variable  lhsClass  is  already  defined  in  method  append(Object,Object)  [FE]    AssertionFailedError    [CONTEXT]    if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {      [BUGGY]  Class  lhsClass  =  lhs.getSuperclass();  [BUGGY]    isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	Class  lhsClass  =  lhs.getSuperclass();	      Class    rhsClass    =    lhsClass.getSuperclass();    	non-compiled	[CE]  variable  lhsClass  is  already  defined  in  method  append(Object,Object)	21	None	replace
68	[BUG]  [BUGGY]  Class  rhsClass  =  lhs.getSuperclass();  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]    if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {      [BUGGY]  Class  rhsClass  =  lhs.getSuperclass();  [BUGGY]    isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	Class  rhsClass  =  lhs.getSuperclass();	      Class    rhsClass    =    lhsClass.getSuperclass();    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
69	[BUG]  [BUGGY]  isEquals  =  lhsClass.equals(rhs);  lhsClass  =  lhsClass.equals(rhs);  [CE]  incompatible  types  [FE]    AssertionFailedError    [CONTEXT]    if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {      [BUGGY]  isEquals  =  lhsClass.equals(rhs);  lhsClass  =  lhsClass.equals(rhs);  [BUGGY]    }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals    =    lhsClass.equals(rhs);    lhsClass  =  lhsClass.equals(rhs);	  	non-compiled	[CE]  incompatible  types	6	None	add
70	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {      [BUGGY]      Class  rhsClass  =  lhsClass.getClass();  Class  hsClass  =  lhsClass.getClass();  [BUGGY]    isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	add	        Class    rhsClass    =    lhsClass.getClass();    Class  hsClass  =  lhsClass.getClass();	  	compilable	  [FE]  AssertionFailedError  	12	1	add
71	[BUG]  [BUGGY]      Class  rhsClass  =  lhsClass.getClass();  Class  hsClass  =  lhsClass.getClass();  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {      [BUGGY]      Class  rhsClass  =  lhsClass.getClass();  Class  hsClass  =  lhsClass.getClass();  [BUGGY]    isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	        Class    rhsClass    =    lhsClass.getClass();    Class  hsClass  =  lhsClass.getClass();	  	compilable	  [FE]  AssertionFailedError  	12	1	add
72	[BUG]  [BUGGY]      Class  rhsClass  =  lhsClass.getClass();  Class  lhsClass  =  rhsClass.getClass();  [CE]  variable  lhsClass  is  already  defined  in  method  append(Object,Object)  [FE]      AssertionFailedError    [CONTEXT]    if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {      [BUGGY]      Class  rhsClass  =  lhsClass.getClass();  Class  lhsClass  =  rhsClass.getClass();  [BUGGY]    isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	        Class    rhsClass    =    lhsClass.getClass();    Class  lhsClass  =  rhsClass.getClass();	  	non-compiled	[CE]  variable  lhsClass  is  already  defined  in  method  append(Object,Object)	12	None	add
73	[BUG]  [BUGGY]      Class  rhsClass  =  lhsClass.getClass();  class  lhsClass  =  lhsClass.getClass();  [CE]  '{'  expected  [FE]        AssertionFailedError    [CONTEXT]    if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {      [BUGGY]      Class  rhsClass  =  lhsClass.getClass();  class  lhsClass  =  lhsClass.getClass();  [BUGGY]    isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	        Class    rhsClass    =    lhsClass.getClass();    class  lhsClass  =  lhsClass.getClass();	  	non-compiled	[CE]  '{'  expected	12	None	add
74	[BUG]  [BUGGY]      lhs  =  lhsClass.getSuperclass();  lhs  =  rhsClass.getSuperclass();  [CE]  cannot  find  symbol  rhsClass  [FE]    AssertionFailedError    [CONTEXT]    if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {      [BUGGY]      lhs  =  lhsClass.getSuperclass();  lhs  =  rhsClass.getSuperclass();  [BUGGY]    isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	        lhs    =    lhsClass.getSuperclass();    lhs  =  rhsClass.getSuperclass();	  	non-compiled	[CE]  cannot  find  symbol  rhsClass	18	None	add
75	[BUG]  [BUGGY]  Object  rhs  =  lhsClass.getReturnType();  [CE]  variable  rhs  is  already  defined  in  method  append(Object,Object)  [FE]          AssertionFailedError    [CONTEXT]    if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {      [BUGGY]  Object  rhs  =  lhsClass.getReturnType();  [BUGGY]    isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	Object  rhs  =  lhsClass.getReturnType();	      Object    rhs    =    lhsClass.getRawClass();    	non-compiled	[CE]  variable  rhs  is  already  defined  in  method  append(Object,Object)	2	None	replace
76	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {      [BUGGY]  isEquals  =  lhs.getClass().getName().equals(rhs);  [BUGGY]    }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	add	isEquals  =  lhs.getClass().getName().equals(rhs);	  isEquals    =    lhs.getClass().equals(rhs);    	compilable	  [FE]  AssertionFailedError  	11	8	replace
77	[BUG]  [BUGGY]  isEquals  =  lhs.getClass().getName().equals(rhs);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {      [BUGGY]  isEquals  =  lhs.getClass().getName().equals(rhs);  [BUGGY]    }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals  =  lhs.getClass().getName().equals(rhs);	  isEquals    =    lhs.getClass().equals(rhs);    	compilable	  [FE]  AssertionFailedError  	11	8	replace
78	[BUG]  [BUGGY]  Class  rhsClass  =  lhsClass.getParameterType(0);  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]    if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {      [BUGGY]  Class  rhsClass  =  lhsClass.getParameterType(0);  [BUGGY]    isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	Class  rhsClass  =  lhsClass.getParameterType(0);	      Class    rhsClass    =    lhsClass.getSuperclass();    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
79	[BUG]  [BUGGY]      Class  rhsClass  =  lhsClass.getSuperclass();  class  lhsClass  =  lhsClass.getSuperclass();  [CE]  '{'  expected  [FE]    AssertionFailedError    [CONTEXT]    if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {      [BUGGY]      Class  rhsClass  =  lhsClass.getSuperclass();  class  lhsClass  =  lhsClass.getSuperclass();  [BUGGY]    isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	        Class    rhsClass    =    lhsClass.getSuperclass();    class  lhsClass  =  lhsClass.getSuperclass();	  	non-compiled	[CE]  '{'  expected	20	None	add
80	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {      [BUGGY]  lhs  =  lhsClass.getName();  [BUGGY]    isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	add	lhs  =  lhsClass.getName();	      lhs    =    lhsClass.getSuperclass();    	compilable	  [FE]  AssertionFailedError  	19	7	replace
81	[BUG]  [BUGGY]  lhs  =  lhsClass.getName();  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {      [BUGGY]  lhs  =  lhsClass.getName();  [BUGGY]    isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	lhs  =  lhsClass.getName();	      lhs    =    lhsClass.getSuperclass();    	compilable	  [FE]  AssertionFailedError  	19	7	replace
82	[BUG]  [BUGGY]  Object  rhs  =  lhsClass  ==  null?  null  :  lhsClass.getSuperclass();  [CE]  variable  rhs  is  already  defined  in  method  append(Object,Object)  [FE]                AssertionFailedError    [CONTEXT]    if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {      [BUGGY]  Object  rhs  =  lhsClass  ==  null?  null  :  lhsClass.getSuperclass();  [BUGGY]    isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	Object  rhs  =  lhsClass  ==  null?  null  :  lhsClass.getSuperclass();	      Object    rhs    =    lhsClass.getSuperclass();    	non-compiled	[CE]  variable  rhs  is  already  defined  in  method  append(Object,Object)	5	None	replace
83	[BUG]  [BUGGY]  Class  <?>  rhs  =  lhsClass.getRawParameterType(0);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]        AssertionFailedError    [CONTEXT]    if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {      [BUGGY]  Class  <?>  rhs  =  lhsClass.getRawParameterType(0);  [BUGGY]    isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	Class  <?>  rhs  =  lhsClass.getRawParameterType(0);	      Class    <?>    rhs    =    lhsClass.getRawClass();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	1	None	replace
84	[BUG]  [BUGGY]  Class  <?>  lhs  =  lhsClass.getRawClass();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          AssertionFailedError    [CONTEXT]    if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {      [BUGGY]  Class  <?>  lhs  =  lhsClass.getRawClass();  [BUGGY]    isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	Class  <?>  lhs  =  lhsClass.getRawClass();	      Class    <?>    rhs    =    lhsClass.getRawClass();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	1	None	replace
85	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {      [BUGGY]  isEquals  =  lhs.getClass().equals(rhs);  isEquals  =  lhsClass.getClass().equals(rhs);  [BUGGY]    }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	add	isEquals    =    lhs.getClass().equals(rhs);    isEquals  =  lhsClass.getClass().equals(rhs);	  	compilable	  [FE]  AssertionFailedError  	10	1	add
86	[BUG]  [BUGGY]  isEquals  =  lhs.getClass().equals(rhs);  isEquals  =  lhsClass.getClass().equals(rhs);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {      [BUGGY]  isEquals  =  lhs.getClass().equals(rhs);  isEquals  =  lhsClass.getClass().equals(rhs);  [BUGGY]    }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals    =    lhs.getClass().equals(rhs);    isEquals  =  lhsClass.getClass().equals(rhs);	  	compilable	  [FE]  AssertionFailedError  	10	1	add
87	[BUG]  [BUGGY]  isEquals  =  lhs.getClass().equals(rhs);  lhs  =  lhs.getClass().equals(rhs);  [CE]  incompatible  types  [FE]      AssertionFailedError    [CONTEXT]    if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {      [BUGGY]  isEquals  =  lhs.getClass().equals(rhs);  lhs  =  lhs.getClass().equals(rhs);  [BUGGY]    }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals    =    lhs.getClass().equals(rhs);    lhs  =  lhs.getClass().equals(rhs);	  	non-compiled	[CE]  incompatible  types	10	None	add
88	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {      [BUGGY]  lhsClass  =  lhsClass  ==  null?  null  :  lhsClass.getSuperclass();  [BUGGY]    isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	add	lhsClass  =  lhsClass  ==  null?  null  :  lhsClass.getSuperclass();	      lhsClass    =    lhsClass.getSuperclass();    	compilable	  [FE]  AssertionFailedError  	16	7	replace
89	[BUG]  [BUGGY]  lhsClass  =  lhsClass  ==  null?  null  :  lhsClass.getSuperclass();  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {      [BUGGY]  lhsClass  =  lhsClass  ==  null?  null  :  lhsClass.getSuperclass();  [BUGGY]    isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	lhsClass  =  lhsClass  ==  null?  null  :  lhsClass.getSuperclass();	      lhsClass    =    lhsClass.getSuperclass();    	compilable	  [FE]  AssertionFailedError  	16	7	replace
90	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {      [BUGGY]  isEquals  =  lhsClass.equals(null);  [BUGGY]    }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	add	isEquals  =  lhsClass.equals(null);	  isEquals    =    lhsClass.equals(rhs);    	compilable	  [FE]  AssertionFailedError  	7	8	replace
91	[BUG]  [BUGGY]  isEquals  =  lhsClass.equals(null);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {      [BUGGY]  isEquals  =  lhsClass.equals(null);  [BUGGY]    }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals  =  lhsClass.equals(null);	  isEquals    =    lhsClass.equals(rhs);    	compilable	  [FE]  AssertionFailedError  	7	8	replace
92	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {      [BUGGY]  isEquals  =  lhs.equals(this.getClass());  [BUGGY]    }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	add	isEquals  =  lhs.equals(this.getClass());	  isEquals    =    lhs.equals(rhsClass);    	compilable	  [FE]  AssertionFailedError  	8	8	replace
93	[BUG]  [BUGGY]  isEquals  =  lhs.equals(this.getClass());  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {      [BUGGY]  isEquals  =  lhs.equals(this.getClass());  [BUGGY]    }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals  =  lhs.equals(this.getClass());	  isEquals    =    lhs.equals(rhsClass);    	compilable	  [FE]  AssertionFailedError  	8	8	replace
94	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {      [BUGGY]  isEquals  =  lhsClass.getClass().isArray();  [BUGGY]    }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	add	isEquals  =  lhsClass.getClass().isArray();	  isEquals    =    lhs.getClass().equals(rhs);    	compilable	  [FE]  AssertionFailedError  	11	8	replace
95	[BUG]  [BUGGY]  isEquals  =  lhsClass.getClass().isArray();  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {      [BUGGY]  isEquals  =  lhsClass.getClass().isArray();  [BUGGY]    }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals  =  lhsClass.getClass().isArray();	  isEquals    =    lhs.getClass().equals(rhs);    	compilable	  [FE]  AssertionFailedError  	11	8	replace
96	[BUG]  [BUGGY]  isEquals  =  lhsClass.equals(rhsClass);  [CE]  cannot  find  symbol  rhsClass  [FE]          AssertionFailedError    [CONTEXT]    if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {      [BUGGY]  isEquals  =  lhsClass.equals(rhsClass);  [BUGGY]    }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals  =  lhsClass.equals(rhsClass);	  isEquals    =    lhs.equals(rhsClass);    	non-compiled	[CE]  cannot  find  symbol  rhsClass	8	None	replace
97	[BUG]  [BUGGY]      Class  rhsClass  =  lhsClass.getSuperclass();  Class  rhsClass  =  lhsClass.getSuperclass());  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]    if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {      [BUGGY]      Class  rhsClass  =  lhsClass.getSuperclass();  Class  rhsClass  =  lhsClass.getSuperclass());  [BUGGY]    isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	        Class    rhsClass    =    lhsClass.getSuperclass();    Class  rhsClass  =  lhsClass.getSuperclass());	  	non-compiled	[CE]  ';'  expected	20	None	add
98	[BUG]  [BUGGY]  isEquals  =  lhsClass.equals(rhs);  isEquals  =  lhsClass.equals(rhs));  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]    if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {      [BUGGY]  isEquals  =  lhsClass.equals(rhs);  isEquals  =  lhsClass.equals(rhs));  [BUGGY]    }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals    =    lhsClass.equals(rhs);    isEquals  =  lhsClass.equals(rhs));	  	non-compiled	[CE]  ';'  expected	6	None	add
99	[BUG]  [BUGGY]      Class  rhsClass  =  lhsClass.getClass();  class  rhsClass  =  lhsClass.getClass();  [CE]  '{'  expected  [FE]    AssertionFailedError    [CONTEXT]    if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {      [BUGGY]      Class  rhsClass  =  lhsClass.getClass();  class  rhsClass  =  lhsClass.getClass();  [BUGGY]    isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	        Class    rhsClass    =    lhsClass.getClass();    class  rhsClass  =  lhsClass.getClass();	  	non-compiled	[CE]  '{'  expected	12	None	add
100	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {      [BUGGY]  lhs  =  lhsClass  ==  null?  null  :  lhsClass.getSuperclass();  [BUGGY]    isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	add	lhs  =  lhsClass  ==  null?  null  :  lhsClass.getSuperclass();	      lhs    =    lhsClass.getSuperclass();    	compilable	  [FE]  AssertionFailedError  	19	7	replace
101	[BUG]  [BUGGY]  lhs  =  lhsClass  ==  null?  null  :  lhsClass.getSuperclass();  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {      [BUGGY]  lhs  =  lhsClass  ==  null?  null  :  lhsClass.getSuperclass();  [BUGGY]    isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	lhs  =  lhsClass  ==  null?  null  :  lhsClass.getSuperclass();	      lhs    =    lhsClass.getSuperclass();    	compilable	  [FE]  AssertionFailedError  	19	7	replace
102	[BUG]  [BUGGY]  Class  lhsRawClass  =  lhsClass.getRawClass();  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]    if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {      [BUGGY]  Class  lhsRawClass  =  lhsClass.getRawClass();  [BUGGY]    isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	Class  lhsRawClass  =  lhsClass.getRawClass();	      Class    rhs    =    lhsClass.getRawClass();    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
103	[BUG]  [BUGGY]  Object  rhs  =  lhsClass.getRawParameterType(0);  [CE]  variable  rhs  is  already  defined  in  method  append(Object,Object)  [FE]          AssertionFailedError    [CONTEXT]    if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {      [BUGGY]  Object  rhs  =  lhsClass.getRawParameterType(0);  [BUGGY]    isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	Object  rhs  =  lhsClass.getRawParameterType(0);	      Object    rhs    =    lhsClass.getRawClass();    	non-compiled	[CE]  variable  rhs  is  already  defined  in  method  append(Object,Object)	2	None	replace
104	[BUG]  [BUGGY]  Object  lhs  =  lhsClass.getName();  [CE]  variable  lhs  is  already  defined  in  method  append(Object,Object)  [FE]            AssertionFailedError    [CONTEXT]    if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {      [BUGGY]  Object  lhs  =  lhsClass.getName();  [BUGGY]    isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	Object  lhs  =  lhsClass.getName();	      Object    rhs    =    lhsClass.getRawClass();    	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  append(Object,Object)	2	None	replace
105	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {      [BUGGY]  lhsClass  =  lhsClass!=  null?  lhsClass.getSuperclass()  :  null;  [BUGGY]    isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	add	lhsClass  =  lhsClass!=  null?  lhsClass.getSuperclass()  :  null;	      lhsClass    =    lhsClass.getSuperclass();    	compilable	  [FE]  AssertionFailedError  	16	7	replace
106	[BUG]  [BUGGY]  lhsClass  =  lhsClass!=  null?  lhsClass.getSuperclass()  :  null;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {      [BUGGY]  lhsClass  =  lhsClass!=  null?  lhsClass.getSuperclass()  :  null;  [BUGGY]    isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	lhsClass  =  lhsClass!=  null?  lhsClass.getSuperclass()  :  null;	      lhsClass    =    lhsClass.getSuperclass();    	compilable	  [FE]  AssertionFailedError  	16	7	replace
107	[BUG]  [BUGGY]  Object  rhs  =  lhsClass  ==  null?  lhsClass.getSuperclass()  :  null;  [CE]  variable  rhs  is  already  defined  in  method  append(Object,Object)  [FE]                AssertionFailedError    [CONTEXT]    if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {      [BUGGY]  Object  rhs  =  lhsClass  ==  null?  lhsClass.getSuperclass()  :  null;  [BUGGY]    isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	Object  rhs  =  lhsClass  ==  null?  lhsClass.getSuperclass()  :  null;	      Object    rhs    =    lhsClass.getSuperclass();    	non-compiled	[CE]  variable  rhs  is  already  defined  in  method  append(Object,Object)	5	None	replace
108	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {      [BUGGY]  isEquals  =  lhsClass.isArray();  [BUGGY]    }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	add	isEquals  =  lhsClass.isArray();	  isEquals    =    lhsClass.equals(rhs);    	compilable	  [FE]  AssertionFailedError  	7	8	replace
109	[BUG]  [BUGGY]  isEquals  =  lhsClass.isArray();  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {      [BUGGY]  isEquals  =  lhsClass.isArray();  [BUGGY]    }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals  =  lhsClass.isArray();	  isEquals    =    lhsClass.equals(rhs);    	compilable	  [FE]  AssertionFailedError  	7	8	replace
110	[BUG]  [BUGGY]  isEquals  =  lhsClass.equals(false);  [CE]  method  equals  in  class  Object  cannot  be  applied  to  given  types;  [FE]      AssertionFailedError    [CONTEXT]    if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {      [BUGGY]  isEquals  =  lhsClass.equals(false);  [BUGGY]    }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals  =  lhsClass.equals(false);	  isEquals    =    lhsClass.equals(rhs);    	non-compiled	[CE]  method  equals  in  class  Object  cannot  be  applied  to  given  types;	7	None	replace
111	[BUG]  [BUGGY]  isEquals  =  lhsClass.isArray()?  rhs.getClass()  :  lhsClass.equals(rhs);  [CE]  incompatible  types  for  ?:  neither  is  a  subtype  of  the  other  [FE]        AssertionFailedError    [CONTEXT]    if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {      [BUGGY]  isEquals  =  lhsClass.isArray()?  rhs.getClass()  :  lhsClass.equals(rhs);  [BUGGY]    }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals  =  lhsClass.isArray()?  rhs.getClass()  :  lhsClass.equals(rhs);	  isEquals    =    lhsClass.equals(rhs);    	non-compiled	[CE]  incompatible  types  for  ?:  neither  is  a  subtype  of  the  other	7	None	replace
