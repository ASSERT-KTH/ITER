bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  isEquals  =  rhs.isEquals(lhsClass);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  rhs.isEquals(lhsClass);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals  =  rhs.isEquals(lhsClass);	  isEquals    =    lhsClass.isEquals(rhs);    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
2	[BUG]  [BUGGY]  isEquals  =  rhsClass.isEquals(lhs);  [CE]  cannot  find  symbol  rhsClass  [FE]              AssertionFailedError      [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  rhsClass.isEquals(lhs);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals  =  rhsClass.isEquals(lhs);	  isEquals    =    lhsClass.isEquals(rhs);    	non-compiled	[CE]  cannot  find  symbol  rhsClass	23	None	replace
3	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  lhsClass  =  lhsClass  ==  null?  lhsClass.getSuperclass()  :  null;  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	add	lhsClass  =  lhsClass  ==  null?  lhsClass.getSuperclass()  :  null;	  lhsClass    =    lhsClass!=    null?    lhsClass.getSuperclass()    :    null;    	compilable	  [FE]  AssertionFailedError  	106	7	replace
4	[BUG]  [BUGGY]  lhsClass  =  lhsClass  ==  null?  lhsClass.getSuperclass()  :  null;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  lhsClass  =  lhsClass  ==  null?  lhsClass.getSuperclass()  :  null;  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	lhsClass  =  lhsClass  ==  null?  lhsClass.getSuperclass()  :  null;	  lhsClass    =    lhsClass!=    null?    lhsClass.getSuperclass()    :    null;    	compilable	  [FE]  AssertionFailedError  	106	7	replace
5	[BUG]  [BUGGY]  LhsClass  lhsClass  =  lhs.getSuperclass();  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  LhsClass  lhsClass  =  lhs.getSuperclass();  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	LhsClass  lhsClass  =  lhs.getSuperclass();	          lhsClass    =    lhsClass.getSuperclass();    Class    lhsClass    =    lhsClass.getSuperclass();    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
6	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  lhsClass  =  lhsClass  ==  null?  null  :  lhsClass.getSuperclass();  lhsClass  =  lhsClass  ==  null?  null  :  lhsClass.getSuperclass();  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	add	lhsClass    =    lhsClass    ==    null?    null    :    lhsClass.getSuperclass();    lhsClass  =  lhsClass  ==  null?  null  :  lhsClass.getSuperclass();	  	compilable	  [FE]  AssertionFailedError  	88	1	add
7	[BUG]  [BUGGY]  lhsClass  =  lhsClass  ==  null?  null  :  lhsClass.getSuperclass();  lhsClass  =  lhsClass  ==  null?  null  :  lhsClass.getSuperclass();  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  lhsClass  =  lhsClass  ==  null?  null  :  lhsClass.getSuperclass();  lhsClass  =  lhsClass  ==  null?  null  :  lhsClass.getSuperclass();  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	lhsClass    =    lhsClass    ==    null?    null    :    lhsClass.getSuperclass();    lhsClass  =  lhsClass  ==  null?  null  :  lhsClass.getSuperclass();	  	compilable	  [FE]  AssertionFailedError  	88	1	add
8	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  lhsClass  =  lhsClass  ==  null?  null  :  lhsClass.getSuperclass();  lhsClass  =  lhsClass!=  null?  null  :  lhsClass.getSuperclass();  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	add	lhsClass    =    lhsClass    ==    null?    null    :    lhsClass.getSuperclass();    lhsClass  =  lhsClass!=  null?  null  :  lhsClass.getSuperclass();	  	compilable	  [FE]  AssertionFailedError  	88	1	add
9	[BUG]  [BUGGY]  lhsClass  =  lhsClass  ==  null?  null  :  lhsClass.getSuperclass();  lhsClass  =  lhsClass!=  null?  null  :  lhsClass.getSuperclass();  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  lhsClass  =  lhsClass  ==  null?  null  :  lhsClass.getSuperclass();  lhsClass  =  lhsClass!=  null?  null  :  lhsClass.getSuperclass();  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	lhsClass    =    lhsClass    ==    null?    null    :    lhsClass.getSuperclass();    lhsClass  =  lhsClass!=  null?  null  :  lhsClass.getSuperclass();	  	compilable	  [FE]  AssertionFailedError  	88	1	add
10	[BUG]  [BUGGY]  lhsClass  =  lhsClass  ==  null?  null  :  lhsClass.getSuperclass();  LhsClass  =  lhsClass  ==  null?  null  :  lhsClass.getSuperclass();  [CE]  cannot  find  symbol  LhsClass  [FE]        AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  lhsClass  =  lhsClass  ==  null?  null  :  lhsClass.getSuperclass();  LhsClass  =  lhsClass  ==  null?  null  :  lhsClass.getSuperclass();  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	lhsClass    =    lhsClass    ==    null?    null    :    lhsClass.getSuperclass();    LhsClass  =  lhsClass  ==  null?  null  :  lhsClass.getSuperclass();	  	non-compiled	[CE]  cannot  find  symbol  LhsClass	88	None	add
11	[BUG]  [BUGGY]  lhsClass  =  lhsClass  ==  null?  null  :  lhsClass.getSuperclass();  lhsClass  =  lhsClass  ==  null?  null  :  lhsClass.getSuperclass());  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  lhsClass  =  lhsClass  ==  null?  null  :  lhsClass.getSuperclass();  lhsClass  =  lhsClass  ==  null?  null  :  lhsClass.getSuperclass());  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	lhsClass    =    lhsClass    ==    null?    null    :    lhsClass.getSuperclass();    lhsClass  =  lhsClass  ==  null?  null  :  lhsClass.getSuperclass());	  	non-compiled	[CE]  ';'  expected	88	None	add
12	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  lhsClass.getClass().getName().equals(rhs);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	add	isEquals  =  lhsClass.getClass().getName().equals(rhs);	  isEquals    =    lhsClass.getClass().equals(rhs);    	compilable	  [FE]  AssertionFailedError  	39	8	replace
13	[BUG]  [BUGGY]  isEquals  =  lhsClass.getClass().getName().equals(rhs);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  lhsClass.getClass().getName().equals(rhs);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals  =  lhsClass.getClass().getName().equals(rhs);	  isEquals    =    lhsClass.getClass().equals(rhs);    	compilable	  [FE]  AssertionFailedError  	39	8	replace
14	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  lhsClass.getClass().getSimpleName().equals(rhs);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	add	isEquals  =  lhsClass.getClass().getSimpleName().equals(rhs);	  isEquals    =    lhsClass.getClass().equals(rhs);    	compilable	  [FE]  AssertionFailedError  	39	8	replace
15	[BUG]  [BUGGY]  isEquals  =  lhsClass.getClass().getSimpleName().equals(rhs);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  lhsClass.getClass().getSimpleName().equals(rhs);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals  =  lhsClass.getClass().getSimpleName().equals(rhs);	  isEquals    =    lhsClass.getClass().equals(rhs);    	compilable	  [FE]  AssertionFailedError  	39	8	replace
16	[BUG]  [BUGGY]          Class    rhsClass    =    lhsClass.getClass();    Class  hhsClass  =  lhsClass.getClass();  Class  rhsClass  =  lhsClass.getClass();  Class  hhsClass  =  lhsClass.getClass();  [CE]  variable  rhsClass  is  already  defined  in  method  append(Object,Object)  [FE]    AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]          Class    rhsClass    =    lhsClass.getClass();    Class  hhsClass  =  lhsClass.getClass();  Class  rhsClass  =  lhsClass.getClass();  Class  hhsClass  =  lhsClass.getClass();  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	                Class        rhsClass        =        lhsClass.getClass();        Class    hhsClass    =    lhsClass.getClass();    Class  rhsClass  =  lhsClass.getClass();  Class  hhsClass  =  lhsClass.getClass();	  	non-compiled	[CE]  variable  rhsClass  is  already  defined  in  method  append(Object,Object)	3	None	add
17	[BUG]  [BUGGY]          Class    rhsClass    =    lhsClass.getClass();    Class  hhsClass  =  lhsClass.getClass();  Class  lhsClass  =  lhsClass.getClass();  Class  hhsClass  =  lhsClass.getClass();  [CE]  variable  lhsClass  is  already  defined  in  method  append(Object,Object)  [FE]      AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]          Class    rhsClass    =    lhsClass.getClass();    Class  hhsClass  =  lhsClass.getClass();  Class  lhsClass  =  lhsClass.getClass();  Class  hhsClass  =  lhsClass.getClass();  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	                Class        rhsClass        =        lhsClass.getClass();        Class    hhsClass    =    lhsClass.getClass();    Class  lhsClass  =  lhsClass.getClass();  Class  hhsClass  =  lhsClass.getClass();	  	non-compiled	[CE]  variable  lhsClass  is  already  defined  in  method  append(Object,Object)	3	None	add
18	[BUG]  [BUGGY]          Class    rhsClass    =    lhsClass.getClass();    Class  hhsClass  =  lhsClass.getClass();  Class  lhsClass  =  lhsClass.getClass();  Class  rhsClass  =  lhsClass.getClass();  [CE]  variable  lhsClass  is  already  defined  in  method  append(Object,Object)  [FE]        AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]          Class    rhsClass    =    lhsClass.getClass();    Class  hhsClass  =  lhsClass.getClass();  Class  lhsClass  =  lhsClass.getClass();  Class  rhsClass  =  lhsClass.getClass();  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	                Class        rhsClass        =        lhsClass.getClass();        Class    hhsClass    =    lhsClass.getClass();    Class  lhsClass  =  lhsClass.getClass();  Class  rhsClass  =  lhsClass.getClass();	  	non-compiled	[CE]  variable  lhsClass  is  already  defined  in  method  append(Object,Object)	3	None	add
19	[BUG]  [BUGGY]  lhsClass  =  lhsClass.equals(rhs);  [CE]  incompatible  types  [FE]        AssertionFailedError      [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  lhsClass  =  lhsClass.equals(rhs);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	lhsClass  =  lhsClass.equals(rhs);	  isEquals    =    lhsClass.equals(rhs);    lhsClass    =    lhsClass.equals(rhs);    	non-compiled	[CE]  incompatible  types	69	None	replace
20	[BUG]  [BUGGY]  isEquals  =  rhs.equals(lhsClass);  lhsClass  =  lhsClass.equals(rhs);  [CE]  incompatible  types  [FE]          AssertionFailedError      [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  rhs.equals(lhsClass);  lhsClass  =  lhsClass.equals(rhs);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals  =  rhs.equals(lhsClass);  lhsClass  =  lhsClass.equals(rhs);	  isEquals    =    lhsClass.equals(rhs);    lhsClass    =    lhsClass.equals(rhs);    	non-compiled	[CE]  incompatible  types	69	None	replace
21	[BUG]  [BUGGY]  Object  rhs  =  lhsClass!=  null?  lhsClass.getSuperclass()  :  null;  [CE]  variable  rhs  is  already  defined  in  method  append(Object,Object)  [FE]                    AssertionFailedError      [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  Object  rhs  =  lhsClass!=  null?  lhsClass.getSuperclass()  :  null;  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	Object  rhs  =  lhsClass!=  null?  lhsClass.getSuperclass()  :  null;	  Object    rhs    =    lhsClass    ==    null?    lhsClass.getSuperclass()    :    null;    	non-compiled	[CE]  variable  rhs  is  already  defined  in  method  append(Object,Object)	107	None	replace
22	[BUG]  [BUGGY]  Object  lhs  =  lhsClass  ==  null?  lhsClass.getSuperclass()  :  null;  [CE]  variable  lhs  is  already  defined  in  method  append(Object,Object)  [FE]                      AssertionFailedError      [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  Object  lhs  =  lhsClass  ==  null?  lhsClass.getSuperclass()  :  null;  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	Object  lhs  =  lhsClass  ==  null?  lhsClass.getSuperclass()  :  null;	  Object    rhs    =    lhsClass    ==    null?    lhsClass.getSuperclass()    :    null;    	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  append(Object,Object)	107	None	replace
23	[BUG]  [BUGGY]  areEquals  =  lhsClass.equals(rhs);  [CE]  cannot  find  symbol  areEquals  [FE]          AssertionFailedError      [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  areEquals  =  lhsClass.equals(rhs);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	areEquals  =  lhsClass.equals(rhs);	  isEquals    =    lhsClass.equals(rhs);    areEquals    =    lhsClass.equals(rhs);    	non-compiled	[CE]  cannot  find  symbol  areEquals	54	None	replace
24	[BUG]  [BUGGY]  isEquals  =  lhsClass.getClass().isAssignableFrom(rhs);  [CE]  method  isAssignableFrom  in  class  Class  cannot  be  applied  to  given  types;  [FE]    AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  lhsClass.getClass().isAssignableFrom(rhs);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals  =  lhsClass.getClass().isAssignableFrom(rhs);	  isEquals    =    lhsClass.getClass().isArray();    	non-compiled	[CE]  method  isAssignableFrom  in  class  Class  cannot  be  applied  to  given  types;	95	None	replace
25	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  lhsClass.getClass().isInterface();  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	add	isEquals  =  lhsClass.getClass().isInterface();	  isEquals    =    lhsClass.getClass().isArray();    	compilable	  [FE]  AssertionFailedError  	95	8	replace
26	[BUG]  [BUGGY]  isEquals  =  lhsClass.getClass().isInterface();  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  lhsClass.getClass().isInterface();  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals  =  lhsClass.getClass().isInterface();	  isEquals    =    lhsClass.getClass().isArray();    	compilable	  [FE]  AssertionFailedError  	95	8	replace
27	[BUG]  [BUGGY]  isEquals  =  lhsClass.getClass().isUnknownClass();  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  lhsClass.getClass().isUnknownClass();  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals  =  lhsClass.getClass().isUnknownClass();	  isEquals    =    lhsClass.getClass().isArray();    	non-compiled	[CE]  cannot  find  symbol	95	None	replace
28	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  lhsClass.getClass().equals(rhs);  isEquals  =  lhsClass.getClass().equals(rhs);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	add	isEquals    =    lhsClass.getClass().equals(rhs);    isEquals  =  lhsClass.getClass().equals(rhs);	  	compilable	  [FE]  AssertionFailedError  	38	1	add
29	[BUG]  [BUGGY]  isEquals  =  lhsClass.getClass().equals(rhs);  isEquals  =  lhsClass.getClass().equals(rhs);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  lhsClass.getClass().equals(rhs);  isEquals  =  lhsClass.getClass().equals(rhs);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals    =    lhsClass.getClass().equals(rhs);    isEquals  =  lhsClass.getClass().equals(rhs);	  	compilable	  [FE]  AssertionFailedError  	38	1	add
30	[BUG]  [BUGGY]  isEquals  =  lhsClass.getClass().equals(rhs);  areEquals  =  lhsClass.getClass().equals(rhs);  [CE]  cannot  find  symbol  areEquals  [FE]      AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  lhsClass.getClass().equals(rhs);  areEquals  =  lhsClass.getClass().equals(rhs);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals    =    lhsClass.getClass().equals(rhs);    areEquals  =  lhsClass.getClass().equals(rhs);	  	non-compiled	[CE]  cannot  find  symbol  areEquals	38	None	add
31	[BUG]  [BUGGY]  isEquals  =  lhsClass.getClass().equals(rhs);  hasEquals  =  lhsClass.getClass().equals(rhs);  [CE]  cannot  find  symbol  hasEquals  [FE]        AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  lhsClass.getClass().equals(rhs);  hasEquals  =  lhsClass.getClass().equals(rhs);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals    =    lhsClass.getClass().equals(rhs);    hasEquals  =  lhsClass.getClass().equals(rhs);	  	non-compiled	[CE]  cannot  find  symbol  hasEquals	38	None	add
32	[BUG]  [BUGGY]  Class  <?>  lhsClass  =  this.lhsClass.getClass();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    AssertionFailedError      [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  Class  <?>  lhsClass  =  this.lhsClass.getClass();  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	Class  <?>  lhsClass  =  this.lhsClass.getClass();	  Class    lhsClass    =    this.lhsClass.getClass();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	29	None	replace
33	[BUG]  [BUGGY]  ISEquals  =  lhsClass.equals(rhs);  [CE]  cannot  find  symbol  ISEquals  [FE]              AssertionFailedError      [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  ISEquals  =  lhsClass.equals(rhs);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	ISEquals  =  lhsClass.equals(rhs);	  isEquals    =    lhsClass.equals(rhs);    ISEquals    =    lhsClass.equals(rhs);    	non-compiled	[CE]  cannot  find  symbol  ISEquals	56	None	replace
34	[BUG]  [BUGGY]  ISEQs  =  lhsClass.equals(rhs);  [CE]  cannot  find  symbol  ISEQs  [FE]                AssertionFailedError      [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  ISEQs  =  lhsClass.equals(rhs);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	ISEQs  =  lhsClass.equals(rhs);	  isEquals    =    lhsClass.equals(rhs);    ISEquals    =    lhsClass.equals(rhs);    	non-compiled	[CE]  cannot  find  symbol  ISEQs	56	None	replace
35	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals    =    lhsClass.equals(rhs);    isEquals  =  lhsClass.equals(rhs);  isEquals  =  lhsClass.equals(rhs);  isEquals  =  lhsClass.equals(rhs);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	add	isEquals        =        lhsClass.equals(rhs);        isEquals    =    lhsClass.equals(rhs);    isEquals  =  lhsClass.equals(rhs);  isEquals  =  lhsClass.equals(rhs);	  	compilable	  [FE]  AssertionFailedError  	52	1	add
36	[BUG]  [BUGGY]  isEquals    =    lhsClass.equals(rhs);    isEquals  =  lhsClass.equals(rhs);  isEquals  =  lhsClass.equals(rhs);  isEquals  =  lhsClass.equals(rhs);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals    =    lhsClass.equals(rhs);    isEquals  =  lhsClass.equals(rhs);  isEquals  =  lhsClass.equals(rhs);  isEquals  =  lhsClass.equals(rhs);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals        =        lhsClass.equals(rhs);        isEquals    =    lhsClass.equals(rhs);    isEquals  =  lhsClass.equals(rhs);  isEquals  =  lhsClass.equals(rhs);	  	compilable	  [FE]  AssertionFailedError  	52	1	add
37	[BUG]  [BUGGY]  isEquals    =    lhsClass.equals(rhs);    isEquals  =  lhsClass.equals(rhs);  hasEquals  =  lhsClass.equals(rhs);  isEquals  =  lhsClass.equals(rhs);  [CE]  cannot  find  symbol  hasEquals  [FE]      AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals    =    lhsClass.equals(rhs);    isEquals  =  lhsClass.equals(rhs);  hasEquals  =  lhsClass.equals(rhs);  isEquals  =  lhsClass.equals(rhs);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals        =        lhsClass.equals(rhs);        isEquals    =    lhsClass.equals(rhs);    hasEquals  =  lhsClass.equals(rhs);  isEquals  =  lhsClass.equals(rhs);	  	non-compiled	[CE]  cannot  find  symbol  hasEquals	52	None	add
38	[BUG]  [BUGGY]  isEquals    =    lhsClass.equals(rhs);    isEquals  =  lhsClass.equals(rhs);  areEquals  =  lhsClass.equals(rhs);  isEquals  =  lhsClass.equals(rhs);  [CE]  cannot  find  symbol  areEquals  [FE]        AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals    =    lhsClass.equals(rhs);    isEquals  =  lhsClass.equals(rhs);  areEquals  =  lhsClass.equals(rhs);  isEquals  =  lhsClass.equals(rhs);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals        =        lhsClass.equals(rhs);        isEquals    =    lhsClass.equals(rhs);    areEquals  =  lhsClass.equals(rhs);  isEquals  =  lhsClass.equals(rhs);	  	non-compiled	[CE]  cannot  find  symbol  areEquals	52	None	add
39	[BUG]  [BUGGY]  isEquals    =    lhsClass.equals(rhs);    isEquals  =  lhsClass.equals(rhs);  lhsClass  =  lhsClass.equals(rhs);  isEquals  =  lhsClass.equals(rhs);  [CE]  incompatible  types  [FE]          AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals    =    lhsClass.equals(rhs);    isEquals  =  lhsClass.equals(rhs);  lhsClass  =  lhsClass.equals(rhs);  isEquals  =  lhsClass.equals(rhs);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals        =        lhsClass.equals(rhs);        isEquals    =    lhsClass.equals(rhs);    lhsClass  =  lhsClass.equals(rhs);  isEquals  =  lhsClass.equals(rhs);	  	non-compiled	[CE]  incompatible  types	52	None	add
40	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  lhsClass  =  lhsClass!=  null?  lhsClass.getSuperclass()  :  null;  lhsClass  =  lhsClass!=  null?  lhsClass.getSuperclass()  :  null;  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	add	lhsClass    =    lhsClass!=    null?    lhsClass.getSuperclass()    :    null;    lhsClass  =  lhsClass!=  null?  lhsClass.getSuperclass()  :  null;	  	compilable	  [FE]  AssertionFailedError  	105	1	add
41	[BUG]  [BUGGY]  lhsClass  =  lhsClass!=  null?  lhsClass.getSuperclass()  :  null;  lhsClass  =  lhsClass!=  null?  lhsClass.getSuperclass()  :  null;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  lhsClass  =  lhsClass!=  null?  lhsClass.getSuperclass()  :  null;  lhsClass  =  lhsClass!=  null?  lhsClass.getSuperclass()  :  null;  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	lhsClass    =    lhsClass!=    null?    lhsClass.getSuperclass()    :    null;    lhsClass  =  lhsClass!=  null?  lhsClass.getSuperclass()  :  null;	  	compilable	  [FE]  AssertionFailedError  	105	1	add
42	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  lhsClass  =  lhsClass!=  null?  lhsClass.getSuperclass()  :  null;  lhsClass  =  lhsClass  ==  null?  lhsClass.getSuperclass()  :  null;  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	add	lhsClass    =    lhsClass!=    null?    lhsClass.getSuperclass()    :    null;    lhsClass  =  lhsClass  ==  null?  lhsClass.getSuperclass()  :  null;	  	compilable	  [FE]  AssertionFailedError  	105	1	add
43	[BUG]  [BUGGY]  lhsClass  =  lhsClass!=  null?  lhsClass.getSuperclass()  :  null;  lhsClass  =  lhsClass  ==  null?  lhsClass.getSuperclass()  :  null;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  lhsClass  =  lhsClass!=  null?  lhsClass.getSuperclass()  :  null;  lhsClass  =  lhsClass  ==  null?  lhsClass.getSuperclass()  :  null;  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	lhsClass    =    lhsClass!=    null?    lhsClass.getSuperclass()    :    null;    lhsClass  =  lhsClass  ==  null?  lhsClass.getSuperclass()  :  null;	  	compilable	  [FE]  AssertionFailedError  	105	1	add
44	[BUG]  [BUGGY]  lhsClass  =  lhsClass!=  null?  lhsClass.getSuperclass()  :  null;  lhsClass  =  lhsClass  >>  null?  lhsClass.getSuperclass()  :  null;  [CE]  bad  operand  types  for  binary  operator  '>>'  [FE]        AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  lhsClass  =  lhsClass!=  null?  lhsClass.getSuperclass()  :  null;  lhsClass  =  lhsClass  >>  null?  lhsClass.getSuperclass()  :  null;  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	lhsClass    =    lhsClass!=    null?    lhsClass.getSuperclass()    :    null;    lhsClass  =  lhsClass  >>  null?  lhsClass.getSuperclass()  :  null;	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>>'	105	None	add
45	[BUG]  [BUGGY]  lhsClass  =  lhsClass!=  null?  lhsClass.getSuperclass()  :  null;  lhsClass  =  lhsClass  >=  null?  lhsClass.getSuperclass()  :  null;  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]          AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  lhsClass  =  lhsClass!=  null?  lhsClass.getSuperclass()  :  null;  lhsClass  =  lhsClass  >=  null?  lhsClass.getSuperclass()  :  null;  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	lhsClass    =    lhsClass!=    null?    lhsClass.getSuperclass()    :    null;    lhsClass  =  lhsClass  >=  null?  lhsClass.getSuperclass()  :  null;	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	105	None	add
46	[BUG]  [BUGGY]  isEquals  =  lhsClass,  rhs.isEquals(lhs);  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  lhsClass,  rhs.isEquals(lhs);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals  =  lhsClass,  rhs.isEquals(lhs);	  isEquals    =    lhs,    rhs.isEquals(lhs);    	non-compiled	[CE]  ';'  expected	25	None	replace
47	[BUG]  [BUGGY]  isEquals  =  lhs,  rhs.isEquals(lhsClass);  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  lhs,  rhs.isEquals(lhsClass);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals  =  lhs,  rhs.isEquals(lhsClass);	  isEquals    =    lhs,    rhs.isEquals(lhs);    	non-compiled	[CE]  ';'  expected	25	None	replace
48	[BUG]  [BUGGY]  isEquals  =  rhs,  lhs.isEquals(lhs);  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  rhs,  lhs.isEquals(lhs);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals  =  rhs,  lhs.isEquals(lhs);	  isEquals    =    lhs,    rhs.isEquals(lhs);    	non-compiled	[CE]  ';'  expected	25	None	replace
49	[BUG]  [BUGGY]  Class  lhsClass  =  rhs.getSuperclass();  [CE]  variable  lhsClass  is  already  defined  in  method  append(Object,Object)  [FE]        AssertionFailedError      [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  Class  lhsClass  =  rhs.getSuperclass();  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	Class  lhsClass  =  rhs.getSuperclass();	  Class    lhsClass    =    lhs.getSuperclass();    	non-compiled	[CE]  variable  lhsClass  is  already  defined  in  method  append(Object,Object)	67	None	replace
50	[BUG]  [BUGGY]  Class  <?>  lhsClass  =  lhs.getSuperclass();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          AssertionFailedError      [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  Class  <?>  lhsClass  =  lhs.getSuperclass();  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	Class  <?>  lhsClass  =  lhs.getSuperclass();	  Class    lhsClass    =    lhs.getSuperclass();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	67	None	replace
51	[BUG]  [BUGGY]  Object  lhs  =  lhs.getRawClass();  [CE]  variable  lhs  is  already  defined  in  method  append(Object,Object)  [FE]              AssertionFailedError      [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  Object  lhs  =  lhs.getRawClass();  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	Object  lhs  =  lhs.getRawClass();	  Object    lhs    =    lhsClass.getRawClass();    	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  append(Object,Object)	37	None	replace
52	[BUG]  [BUGGY]  Object  lhs  =  lhsClass.getRawParameterType(0);  [CE]  variable  lhs  is  already  defined  in  method  append(Object,Object)  [FE]              AssertionFailedError      [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  Object  lhs  =  lhsClass.getRawParameterType(0);  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	Object  lhs  =  lhsClass.getRawParameterType(0);	  Object    rhs    =    lhsClass.getRawParameterType(0);    	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  append(Object,Object)	103	None	replace
53	[BUG]  [BUGGY]  Object  rhs  =  lhsClass.getRawParameterType(1);  [CE]  variable  rhs  is  already  defined  in  method  append(Object,Object)  [FE]                AssertionFailedError      [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  Object  rhs  =  lhsClass.getRawParameterType(1);  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	Object  rhs  =  lhsClass.getRawParameterType(1);	  Object    rhs    =    lhsClass.getRawParameterType(0);    	non-compiled	[CE]  variable  rhs  is  already  defined  in  method  append(Object,Object)	103	None	replace
54	[BUG]  [BUGGY]          Class    rhsClass    =    lhsClass.getClass();    Class  hsClass  =  lhsClass.getClass();  Class  rhsClass  =  lhsClass.getClass();  Class  hsClass  =  lhsClass.getClass();  [CE]  variable  rhsClass  is  already  defined  in  method  append(Object,Object)  [FE]    AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]          Class    rhsClass    =    lhsClass.getClass();    Class  hsClass  =  lhsClass.getClass();  Class  rhsClass  =  lhsClass.getClass();  Class  hsClass  =  lhsClass.getClass();  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	                Class        rhsClass        =        lhsClass.getClass();        Class    hsClass    =    lhsClass.getClass();    Class  rhsClass  =  lhsClass.getClass();  Class  hsClass  =  lhsClass.getClass();	  	non-compiled	[CE]  variable  rhsClass  is  already  defined  in  method  append(Object,Object)	70	None	add
55	[BUG]  [BUGGY]          Class    rhsClass    =    lhsClass.getClass();    Class  hsClass  =  lhsClass.getClass();  Class  lhsClass  =  lhsClass.getClass();  Class  hsClass  =  lhsClass.getClass();  [CE]  variable  lhsClass  is  already  defined  in  method  append(Object,Object)  [FE]      AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]          Class    rhsClass    =    lhsClass.getClass();    Class  hsClass  =  lhsClass.getClass();  Class  lhsClass  =  lhsClass.getClass();  Class  hsClass  =  lhsClass.getClass();  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	                Class        rhsClass        =        lhsClass.getClass();        Class    hsClass    =    lhsClass.getClass();    Class  lhsClass  =  lhsClass.getClass();  Class  hsClass  =  lhsClass.getClass();	  	non-compiled	[CE]  variable  lhsClass  is  already  defined  in  method  append(Object,Object)	70	None	add
56	[BUG]  [BUGGY]          Class    rhsClass    =    lhsClass.getClass();    Class  hsClass  =  lhsClass.getClass();  Class  lhsClass  =  lhsClass.getClass();  Class  rhsClass  =  lhsClass.getClass();  [CE]  variable  lhsClass  is  already  defined  in  method  append(Object,Object)  [FE]        AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]          Class    rhsClass    =    lhsClass.getClass();    Class  hsClass  =  lhsClass.getClass();  Class  lhsClass  =  lhsClass.getClass();  Class  rhsClass  =  lhsClass.getClass();  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	                Class        rhsClass        =        lhsClass.getClass();        Class    hsClass    =    lhsClass.getClass();    Class  lhsClass  =  lhsClass.getClass();  Class  rhsClass  =  lhsClass.getClass();	  	non-compiled	[CE]  variable  lhsClass  is  already  defined  in  method  append(Object,Object)	70	None	add
57	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  lhs  =  lhsClass.getName();  lhs  =  lhsClass.getName();  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	add	lhs    =    lhsClass.getName();    lhs  =  lhsClass.getName();	  	compilable	  [FE]  AssertionFailedError  	80	8	add
58	[BUG]  [BUGGY]  lhs  =  lhsClass.getName();  lhs  =  lhsClass.getName();  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  lhs  =  lhsClass.getName();  lhs  =  lhsClass.getName();  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	lhs    =    lhsClass.getName();    lhs  =  lhsClass.getName();	  	compilable	  [FE]  AssertionFailedError  	80	8	add
59	[BUG]  [BUGGY]  lhs  =  lhsClass.getName();  Lhs  =  lhsClass.getName();  [CE]  cannot  find  symbol  Lhs  [FE]      AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  lhs  =  lhsClass.getName();  Lhs  =  lhsClass.getName();  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	lhs    =    lhsClass.getName();    Lhs  =  lhsClass.getName();	  	non-compiled	[CE]  cannot  find  symbol  Lhs	80	None	add
60	[BUG]  [BUGGY]  lhs  =  lhsClass.getName();  (lhs  =  lhsClass.getName());  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  lhs  =  lhsClass.getName();  (lhs  =  lhsClass.getName());  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	lhs    =    lhsClass.getName();    (lhs  =  lhsClass.getName());	  	non-compiled	[CE]  not  a  statement	80	None	add
61	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  lhsClass.equals(rhs)||  lhsClass.equals(rhs);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	add	isEquals  =  lhsClass.equals(rhs)||  lhsClass.equals(rhs);	  isEquals    =    lhsClass.equals(rhs);    isEquals    =    lhsClass.equals(rhs));    	compilable	  [FE]  AssertionFailedError  	98	8	replace
62	[BUG]  [BUGGY]  isEquals  =  lhsClass.equals(rhs)||  lhsClass.equals(rhs);  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  lhsClass.equals(rhs)||  lhsClass.equals(rhs);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals  =  lhsClass.equals(rhs)||  lhsClass.equals(rhs);	  isEquals    =    lhsClass.equals(rhs);    isEquals    =    lhsClass.equals(rhs));    	compilable	  [FE]  AssertionFailedError  	98	8	replace
63	[BUG]  [BUGGY]  isEquals  =  lhsClass.equals(rhs));  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  lhsClass.equals(rhs));  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals  =  lhsClass.equals(rhs));	  isEquals    =    lhsClass.equals(rhs);    isEquals    =    lhsClass.equals(rhs));    	non-compiled	[CE]  ';'  expected	98	None	replace
64	[BUG]  [BUGGY]  isEquals  =  lhsClass.getRawClass().equals(rhs);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  lhsClass.getRawClass().equals(rhs);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals  =  lhsClass.getRawClass().equals(rhs);	  isEquals    =    lhsClass.equals(rhs);    isEquals    =    lhsClass.equals(rhs));    	non-compiled	[CE]  cannot  find  symbol	98	None	replace
65	[BUG]  [BUGGY]  Class  <?>  rhs  =  lhsClass.getRawParameterType(1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            AssertionFailedError      [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  Class  <?>  rhs  =  lhsClass.getRawParameterType(1);  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	Class  <?>  rhs  =  lhsClass.getRawParameterType(1);	  Class    <?>    rhs    =    lhsClass.getRawParameterType(0);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	83	None	replace
66	[BUG]  [BUGGY]  Class  <?>  lhsClass  =  lhsClass.getRawParameterType(0);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError      [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  Class  <?>  lhsClass  =  lhsClass.getRawParameterType(0);  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	Class  <?>  lhsClass  =  lhsClass.getRawParameterType(0);	  Class    <?>    rhs    =    lhsClass.getRawParameterType(0);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	83	None	replace
67	[BUG]  [BUGGY]  Class  <?>  rhs  =  lhsClass.getRawParameterType(2);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  Class  <?>  rhs  =  lhsClass.getRawParameterType(2);  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	Class  <?>  rhs  =  lhsClass.getRawParameterType(2);	  Class    <?>    rhs    =    lhsClass.getRawParameterType(0);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	83	None	replace
68	[BUG]  [BUGGY]  isEquals  =  lhsClass.isArray()?  lhs.getClass()  :  lhsClass.equals(rhs);  [CE]  incompatible  types  for  ?:  neither  is  a  subtype  of  the  other  [FE]            AssertionFailedError      [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  lhsClass.isArray()?  lhs.getClass()  :  lhsClass.equals(rhs);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals  =  lhsClass.isArray()?  lhs.getClass()  :  lhsClass.equals(rhs);	  isEquals    =    lhsClass.isArray()?    rhs.getClass()    :    lhsClass.equals(rhs);    	non-compiled	[CE]  incompatible  types  for  ?:  neither  is  a  subtype  of  the  other	111	None	replace
69	[BUG]  [BUGGY]  isEquals  =  lhsClass.isAssignableFrom(rhs)?  lhs.getClass()  :  lhsClass.equals(rhs);  [CE]  method  isAssignableFrom  in  class  Class  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  lhsClass.isAssignableFrom(rhs)?  lhs.getClass()  :  lhsClass.equals(rhs);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals  =  lhsClass.isAssignableFrom(rhs)?  lhs.getClass()  :  lhsClass.equals(rhs);	  isEquals    =    lhsClass.isArray()?    rhs.getClass()    :    lhsClass.equals(rhs);    	non-compiled	[CE]  method  isAssignableFrom  in  class  Class  cannot  be  applied  to  given  types;	111	None	replace
70	[BUG]  [BUGGY]  isEquals  =  rhs.isArray()?  lhsClass.getClass()  :  lhs.equals(rhs);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  rhs.isArray()?  lhsClass.getClass()  :  lhs.equals(rhs);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals  =  rhs.isArray()?  lhsClass.getClass()  :  lhs.equals(rhs);	  isEquals    =    lhsClass.isArray()?    rhs.getClass()    :    lhsClass.equals(rhs);    	non-compiled	[CE]  cannot  find  symbol	111	None	replace
71	[BUG]  [BUGGY]  isEquals  =  rhsClass.isEmpty()?  false  :  lhsClass.equals(rhs);  [CE]  cannot  find  symbol  rhsClass  [FE]          AssertionFailedError      [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  rhsClass.isEmpty()?  false  :  lhsClass.equals(rhs);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals  =  rhsClass.isEmpty()?  false  :  lhsClass.equals(rhs);	  isEquals    =    lhsClass.isEmpty()?    false    :    lhsClass.equals(rhs);    	non-compiled	[CE]  cannot  find  symbol  rhsClass	65	None	replace
72	[BUG]  [BUGGY]  isEquals  =  rhs.isEmpty()?  false  :  lhsClass.equals(rhs);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  rhs.isEmpty()?  false  :  lhsClass.equals(rhs);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals  =  rhs.isEmpty()?  false  :  lhsClass.equals(rhs);	  isEquals    =    lhsClass.isEmpty()?    false    :    lhsClass.equals(rhs);    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
73	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]          lhs    =    lhsClass.getSuperclass();    lhs  =  lhsClass.getSuperclass();  lhs  =  lhsClass.getSuperclass();  lhs  =  lhsClass.getSuperclass();  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	add	                lhs        =        lhsClass.getSuperclass();        lhs    =    lhsClass.getSuperclass();    lhs  =  lhsClass.getSuperclass();  lhs  =  lhsClass.getSuperclass();	  	compilable	  [FE]  AssertionFailedError  	57	8	add
74	[BUG]  [BUGGY]          lhs    =    lhsClass.getSuperclass();    lhs  =  lhsClass.getSuperclass();  lhs  =  lhsClass.getSuperclass();  lhs  =  lhsClass.getSuperclass();  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]          lhs    =    lhsClass.getSuperclass();    lhs  =  lhsClass.getSuperclass();  lhs  =  lhsClass.getSuperclass();  lhs  =  lhsClass.getSuperclass();  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	                lhs        =        lhsClass.getSuperclass();        lhs    =    lhsClass.getSuperclass();    lhs  =  lhsClass.getSuperclass();  lhs  =  lhsClass.getSuperclass();	  	compilable	  [FE]  AssertionFailedError  	57	8	add
75	[BUG]  [BUGGY]          lhs    =    lhsClass.getSuperclass();    lhs  =  lhsClass.getSuperclass();  Lhs  =  lhsClass.getSuperclass();  lhs  =  lhsClass.getSuperclass();  [CE]  cannot  find  symbol  Lhs  [FE]      AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]          lhs    =    lhsClass.getSuperclass();    lhs  =  lhsClass.getSuperclass();  Lhs  =  lhsClass.getSuperclass();  lhs  =  lhsClass.getSuperclass();  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	                lhs        =        lhsClass.getSuperclass();        lhs    =    lhsClass.getSuperclass();    Lhs  =  lhsClass.getSuperclass();  lhs  =  lhsClass.getSuperclass();	  	non-compiled	[CE]  cannot  find  symbol  Lhs	57	None	add
76	[BUG]  [BUGGY]          lhs    =    lhsClass.getSuperclass();    lhs  =  lhsClass.getSuperclass();  Class  lhs  =  lhsClass.getSuperclass();  lhs  =  lhsClass.getSuperclass();  [CE]  variable  lhs  is  already  defined  in  method  append(Object,Object)  [FE]        AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]          lhs    =    lhsClass.getSuperclass();    lhs  =  lhsClass.getSuperclass();  Class  lhs  =  lhsClass.getSuperclass();  lhs  =  lhsClass.getSuperclass();  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	                lhs        =        lhsClass.getSuperclass();        lhs    =    lhsClass.getSuperclass();    Class  lhs  =  lhsClass.getSuperclass();  lhs  =  lhsClass.getSuperclass();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  append(Object,Object)	57	None	add
77	[BUG]  [BUGGY]          lhs    =    lhsClass.getSuperclass();    lhs  =  lhsClass.getSuperclass();  lhs  =  lhsClass.getSuperclass();  lhs  =  rhsClass.getSuperclass();  [CE]  cannot  find  symbol  rhsClass  [FE]          AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]          lhs    =    lhsClass.getSuperclass();    lhs  =  lhsClass.getSuperclass();  lhs  =  lhsClass.getSuperclass();  lhs  =  rhsClass.getSuperclass();  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	                lhs        =        lhsClass.getSuperclass();        lhs    =    lhsClass.getSuperclass();    lhs  =  lhsClass.getSuperclass();  lhs  =  rhsClass.getSuperclass();	  	non-compiled	[CE]  cannot  find  symbol  rhsClass	57	None	add
78	[BUG]  [BUGGY]  isEquals  =  lhs.isEmpty()?  false  :  rhs.equals(rhs);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  lhs.isEmpty()?  false  :  rhs.equals(rhs);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals  =  lhs.isEmpty()?  false  :  rhs.equals(rhs);	  isEquals    =    rhs.isEmpty()?    false    :    lhs.equals(rhs);    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
79	[BUG]  [BUGGY]  isEquals  =  lhsClass.isEmpty()?  false  :  rhs.equals(rhs);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  lhsClass.isEmpty()?  false  :  rhs.equals(rhs);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals  =  lhsClass.isEmpty()?  false  :  rhs.equals(rhs);	  isEquals    =    rhs.isEmpty()?    false    :    lhs.equals(rhs);    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
80	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals    =    lhs.getClass().equals(rhs);    isEquals  =  lhs.getClass().equals(rhs);  isEquals  =  lhs.getClass().equals(rhs);  isEquals  =  lhs.getClass().equals(rhs);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	add	isEquals        =        lhs.getClass().equals(rhs);        isEquals    =    lhs.getClass().equals(rhs);    isEquals  =  lhs.getClass().equals(rhs);  isEquals  =  lhs.getClass().equals(rhs);	  	compilable	  [FE]  AssertionFailedError  	43	1	add
81	[BUG]  [BUGGY]  isEquals    =    lhs.getClass().equals(rhs);    isEquals  =  lhs.getClass().equals(rhs);  isEquals  =  lhs.getClass().equals(rhs);  isEquals  =  lhs.getClass().equals(rhs);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals    =    lhs.getClass().equals(rhs);    isEquals  =  lhs.getClass().equals(rhs);  isEquals  =  lhs.getClass().equals(rhs);  isEquals  =  lhs.getClass().equals(rhs);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals        =        lhs.getClass().equals(rhs);        isEquals    =    lhs.getClass().equals(rhs);    isEquals  =  lhs.getClass().equals(rhs);  isEquals  =  lhs.getClass().equals(rhs);	  	compilable	  [FE]  AssertionFailedError  	43	1	add
82	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals    =    lhs.getClass().equals(rhs);    isEquals  =  lhs.getClass().equals(rhs);  isEquals  =  lhsClass.getClass().equals(rhs);  isEquals  =  lhs.getClass().equals(rhs);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	add	isEquals        =        lhs.getClass().equals(rhs);        isEquals    =    lhs.getClass().equals(rhs);    isEquals  =  lhsClass.getClass().equals(rhs);  isEquals  =  lhs.getClass().equals(rhs);	  	compilable	  [FE]  AssertionFailedError  	43	1	add
83	[BUG]  [BUGGY]  isEquals    =    lhs.getClass().equals(rhs);    isEquals  =  lhs.getClass().equals(rhs);  isEquals  =  lhsClass.getClass().equals(rhs);  isEquals  =  lhs.getClass().equals(rhs);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals    =    lhs.getClass().equals(rhs);    isEquals  =  lhs.getClass().equals(rhs);  isEquals  =  lhsClass.getClass().equals(rhs);  isEquals  =  lhs.getClass().equals(rhs);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals        =        lhs.getClass().equals(rhs);        isEquals    =    lhs.getClass().equals(rhs);    isEquals  =  lhsClass.getClass().equals(rhs);  isEquals  =  lhs.getClass().equals(rhs);	  	compilable	  [FE]  AssertionFailedError  	43	1	add
84	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals    =    lhs.getClass().equals(rhs);    isEquals  =  lhs.getClass().equals(rhs);  isEquals  =  lhsClass.equals(rhs);  isEquals  =  lhs.getClass().equals(rhs);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	add	isEquals        =        lhs.getClass().equals(rhs);        isEquals    =    lhs.getClass().equals(rhs);    isEquals  =  lhsClass.equals(rhs);  isEquals  =  lhs.getClass().equals(rhs);	  	compilable	  [FE]  AssertionFailedError  	43	1	add
85	[BUG]  [BUGGY]  isEquals    =    lhs.getClass().equals(rhs);    isEquals  =  lhs.getClass().equals(rhs);  isEquals  =  lhsClass.equals(rhs);  isEquals  =  lhs.getClass().equals(rhs);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals    =    lhs.getClass().equals(rhs);    isEquals  =  lhs.getClass().equals(rhs);  isEquals  =  lhsClass.equals(rhs);  isEquals  =  lhs.getClass().equals(rhs);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals        =        lhs.getClass().equals(rhs);        isEquals    =    lhs.getClass().equals(rhs);    isEquals  =  lhsClass.equals(rhs);  isEquals  =  lhs.getClass().equals(rhs);	  	compilable	  [FE]  AssertionFailedError  	43	1	add
86	[BUG]  [BUGGY]  isEquals    =    lhs.getClass().equals(rhs);    isEquals  =  lhs.getClass().equals(rhs);  hasEquals  =  lhs.getClass().equals(rhs);  isEquals  =  lhs.getClass().equals(rhs);  [CE]  cannot  find  symbol  hasEquals  [FE]          AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals    =    lhs.getClass().equals(rhs);    isEquals  =  lhs.getClass().equals(rhs);  hasEquals  =  lhs.getClass().equals(rhs);  isEquals  =  lhs.getClass().equals(rhs);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals        =        lhs.getClass().equals(rhs);        isEquals    =    lhs.getClass().equals(rhs);    hasEquals  =  lhs.getClass().equals(rhs);  isEquals  =  lhs.getClass().equals(rhs);	  	non-compiled	[CE]  cannot  find  symbol  hasEquals	43	None	add
87	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals    =    lhs.getClass().equals(rhs);    isEquals  =  lhsClass.getClass().equals(rhs);  isEquals  =  lhs.getClass().equals(rhs);  isEquals  =  lhsClass.getClass().equals(rhs);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	add	isEquals        =        lhs.getClass().equals(rhs);        isEquals    =    lhsClass.getClass().equals(rhs);    isEquals  =  lhs.getClass().equals(rhs);  isEquals  =  lhsClass.getClass().equals(rhs);	  	compilable	  [FE]  AssertionFailedError  	85	1	add
88	[BUG]  [BUGGY]  isEquals    =    lhs.getClass().equals(rhs);    isEquals  =  lhsClass.getClass().equals(rhs);  isEquals  =  lhs.getClass().equals(rhs);  isEquals  =  lhsClass.getClass().equals(rhs);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals    =    lhs.getClass().equals(rhs);    isEquals  =  lhsClass.getClass().equals(rhs);  isEquals  =  lhs.getClass().equals(rhs);  isEquals  =  lhsClass.getClass().equals(rhs);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals        =        lhs.getClass().equals(rhs);        isEquals    =    lhsClass.getClass().equals(rhs);    isEquals  =  lhs.getClass().equals(rhs);  isEquals  =  lhsClass.getClass().equals(rhs);	  	compilable	  [FE]  AssertionFailedError  	85	1	add
89	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals    =    lhs.getClass().equals(rhs);    isEquals  =  lhsClass.getClass().equals(rhs);  isEquals  =  lhsClass.getClass().equals(rhs);  isEquals  =  lhsClass.getClass().equals(rhs);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	add	isEquals        =        lhs.getClass().equals(rhs);        isEquals    =    lhsClass.getClass().equals(rhs);    isEquals  =  lhsClass.getClass().equals(rhs);  isEquals  =  lhsClass.getClass().equals(rhs);	  	compilable	  [FE]  AssertionFailedError  	85	1	add
90	[BUG]  [BUGGY]  isEquals    =    lhs.getClass().equals(rhs);    isEquals  =  lhsClass.getClass().equals(rhs);  isEquals  =  lhsClass.getClass().equals(rhs);  isEquals  =  lhsClass.getClass().equals(rhs);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals    =    lhs.getClass().equals(rhs);    isEquals  =  lhsClass.getClass().equals(rhs);  isEquals  =  lhsClass.getClass().equals(rhs);  isEquals  =  lhsClass.getClass().equals(rhs);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals        =        lhs.getClass().equals(rhs);        isEquals    =    lhsClass.getClass().equals(rhs);    isEquals  =  lhsClass.getClass().equals(rhs);  isEquals  =  lhsClass.getClass().equals(rhs);	  	compilable	  [FE]  AssertionFailedError  	85	1	add
91	[BUG]  [BUGGY]  isEquals    =    lhs.getClass().equals(rhs);    isEquals  =  lhsClass.getClass().equals(rhs);  hasEquals  =  lhs.getClass().equals(rhs);  isEquals  =  lhsClass.getClass().equals(rhs);  [CE]  cannot  find  symbol  hasEquals  [FE]        AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals    =    lhs.getClass().equals(rhs);    isEquals  =  lhsClass.getClass().equals(rhs);  hasEquals  =  lhs.getClass().equals(rhs);  isEquals  =  lhsClass.getClass().equals(rhs);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals        =        lhs.getClass().equals(rhs);        isEquals    =    lhsClass.getClass().equals(rhs);    hasEquals  =  lhs.getClass().equals(rhs);  isEquals  =  lhsClass.getClass().equals(rhs);	  	non-compiled	[CE]  cannot  find  symbol  hasEquals	85	None	add
92	[BUG]  [BUGGY]  isEquals    =    lhs.getClass().equals(rhs);    isEquals  =  lhsClass.getClass().equals(rhs);  areEquals  =  lhs.getClass().equals(rhs);  isEquals  =  lhsClass.getClass().equals(rhs);  [CE]  cannot  find  symbol  areEquals  [FE]          AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals    =    lhs.getClass().equals(rhs);    isEquals  =  lhsClass.getClass().equals(rhs);  areEquals  =  lhs.getClass().equals(rhs);  isEquals  =  lhsClass.getClass().equals(rhs);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals        =        lhs.getClass().equals(rhs);        isEquals    =    lhsClass.getClass().equals(rhs);    areEquals  =  lhs.getClass().equals(rhs);  isEquals  =  lhsClass.getClass().equals(rhs);	  	non-compiled	[CE]  cannot  find  symbol  areEquals	85	None	add
93	[BUG]  [BUGGY]  Object  lhs  =  lhsClass  ==  null?  null  :  lhsClass.getSuperclass();  [CE]  variable  lhs  is  already  defined  in  method  append(Object,Object)  [FE]                    AssertionFailedError      [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  Object  lhs  =  lhsClass  ==  null?  null  :  lhsClass.getSuperclass();  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	Object  lhs  =  lhsClass  ==  null?  null  :  lhsClass.getSuperclass();	  Object    rhs    =    lhsClass    ==    null?    null    :    lhsClass.getSuperclass();    	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  append(Object,Object)	82	None	replace
94	[BUG]  [BUGGY]  Object  rhs  =  lhsClass!=  null?  null  :  lhsClass.getSuperclass();  [CE]  variable  rhs  is  already  defined  in  method  append(Object,Object)  [FE]                      AssertionFailedError      [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  Object  rhs  =  lhsClass!=  null?  null  :  lhsClass.getSuperclass();  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	Object  rhs  =  lhsClass!=  null?  null  :  lhsClass.getSuperclass();	  Object    rhs    =    lhsClass    ==    null?    null    :    lhsClass.getSuperclass();    	non-compiled	[CE]  variable  rhs  is  already  defined  in  method  append(Object,Object)	82	None	replace
95	[BUG]  [BUGGY]  lhs  =  lhs.getClass().equals(rhs);  [CE]  incompatible  types  [FE]          AssertionFailedError      [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  lhs  =  lhs.getClass().equals(rhs);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	lhs  =  lhs.getClass().equals(rhs);	  isEquals    =    lhs.getClass().equals(rhs);    lhs    =    lhs.getClass().equals(rhs);    	non-compiled	[CE]  incompatible  types	87	None	replace
96	[BUG]  [BUGGY]  lhs  =  lhsClass.getClass().equals(rhs);  [CE]  incompatible  types  [FE]            AssertionFailedError      [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  lhs  =  lhsClass.getClass().equals(rhs);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	lhs  =  lhsClass.getClass().equals(rhs);	  isEquals    =    lhs.getClass().equals(rhs);    lhs    =    lhs.getClass().equals(rhs);    	non-compiled	[CE]  incompatible  types	87	None	replace
97	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  lhsClass  =  lhs.getClass();  isEquals  =  lhsClass.getClass().equals(rhs);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	add	lhsClass  =  lhs.getClass();  isEquals  =  lhsClass.getClass().equals(rhs);	  isEquals    =    lhs.getClass().equals(rhs);    isEquals    =    lhsClass.getClass().equals(rhs);    	compilable	  [FE]  AssertionFailedError  	86	8	replace
98	[BUG]  [BUGGY]  lhsClass  =  lhs.getClass();  isEquals  =  lhsClass.getClass().equals(rhs);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  lhsClass  =  lhs.getClass();  isEquals  =  lhsClass.getClass().equals(rhs);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	lhsClass  =  lhs.getClass();  isEquals  =  lhsClass.getClass().equals(rhs);	  isEquals    =    lhs.getClass().equals(rhs);    isEquals    =    lhsClass.getClass().equals(rhs);    	compilable	  [FE]  AssertionFailedError  	86	8	replace
99	[BUG]  [BUGGY]  isEquals  =  lhs.getClass().getName().equals(rhs.getClass());  isEquals  =  lhsClass.getClass().getName().equals(rhs.getName());  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  lhs.getClass().getName().equals(rhs.getClass());  isEquals  =  lhsClass.getClass().getName().equals(rhs.getName());  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals  =  lhs.getClass().getName().equals(rhs.getClass());  isEquals  =  lhsClass.getClass().getName().equals(rhs.getName());	  isEquals    =    lhs.getClass().equals(rhs);    isEquals    =    lhsClass.getClass().equals(rhs);    	non-compiled	[CE]  cannot  find  symbol	86	None	replace
100	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  lhs.getClass().getName().equals(rhs);  isEquals  =  lhsClass.getClass().getName().equals(rhs);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	add	isEquals  =  lhs.getClass().getName().equals(rhs);  isEquals  =  lhsClass.getClass().getName().equals(rhs);	  isEquals    =    lhs.getClass().equals(rhs);    isEquals    =    lhsClass.getClass().equals(rhs);    	compilable	  [FE]  AssertionFailedError  	86	8	replace
101	[BUG]  [BUGGY]  isEquals  =  lhs.getClass().getName().equals(rhs);  isEquals  =  lhsClass.getClass().getName().equals(rhs);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  lhs.getClass().getName().equals(rhs);  isEquals  =  lhsClass.getClass().getName().equals(rhs);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals  =  lhs.getClass().getName().equals(rhs);  isEquals  =  lhsClass.getClass().getName().equals(rhs);	  isEquals    =    lhs.getClass().equals(rhs);    isEquals    =    lhsClass.getClass().equals(rhs);    	compilable	  [FE]  AssertionFailedError  	86	8	replace
102	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  lhsClass  =  lhsClass.getSuperclass();  isEquals  =  lhsClass.equals(rhs);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	add	lhsClass  =  lhsClass.getSuperclass();  isEquals  =  lhsClass.equals(rhs);	  isEquals    =    lhsClass.equals(rhs);    isEquals    =    lhsClass.equals(rhs);    	compilable	  [FE]  AssertionFailedError  	53	8	replace
103	[BUG]  [BUGGY]  lhsClass  =  lhsClass.getSuperclass();  isEquals  =  lhsClass.equals(rhs);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  lhsClass  =  lhsClass.getSuperclass();  isEquals  =  lhsClass.equals(rhs);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	lhsClass  =  lhsClass.getSuperclass();  isEquals  =  lhsClass.equals(rhs);	  isEquals    =    lhsClass.equals(rhs);    isEquals    =    lhsClass.equals(rhs);    	compilable	  [FE]  AssertionFailedError  	53	8	replace
104	[BUG]  [BUGGY]  isEquals  =  lhsClass.isEmpty();  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  lhsClass.isEmpty();  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals  =  lhsClass.isEmpty();	  isEquals    =    lhsClass.equals(rhs);    isEquals    =    lhsClass.equals(rhs);    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
105	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  lhs  =  lhsClass  ==  null?  null  :  lhsClass.getSuperclass();  lhs  =  lhsClass  ==  null?  null  :  lhsClass.getSuperclass();  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	add	lhs    =    lhsClass    ==    null?    null    :    lhsClass.getSuperclass();    lhs  =  lhsClass  ==  null?  null  :  lhsClass.getSuperclass();	  	compilable	  [FE]  AssertionFailedError  	100	8	add
106	[BUG]  [BUGGY]  lhs  =  lhsClass  ==  null?  null  :  lhsClass.getSuperclass();  lhs  =  lhsClass  ==  null?  null  :  lhsClass.getSuperclass();  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  lhs  =  lhsClass  ==  null?  null  :  lhsClass.getSuperclass();  lhs  =  lhsClass  ==  null?  null  :  lhsClass.getSuperclass();  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	lhs    =    lhsClass    ==    null?    null    :    lhsClass.getSuperclass();    lhs  =  lhsClass  ==  null?  null  :  lhsClass.getSuperclass();	  	compilable	  [FE]  AssertionFailedError  	100	8	add
107	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  lhs  =  lhsClass  ==  null?  null  :  lhsClass.getSuperclass();  lhs  =  lhsClass!=  null?  null  :  lhsClass.getSuperclass();  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	add	lhs    =    lhsClass    ==    null?    null    :    lhsClass.getSuperclass();    lhs  =  lhsClass!=  null?  null  :  lhsClass.getSuperclass();	  	compilable	  [FE]  NullPointerException  	100	10	add
108	[BUG]  [BUGGY]  lhs  =  lhsClass  ==  null?  null  :  lhsClass.getSuperclass();  lhs  =  lhsClass!=  null?  null  :  lhsClass.getSuperclass();  [FE]  NullPointerException  [FE]      AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  lhs  =  lhsClass  ==  null?  null  :  lhsClass.getSuperclass();  lhs  =  lhsClass!=  null?  null  :  lhsClass.getSuperclass();  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	lhs    =    lhsClass    ==    null?    null    :    lhsClass.getSuperclass();    lhs  =  lhsClass!=  null?  null  :  lhsClass.getSuperclass();	  	compilable	  [FE]  NullPointerException  	100	10	add
109	[BUG]  [BUGGY]  lhs  =  lhsClass  ==  null?  null  :  lhsClass.getSuperclass();  lhs  =  lhsClass  ==  null?  null  :  lhsClass.getSuperclass());  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  lhs  =  lhsClass  ==  null?  null  :  lhsClass.getSuperclass();  lhs  =  lhsClass  ==  null?  null  :  lhsClass.getSuperclass());  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	lhs    =    lhsClass    ==    null?    null    :    lhsClass.getSuperclass();    lhs  =  lhsClass  ==  null?  null  :  lhsClass.getSuperclass());	  	non-compiled	[CE]  ';'  expected	100	None	add
110	[BUG]  [BUGGY]  lhs  =  lhsClass  ==  null?  null  :  lhsClass.getSuperclass();  lhs  =  lhsClass  >=  null?  null  :  lhsClass.getSuperclass();  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]          AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  lhs  =  lhsClass  ==  null?  null  :  lhsClass.getSuperclass();  lhs  =  lhsClass  >=  null?  null  :  lhsClass.getSuperclass();  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	lhs    =    lhsClass    ==    null?    null    :    lhsClass.getSuperclass();    lhs  =  lhsClass  >=  null?  null  :  lhsClass.getSuperclass();	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	100	None	add
111	[BUG]  [BUGGY]  Class  <?>  lhsClass  =  rhs.getClass();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  AssertionFailedError      [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  Class  <?>  lhsClass  =  rhs.getClass();  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	Class  <?>  lhsClass  =  rhs.getClass();	  Class    <?>    lhsClass    =    lhs.getClass();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	28	None	replace
112	[BUG]  [BUGGY]  Class  <?>  lhsClass  =  lhs.getReturnType();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    AssertionFailedError      [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  Class  <?>  lhsClass  =  lhs.getReturnType();  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	Class  <?>  lhsClass  =  lhs.getReturnType();	  Class    <?>    lhsClass    =    lhs.getClass();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	28	None	replace
113	[BUG]  [BUGGY]  isEquals  =  lhsClass.equals(true);  [CE]  method  equals  in  class  Object  cannot  be  applied  to  given  types;  [FE]          AssertionFailedError      [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  lhsClass.equals(true);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals  =  lhsClass.equals(true);	  isEquals    =    lhsClass.equals(false);    	non-compiled	[CE]  method  equals  in  class  Object  cannot  be  applied  to  given  types;	110	None	replace
114	[BUG]  [BUGGY]  isEquals  =  lhsClass.equals(false,  rhs);  [CE]  method  equals  in  class  Object  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError      [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  lhsClass.equals(false,  rhs);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals  =  lhsClass.equals(false,  rhs);	  isEquals    =    lhsClass.equals(false);    	non-compiled	[CE]  method  equals  in  class  Object  cannot  be  applied  to  given  types;	110	None	replace
115	[BUG]  [BUGGY]  isEquals  =  lhsClass.equals(rhsClass,  false);  [CE]  cannot  find  symbol  rhsClass  [FE]              AssertionFailedError      [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  lhsClass.equals(rhsClass,  false);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals  =  lhsClass.equals(rhsClass,  false);	  isEquals    =    lhsClass.equals(false);    	non-compiled	[CE]  cannot  find  symbol  rhsClass	110	None	replace
116	[BUG]  [BUGGY]  Class  rhsClass  =  lhs.getClass();  Class  rhsClass  =  lhs.getClass();  [CE]  variable  rhsClass  is  already  defined  in  method  append(Object,Object)  [FE]    AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  Class  rhsClass  =  lhs.getClass();  Class  rhsClass  =  lhs.getClass();  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	Class    rhsClass    =    lhs.getClass();    Class  rhsClass  =  lhs.getClass();	  	non-compiled	[CE]  variable  rhsClass  is  already  defined  in  method  append(Object,Object)	49	None	add
117	[BUG]  [BUGGY]  Class  rhsClass  =  lhs.getClass();  Class  lhsClass  =  lhs.getClass();  [CE]  variable  lhsClass  is  already  defined  in  method  append(Object,Object)  [FE]      AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  Class  rhsClass  =  lhs.getClass();  Class  lhsClass  =  lhs.getClass();  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	Class    rhsClass    =    lhs.getClass();    Class  lhsClass  =  lhs.getClass();	  	non-compiled	[CE]  variable  lhsClass  is  already  defined  in  method  append(Object,Object)	49	None	add
118	[BUG]  [BUGGY]  Class  rhsClass  =  lhs.getClass();  Class  rhsClass  =  Lhs.getClass();  [CE]  variable  rhsClass  is  already  defined  in  method  append(Object,Object)  [FE]        AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  Class  rhsClass  =  lhs.getClass();  Class  rhsClass  =  Lhs.getClass();  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	Class    rhsClass    =    lhs.getClass();    Class  rhsClass  =  Lhs.getClass();	  	non-compiled	[CE]  variable  rhsClass  is  already  defined  in  method  append(Object,Object)	49	None	add
119	[BUG]  [BUGGY]  Class  lhsClass  =  rhs.getRawClass();  [CE]  variable  lhsClass  is  already  defined  in  method  append(Object,Object)  [FE]                  AssertionFailedError      [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  Class  lhsClass  =  rhs.getRawClass();  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	Class  lhsClass  =  rhs.getRawClass();	  Class    lhsClass    =    lhs.getRawClass();    	non-compiled	[CE]  variable  lhsClass  is  already  defined  in  method  append(Object,Object)	12	None	replace
120	[BUG]  [BUGGY]  isEquals  =  lhsClass.getSimpleName().isArray();  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  lhsClass.getSimpleName().isArray();  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals  =  lhsClass.getSimpleName().isArray();	  isEquals    =    lhs.getClass().isArray();    	non-compiled	[CE]  cannot  find  symbol	41	None	replace
121	[BUG]  [BUGGY]  isEquals  =  lhsClass.getRawClass().isArray();  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  lhsClass.getRawClass().isArray();  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals  =  lhsClass.getRawClass().isArray();	  isEquals    =    lhs.getClass().isArray();    	non-compiled	[CE]  cannot  find  symbol	41	None	replace
122	[BUG]  [BUGGY]  Class  <?>  rhsClass  =  lhs.getSuperclass();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]    AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  Class  <?>  rhsClass  =  lhs.getSuperclass();  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	Class  <?>  rhsClass  =  lhs.getSuperclass();	          Class    rhsClass    =    lhsClass.getSuperclass();    Class    hsClass    =    lhsClass.getSuperclass();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	18	None	replace
123	[BUG]  [BUGGY]  Object  lhsClass  =  lhs.getSuperclass();  [CE]  variable  lhsClass  is  already  defined  in  method  append(Object,Object)  [FE]      AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  Object  lhsClass  =  lhs.getSuperclass();  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	Object  lhsClass  =  lhs.getSuperclass();	          Class    rhsClass    =    lhsClass.getSuperclass();    Class    hsClass    =    lhsClass.getSuperclass();    	non-compiled	[CE]  variable  lhsClass  is  already  defined  in  method  append(Object,Object)	18	None	replace
124	[BUG]  [BUGGY]  isEquals  =  lhsClass.getClass().equals(rhsClass);  [CE]  cannot  find  symbol  rhsClass  [FE]            AssertionFailedError      [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  lhsClass.getClass().equals(rhsClass);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals  =  lhsClass.getClass().equals(rhsClass);	  isEquals    =    lhs.getClass().equals(rhsClass);    	non-compiled	[CE]  cannot  find  symbol  rhsClass	42	None	replace
125	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  lhsClass.getClass().equals(lhsClass);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	add	isEquals  =  lhsClass.getClass().equals(lhsClass);	  isEquals    =    lhs.getClass().equals(rhsClass);    	compilable	  [FE]  AssertionFailedError  	42	8	replace
126	[BUG]  [BUGGY]  isEquals  =  lhsClass.getClass().equals(lhsClass);  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  lhsClass.getClass().equals(lhsClass);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals  =  lhsClass.getClass().equals(lhsClass);	  isEquals    =    lhs.getClass().equals(rhsClass);    	compilable	  [FE]  AssertionFailedError  	42	8	replace
127	[BUG]  [BUGGY]  Class  lhsClass  =  lhs.getSuperclass();  LhsClass  =  lhsClass.getSuperclass();  [CE]  variable  lhsClass  is  already  defined  in  method  append(Object,Object)  [FE]          AssertionFailedError      [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  Class  lhsClass  =  lhs.getSuperclass();  LhsClass  =  lhsClass.getSuperclass();  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	Class  lhsClass  =  lhs.getSuperclass();  LhsClass  =  lhsClass.getSuperclass();	          lhsClass    =    lhsClass.getSuperclass();    LhsClass    =    lhsClass.getSuperclass();    	non-compiled	[CE]  variable  lhsClass  is  already  defined  in  method  append(Object,Object)	7	None	replace
128	[BUG]  [BUGGY]  LhsClass  =  lhsClass.getSuperclass();  [CE]  cannot  find  symbol  LhsClass  [FE]            AssertionFailedError      [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  LhsClass  =  lhsClass.getSuperclass();  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	LhsClass  =  lhsClass.getSuperclass();	          lhsClass    =    lhsClass.getSuperclass();    LhsClass    =    lhsClass.getSuperclass();    	non-compiled	[CE]  cannot  find  symbol  LhsClass	7	None	replace
129	[BUG]  [BUGGY]  lhsClass  =  lhs.getSuperclass();  LhsClass  =  lhsClass.getSuperclass();  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  lhsClass  =  lhs.getSuperclass();  LhsClass  =  lhsClass.getSuperclass();  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	lhsClass  =  lhs.getSuperclass();  LhsClass  =  lhsClass.getSuperclass();	          lhsClass    =    lhsClass.getSuperclass();    LhsClass    =    lhsClass.getSuperclass();    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
130	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  lhsClass.getName().equals(lhsClass.getName());  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	add	isEquals  =  lhsClass.getName().equals(lhsClass.getName());	  isEquals    =    lhsClass.getName().equals(rhsClass.getName());    	compilable	  [FE]  AssertionFailedError  	66	7	replace
131	[BUG]  [BUGGY]  isEquals  =  lhsClass.getName().equals(lhsClass.getName());  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  lhsClass.getName().equals(lhsClass.getName());  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals  =  lhsClass.getName().equals(lhsClass.getName());	  isEquals    =    lhsClass.getName().equals(rhsClass.getName());    	compilable	  [FE]  AssertionFailedError  	66	7	replace
132	[BUG]  [BUGGY]  isEquals  =  rhsClass.getName().equals(lhsClass.getName());  [CE]  cannot  find  symbol  rhsClass  [FE]              AssertionFailedError      [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  rhsClass.getName().equals(lhsClass.getName());  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals  =  rhsClass.getName().equals(lhsClass.getName());	  isEquals    =    lhsClass.getName().equals(rhsClass.getName());    	non-compiled	[CE]  cannot  find  symbol  rhsClass	66	None	replace
133	[BUG]  [BUGGY]  isEquals  =  lhsClass.getName().equals(this.rhsClass.getName());  [CE]  cannot  find  symbol  rhsClass  [FE]                AssertionFailedError      [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  lhsClass.getName().equals(this.rhsClass.getName());  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals  =  lhsClass.getName().equals(this.rhsClass.getName());	  isEquals    =    lhsClass.getName().equals(rhsClass.getName());    	non-compiled	[CE]  cannot  find  symbol  rhsClass	66	None	replace
134	[BUG]  [BUGGY]  Class  <?>  lhs  =  lhs.getRawClass();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError      [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  Class  <?>  lhs  =  lhs.getRawClass();  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	Class  <?>  lhs  =  lhs.getRawClass();	  Class    <?>    lhs    =    lhsClass.getRawClass();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	84	None	replace
135	[BUG]  [BUGGY]  Class  lhsClass  =  lhs,  rhs.getSuperclass();  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  Class  lhsClass  =  lhs,  rhs.getSuperclass();  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	Class  lhsClass  =  lhs,  rhs.getSuperclass();	  Class    rhsClass    =    lhs.getSuperclass();    	non-compiled	[CE]  ';'  expected	68	None	replace
136	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  lhs.equals(lhsClass);  isEquals  =  lhs.equals(lhsClass);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	add	isEquals    =    lhs.equals(lhsClass);    isEquals  =  lhs.equals(lhsClass);	  	compilable	  [FE]  AssertionFailedError  	32	1	add
137	[BUG]  [BUGGY]  isEquals  =  lhs.equals(lhsClass);  isEquals  =  lhs.equals(lhsClass);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  lhs.equals(lhsClass);  isEquals  =  lhs.equals(lhsClass);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals    =    lhs.equals(lhsClass);    isEquals  =  lhs.equals(lhsClass);	  	compilable	  [FE]  AssertionFailedError  	32	1	add
138	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  lhs.equals(lhsClass);  isEquals  =  lhs.getClass().equals(lhsClass);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	add	isEquals    =    lhs.equals(lhsClass);    isEquals  =  lhs.getClass().equals(lhsClass);	  	compilable	  [FE]  AssertionFailedError  	32	1	add
139	[BUG]  [BUGGY]  isEquals  =  lhs.equals(lhsClass);  isEquals  =  lhs.getClass().equals(lhsClass);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  lhs.equals(lhsClass);  isEquals  =  lhs.getClass().equals(lhsClass);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals    =    lhs.equals(lhsClass);    isEquals  =  lhs.getClass().equals(lhsClass);	  	compilable	  [FE]  AssertionFailedError  	32	1	add
140	[BUG]  [BUGGY]  isEquals  =  lhs.equals(lhsClass);  areEquals  =  lhs.equals(lhsClass);  [CE]  cannot  find  symbol  areEquals  [FE]        AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  lhs.equals(lhsClass);  areEquals  =  lhs.equals(lhsClass);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals    =    lhs.equals(lhsClass);    areEquals  =  lhs.equals(lhsClass);	  	non-compiled	[CE]  cannot  find  symbol  areEquals	32	None	add
141	[BUG]  [BUGGY]  isEquals  =  lhs.equals(lhsClass);  isEquals  =  lhs.equals(rhsClass);  [CE]  cannot  find  symbol  rhsClass  [FE]          AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  lhs.equals(lhsClass);  isEquals  =  lhs.equals(rhsClass);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals    =    lhs.equals(lhsClass);    isEquals  =  lhs.equals(rhsClass);	  	non-compiled	[CE]  cannot  find  symbol  rhsClass	32	None	add
142	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]          lhsClass    =    lhsClass.getSuperclass();    lhsClass  =  lhsClass.getSuperclass();  lhsClass  =  lhsClass.getSuperclass();  lhsClass  =  lhsClass.getSuperclass();  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	add	                lhsClass        =        lhsClass.getSuperclass();        lhsClass    =    lhsClass.getSuperclass();    lhsClass  =  lhsClass.getSuperclass();  lhsClass  =  lhsClass.getSuperclass();	  	compilable	  [FE]  NullPointerException  	5	10	add
143	[BUG]  [BUGGY]          lhsClass    =    lhsClass.getSuperclass();    lhsClass  =  lhsClass.getSuperclass();  lhsClass  =  lhsClass.getSuperclass();  lhsClass  =  lhsClass.getSuperclass();  [FE]  NullPointerException  [FE]    AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]          lhsClass    =    lhsClass.getSuperclass();    lhsClass  =  lhsClass.getSuperclass();  lhsClass  =  lhsClass.getSuperclass();  lhsClass  =  lhsClass.getSuperclass();  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	                lhsClass        =        lhsClass.getSuperclass();        lhsClass    =    lhsClass.getSuperclass();    lhsClass  =  lhsClass.getSuperclass();  lhsClass  =  lhsClass.getSuperclass();	  	compilable	  [FE]  NullPointerException  	5	10	add
144	[BUG]  [BUGGY]          lhsClass    =    lhsClass.getSuperclass();    lhsClass  =  lhsClass.getSuperclass();  Class  lhsClass  =  lhsClass.getSuperclass();  lhsClass  =  lhsClass.getSuperclass();  [CE]  variable  lhsClass  is  already  defined  in  method  append(Object,Object)  [FE]      AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]          lhsClass    =    lhsClass.getSuperclass();    lhsClass  =  lhsClass.getSuperclass();  Class  lhsClass  =  lhsClass.getSuperclass();  lhsClass  =  lhsClass.getSuperclass();  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	                lhsClass        =        lhsClass.getSuperclass();        lhsClass    =    lhsClass.getSuperclass();    Class  lhsClass  =  lhsClass.getSuperclass();  lhsClass  =  lhsClass.getSuperclass();	  	non-compiled	[CE]  variable  lhsClass  is  already  defined  in  method  append(Object,Object)	5	None	add
145	[BUG]  [BUGGY]          lhsClass    =    lhsClass.getSuperclass();    lhsClass  =  lhsClass.getSuperclass();  LhsClass  =  lhsClass.getSuperclass();  lhsClass  =  lhsClass.getSuperclass();  [CE]  cannot  find  symbol  LhsClass  [FE]        AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]          lhsClass    =    lhsClass.getSuperclass();    lhsClass  =  lhsClass.getSuperclass();  LhsClass  =  lhsClass.getSuperclass();  lhsClass  =  lhsClass.getSuperclass();  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	                lhsClass        =        lhsClass.getSuperclass();        lhsClass    =    lhsClass.getSuperclass();    LhsClass  =  lhsClass.getSuperclass();  lhsClass  =  lhsClass.getSuperclass();	  	non-compiled	[CE]  cannot  find  symbol  LhsClass	5	None	add
146	[BUG]  [BUGGY]          lhsClass    =    lhsClass.getSuperclass();    lhsClass  =  lhsClass.getSuperclass();  class  =  lhsClass.getSuperclass();  lhsClass  =  lhsClass.getSuperclass();  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]          lhsClass    =    lhsClass.getSuperclass();    lhsClass  =  lhsClass.getSuperclass();  class  =  lhsClass.getSuperclass();  lhsClass  =  lhsClass.getSuperclass();  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	                lhsClass        =        lhsClass.getSuperclass();        lhsClass    =    lhsClass.getSuperclass();    class  =  lhsClass.getSuperclass();  lhsClass  =  lhsClass.getSuperclass();	  	non-compiled	[CE]  <identifier>  expected	5	None	add
147	[BUG]  [BUGGY]  isEquals  =  lhs,  rhs.isEquals(rhs);  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  lhs,  rhs.isEquals(rhs);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals  =  lhs,  rhs.isEquals(rhs);	  isEquals    =    rhs.isEquals(lhs);    	non-compiled	[CE]  ';'  expected	24	None	replace
148	[BUG]  [BUGGY]  Lhs  lhs  =  lhsClass.getRawClass();  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  Lhs  lhs  =  lhsClass.getRawClass();  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	Lhs  lhs  =  lhsClass.getRawClass();	  lhs    =    lhsClass.getRawClass();    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
149	[BUG]  [BUGGY]  lhs  =  lhs.getRawClass();  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  lhs  =  lhs.getRawClass();  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	lhs  =  lhs.getRawClass();	  lhs    =    lhsClass.getRawClass();    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
150	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals    =    lhs.getClass().equals(rhs);    isEquals  =  lhsClass.equals(rhs);  isEquals  =  lhs.getClass().equals(rhs);  isEquals  =  lhsClass.equals(rhs);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	add	isEquals        =        lhs.getClass().equals(rhs);        isEquals    =    lhsClass.equals(rhs);    isEquals  =  lhs.getClass().equals(rhs);  isEquals  =  lhsClass.equals(rhs);	  	compilable	  [FE]  AssertionFailedError  	46	1	add
151	[BUG]  [BUGGY]  isEquals    =    lhs.getClass().equals(rhs);    isEquals  =  lhsClass.equals(rhs);  isEquals  =  lhs.getClass().equals(rhs);  isEquals  =  lhsClass.equals(rhs);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals    =    lhs.getClass().equals(rhs);    isEquals  =  lhsClass.equals(rhs);  isEquals  =  lhs.getClass().equals(rhs);  isEquals  =  lhsClass.equals(rhs);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals        =        lhs.getClass().equals(rhs);        isEquals    =    lhsClass.equals(rhs);    isEquals  =  lhs.getClass().equals(rhs);  isEquals  =  lhsClass.equals(rhs);	  	compilable	  [FE]  AssertionFailedError  	46	1	add
152	[BUG]  [BUGGY]  isEquals    =    lhs.getClass().equals(rhs);    isEquals  =  lhsClass.equals(rhs);  hasEquals  =  lhs.getClass().equals(rhs);  isEquals  =  lhsClass.equals(rhs);  [CE]  cannot  find  symbol  hasEquals  [FE]      AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals    =    lhs.getClass().equals(rhs);    isEquals  =  lhsClass.equals(rhs);  hasEquals  =  lhs.getClass().equals(rhs);  isEquals  =  lhsClass.equals(rhs);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals        =        lhs.getClass().equals(rhs);        isEquals    =    lhsClass.equals(rhs);    hasEquals  =  lhs.getClass().equals(rhs);  isEquals  =  lhsClass.equals(rhs);	  	non-compiled	[CE]  cannot  find  symbol  hasEquals	46	None	add
153	[BUG]  [BUGGY]  isEquals    =    lhs.getClass().equals(rhs);    isEquals  =  lhsClass.equals(rhs);  areEquals  =  lhs.getClass().equals(rhs);  isEquals  =  lhsClass.equals(rhs);  [CE]  cannot  find  symbol  areEquals  [FE]        AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals    =    lhs.getClass().equals(rhs);    isEquals  =  lhsClass.equals(rhs);  areEquals  =  lhs.getClass().equals(rhs);  isEquals  =  lhsClass.equals(rhs);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals        =        lhs.getClass().equals(rhs);        isEquals    =    lhsClass.equals(rhs);    areEquals  =  lhs.getClass().equals(rhs);  isEquals  =  lhsClass.equals(rhs);	  	non-compiled	[CE]  cannot  find  symbol  areEquals	46	None	add
154	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals    =    lhs.getClass().equals(rhs);    isEquals  =  lhsClass.equals(rhs);  isEquals  =  lhsClass.equals(rhs);  isEquals  =  lhsClass.equals(rhs);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	add	isEquals        =        lhs.getClass().equals(rhs);        isEquals    =    lhsClass.equals(rhs);    isEquals  =  lhsClass.equals(rhs);  isEquals  =  lhsClass.equals(rhs);	  	compilable	  [FE]  AssertionFailedError  	46	1	add
155	[BUG]  [BUGGY]  isEquals    =    lhs.getClass().equals(rhs);    isEquals  =  lhsClass.equals(rhs);  isEquals  =  lhsClass.equals(rhs);  isEquals  =  lhsClass.equals(rhs);  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals    =    lhs.getClass().equals(rhs);    isEquals  =  lhsClass.equals(rhs);  isEquals  =  lhsClass.equals(rhs);  isEquals  =  lhsClass.equals(rhs);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals        =        lhs.getClass().equals(rhs);        isEquals    =    lhsClass.equals(rhs);    isEquals  =  lhsClass.equals(rhs);  isEquals  =  lhsClass.equals(rhs);	  	compilable	  [FE]  AssertionFailedError  	46	1	add
156	[BUG]  [BUGGY]  isEquals  =  rhs.isEmpty()?  null  :  lhsClass.equals(rhs);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  rhs.isEmpty()?  null  :  lhsClass.equals(rhs);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals  =  rhs.isEmpty()?  null  :  lhsClass.equals(rhs);	  isEquals    =    lhsClass.isEmpty()?    null    :    lhsClass.equals(rhs);    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
157	[BUG]  [BUGGY]  isEquals  =  rhsClass.isEmpty()?  null  :  lhsClass.equals(rhs);  [CE]  cannot  find  symbol  rhsClass  [FE]          AssertionFailedError      [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  rhsClass.isEmpty()?  null  :  lhsClass.equals(rhs);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals  =  rhsClass.isEmpty()?  null  :  lhsClass.equals(rhs);	  isEquals    =    lhsClass.isEmpty()?    null    :    lhsClass.equals(rhs);    	non-compiled	[CE]  cannot  find  symbol  rhsClass	64	None	replace
158	[BUG]  [BUGGY]  isEquals  =  lhsClass.isEmpty()?  null  :  rhsClass.equals(lhs);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  lhsClass.isEmpty()?  null  :  rhsClass.equals(lhs);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals  =  lhsClass.isEmpty()?  null  :  rhsClass.equals(lhs);	  isEquals    =    lhsClass.isEmpty()?    null    :    lhsClass.equals(rhs);    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
159	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  lhs.getClass().isArray();  isEquals  =  lhs.getClass().equals(rhs);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	add	isEquals  =  lhs.getClass().isArray();  isEquals  =  lhs.getClass().equals(rhs);	  isEquals    =    lhs.getClass().equals(rhs);    isEquals    =    lhs.getClass().equals(rhs);    	compilable	  [FE]  AssertionFailedError  	44	8	replace
160	[BUG]  [BUGGY]  isEquals  =  lhs.getClass().isArray();  isEquals  =  lhs.getClass().equals(rhs);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  lhs.getClass().isArray();  isEquals  =  lhs.getClass().equals(rhs);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals  =  lhs.getClass().isArray();  isEquals  =  lhs.getClass().equals(rhs);	  isEquals    =    lhs.getClass().equals(rhs);    isEquals    =    lhs.getClass().equals(rhs);    	compilable	  [FE]  AssertionFailedError  	44	8	replace
161	[BUG]  [BUGGY]  lhsClass  =  lhs.getClass().equals(rhs);  [CE]  incompatible  types  [FE]          AssertionFailedError      [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  lhsClass  =  lhs.getClass().equals(rhs);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	lhsClass  =  lhs.getClass().equals(rhs);	  isEquals    =    lhs.getClass().equals(rhs);    areEquals    =    lhs.getClass().equals(rhs);    	non-compiled	[CE]  incompatible  types	45	None	replace
162	[BUG]  [BUGGY]  areEquals  =  lhs.getClass().equals(rhs);  [CE]  cannot  find  symbol  areEquals  [FE]            AssertionFailedError      [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  areEquals  =  lhs.getClass().equals(rhs);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	areEquals  =  lhs.getClass().equals(rhs);	  isEquals    =    lhs.getClass().equals(rhs);    areEquals    =    lhs.getClass().equals(rhs);    	non-compiled	[CE]  cannot  find  symbol  areEquals	45	None	replace
163	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  lhsClass.getName().equals(rhs);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	add	isEquals  =  lhsClass.getName().equals(rhs);	  isEquals    =    lhs.getClass().getName().equals(rhs);    	compilable	  [FE]  AssertionFailedError  	77	8	replace
164	[BUG]  [BUGGY]  isEquals  =  lhsClass.getName().equals(rhs);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  lhsClass.getName().equals(rhs);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals  =  lhsClass.getName().equals(rhs);	  isEquals    =    lhs.getClass().getName().equals(rhs);    	compilable	  [FE]  AssertionFailedError  	77	8	replace
165	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  lhs.getClass().getSimpleName().equals(rhs);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	add	isEquals  =  lhs.getClass().getSimpleName().equals(rhs);	  isEquals    =    lhs.getClass().getName().equals(rhs);    	compilable	  [FE]  AssertionFailedError  	77	8	replace
166	[BUG]  [BUGGY]  isEquals  =  lhs.getClass().getSimpleName().equals(rhs);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  lhs.getClass().getSimpleName().equals(rhs);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals  =  lhs.getClass().getSimpleName().equals(rhs);	  isEquals    =    lhs.getClass().getName().equals(rhs);    	compilable	  [FE]  AssertionFailedError  	77	8	replace
167	[BUG]  [BUGGY]  isEquals  =  lhs.getClass().getName().equals(rhsClass);  [CE]  cannot  find  symbol  rhsClass  [FE]        AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  lhs.getClass().getName().equals(rhsClass);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals  =  lhs.getClass().getName().equals(rhsClass);	  isEquals    =    lhs.getClass().getName().equals(rhs);    	non-compiled	[CE]  cannot  find  symbol  rhsClass	77	None	replace
168	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  lhs.getClass().isArray();  isEquals  =  lhsClass.equals(rhs);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	add	isEquals  =  lhs.getClass().isArray();  isEquals  =  lhsClass.equals(rhs);	  isEquals    =    lhs.getClass().equals(rhs);    isEquals    =    lhsClass.equals(rhs);    	compilable	  [FE]  AssertionFailedError  	47	8	replace
169	[BUG]  [BUGGY]  isEquals  =  lhs.getClass().isArray();  isEquals  =  lhsClass.equals(rhs);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  lhs.getClass().isArray();  isEquals  =  lhsClass.equals(rhs);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals  =  lhs.getClass().isArray();  isEquals  =  lhsClass.equals(rhs);	  isEquals    =    lhs.getClass().equals(rhs);    isEquals    =    lhsClass.equals(rhs);    	compilable	  [FE]  AssertionFailedError  	47	8	replace
170	[BUG]  [BUGGY]  Lhs  lhs  =  lhsClass.getSuperclass();  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  Lhs  lhs  =  lhsClass.getSuperclass();  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	Lhs  lhs  =  lhsClass.getSuperclass();	          lhs    =    lhsClass.getSuperclass();    lhs    =    lhsClass.getSuperclass();    	non-compiled	[CE]  cannot  find  symbol	58	None	replace
171	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  lhs.getClass().isArray();  isEquals  =  lhs.getClass().isArray();  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	add	isEquals    =    lhs.getClass().isArray();    isEquals  =  lhs.getClass().isArray();	  	compilable	  [FE]  AssertionFailedError  	40	1	add
172	[BUG]  [BUGGY]  isEquals  =  lhs.getClass().isArray();  isEquals  =  lhs.getClass().isArray();  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  lhs.getClass().isArray();  isEquals  =  lhs.getClass().isArray();  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals    =    lhs.getClass().isArray();    isEquals  =  lhs.getClass().isArray();	  	compilable	  [FE]  AssertionFailedError  	40	1	add
173	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  lhs.getClass().isArray();  isEquals  =  lhsClass.getClass().isArray();  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	add	isEquals    =    lhs.getClass().isArray();    isEquals  =  lhsClass.getClass().isArray();	  	compilable	  [FE]  AssertionFailedError  	40	1	add
174	[BUG]  [BUGGY]  isEquals  =  lhs.getClass().isArray();  isEquals  =  lhsClass.getClass().isArray();  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  lhs.getClass().isArray();  isEquals  =  lhsClass.getClass().isArray();  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals    =    lhs.getClass().isArray();    isEquals  =  lhsClass.getClass().isArray();	  	compilable	  [FE]  AssertionFailedError  	40	1	add
175	[BUG]  [BUGGY]  isEquals  =  lhs.getClass().isArray();  areEquals  =  lhs.getClass().isArray();  [CE]  cannot  find  symbol  areEquals  [FE]        AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  lhs.getClass().isArray();  areEquals  =  lhs.getClass().isArray();  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals    =    lhs.getClass().isArray();    areEquals  =  lhs.getClass().isArray();	  	non-compiled	[CE]  cannot  find  symbol  areEquals	40	None	add
176	[BUG]  [BUGGY]  isEquals  =  lhs.getClass().isArray();  isEquals  =  lhs.getClass().isObject();  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  lhs.getClass().isArray();  isEquals  =  lhs.getClass().isObject();  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals    =    lhs.getClass().isArray();    isEquals  =  lhs.getClass().isObject();	  	non-compiled	[CE]  cannot  find  symbol	40	None	add
177	[BUG]  [BUGGY]  Class  <?>  lhsClass  =  rhs.getRawClass();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError      [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  Class  <?>  lhsClass  =  rhs.getRawClass();  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	Class  <?>  lhsClass  =  rhs.getRawClass();	  Class    <?>    lhsClass    =    lhs.getRawClass();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	62	None	replace
178	[BUG]  [BUGGY]  Class  <?>  rhsClass  =  lhs.getRawClass();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  Class  <?>  rhsClass  =  lhs.getRawClass();  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	Class  <?>  rhsClass  =  lhs.getRawClass();	  Class    <?>    lhsClass    =    lhs.getRawClass();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	62	None	replace
179	[BUG]  [BUGGY]  lhsClass  =  lhs.getSuperclass();  Class  rhsClass  =  lhsClass.getSuperclass();  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  lhsClass  =  lhs.getSuperclass();  Class  rhsClass  =  lhsClass.getSuperclass();  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	lhsClass  =  lhs.getSuperclass();  Class  rhsClass  =  lhsClass.getSuperclass();	          Class    rhsClass    =    lhsClass.getSuperclass();    Class    rhsClass    =    lhsClass.getSuperclass());    	non-compiled	[CE]  cannot  find  symbol	97	None	replace
180	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  lhsClass  =  lhs.getClass();  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	add	lhsClass  =  lhs.getClass();	          Class    rhsClass    =    lhsClass.getClass();    class    rhsClass    =    lhsClass.getClass();    	compilable	  [FE]  AssertionFailedError  	99	7	replace
181	[BUG]  [BUGGY]  lhsClass  =  lhs.getClass();  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  lhsClass  =  lhs.getClass();  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	lhsClass  =  lhs.getClass();	          Class    rhsClass    =    lhsClass.getClass();    class    rhsClass    =    lhsClass.getClass();    	compilable	  [FE]  AssertionFailedError  	99	7	replace
182	[BUG]  [BUGGY]  hasEquals  =  lhsClass.equals(rhs);  [CE]  cannot  find  symbol  hasEquals  [FE]            AssertionFailedError      [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  hasEquals  =  lhsClass.equals(rhs);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	hasEquals  =  lhsClass.equals(rhs);	  isEquals    =    lhsClass.equals(rhs);    hasEquals    =    lhsClass.equals(rhs);    	non-compiled	[CE]  cannot  find  symbol  hasEquals	55	None	replace
183	[BUG]  [BUGGY]  LhsClass  lhsClass  =  lhs.getClass();  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  LhsClass  lhsClass  =  lhs.getClass();  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	LhsClass  lhsClass  =  lhs.getClass();	          Class    rhsClass    =    lhsClass.getClass();    Class    lhsClass    =    lhsClass.getClass();    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
184	[BUG]  [BUGGY]          Class    rhsClass    =    lhsClass.getSuperclass();    Class  hsClass  =  lhsClass.getSuperclass();  Class  rhsClass  =  lhsClass.getSuperclass();  Class  hsClass  =  lhsClass.getSuperclass();  [CE]  variable  rhsClass  is  already  defined  in  method  append(Object,Object)  [FE]    AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]          Class    rhsClass    =    lhsClass.getSuperclass();    Class  hsClass  =  lhsClass.getSuperclass();  Class  rhsClass  =  lhsClass.getSuperclass();  Class  hsClass  =  lhsClass.getSuperclass();  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	                Class        rhsClass        =        lhsClass.getSuperclass();        Class    hsClass    =    lhsClass.getSuperclass();    Class  rhsClass  =  lhsClass.getSuperclass();  Class  hsClass  =  lhsClass.getSuperclass();	  	non-compiled	[CE]  variable  rhsClass  is  already  defined  in  method  append(Object,Object)	17	None	add
185	[BUG]  [BUGGY]          Class    rhsClass    =    lhsClass.getSuperclass();    Class  hsClass  =  lhsClass.getSuperclass();  Class  lhsClass  =  lhsClass.getSuperclass();  Class  hsClass  =  lhsClass.getSuperclass();  [CE]  variable  lhsClass  is  already  defined  in  method  append(Object,Object)  [FE]      AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]          Class    rhsClass    =    lhsClass.getSuperclass();    Class  hsClass  =  lhsClass.getSuperclass();  Class  lhsClass  =  lhsClass.getSuperclass();  Class  hsClass  =  lhsClass.getSuperclass();  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	                Class        rhsClass        =        lhsClass.getSuperclass();        Class    hsClass    =    lhsClass.getSuperclass();    Class  lhsClass  =  lhsClass.getSuperclass();  Class  hsClass  =  lhsClass.getSuperclass();	  	non-compiled	[CE]  variable  lhsClass  is  already  defined  in  method  append(Object,Object)	17	None	add
186	[BUG]  [BUGGY]          Class    rhsClass    =    lhsClass.getSuperclass();    Class  hsClass  =  lhsClass.getSuperclass();  Class  lhsClass  =  lhsClass.getSuperclass();  Class  rhsClass  =  lhsClass.getSuperclass();  [CE]  variable  lhsClass  is  already  defined  in  method  append(Object,Object)  [FE]        AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]          Class    rhsClass    =    lhsClass.getSuperclass();    Class  hsClass  =  lhsClass.getSuperclass();  Class  lhsClass  =  lhsClass.getSuperclass();  Class  rhsClass  =  lhsClass.getSuperclass();  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	                Class        rhsClass        =        lhsClass.getSuperclass();        Class    hsClass    =    lhsClass.getSuperclass();    Class  lhsClass  =  lhsClass.getSuperclass();  Class  rhsClass  =  lhsClass.getSuperclass();	  	non-compiled	[CE]  variable  lhsClass  is  already  defined  in  method  append(Object,Object)	17	None	add
187	[BUG]  [BUGGY]          Class    rhsClass    =    lhsClass.getSuperclass();    Class  hsClass  =  lhsClass.getSuperclass();  Class  hsClass  =  lhsClass.getSuperclass();  Class  hsClass  =  lhsClass.getSuperclass();  [CE]  variable  hsClass  is  already  defined  in  method  append(Object,Object)  [FE]          AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]          Class    rhsClass    =    lhsClass.getSuperclass();    Class  hsClass  =  lhsClass.getSuperclass();  Class  hsClass  =  lhsClass.getSuperclass();  Class  hsClass  =  lhsClass.getSuperclass();  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	                Class        rhsClass        =        lhsClass.getSuperclass();        Class    hsClass    =    lhsClass.getSuperclass();    Class  hsClass  =  lhsClass.getSuperclass();  Class  hsClass  =  lhsClass.getSuperclass();	  	non-compiled	[CE]  variable  hsClass  is  already  defined  in  method  append(Object,Object)	17	None	add
188	[BUG]  [BUGGY]  Class  lhsClass  =  lhsClass.getParameterType(0);  [CE]  variable  lhsClass  is  already  defined  in  method  append(Object,Object)  [FE]        AssertionFailedError      [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  Class  lhsClass  =  lhsClass.getParameterType(0);  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	Class  lhsClass  =  lhsClass.getParameterType(0);	  Class    rhsClass    =    lhsClass.getParameterType(0);    	non-compiled	[CE]  variable  lhsClass  is  already  defined  in  method  append(Object,Object)	78	None	replace
189	[BUG]  [BUGGY]  Class  lhsClass  =  lhs.getParameterType(0);  [CE]  variable  lhsClass  is  already  defined  in  method  append(Object,Object)  [FE]          AssertionFailedError      [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  Class  lhsClass  =  lhs.getParameterType(0);  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	Class  lhsClass  =  lhs.getParameterType(0);	  Class    rhsClass    =    lhsClass.getParameterType(0);    	non-compiled	[CE]  variable  lhsClass  is  already  defined  in  method  append(Object,Object)	78	None	replace
190	[BUG]  [BUGGY]  Class  lhsClass  =  lhsClass.getParameterType(1);  [CE]  variable  lhsClass  is  already  defined  in  method  append(Object,Object)  [FE]            AssertionFailedError      [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  Class  lhsClass  =  lhsClass.getParameterType(1);  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	Class  lhsClass  =  lhsClass.getParameterType(1);	  Class    rhsClass    =    lhsClass.getParameterType(0);    	non-compiled	[CE]  variable  lhsClass  is  already  defined  in  method  append(Object,Object)	78	None	replace
191	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  lhsClass.equals(null);  isEquals  =  lhsClass.equals(null);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	add	isEquals    =    lhsClass.equals(null);    isEquals  =  lhsClass.equals(null);	  	compilable	  [FE]  AssertionFailedError  	90	1	add
192	[BUG]  [BUGGY]  isEquals  =  lhsClass.equals(null);  isEquals  =  lhsClass.equals(null);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  lhsClass.equals(null);  isEquals  =  lhsClass.equals(null);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals    =    lhsClass.equals(null);    isEquals  =  lhsClass.equals(null);	  	compilable	  [FE]  AssertionFailedError  	90	1	add
193	[BUG]  [BUGGY]  isEquals  =  lhsClass.equals(null);  areEquals  =  lhsClass.equals(null);  [CE]  cannot  find  symbol  areEquals  [FE]      AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  lhsClass.equals(null);  areEquals  =  lhsClass.equals(null);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals    =    lhsClass.equals(null);    areEquals  =  lhsClass.equals(null);	  	non-compiled	[CE]  cannot  find  symbol  areEquals	90	None	add
194	[BUG]  [BUGGY]  isEquals  =  lhsClass.equals(null);  hasEquals  =  lhsClass.equals(null);  [CE]  cannot  find  symbol  hasEquals  [FE]        AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  lhsClass.equals(null);  hasEquals  =  lhsClass.equals(null);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals    =    lhsClass.equals(null);    hasEquals  =  lhsClass.equals(null);	  	non-compiled	[CE]  cannot  find  symbol  hasEquals	90	None	add
195	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  lhs.equals(this.getClass());  isEquals  =  lhs.equals(this.getClass());  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	add	isEquals    =    lhs.equals(this.getClass());    isEquals  =  lhs.equals(this.getClass());	  	compilable	  [FE]  AssertionFailedError  	92	1	add
196	[BUG]  [BUGGY]  isEquals  =  lhs.equals(this.getClass());  isEquals  =  lhs.equals(this.getClass());  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  lhs.equals(this.getClass());  isEquals  =  lhs.equals(this.getClass());  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals    =    lhs.equals(this.getClass());    isEquals  =  lhs.equals(this.getClass());	  	compilable	  [FE]  AssertionFailedError  	92	1	add
197	[BUG]  [BUGGY]  isEquals  =  lhs.equals(this.getClass());  areEquals  =  lhs.equals(this.getClass());  [CE]  cannot  find  symbol  areEquals  [FE]      AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  lhs.equals(this.getClass());  areEquals  =  lhs.equals(this.getClass());  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals    =    lhs.equals(this.getClass());    areEquals  =  lhs.equals(this.getClass());	  	non-compiled	[CE]  cannot  find  symbol  areEquals	92	None	add
198	[BUG]  [BUGGY]  isEquals  =  lhs.equals(this.getClass());  isEquals  =  lhs.equals(This.getClass());  [CE]  cannot  find  symbol  This  [FE]        AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  lhs.equals(this.getClass());  isEquals  =  lhs.equals(This.getClass());  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals    =    lhs.equals(this.getClass());    isEquals  =  lhs.equals(This.getClass());	  	non-compiled	[CE]  cannot  find  symbol  This	92	None	add
199	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  lhsClass.equals(this.getClass());  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	add	isEquals  =  lhsClass.equals(this.getClass());	  isEquals    =    lhs.equals(this.getClass());    	compilable	  [FE]  AssertionFailedError  	93	8	replace
200	[BUG]  [BUGGY]  isEquals  =  lhsClass.equals(this.getClass());  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  lhsClass.equals(this.getClass());  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals  =  lhsClass.equals(this.getClass());	  isEquals    =    lhs.equals(this.getClass());    	compilable	  [FE]  AssertionFailedError  	93	8	replace
201	[BUG]  [BUGGY]  isEquals  =  lhs.equals(rhsClass.getClass());  [CE]  cannot  find  symbol  rhsClass  [FE]      AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  lhs.equals(rhsClass.getClass());  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals  =  lhs.equals(rhsClass.getClass());	  isEquals    =    lhs.equals(this.getClass());    	non-compiled	[CE]  cannot  find  symbol  rhsClass	93	None	replace
202	[BUG]  [BUGGY]  isEquals  =  lhs.equals(rhsClass.getName());  [CE]  cannot  find  symbol  rhsClass  [FE]        AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  lhs.equals(rhsClass.getName());  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals  =  lhs.equals(rhsClass.getName());	  isEquals    =    lhs.equals(this.getClass());    	non-compiled	[CE]  cannot  find  symbol  rhsClass	93	None	replace
203	[BUG]  [BUGGY]  Lhs  =  lhsClass.getSuperclass();  [CE]  cannot  find  symbol  Lhs  [FE]          AssertionFailedError      [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  Lhs  =  lhsClass.getSuperclass();  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	Lhs  =  lhsClass.getSuperclass();	          lhs    =    lhsClass.getSuperclass();    Lhs    =    lhsClass.getSuperclass();    	non-compiled	[CE]  cannot  find  symbol  Lhs	59	None	replace
204	[BUG]  [BUGGY]  Class  lhsClass  =  lhs.getSuperclass();  Lhs  =  lhsClass.getSuperclass();  [CE]  variable  lhsClass  is  already  defined  in  method  append(Object,Object)  [FE]            AssertionFailedError      [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  Class  lhsClass  =  lhs.getSuperclass();  Lhs  =  lhsClass.getSuperclass();  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	Class  lhsClass  =  lhs.getSuperclass();  Lhs  =  lhsClass.getSuperclass();	          lhs    =    lhsClass.getSuperclass();    Lhs    =    lhsClass.getSuperclass();    	non-compiled	[CE]  variable  lhsClass  is  already  defined  in  method  append(Object,Object)	59	None	replace
205	[BUG]  [BUGGY]  Object  lhs  =  lhs.getSuperclass();  [CE]  variable  lhs  is  already  defined  in  method  append(Object,Object)  [FE]                    AssertionFailedError      [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  Object  lhs  =  lhs.getSuperclass();  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	Object  lhs  =  lhs.getSuperclass();	  Object    lhs    =    lhsClass.getSuperclass();    	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  append(Object,Object)	19	None	replace
206	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  lhs  =  lhsClass.getSimpleName();  lhs  =  lhsClass.getSimpleName();  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	add	lhs    =    lhsClass.getSimpleName();    lhs  =  lhsClass.getSimpleName();	  	compilable	  [FE]  AssertionFailedError  	35	8	add
207	[BUG]  [BUGGY]  lhs  =  lhsClass.getSimpleName();  lhs  =  lhsClass.getSimpleName();  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  lhs  =  lhsClass.getSimpleName();  lhs  =  lhsClass.getSimpleName();  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	lhs    =    lhsClass.getSimpleName();    lhs  =  lhsClass.getSimpleName();	  	compilable	  [FE]  AssertionFailedError  	35	8	add
208	[BUG]  [BUGGY]  lhs  =  lhsClass.getSimpleName();  Lhs  =  lhsClass.getSimpleName();  [CE]  cannot  find  symbol  Lhs  [FE]      AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  lhs  =  lhsClass.getSimpleName();  Lhs  =  lhsClass.getSimpleName();  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	lhs    =    lhsClass.getSimpleName();    Lhs  =  lhsClass.getSimpleName();	  	non-compiled	[CE]  cannot  find  symbol  Lhs	35	None	add
209	[BUG]  [BUGGY]  lhs  =  lhsClass.getSimpleName();  (lhs  =  lhsClass.getSimpleName());  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  lhs  =  lhsClass.getSimpleName();  (lhs  =  lhsClass.getSimpleName());  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	lhs    =    lhsClass.getSimpleName();    (lhs  =  lhsClass.getSimpleName());	  	non-compiled	[CE]  not  a  statement	35	None	add
210	[BUG]  [BUGGY]  lhs  =  lhsClass.getSimpleName();  ||  lhsClass.getSimpleName()!=  null)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  lhs  =  lhsClass.getSimpleName();  ||  lhsClass.getSimpleName()!=  null)  {  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	lhs    =    lhsClass.getSimpleName();    ||  lhsClass.getSimpleName()!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	35	None	add
211	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  lhsClass.isArray();  isEquals  =  lhsClass.isArray();  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	add	isEquals    =    lhsClass.isArray();    isEquals  =  lhsClass.isArray();	  	compilable	  [FE]  AssertionFailedError  	108	1	add
212	[BUG]  [BUGGY]  isEquals  =  lhsClass.isArray();  isEquals  =  lhsClass.isArray();  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  lhsClass.isArray();  isEquals  =  lhsClass.isArray();  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals    =    lhsClass.isArray();    isEquals  =  lhsClass.isArray();	  	compilable	  [FE]  AssertionFailedError  	108	1	add
213	[BUG]  [BUGGY]  isEquals  =  lhsClass.isArray();  isEquals  =  lhsClass.isExpression();  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  lhsClass.isArray();  isEquals  =  lhsClass.isExpression();  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals    =    lhsClass.isArray();    isEquals  =  lhsClass.isExpression();	  	non-compiled	[CE]  cannot  find  symbol	108	None	add
214	[BUG]  [BUGGY]  isEquals  =  lhsClass.isArray();  isEquals  =  lhsClass.isObject();  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  lhsClass.isArray();  isEquals  =  lhsClass.isObject();  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals    =    lhsClass.isArray();    isEquals  =  lhsClass.isObject();	  	non-compiled	[CE]  cannot  find  symbol	108	None	add
215	[BUG]  [BUGGY]  isEquals  =  lhsClass.isArray();  areEquals  =  lhsClass.isArray();  [CE]  cannot  find  symbol  areEquals  [FE]          AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  lhsClass.isArray();  areEquals  =  lhsClass.isArray();  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals    =    lhsClass.isArray();    areEquals  =  lhsClass.isArray();	  	non-compiled	[CE]  cannot  find  symbol  areEquals	108	None	add
216	[BUG]  [BUGGY]  (lhs  =  lhsClass.getSuperclass());  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  (lhs  =  lhsClass.getSuperclass());  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	(lhs  =  lhsClass.getSuperclass());	          lhs    =    lhsClass.getSuperclass();    (lhs    =    lhsClass.getSuperclass());    	non-compiled	[CE]  not  a  statement	60	None	replace
217	[BUG]  [BUGGY]  (lhsClass  =  lhsClass.getSuperclass());  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  (lhsClass  =  lhsClass.getSuperclass());  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	(lhsClass  =  lhsClass.getSuperclass());	          lhs    =    lhsClass.getSuperclass();    (lhs    =    lhsClass.getSuperclass());    	non-compiled	[CE]  not  a  statement	60	None	replace
218	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  lhs.getClass().getName().equals(rhs);  isEquals  =  lhs.getClass().getName().equals(rhs);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	add	isEquals    =    lhs.getClass().getName().equals(rhs);    isEquals  =  lhs.getClass().getName().equals(rhs);	  	compilable	  [FE]  AssertionFailedError  	76	1	add
219	[BUG]  [BUGGY]  isEquals  =  lhs.getClass().getName().equals(rhs);  isEquals  =  lhs.getClass().getName().equals(rhs);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  lhs.getClass().getName().equals(rhs);  isEquals  =  lhs.getClass().getName().equals(rhs);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals    =    lhs.getClass().getName().equals(rhs);    isEquals  =  lhs.getClass().getName().equals(rhs);	  	compilable	  [FE]  AssertionFailedError  	76	1	add
220	[BUG]  [BUGGY]  isEquals  =  lhs.getClass().getName().equals(rhs);  areEquals  =  lhs.getClass().getName().equals(rhs);  [CE]  cannot  find  symbol  areEquals  [FE]      AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  lhs.getClass().getName().equals(rhs);  areEquals  =  lhs.getClass().getName().equals(rhs);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals    =    lhs.getClass().getName().equals(rhs);    areEquals  =  lhs.getClass().getName().equals(rhs);	  	non-compiled	[CE]  cannot  find  symbol  areEquals	76	None	add
221	[BUG]  [BUGGY]  Object  lhs  =  lhsClass.getReturnType();  [CE]  variable  lhs  is  already  defined  in  method  append(Object,Object)  [FE]              AssertionFailedError      [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  Object  lhs  =  lhsClass.getReturnType();  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	Object  lhs  =  lhsClass.getReturnType();	  Object    rhs    =    lhsClass.getReturnType();    	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  append(Object,Object)	75	None	replace
222	[BUG]  [BUGGY]  Object  rhs  =  lhsClass.getRawType();  [CE]  variable  rhs  is  already  defined  in  method  append(Object,Object)  [FE]                AssertionFailedError      [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  Object  rhs  =  lhsClass.getRawType();  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	Object  rhs  =  lhsClass.getRawType();	  Object    rhs    =    lhsClass.getReturnType();    	non-compiled	[CE]  variable  rhs  is  already  defined  in  method  append(Object,Object)	75	None	replace
223	[BUG]  [BUGGY]  Class  lhsClass  =  lhsClass.getReturnType();  [CE]  variable  lhsClass  is  already  defined  in  method  append(Object,Object)  [FE]                  AssertionFailedError      [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  Class  lhsClass  =  lhsClass.getReturnType();  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	Class  lhsClass  =  lhsClass.getReturnType();	  Object    rhs    =    lhsClass.getReturnType();    	non-compiled	[CE]  variable  lhsClass  is  already  defined  in  method  append(Object,Object)	75	None	replace
224	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  lhsClass.equals(lhsClass);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	add	isEquals  =  lhsClass.equals(lhsClass);	  isEquals    =    lhsClass.equals(rhsClass);    	compilable	  [FE]  AssertionFailedError  	96	7	replace
225	[BUG]  [BUGGY]  isEquals  =  lhsClass.equals(lhsClass);  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  lhsClass.equals(lhsClass);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals  =  lhsClass.equals(lhsClass);	  isEquals    =    lhsClass.equals(rhsClass);    	compilable	  [FE]  AssertionFailedError  	96	7	replace
226	[BUG]  [BUGGY]  lhsClass  =  lhs.getRawClass();  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  lhsClass  =  lhs.getRawClass();  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	lhsClass  =  lhs.getRawClass();	  lhsClass    =    lhsClass.getRawClass();    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
227	[BUG]  [BUGGY]  LhsClass  lhsClass  =  lhs.getRawClass();  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  LhsClass  lhsClass  =  lhs.getRawClass();  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	LhsClass  lhsClass  =  lhs.getRawClass();	  lhsClass    =    lhsClass.getRawClass();    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
228	[BUG]  [BUGGY]  Class  lhsRawClass  =  lhs.getRawClass();  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  Class  lhsRawClass  =  lhs.getRawClass();  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	Class  lhsRawClass  =  lhs.getRawClass();	  Class    lhsRawClass    =    lhsClass.getRawClass();    	non-compiled	[CE]  cannot  find  symbol	102	None	replace
229	[BUG]  [BUGGY]  Class  lhsRawClass  =  rhs.getRawClass();  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  Class  lhsRawClass  =  rhs.getRawClass();  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	Class  lhsRawClass  =  rhs.getRawClass();	  Class    lhsRawClass    =    lhsClass.getRawClass();    	non-compiled	[CE]  cannot  find  symbol	102	None	replace
230	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  lhsClass.getClass().isArray();  isEquals  =  lhsClass.getClass().isArray();  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	add	isEquals    =    lhsClass.getClass().isArray();    isEquals  =  lhsClass.getClass().isArray();	  	compilable	  [FE]  AssertionFailedError  	94	1	add
231	[BUG]  [BUGGY]  isEquals  =  lhsClass.getClass().isArray();  isEquals  =  lhsClass.getClass().isArray();  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  lhsClass.getClass().isArray();  isEquals  =  lhsClass.getClass().isArray();  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals    =    lhsClass.getClass().isArray();    isEquals  =  lhsClass.getClass().isArray();	  	compilable	  [FE]  AssertionFailedError  	94	1	add
232	[BUG]  [BUGGY]  isEquals  =  lhsClass.getClass().isArray();  areEquals  =  lhsClass.getClass().isArray();  [CE]  cannot  find  symbol  areEquals  [FE]      AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  lhsClass.getClass().isArray();  areEquals  =  lhsClass.getClass().isArray();  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals    =    lhsClass.getClass().isArray();    areEquals  =  lhsClass.getClass().isArray();	  	non-compiled	[CE]  cannot  find  symbol  areEquals	94	None	add
233	[BUG]  [BUGGY]  isEquals  =  lhsClass.getClass().isArray();  isEquals  =  lhsClass.getClass().isObject();  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  lhsClass.getClass().isArray();  isEquals  =  lhsClass.getClass().isObject();  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals    =    lhsClass.getClass().isArray();    isEquals  =  lhsClass.getClass().isObject();	  	non-compiled	[CE]  cannot  find  symbol	94	None	add
234	[BUG]  [BUGGY]  isEquals  =  lhsClass.getClass().isArray();  hasEquals  =  lhsClass.getClass().isArray();  [CE]  cannot  find  symbol  hasEquals  [FE]          AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  lhsClass.getClass().isArray();  hasEquals  =  lhsClass.getClass().isArray();  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals    =    lhsClass.getClass().isArray();    hasEquals  =  lhsClass.getClass().isArray();	  	non-compiled	[CE]  cannot  find  symbol  hasEquals	94	None	add
235	[BUG]  [BUGGY]  Class  <?>  rhsClass  =  lhsClass.getSuperclass();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]        AssertionFailedError      [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  Class  <?>  rhsClass  =  lhsClass.getSuperclass();  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	Class  <?>  rhsClass  =  lhsClass.getSuperclass();	          Class    rhsClass    =    lhsClass.getSuperclass();    Class    rhsClass    =    lhsClass.getSuperclass();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	15	None	replace
236	[BUG]  [BUGGY]  Class  lhsClass  =  lhs,  rhs.getRawClass();  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  Class  lhsClass  =  lhs,  rhs.getRawClass();  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	Class  lhsClass  =  lhs,  rhs.getRawClass();	  Class    rhsClass    =    lhs.getRawClass();    	non-compiled	[CE]  ';'  expected	13	None	replace
237	[BUG]  [BUGGY]  isEquals  =  lhsClass.isEmpty()?  false  :  lhs,  rhs.equals(lhs);  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  lhsClass.isEmpty()?  false  :  lhs,  rhs.equals(lhs);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals  =  lhsClass.isEmpty()?  false  :  lhs,  rhs.equals(lhs);	  isEquals    =    lhsClass.isEmpty()?    false    :    lhs.equals(rhs);    	non-compiled	[CE]  ';'  expected	9	None	replace
238	[BUG]  [BUGGY]  Object  lhs  =  lhsClass.getSimpleName();  [CE]  variable  lhs  is  already  defined  in  method  append(Object,Object)  [FE]                AssertionFailedError      [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  Object  lhs  =  lhsClass.getSimpleName();  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	Object  lhs  =  lhsClass.getSimpleName();	  Object    lhs    =    lhsClass.getName();    	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  append(Object,Object)	104	None	replace
239	[BUG]  [BUGGY]  isEquals  =  lhsClass.isExported();  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  lhsClass.isExported();  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals  =  lhsClass.isExported();	  isEquals    =    lhsClass.isArray();    	non-compiled	[CE]  cannot  find  symbol	109	None	replace
240	[BUG]  [BUGGY]  isEquals  =  lhsClass.isAssignableFrom(rhs);  [CE]  method  isAssignableFrom  in  class  Class  cannot  be  applied  to  given  types;  [FE]      AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  lhsClass.isAssignableFrom(rhs);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals  =  lhsClass.isAssignableFrom(rhs);	  isEquals    =    lhsClass.isArray();    	non-compiled	[CE]  method  isAssignableFrom  in  class  Class  cannot  be  applied  to  given  types;	109	None	replace
241	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  lhsClass  =  lhsClass!=  null?  null  :  lhsClass.getSuperclass();  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	add	lhsClass  =  lhsClass!=  null?  null  :  lhsClass.getSuperclass();	  lhsClass    =    lhsClass    ==    null?    null    :    lhsClass.getSuperclass();    	compilable	  [FE]  AssertionFailedError  	89	7	replace
242	[BUG]  [BUGGY]  lhsClass  =  lhsClass!=  null?  null  :  lhsClass.getSuperclass();  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  lhsClass  =  lhsClass!=  null?  null  :  lhsClass.getSuperclass();  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	lhsClass  =  lhsClass!=  null?  null  :  lhsClass.getSuperclass();	  lhsClass    =    lhsClass    ==    null?    null    :    lhsClass.getSuperclass();    	compilable	  [FE]  AssertionFailedError  	89	7	replace
243	[BUG]  [BUGGY]  Class  <?>  lhsClass  =  lhsClass.getSuperclass();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            AssertionFailedError      [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  Class  <?>  lhsClass  =  lhsClass.getSuperclass();  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	Class  <?>  lhsClass  =  lhsClass.getSuperclass();	  Class    <?>    lhsClass    =    lhsClass.getRawClass();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	61	None	replace
244	[BUG]  [BUGGY]  isEquals  =  lhsClass.isEmpty()?  false  :  rhs.equals(lhs);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  lhsClass.isEmpty()?  false  :  rhs.equals(lhs);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals  =  lhsClass.isEmpty()?  false  :  rhs.equals(lhs);	  isEquals    =    lhs.isEmpty()?    false    :    rhs.equals(lhs);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
245	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  lhsClass.equals(lhs);  isEquals  =  lhsClass.equals(lhs);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	add	isEquals    =    lhsClass.equals(lhs);    isEquals  =  lhsClass.equals(lhs);	  	compilable	  [FE]  AssertionFailedError  	30	1	add
246	[BUG]  [BUGGY]  isEquals  =  lhsClass.equals(lhs);  isEquals  =  lhsClass.equals(lhs);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  lhsClass.equals(lhs);  isEquals  =  lhsClass.equals(lhs);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals    =    lhsClass.equals(lhs);    isEquals  =  lhsClass.equals(lhs);	  	compilable	  [FE]  AssertionFailedError  	30	1	add
247	[BUG]  [BUGGY]  isEquals  =  lhsClass.equals(lhs);  areEquals  =  lhsClass.equals(lhs);  [CE]  cannot  find  symbol  areEquals  [FE]      AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  lhsClass.equals(lhs);  areEquals  =  lhsClass.equals(lhs);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals    =    lhsClass.equals(lhs);    areEquals  =  lhsClass.equals(lhs);	  	non-compiled	[CE]  cannot  find  symbol  areEquals	30	None	add
248	[BUG]  [BUGGY]  isEquals  =  lhsClass.equals(lhs);  hasEquals  =  lhsClass.equals(lhs);  [CE]  cannot  find  symbol  hasEquals  [FE]        AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  lhsClass.equals(lhs);  hasEquals  =  lhsClass.equals(lhs);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals    =    lhsClass.equals(lhs);    hasEquals  =  lhsClass.equals(lhs);	  	non-compiled	[CE]  cannot  find  symbol  hasEquals	30	None	add
249	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  lhsClass.equals(lhs);  isEquals  =  lhsClass.equals(rhs);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	add	isEquals    =    lhsClass.equals(lhs);    isEquals  =  lhsClass.equals(rhs);	  	compilable	  [FE]  AssertionFailedError  	30	1	add
250	[BUG]  [BUGGY]  isEquals  =  lhsClass.equals(lhs);  isEquals  =  lhsClass.equals(rhs);  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  lhsClass.equals(lhs);  isEquals  =  lhsClass.equals(rhs);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals    =    lhsClass.equals(lhs);    isEquals  =  lhsClass.equals(rhs);	  	compilable	  [FE]  AssertionFailedError  	30	1	add
251	[BUG]  [BUGGY]  Object  lhsClass  =  lhs.getClass();  [CE]  variable  lhsClass  is  already  defined  in  method  append(Object,Object)  [FE]    AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  Object  lhsClass  =  lhs.getClass();  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	Object  lhsClass  =  lhs.getClass();	          Class    rhsClass    =    lhsClass.getClass();    Class    hsClass    =    lhsClass.getClass();    	non-compiled	[CE]  variable  lhsClass  is  already  defined  in  method  append(Object,Object)	71	None	replace
252	[BUG]  [BUGGY]  hasEquals  =  lhsClass.getClass().equals(rhs);  [CE]  cannot  find  symbol  hasEquals  [FE]              AssertionFailedError      [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  hasEquals  =  lhsClass.getClass().equals(rhs);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	hasEquals  =  lhsClass.getClass().equals(rhs);	  isEquals    =    lhs.getClass().equals(rhs);    hasEquals    =    lhs.getClass().equals(rhs);    	non-compiled	[CE]  cannot  find  symbol  hasEquals	48	None	replace
253	[BUG]  [BUGGY]  hasEquals  =  lhs.getClass().equals(rhs);  [CE]  cannot  find  symbol  hasEquals  [FE]                AssertionFailedError      [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  hasEquals  =  lhs.getClass().equals(rhs);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	hasEquals  =  lhs.getClass().equals(rhs);	  isEquals    =    lhs.getClass().equals(rhs);    hasEquals    =    lhs.getClass().equals(rhs);    	non-compiled	[CE]  cannot  find  symbol  hasEquals	48	None	replace
254	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  lhs  =  lhsClass!=  null?  null  :  lhsClass.getSuperclass();  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	add	lhs  =  lhsClass!=  null?  null  :  lhsClass.getSuperclass();	  lhs    =    lhsClass    ==    null?    null    :    lhsClass.getSuperclass();    	compilable	  [FE]  AssertionFailedError  	101	7	replace
255	[BUG]  [BUGGY]  lhs  =  lhsClass!=  null?  null  :  lhsClass.getSuperclass();  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  lhs  =  lhsClass!=  null?  null  :  lhsClass.getSuperclass();  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	lhs  =  lhsClass!=  null?  null  :  lhsClass.getSuperclass();	  lhs    =    lhsClass    ==    null?    null    :    lhsClass.getSuperclass();    	compilable	  [FE]  AssertionFailedError  	101	7	replace
256	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  lhsClass.getSuperclass().isArray();  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	add	isEquals  =  lhsClass.getSuperclass().isArray();	  isEquals    =    lhsClass.isArray();    	compilable	  [FE]  AssertionFailedError  	109	8	replace
257	[BUG]  [BUGGY]  isEquals  =  lhsClass.getSuperclass().isArray();  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  lhsClass.getSuperclass().isArray();  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals  =  lhsClass.getSuperclass().isArray();	  isEquals    =    lhsClass.isArray();    	compilable	  [FE]  AssertionFailedError  	109	8	replace
258	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  Class  rhsClass  =  rhs.getClass();  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	add	Class  rhsClass  =  rhs.getClass();	  Class    lhsClass    =    rhs.getClass();    	compilable	  [FE]  AssertionFailedError  	27	7	replace
259	[BUG]  [BUGGY]  Class  rhsClass  =  rhs.getClass();  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  Class  rhsClass  =  rhs.getClass();  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	Class  rhsClass  =  rhs.getClass();	  Class    lhsClass    =    rhs.getClass();    	compilable	  [FE]  AssertionFailedError  	27	7	replace
260	[BUG]  [BUGGY]  isEquals  =  lhsClass.equals(rhs,  false);  [CE]  method  equals  in  class  Object  cannot  be  applied  to  given  types;  [FE]          AssertionFailedError      [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  lhsClass.equals(rhs,  false);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals  =  lhsClass.equals(rhs,  false);	  isEquals    =    lhsClass.equals(false);    	non-compiled	[CE]  method  equals  in  class  Object  cannot  be  applied  to  given  types;	110	None	replace
261	[BUG]  [BUGGY]  isEquals  =  lhsClass.isEquals(equals);  [CE]  cannot  find  symbol  equals  [FE]            AssertionFailedError      [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  lhsClass.isEquals(equals);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals  =  lhsClass.isEquals(equals);	  isEquals    =    lhsClass.isEquals(rhs);    	non-compiled	[CE]  cannot  find  symbol  equals	23	None	replace
262	[BUG]  [BUGGY]  isEquals  =  rhsClass.isEmpty()?  false  :  lhs.equals(rhs);  [CE]  cannot  find  symbol  rhsClass  [FE]                AssertionFailedError      [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  rhsClass.isEmpty()?  false  :  lhs.equals(rhs);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals  =  rhsClass.isEmpty()?  false  :  lhs.equals(rhs);	  isEquals    =    lhsClass.isEmpty()?    false    :    lhs.equals(rhs);    	non-compiled	[CE]  cannot  find  symbol  rhsClass	9	None	replace
263	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  rhs.equals(this.getClass());  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	add	isEquals  =  rhs.equals(this.getClass());	  isEquals    =    lhs.equals(this.getClass());    	compilable	  [FE]  AssertionFailedError  	93	8	replace
264	[BUG]  [BUGGY]  isEquals  =  rhs.equals(this.getClass());  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  rhs.equals(this.getClass());  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals  =  rhs.equals(this.getClass());	  isEquals    =    lhs.equals(this.getClass());    	compilable	  [FE]  AssertionFailedError  	93	8	replace
265	[BUG]  [BUGGY]  isEquals  =  rhs.isArray()?  lhsClass.getClass()  :  lhsClass.equals(rhs);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  rhs.isArray()?  lhsClass.getClass()  :  lhsClass.equals(rhs);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals  =  rhs.isArray()?  lhsClass.getClass()  :  lhsClass.equals(rhs);	  isEquals    =    lhsClass.isArray()?    rhs.getClass()    :    lhsClass.equals(rhs);    	non-compiled	[CE]  cannot  find  symbol	111	None	replace
266	[BUG]  [BUGGY]  isEquals  =  lhsClass.isArray()?  rhs.getClass()  :  lhsClass.equals(rhs,  lhsClass);  [CE]  method  equals  in  class  Object  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  lhsClass.isArray()?  rhs.getClass()  :  lhsClass.equals(rhs,  lhsClass);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals  =  lhsClass.isArray()?  rhs.getClass()  :  lhsClass.equals(rhs,  lhsClass);	  isEquals    =    lhsClass.isArray()?    rhs.getClass()    :    lhsClass.equals(rhs);    	non-compiled	[CE]  method  equals  in  class  Object  cannot  be  applied  to  given  types;	111	None	replace
267	[BUG]  [BUGGY]  rhs  =  lhsClass.getClass().equals(rhs);  [CE]  incompatible  types  [FE]    AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  rhs  =  lhsClass.getClass().equals(rhs);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	rhs  =  lhsClass.getClass().equals(rhs);	  isEquals    =    lhs.getClass().equals(rhs);    isEquals    =    lhsClass.getClass().equals(rhs);    	non-compiled	[CE]  incompatible  types	86	None	replace
268	[BUG]  [BUGGY]  lhsClass  =  lhsClass.getClass().getName();  [CE]  incompatible  types  [FE]      AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  lhsClass  =  lhsClass.getClass().getName();  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	lhsClass  =  lhsClass.getClass().getName();	  isEquals    =    lhs.getClass().equals(rhs);    isEquals    =    lhsClass.getClass().equals(rhs);    	non-compiled	[CE]  incompatible  types	86	None	replace
269	[BUG]  [BUGGY]  isEquals  =  lhsClass.getClass().equals(rhs);  lhs  =  lhs.getClass().equals(rhs);  [CE]  incompatible  types  [FE]          AssertionFailedError      [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  lhsClass.getClass().equals(rhs);  lhs  =  lhs.getClass().equals(rhs);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals  =  lhsClass.getClass().equals(rhs);  lhs  =  lhs.getClass().equals(rhs);	  isEquals    =    lhs.getClass().equals(rhs);    lhs    =    lhs.getClass().equals(rhs);    	non-compiled	[CE]  incompatible  types	87	None	replace
270	[BUG]  [BUGGY]  Class  rhsClass  =  lhs.getClass();  Object  rhsClass  =  lhs.getClass();  [CE]  variable  rhsClass  is  already  defined  in  method  append(Object,Object)  [FE]    AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  Class  rhsClass  =  lhs.getClass();  Object  rhsClass  =  lhs.getClass();  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	Class    rhsClass    =    lhs.getClass();    Object  rhsClass  =  lhs.getClass();	  	non-compiled	[CE]  variable  rhsClass  is  already  defined  in  method  append(Object,Object)	49	None	add
271	[BUG]  [BUGGY]  Class  rhsClass  =  lhs.getClass();  class  lhsClass  =  lhs.getClass();  [CE]  '{'  expected  [FE]      AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  Class  rhsClass  =  lhs.getClass();  class  lhsClass  =  lhs.getClass();  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	Class    rhsClass    =    lhs.getClass();    class  lhsClass  =  lhs.getClass();	  	non-compiled	[CE]  '{'  expected	49	None	add
272	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  Class  rhsClass  =  lhs.getClass();  Class  hsClass  =  lhs.getClass();  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	add	Class    rhsClass    =    lhs.getClass();    Class  hsClass  =  lhs.getClass();	  	compilable	  [FE]  AssertionFailedError  	49	1	add
273	[BUG]  [BUGGY]  Class  rhsClass  =  lhs.getClass();  Class  hsClass  =  lhs.getClass();  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  Class  rhsClass  =  lhs.getClass();  Class  hsClass  =  lhs.getClass();  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	Class    rhsClass    =    lhs.getClass();    Class  hsClass  =  lhs.getClass();	  	compilable	  [FE]  AssertionFailedError  	49	1	add
274	[BUG]  [BUGGY]  Object  lhsClass  =  lhsClass.getClass();  [CE]  variable  lhsClass  is  already  defined  in  method  append(Object,Object)  [FE]          AssertionFailedError      [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  Object  lhsClass  =  lhsClass.getClass();  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	Object  lhsClass  =  lhsClass.getClass();	          Class    rhsClass    =    lhsClass.getClass();    Class    lhsClass    =    lhsClass.getClass();    	non-compiled	[CE]  variable  lhsClass  is  already  defined  in  method  append(Object,Object)	2	None	replace
275	[BUG]  [BUGGY]  isEquals    =    lhs.getClass().equals(rhs);    isEquals  =  lhs.getClass().equals(rhs);  lhs  =  lhs.getClass().equals(rhs);  isEquals  =  lhs.getClass().equals(rhs);  [CE]  incompatible  types  [FE]    AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals    =    lhs.getClass().equals(rhs);    isEquals  =  lhs.getClass().equals(rhs);  lhs  =  lhs.getClass().equals(rhs);  isEquals  =  lhs.getClass().equals(rhs);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals        =        lhs.getClass().equals(rhs);        isEquals    =    lhs.getClass().equals(rhs);    lhs  =  lhs.getClass().equals(rhs);  isEquals  =  lhs.getClass().equals(rhs);	  	non-compiled	[CE]  incompatible  types	43	None	add
276	[BUG]  [BUGGY]  lhsClass  =  lhsClass!=  null?  lhsClass.getSuperclass()  :  null;  LhsClass  =  lhsClass!=  null?  lhsClass.getSuperclass()  :  null;  [CE]  cannot  find  symbol  LhsClass  [FE]    AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  lhsClass  =  lhsClass!=  null?  lhsClass.getSuperclass()  :  null;  LhsClass  =  lhsClass!=  null?  lhsClass.getSuperclass()  :  null;  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	lhsClass    =    lhsClass!=    null?    lhsClass.getSuperclass()    :    null;    LhsClass  =  lhsClass!=  null?  lhsClass.getSuperclass()  :  null;	  	non-compiled	[CE]  cannot  find  symbol  LhsClass	105	None	add
277	[BUG]  [BUGGY]  lhs  =  lhsClass.getName();  lhs  =  rhsClass.getName();  [CE]  cannot  find  symbol  rhsClass  [FE]    AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  lhs  =  lhsClass.getName();  lhs  =  rhsClass.getName();  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	lhs    =    lhsClass.getName();    lhs  =  rhsClass.getName();	  	non-compiled	[CE]  cannot  find  symbol  rhsClass	80	None	add
278	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  Object  rhsClass  =  lhsClass.getClass();  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	add	Object  rhsClass  =  lhsClass.getClass();	          Class    rhsClass    =    lhsClass.getClass();    class    rhsClass    =    lhsClass.getClass();    	compilable	  [FE]  AssertionFailedError  	99	7	replace
279	[BUG]  [BUGGY]  Object  rhsClass  =  lhsClass.getClass();  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  Object  rhsClass  =  lhsClass.getClass();  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	Object  rhsClass  =  lhsClass.getClass();	          Class    rhsClass    =    lhsClass.getClass();    class    rhsClass    =    lhsClass.getClass();    	compilable	  [FE]  AssertionFailedError  	99	7	replace
280	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  if(lhsClass!=  null)  {  lhs  =  lhsClass.getSuperclass();  lhs  =  lhsClass.getSuperclass();  }  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	add	if(lhsClass!=  null)  {  lhs  =  lhsClass.getSuperclass();  lhs  =  lhsClass.getSuperclass();  }	          lhs    =    lhsClass.getSuperclass();    lhs    =    lhsClass.getSuperclass();    	compilable	  [FE]  AssertionFailedError  	58	7	replace
281	[BUG]  [BUGGY]  if(lhsClass!=  null)  {  lhs  =  lhsClass.getSuperclass();  lhs  =  lhsClass.getSuperclass();  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  if(lhsClass!=  null)  {  lhs  =  lhsClass.getSuperclass();  lhs  =  lhsClass.getSuperclass();  }  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	if(lhsClass!=  null)  {  lhs  =  lhsClass.getSuperclass();  lhs  =  lhsClass.getSuperclass();  }	          lhs    =    lhsClass.getSuperclass();    lhs    =    lhsClass.getSuperclass();    	compilable	  [FE]  AssertionFailedError  	58	7	replace
282	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  if(lhsClass!=  null)  {  lhs  =  lhsClass.getSuperclass();  lhs  =  lhsClass.getSuperclass();  }  else  {  this.setEquals(false);  return  this;  }  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	add	if(lhsClass!=  null)  {  lhs  =  lhsClass.getSuperclass();  lhs  =  lhsClass.getSuperclass();  }  else  {  this.setEquals(false);  return  this;  }	          lhs    =    lhsClass.getSuperclass();    lhs    =    lhsClass.getSuperclass();    	compilable	  [FE]  AssertionFailedError  	58	7	replace
283	[BUG]  [BUGGY]  if(lhsClass!=  null)  {  lhs  =  lhsClass.getSuperclass();  lhs  =  lhsClass.getSuperclass();  }  else  {  this.setEquals(false);  return  this;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  if(lhsClass!=  null)  {  lhs  =  lhsClass.getSuperclass();  lhs  =  lhsClass.getSuperclass();  }  else  {  this.setEquals(false);  return  this;  }  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	if(lhsClass!=  null)  {  lhs  =  lhsClass.getSuperclass();  lhs  =  lhsClass.getSuperclass();  }  else  {  this.setEquals(false);  return  this;  }	          lhs    =    lhsClass.getSuperclass();    lhs    =    lhsClass.getSuperclass();    	compilable	  [FE]  AssertionFailedError  	58	7	replace
284	[BUG]  [BUGGY]  isEquals    =    lhs.getClass().equals(rhs);    isEquals  =  lhsClass.getClass().equals(rhs);  lhs  =  lhs.getClass().equals(rhs);  isEquals  =  lhsClass.getClass().equals(rhs);  [CE]  incompatible  types  [FE]    AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals    =    lhs.getClass().equals(rhs);    isEquals  =  lhsClass.getClass().equals(rhs);  lhs  =  lhs.getClass().equals(rhs);  isEquals  =  lhsClass.getClass().equals(rhs);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals        =        lhs.getClass().equals(rhs);        isEquals    =    lhsClass.getClass().equals(rhs);    lhs  =  lhs.getClass().equals(rhs);  isEquals  =  lhsClass.getClass().equals(rhs);	  	non-compiled	[CE]  incompatible  types	85	None	add
285	[BUG]  [BUGGY]  Class  <?>  lhs  =  lhsClass.getRawParameterType(0);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            AssertionFailedError      [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  Class  <?>  lhs  =  lhsClass.getRawParameterType(0);  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	Class  <?>  lhs  =  lhsClass.getRawParameterType(0);	  Class    <?>    rhs    =    lhsClass.getRawParameterType(0);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	83	None	replace
286	[BUG]  [BUGGY]          Class    rhsClass    =    lhsClass.getClass();    Class  hsClass  =  lhsClass.getClass();  Class  rhsClass  =  lhsClass.getClass();  Class  rhsClass  =  lhsClass.getClass();  [CE]  variable  rhsClass  is  already  defined  in  method  append(Object,Object)  [FE]    AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]          Class    rhsClass    =    lhsClass.getClass();    Class  hsClass  =  lhsClass.getClass();  Class  rhsClass  =  lhsClass.getClass();  Class  rhsClass  =  lhsClass.getClass();  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	                Class        rhsClass        =        lhsClass.getClass();        Class    hsClass    =    lhsClass.getClass();    Class  rhsClass  =  lhsClass.getClass();  Class  rhsClass  =  lhsClass.getClass();	  	non-compiled	[CE]  variable  rhsClass  is  already  defined  in  method  append(Object,Object)	70	None	add
287	[BUG]  [BUGGY]          Class    rhsClass    =    lhsClass.getClass();    Class  hsClass  =  lhsClass.getClass();  Object  rhsClass  =  lhsClass.getClass();  Class  hsClass  =  lhsClass.getClass();  [CE]  variable  rhsClass  is  already  defined  in  method  append(Object,Object)  [FE]      AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]          Class    rhsClass    =    lhsClass.getClass();    Class  hsClass  =  lhsClass.getClass();  Object  rhsClass  =  lhsClass.getClass();  Class  hsClass  =  lhsClass.getClass();  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	                Class        rhsClass        =        lhsClass.getClass();        Class    hsClass    =    lhsClass.getClass();    Object  rhsClass  =  lhsClass.getClass();  Class  hsClass  =  lhsClass.getClass();	  	non-compiled	[CE]  variable  rhsClass  is  already  defined  in  method  append(Object,Object)	70	None	add
288	[BUG]  [BUGGY]  Class  <?>  lhs  =  lhsClass.getSuperclass();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError      [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  Class  <?>  lhs  =  lhsClass.getSuperclass();  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	Class  <?>  lhs  =  lhsClass.getSuperclass();	  Class    <?>    lhs    =    lhsClass.getRawClass();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	84	None	replace
289	[BUG]  [BUGGY]  Class  <?>  lhs  =  rhsClass.getRawClass();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  Class  <?>  lhs  =  rhsClass.getRawClass();  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	Class  <?>  lhs  =  rhsClass.getRawClass();	  Class    <?>    lhs    =    lhsClass.getRawClass();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	84	None	replace
290	[BUG]  [BUGGY]  lhsClass  =  lhsClass.getSuperclass();  Lhs  =  lhsClass.getSuperclass();  [CE]  cannot  find  symbol  Lhs  [FE]          AssertionFailedError      [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  lhsClass  =  lhsClass.getSuperclass();  Lhs  =  lhsClass.getSuperclass();  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	lhsClass  =  lhsClass.getSuperclass();  Lhs  =  lhsClass.getSuperclass();	          lhs    =    lhsClass.getSuperclass();    Lhs    =    lhsClass.getSuperclass();    	non-compiled	[CE]  cannot  find  symbol  Lhs	59	None	replace
291	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  Object  rhsClass  =  lhsClass.getSuperclass();  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	add	Object  rhsClass  =  lhsClass.getSuperclass();	          Class    rhsClass    =    lhsClass.getSuperclass();    Class    hsClass    =    lhsClass.getSuperclass();    	compilable	  [FE]  AssertionFailedError  	18	7	replace
292	[BUG]  [BUGGY]  Object  rhsClass  =  lhsClass.getSuperclass();  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  Object  rhsClass  =  lhsClass.getSuperclass();  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	Object  rhsClass  =  lhsClass.getSuperclass();	          Class    rhsClass    =    lhsClass.getSuperclass();    Class    hsClass    =    lhsClass.getSuperclass();    	compilable	  [FE]  AssertionFailedError  	18	7	replace
293	[BUG]  [BUGGY]  Object  lhsClass  =  lhsClass.getSuperclass();  [CE]  variable  lhsClass  is  already  defined  in  method  append(Object,Object)  [FE]      AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  Object  lhsClass  =  lhsClass.getSuperclass();  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	Object  lhsClass  =  lhsClass.getSuperclass();	          Class    rhsClass    =    lhsClass.getSuperclass();    Class    hsClass    =    lhsClass.getSuperclass();    	non-compiled	[CE]  variable  lhsClass  is  already  defined  in  method  append(Object,Object)	18	None	replace
294	[BUG]  [BUGGY]  isEquals  =  lhsClass.equals(lhs);  lhsClass  =  lhsClass.equals(lhs);  [CE]  incompatible  types  [FE]    AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  lhsClass.equals(lhs);  lhsClass  =  lhsClass.equals(lhs);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals    =    lhsClass.equals(lhs);    lhsClass  =  lhsClass.equals(lhs);	  	non-compiled	[CE]  incompatible  types	30	None	add
295	[BUG]  [BUGGY]  lhsClass  =  lhsClass  ==  null?  null  :  lhsClass.getSuperclass();  Class  lhsClass  =  lhsClass  ==  null?  null  :  lhsClass.getSuperclass();  [CE]  variable  lhsClass  is  already  defined  in  method  append(Object,Object)  [FE]    AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  lhsClass  =  lhsClass  ==  null?  null  :  lhsClass.getSuperclass();  Class  lhsClass  =  lhsClass  ==  null?  null  :  lhsClass.getSuperclass();  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	lhsClass    =    lhsClass    ==    null?    null    :    lhsClass.getSuperclass();    Class  lhsClass  =  lhsClass  ==  null?  null  :  lhsClass.getSuperclass();	  	non-compiled	[CE]  variable  lhsClass  is  already  defined  in  method  append(Object,Object)	88	None	add
296	[BUG]  [BUGGY]  rhs  =  lhsClass.equals(rhs);  [CE]  incompatible  types  [FE]              AssertionFailedError      [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  rhs  =  lhsClass.equals(rhs);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	rhs  =  lhsClass.equals(rhs);	  isEquals    =    lhsClass.equals(rhs);    ISEquals    =    lhsClass.equals(rhs);    	non-compiled	[CE]  incompatible  types	56	None	replace
297	[BUG]  [BUGGY]  Object  rhs  =  lhsClass  ==  null?  lhsClass.getRawClass()  :  null;  [CE]  variable  rhs  is  already  defined  in  method  append(Object,Object)  [FE]                    AssertionFailedError      [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  Object  rhs  =  lhsClass  ==  null?  lhsClass.getRawClass()  :  null;  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	Object  rhs  =  lhsClass  ==  null?  lhsClass.getRawClass()  :  null;	  Object    rhs    =    lhsClass    ==    null?    lhsClass.getSuperclass()    :    null;    	non-compiled	[CE]  variable  rhs  is  already  defined  in  method  append(Object,Object)	107	None	replace
298	[BUG]  [BUGGY]  isEquals  =  lhsClass.getClass().equals(rhs);  lhsClass  =  lhsClass.getClass().equals(rhs);  [CE]  incompatible  types  [FE]    AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  lhsClass.getClass().equals(rhs);  lhsClass  =  lhsClass.getClass().equals(rhs);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals    =    lhsClass.getClass().equals(rhs);    lhsClass  =  lhsClass.getClass().equals(rhs);	  	non-compiled	[CE]  incompatible  types	38	None	add
299	[BUG]  [BUGGY]  isEquals  =  lhsClass.getClass().equals(rhs);  isEquals  =  rhsClass.getClass().equals(rhs);  [CE]  cannot  find  symbol  rhsClass  [FE]      AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  lhsClass.getClass().equals(rhs);  isEquals  =  rhsClass.getClass().equals(rhs);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals    =    lhsClass.getClass().equals(rhs);    isEquals  =  rhsClass.getClass().equals(rhs);	  	non-compiled	[CE]  cannot  find  symbol  rhsClass	38	None	add
300	[BUG]  [BUGGY]  isEquals    =    lhsClass.equals(rhs);    isEquals  =  lhsClass.equals(rhs);  isEquals  =  rhsClass.equals(lhs);  isEquals  =  lhsClass.equals(rhs);  [CE]  cannot  find  symbol  rhsClass  [FE]    AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals    =    lhsClass.equals(rhs);    isEquals  =  lhsClass.equals(rhs);  isEquals  =  rhsClass.equals(lhs);  isEquals  =  lhsClass.equals(rhs);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals        =        lhsClass.equals(rhs);        isEquals    =    lhsClass.equals(rhs);    isEquals  =  rhsClass.equals(lhs);  isEquals  =  lhsClass.equals(rhs);	  	non-compiled	[CE]  cannot  find  symbol  rhsClass	52	None	add
301	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals    =    lhs.getClass().equals(rhs);    isEquals  =  lhsClass.equals(rhs);  isEquals  =  lhsClass.getClass().equals(rhs);  isEquals  =  lhsClass.equals(rhs);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	add	isEquals        =        lhs.getClass().equals(rhs);        isEquals    =    lhsClass.equals(rhs);    isEquals  =  lhsClass.getClass().equals(rhs);  isEquals  =  lhsClass.equals(rhs);	  	compilable	  [FE]  AssertionFailedError  	46	1	add
302	[BUG]  [BUGGY]  isEquals    =    lhs.getClass().equals(rhs);    isEquals  =  lhsClass.equals(rhs);  isEquals  =  lhsClass.getClass().equals(rhs);  isEquals  =  lhsClass.equals(rhs);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals    =    lhs.getClass().equals(rhs);    isEquals  =  lhsClass.equals(rhs);  isEquals  =  lhsClass.getClass().equals(rhs);  isEquals  =  lhsClass.equals(rhs);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals        =        lhs.getClass().equals(rhs);        isEquals    =    lhsClass.equals(rhs);    isEquals  =  lhsClass.getClass().equals(rhs);  isEquals  =  lhsClass.equals(rhs);	  	compilable	  [FE]  AssertionFailedError  	46	1	add
303	[BUG]  [BUGGY]  isEquals    =    lhs.getClass().equals(rhs);    isEquals  =  lhsClass.equals(rhs);  lhs  =  lhs.getClass().equals(rhs);  isEquals  =  lhsClass.equals(rhs);  [CE]  incompatible  types  [FE]      AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals    =    lhs.getClass().equals(rhs);    isEquals  =  lhsClass.equals(rhs);  lhs  =  lhs.getClass().equals(rhs);  isEquals  =  lhsClass.equals(rhs);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals        =        lhs.getClass().equals(rhs);        isEquals    =    lhsClass.equals(rhs);    lhs  =  lhs.getClass().equals(rhs);  isEquals  =  lhsClass.equals(rhs);	  	non-compiled	[CE]  incompatible  types	46	None	add
304	[BUG]  [BUGGY]  lhsClass  =  lhs.getClass().getName();  isEquals  =  lhsClass.getClass().equals(rhs);  [CE]  incompatible  types  [FE]    AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  lhsClass  =  lhs.getClass().getName();  isEquals  =  lhsClass.getClass().equals(rhs);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	lhsClass  =  lhs.getClass().getName();  isEquals  =  lhsClass.getClass().equals(rhs);	  isEquals    =    lhs.getClass().equals(rhs);    isEquals    =    lhs.getClass().equals(rhs);    	non-compiled	[CE]  incompatible  types	44	None	replace
305	[BUG]  [BUGGY]          lhsClass    =    lhsClass.getSuperclass();    lhsClass  =  lhsClass.getSuperclass();  lhsClass  =  lhsClass.getSuperclass();  lhsClass  =  rhsClass.getSuperclass();  [CE]  cannot  find  symbol  rhsClass  [FE]    AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]          lhsClass    =    lhsClass.getSuperclass();    lhsClass  =  lhsClass.getSuperclass();  lhsClass  =  lhsClass.getSuperclass();  lhsClass  =  rhsClass.getSuperclass();  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	                lhsClass        =        lhsClass.getSuperclass();        lhsClass    =    lhsClass.getSuperclass();    lhsClass  =  lhsClass.getSuperclass();  lhsClass  =  rhsClass.getSuperclass();	  	non-compiled	[CE]  cannot  find  symbol  rhsClass	5	None	add
306	[BUG]  [BUGGY]  Class  <?>  rhsClass  =  lhsClass.getRawClass();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          AssertionFailedError      [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  Class  <?>  rhsClass  =  lhsClass.getRawClass();  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	Class  <?>  rhsClass  =  lhsClass.getRawClass();	  Class    <?>    rhsClass    =    lhs.getClass();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	51	None	replace
307	[BUG]  [BUGGY]  isEquals  =  lhsClass.getName().equals(this.getName());  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  lhsClass.getName().equals(this.getName());  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals  =  lhsClass.getName().equals(this.getName());	  isEquals    =    lhsClass.getName().equals(rhsClass.getName());    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
308	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  lhsClass.getName().equals(null);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	add	isEquals  =  lhsClass.getName().equals(null);	  isEquals    =    lhsClass.getName().equals(rhsClass.getName());    	compilable	  [FE]  AssertionFailedError  	66	8	replace
309	[BUG]  [BUGGY]  isEquals  =  lhsClass.getName().equals(null);  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  lhsClass.getName().equals(null);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals  =  lhsClass.getName().equals(null);	  isEquals    =    lhsClass.getName().equals(rhsClass.getName());    	compilable	  [FE]  AssertionFailedError  	66	8	replace
310	[BUG]  [BUGGY]  isEquals  =  lhsClass.getClass().evaluate(rhs);  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  lhsClass.getClass().evaluate(rhs);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals  =  lhsClass.getClass().evaluate(rhs);	  isEquals    =    lhsClass.getClass().equals(rhs);    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
311	[BUG]  [BUGGY]  isEquals  =  lhs.getClass().isArray();  lhs  =  lhs.getClass().isArray();  [CE]  incompatible  types  [FE]    AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  lhs.getClass().isArray();  lhs  =  lhs.getClass().isArray();  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals    =    lhs.getClass().isArray();    lhs  =  lhs.getClass().isArray();	  	non-compiled	[CE]  incompatible  types	40	None	add
312	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  lhsClass  =  lhsClass.getComponentType();  isEquals  =  lhsClass.equals(rhs);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	add	lhsClass  =  lhsClass.getComponentType();  isEquals  =  lhsClass.equals(rhs);	  isEquals    =    lhsClass.equals(rhs);    isEquals    =    lhsClass.equals(rhs);    	compilable	  [FE]  NullPointerException  	53	10	replace
313	[BUG]  [BUGGY]  lhsClass  =  lhsClass.getComponentType();  isEquals  =  lhsClass.equals(rhs);  [FE]  NullPointerException  [FE]    AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  lhsClass  =  lhsClass.getComponentType();  isEquals  =  lhsClass.equals(rhs);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	lhsClass  =  lhsClass.getComponentType();  isEquals  =  lhsClass.equals(rhs);	  isEquals    =    lhsClass.equals(rhs);    isEquals    =    lhsClass.equals(rhs);    	compilable	  [FE]  NullPointerException  	53	10	replace
314	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  lhs.equals(lhsClass);  isEquals  =  lhsClass.equals(lhsClass);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	add	isEquals    =    lhs.equals(lhsClass);    isEquals  =  lhsClass.equals(lhsClass);	  	compilable	  [FE]  AssertionFailedError  	32	1	add
315	[BUG]  [BUGGY]  isEquals  =  lhs.equals(lhsClass);  isEquals  =  lhsClass.equals(lhsClass);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  lhs.equals(lhsClass);  isEquals  =  lhsClass.equals(lhsClass);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals    =    lhs.equals(lhsClass);    isEquals  =  lhsClass.equals(lhsClass);	  	compilable	  [FE]  AssertionFailedError  	32	1	add
316	[BUG]  [BUGGY]  Class  rhsClass  =  this.lhsClass.getClass();  [CE]  cannot  find  symbol  lhsClass  [FE]                    AssertionFailedError      [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  Class  rhsClass  =  this.lhsClass.getClass();  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	Class  rhsClass  =  this.lhsClass.getClass();	  Class    lhsClass    =    this.lhsClass.getClass();    	non-compiled	[CE]  cannot  find  symbol  lhsClass	29	None	replace
317	[BUG]  [BUGGY]  Object  rhs  =  lhsClass.getRawParameterType(2);  [CE]  variable  rhs  is  already  defined  in  method  append(Object,Object)  [FE]              AssertionFailedError      [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  Object  rhs  =  lhsClass.getRawParameterType(2);  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	Object  rhs  =  lhsClass.getRawParameterType(2);	  Object    rhs    =    lhsClass.getRawParameterType(0);    	non-compiled	[CE]  variable  rhs  is  already  defined  in  method  append(Object,Object)	103	None	replace
318	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  lhs.getClass().getName().toLowerCase().equals(rhs);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	add	isEquals  =  lhs.getClass().getName().toLowerCase().equals(rhs);	  isEquals    =    lhs.getClass().getName().equals(rhs);    	compilable	  [FE]  AssertionFailedError  	77	8	replace
319	[BUG]  [BUGGY]  isEquals  =  lhs.getClass().getName().toLowerCase().equals(rhs);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  lhs.getClass().getName().toLowerCase().equals(rhs);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals  =  lhs.getClass().getName().toLowerCase().equals(rhs);	  isEquals    =    lhs.getClass().getName().equals(rhs);    	compilable	  [FE]  AssertionFailedError  	77	8	replace
320	[BUG]  [BUGGY]  lhs  =  lhsClass  ==  null?  null  :  lhsClass.getSuperclass();  lhs  =  lhsClass  {  null?  null  :  lhsClass.getSuperclass();  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  lhs  =  lhsClass  ==  null?  null  :  lhsClass.getSuperclass();  lhs  =  lhsClass  {  null?  null  :  lhsClass.getSuperclass();  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	lhs    =    lhsClass    ==    null?    null    :    lhsClass.getSuperclass();    lhs  =  lhsClass  {  null?  null  :  lhsClass.getSuperclass();	  	non-compiled	[CE]  ';'  expected	100	None	add
321	[BUG]  [BUGGY]  Object  lhs  =  lhsClass.getType();  [CE]  variable  lhs  is  already  defined  in  method  append(Object,Object)  [FE]              AssertionFailedError      [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  Object  lhs  =  lhsClass.getType();  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	Object  lhs  =  lhsClass.getType();	  Object    lhs    =    lhsClass.getRawClass();    	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  append(Object,Object)	37	None	replace
322	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  rhs.equals(lhsClass);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	add	isEquals  =  rhs.equals(lhsClass);	  isEquals    =    lhs.equals(lhsClass);    	compilable	  [FE]  AssertionFailedError  	33	8	replace
323	[BUG]  [BUGGY]  isEquals  =  rhs.equals(lhsClass);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  rhs.equals(lhsClass);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals  =  rhs.equals(lhsClass);	  isEquals    =    lhs.equals(lhsClass);    	compilable	  [FE]  AssertionFailedError  	33	8	replace
324	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  lhsClass  =  lhsClass.getSuperclass();  lhs  =  lhsClass.getSuperclass();  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	add	lhsClass  =  lhsClass.getSuperclass();  lhs  =  lhsClass.getSuperclass();	          lhs    =    lhsClass.getSuperclass();    lhs    =    rhsClass.getSuperclass();    	compilable	  [FE]  AssertionFailedError  	74	7	replace
325	[BUG]  [BUGGY]  lhsClass  =  lhsClass.getSuperclass();  lhs  =  lhsClass.getSuperclass();  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  lhsClass  =  lhsClass.getSuperclass();  lhs  =  lhsClass.getSuperclass();  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	lhsClass  =  lhsClass.getSuperclass();  lhs  =  lhsClass.getSuperclass();	          lhs    =    lhsClass.getSuperclass();    lhs    =    rhsClass.getSuperclass();    	compilable	  [FE]  AssertionFailedError  	74	7	replace
326	[BUG]  [BUGGY]  rhsClass  =  lhsClass.getSuperclass();  [CE]  cannot  find  symbol  rhsClass  [FE]    AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  rhsClass  =  lhsClass.getSuperclass();  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	rhsClass  =  lhsClass.getSuperclass();	          lhsClass    =    lhsClass.getSuperclass();    lhsClass    =    lhsClass.getSuperclass();    	non-compiled	[CE]  cannot  find  symbol  rhsClass	6	None	replace
327	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  lhsClass  =  lhsClass.getClass();  isEquals  =  lhsClass.equals(rhs);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	add	lhsClass  =  lhsClass.getClass();  isEquals  =  lhsClass.equals(rhs);	  isEquals    =    lhs.getClass().equals(rhs);    isEquals    =    lhsClass.equals(rhs);    	compilable	  [FE]  AssertionFailedError  	47	8	replace
328	[BUG]  [BUGGY]  lhsClass  =  lhsClass.getClass();  isEquals  =  lhsClass.equals(rhs);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  lhsClass  =  lhsClass.getClass();  isEquals  =  lhsClass.equals(rhs);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	lhsClass  =  lhsClass.getClass();  isEquals  =  lhsClass.equals(rhs);	  isEquals    =    lhs.getClass().equals(rhs);    isEquals    =    lhsClass.equals(rhs);    	compilable	  [FE]  AssertionFailedError  	47	8	replace
329	[BUG]  [BUGGY]  isEquals  =  lhs.getClass().getName().equals(rhs);  lhs  =  lhs.getClass().getName().equals(rhs);  [CE]  incompatible  types  [FE]    AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  lhs.getClass().getName().equals(rhs);  lhs  =  lhs.getClass().getName().equals(rhs);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals    =    lhs.getClass().getName().equals(rhs);    lhs  =  lhs.getClass().getName().equals(rhs);	  	non-compiled	[CE]  incompatible  types	76	None	add
330	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  lhs.getClass().getName().equals(rhs);  isEquals  =  lhsClass.getName().equals(rhs);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	add	isEquals    =    lhs.getClass().getName().equals(rhs);    isEquals  =  lhsClass.getName().equals(rhs);	  	compilable	  [FE]  AssertionFailedError  	76	1	add
331	[BUG]  [BUGGY]  isEquals  =  lhs.getClass().getName().equals(rhs);  isEquals  =  lhsClass.getName().equals(rhs);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  lhs.getClass().getName().equals(rhs);  isEquals  =  lhsClass.getName().equals(rhs);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals    =    lhs.getClass().getName().equals(rhs);    isEquals  =  lhsClass.getName().equals(rhs);	  	compilable	  [FE]  AssertionFailedError  	76	1	add
332	[BUG]  [BUGGY]  isEquals  =  lhsClass.isEmpty()?  false  :  rhsClass.equals(lhs);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  lhsClass.isEmpty()?  false  :  rhsClass.equals(lhs);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals  =  lhsClass.isEmpty()?  false  :  rhsClass.equals(lhs);	  isEquals    =    lhsClass.isEmpty()?    false    :    lhsClass.equals(rhs);    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
333	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  lhs.equals(this.getClass());  isEquals  =  lhsClass.equals(this.getClass());  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	add	isEquals    =    lhs.equals(this.getClass());    isEquals  =  lhsClass.equals(this.getClass());	  	compilable	  [FE]  AssertionFailedError  	92	1	add
334	[BUG]  [BUGGY]  isEquals  =  lhs.equals(this.getClass());  isEquals  =  lhsClass.equals(this.getClass());  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  lhs.equals(this.getClass());  isEquals  =  lhsClass.equals(this.getClass());  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals    =    lhs.equals(this.getClass());    isEquals  =  lhsClass.equals(this.getClass());	  	compilable	  [FE]  AssertionFailedError  	92	1	add
335	[BUG]  [BUGGY]  if(lhsClass!=  null)  {  isEquals  =  lhsClass.equals(rhs);  isEquals  =  lhsClass.equals(rhs));  }  [CE]  ';'  expected  [FE]        AssertionFailedError      [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  if(lhsClass!=  null)  {  isEquals  =  lhsClass.equals(rhs);  isEquals  =  lhsClass.equals(rhs));  }  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	if(lhsClass!=  null)  {  isEquals  =  lhsClass.equals(rhs);  isEquals  =  lhsClass.equals(rhs));  }	  isEquals    =    lhsClass.equals(rhs);    isEquals    =    lhsClass.equals(rhs));    	non-compiled	[CE]  ';'  expected	98	None	replace
336	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  if(lhsClass!=  null)  {  isEquals  =  lhsClass.equals(rhs);  isEquals  =  lhsClass.equals(rhs);  }  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	add	if(lhsClass!=  null)  {  isEquals  =  lhsClass.equals(rhs);  isEquals  =  lhsClass.equals(rhs);  }	  isEquals    =    lhsClass.equals(rhs);    isEquals    =    lhsClass.equals(rhs));    	compilable	  [FE]  AssertionFailedError  	98	8	replace
337	[BUG]  [BUGGY]  if(lhsClass!=  null)  {  isEquals  =  lhsClass.equals(rhs);  isEquals  =  lhsClass.equals(rhs);  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  if(lhsClass!=  null)  {  isEquals  =  lhsClass.equals(rhs);  isEquals  =  lhsClass.equals(rhs);  }  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	if(lhsClass!=  null)  {  isEquals  =  lhsClass.equals(rhs);  isEquals  =  lhsClass.equals(rhs);  }	  isEquals    =    lhsClass.equals(rhs);    isEquals    =    lhsClass.equals(rhs));    	compilable	  [FE]  AssertionFailedError  	98	8	replace
338	[BUG]  [BUGGY]  lhsClass  =  lhsClass!=  null?  lhsClass.getRawClass()  :  null;  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  lhsClass  =  lhsClass!=  null?  lhsClass.getRawClass()  :  null;  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	lhsClass  =  lhsClass!=  null?  lhsClass.getRawClass()  :  null;	  lhsClass    =    lhsClass!=    null?    lhsClass.getSuperclass()    :    null;    	non-compiled	[CE]  cannot  find  symbol	106	None	replace
339	[BUG]  [BUGGY]  lhsClass  =  lhsClass!=  null?  rhsClass.getSuperclass()  :  null;  [CE]  cannot  find  symbol  rhsClass  [FE]      AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  lhsClass  =  lhsClass!=  null?  rhsClass.getSuperclass()  :  null;  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	lhsClass  =  lhsClass!=  null?  rhsClass.getSuperclass()  :  null;	  lhsClass    =    lhsClass!=    null?    lhsClass.getSuperclass()    :    null;    	non-compiled	[CE]  cannot  find  symbol  rhsClass	106	None	replace
340	[BUG]  [BUGGY]  isEquals  =  lhsClass.equals(null);  lhsClass  =  lhsClass.equals(null);  [CE]  incompatible  types  [FE]    AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  lhsClass.equals(null);  lhsClass  =  lhsClass.equals(null);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals    =    lhsClass.equals(null);    lhsClass  =  lhsClass.equals(null);	  	non-compiled	[CE]  incompatible  types	90	None	add
341	[BUG]  [BUGGY]          Class    rhsClass    =    lhsClass.getSuperclass();    Class  hsClass  =  lhsClass.getSuperclass();  Class  rhsClass  =  lhsClass.getSuperclass();  Class  rhsClass  =  lhsClass.getSuperclass();  [CE]  variable  rhsClass  is  already  defined  in  method  append(Object,Object)  [FE]    AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]          Class    rhsClass    =    lhsClass.getSuperclass();    Class  hsClass  =  lhsClass.getSuperclass();  Class  rhsClass  =  lhsClass.getSuperclass();  Class  rhsClass  =  lhsClass.getSuperclass();  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	                Class        rhsClass        =        lhsClass.getSuperclass();        Class    hsClass    =    lhsClass.getSuperclass();    Class  rhsClass  =  lhsClass.getSuperclass();  Class  rhsClass  =  lhsClass.getSuperclass();	  	non-compiled	[CE]  variable  rhsClass  is  already  defined  in  method  append(Object,Object)	17	None	add
342	[BUG]  [BUGGY]          Class    rhsClass    =    lhsClass.getSuperclass();    Class  hsClass  =  lhsClass.getSuperclass();  Class  lhsClass  =  lhsClass.getSuperclass();  Class  lhsClass  =  lhsClass.getSuperclass();  [CE]  variable  lhsClass  is  already  defined  in  method  append(Object,Object)  [FE]      AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]          Class    rhsClass    =    lhsClass.getSuperclass();    Class  hsClass  =  lhsClass.getSuperclass();  Class  lhsClass  =  lhsClass.getSuperclass();  Class  lhsClass  =  lhsClass.getSuperclass();  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	                Class        rhsClass        =        lhsClass.getSuperclass();        Class    hsClass    =    lhsClass.getSuperclass();    Class  lhsClass  =  lhsClass.getSuperclass();  Class  lhsClass  =  lhsClass.getSuperclass();	  	non-compiled	[CE]  variable  lhsClass  is  already  defined  in  method  append(Object,Object)	17	None	add
343	[BUG]  [BUGGY]  isEquals  =  lhsClass.getClass().getRawClass().isArray();  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  lhsClass.getClass().getRawClass().isArray();  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals  =  lhsClass.getClass().getRawClass().isArray();	  isEquals    =    lhsClass.getClass().isArray();    	non-compiled	[CE]  cannot  find  symbol	95	None	replace
344	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  lhsClass.getClass().isArray()  ||!lhsClass.isInterface();  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	add	isEquals  =  lhsClass.getClass().isArray()  ||!lhsClass.isInterface();	  isEquals    =    lhsClass.getClass().isArray();    	compilable	  [FE]  AssertionFailedError  	95	7	replace
345	[BUG]  [BUGGY]  isEquals  =  lhsClass.getClass().isArray()  ||!lhsClass.isInterface();  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  lhsClass.getClass().isArray()  ||!lhsClass.isInterface();  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals  =  lhsClass.getClass().isArray()  ||!lhsClass.isInterface();	  isEquals    =    lhsClass.getClass().isArray();    	compilable	  [FE]  AssertionFailedError  	95	7	replace
346	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  lhs  =  lhsClass  ==  null?  null  :  lhsClass.getName();  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	add	lhs  =  lhsClass  ==  null?  null  :  lhsClass.getName();	  lhs    =    lhsClass    ==    null?    null    :    lhsClass.getSuperclass();    	compilable	  [FE]  AssertionFailedError  	101	7	replace
347	[BUG]  [BUGGY]  lhs  =  lhsClass  ==  null?  null  :  lhsClass.getName();  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  lhs  =  lhsClass  ==  null?  null  :  lhsClass.getName();  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	lhs  =  lhsClass  ==  null?  null  :  lhsClass.getName();	  lhs    =    lhsClass    ==    null?    null    :    lhsClass.getSuperclass();    	compilable	  [FE]  AssertionFailedError  	101	7	replace
348	[BUG]  [BUGGY]  isEquals  =  lhsClass.getClass().isArray();  lhsClass  =  lhsClass.getClass().isArray();  [CE]  incompatible  types  [FE]    AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  lhsClass.getClass().isArray();  lhsClass  =  lhsClass.getClass().isArray();  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals    =    lhsClass.getClass().isArray();    lhsClass  =  lhsClass.getClass().isArray();	  	non-compiled	[CE]  incompatible  types	94	None	add
349	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  lhs.getClass().equals(this.getClass());  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	add	isEquals  =  lhs.getClass().equals(this.getClass());	  isEquals    =    lhs.getClass().equals(rhsClass);    	compilable	  [FE]  AssertionFailedError  	42	8	replace
350	[BUG]  [BUGGY]  isEquals  =  lhs.getClass().equals(this.getClass());  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  lhs.getClass().equals(this.getClass());  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals  =  lhs.getClass().equals(this.getClass());	  isEquals    =    lhs.getClass().equals(rhsClass);    	compilable	  [FE]  AssertionFailedError  	42	8	replace
351	[BUG]  [BUGGY]          Class    rhsClass    =    lhsClass.getClass();    Class  hhsClass  =  lhsClass.getClass();  Object  rhsClass  =  lhsClass.getClass();  Class  hhsClass  =  lhsClass.getClass();  [CE]  variable  rhsClass  is  already  defined  in  method  append(Object,Object)  [FE]    AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]          Class    rhsClass    =    lhsClass.getClass();    Class  hhsClass  =  lhsClass.getClass();  Object  rhsClass  =  lhsClass.getClass();  Class  hhsClass  =  lhsClass.getClass();  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	                Class        rhsClass        =        lhsClass.getClass();        Class    hhsClass    =    lhsClass.getClass();    Object  rhsClass  =  lhsClass.getClass();  Class  hhsClass  =  lhsClass.getClass();	  	non-compiled	[CE]  variable  rhsClass  is  already  defined  in  method  append(Object,Object)	3	None	add
352	[BUG]  [BUGGY]          Class    rhsClass    =    lhsClass.getClass();    Class  hhsClass  =  lhsClass.getClass();  Class  hsClass  =  lhsClass.getClass();  Class  hhsClass  =  lhsClass.getClass();  [CE]  variable  hhsClass  is  already  defined  in  method  append(Object,Object)  [FE]      AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]          Class    rhsClass    =    lhsClass.getClass();    Class  hhsClass  =  lhsClass.getClass();  Class  hsClass  =  lhsClass.getClass();  Class  hhsClass  =  lhsClass.getClass();  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	                Class        rhsClass        =        lhsClass.getClass();        Class    hhsClass    =    lhsClass.getClass();    Class  hsClass  =  lhsClass.getClass();  Class  hhsClass  =  lhsClass.getClass();	  	non-compiled	[CE]  variable  hhsClass  is  already  defined  in  method  append(Object,Object)	3	None	add
353	[BUG]  [BUGGY]  Lhs  rhs  =  lhsClass.getRawClass();  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  Lhs  rhs  =  lhsClass.getRawClass();  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	Lhs  rhs  =  lhsClass.getRawClass();	  lhs    =    lhsClass.getRawClass();    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
354	[BUG]  [BUGGY]  lhs  =  lhsClass.getSimpleName();  lhs  =  rhsClass.getSimpleName();  [CE]  cannot  find  symbol  rhsClass  [FE]    AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  lhs  =  lhsClass.getSimpleName();  lhs  =  rhsClass.getSimpleName();  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	lhs    =    lhsClass.getSimpleName();    lhs  =  rhsClass.getSimpleName();	  	non-compiled	[CE]  cannot  find  symbol  rhsClass	35	None	add
355	[BUG]  [BUGGY]  lhs  =  lhsClass  ==  null?  null  :  lhsClass.getRawClass();  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  lhs  =  lhsClass  ==  null?  null  :  lhsClass.getRawClass();  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	lhs  =  lhsClass  ==  null?  null  :  lhsClass.getRawClass();	  lhs    =    lhsClass    ==    null?    null    :    lhsClass.getSuperclass();    	non-compiled	[CE]  cannot  find  symbol	101	None	replace
356	[BUG]  [BUGGY]  isEquals  =  lhs.getClass().getName().equals(rhs);  hasEquals  =  lhs.getClass().getName().equals(rhs);  [CE]  cannot  find  symbol  hasEquals  [FE]    AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  lhs.getClass().getName().equals(rhs);  hasEquals  =  lhs.getClass().getName().equals(rhs);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals    =    lhs.getClass().getName().equals(rhs);    hasEquals  =  lhs.getClass().getName().equals(rhs);	  	non-compiled	[CE]  cannot  find  symbol  hasEquals	76	None	add
357	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  lhsClass.getClass().isArray()  ||  rhs.getClass().isArray();  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	add	isEquals  =  lhsClass.getClass().isArray()  ||  rhs.getClass().isArray();	  isEquals    =    lhsClass.getClass().equals(rhs);    	compilable	  [FE]  AssertionFailedError  	39	8	replace
358	[BUG]  [BUGGY]  isEquals  =  lhsClass.getClass().isArray()  ||  rhs.getClass().isArray();  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  lhsClass.getClass().isArray()  ||  rhs.getClass().isArray();  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals  =  lhsClass.getClass().isArray()  ||  rhs.getClass().isArray();	  isEquals    =    lhsClass.getClass().equals(rhs);    	compilable	  [FE]  AssertionFailedError  	39	8	replace
359	[BUG]  [BUGGY]  isEquals  =  lhs,  rhs.isEquals(false);  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  lhs,  rhs.isEquals(false);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals  =  lhs,  rhs.isEquals(false);	  isEquals    =    lhs,    rhs.isEquals(lhs);    	non-compiled	[CE]  ';'  expected	25	None	replace
360	[BUG]  [BUGGY]  if(lhsClass!=  null)  {  Class  rhsClass  =  lhsClass.getClass();  class  lhsClass  =  lhsClass.getClass();  }  [CE]  '{'  expected  [FE]            AssertionFailedError      [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  if(lhsClass!=  null)  {  Class  rhsClass  =  lhsClass.getClass();  class  lhsClass  =  lhsClass.getClass();  }  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	if(lhsClass!=  null)  {  Class  rhsClass  =  lhsClass.getClass();  class  lhsClass  =  lhsClass.getClass();  }	          Class    rhsClass    =    lhsClass.getClass();    class    lhsClass    =    lhsClass.getClass();    	non-compiled	[CE]  '{'  expected	73	None	replace
361	[BUG]  [BUGGY]  if(lhsClass!=  null)  {  Class  rhsClass  =  lhsClass.getClass();  class  lhsClass  =  lhsClass.getClass();  }  else  {  this.setEquals(false);  return  this;  }  [CE]  '{'  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  if(lhsClass!=  null)  {  Class  rhsClass  =  lhsClass.getClass();  class  lhsClass  =  lhsClass.getClass();  }  else  {  this.setEquals(false);  return  this;  }  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	if(lhsClass!=  null)  {  Class  rhsClass  =  lhsClass.getClass();  class  lhsClass  =  lhsClass.getClass();  }  else  {  this.setEquals(false);  return  this;  }	          Class    rhsClass    =    lhsClass.getClass();    class    lhsClass    =    lhsClass.getClass();    	non-compiled	[CE]  '{'  expected	73	None	replace
362	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  if(lhsClass.isArray())  {  lhs  =  lhsClass.getSuperclass();  lhs  =  lhsClass.getSuperclass();  }  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	add	if(lhsClass.isArray())  {  lhs  =  lhsClass.getSuperclass();  lhs  =  lhsClass.getSuperclass();  }	          lhs    =    lhsClass.getSuperclass();    lhs    =    lhsClass.getSuperclass();    	compilable	  [FE]  AssertionFailedError  	58	7	replace
363	[BUG]  [BUGGY]  if(lhsClass.isArray())  {  lhs  =  lhsClass.getSuperclass();  lhs  =  lhsClass.getSuperclass();  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  if(lhsClass.isArray())  {  lhs  =  lhsClass.getSuperclass();  lhs  =  lhsClass.getSuperclass();  }  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	if(lhsClass.isArray())  {  lhs  =  lhsClass.getSuperclass();  lhs  =  lhsClass.getSuperclass();  }	          lhs    =    lhsClass.getSuperclass();    lhs    =    lhsClass.getSuperclass();    	compilable	  [FE]  AssertionFailedError  	58	7	replace
364	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  if(lhsClass.isArray())  {  lhs  =  lhsClass.getSuperclass();  lhs  =  lhsClass.getSuperclass();  }  else  {  this.setEquals(false);  return  this;  }  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	add	if(lhsClass.isArray())  {  lhs  =  lhsClass.getSuperclass();  lhs  =  lhsClass.getSuperclass();  }  else  {  this.setEquals(false);  return  this;  }	          lhs    =    lhsClass.getSuperclass();    lhs    =    lhsClass.getSuperclass();    	compilable	  [FE]  AssertionFailedError  	58	8	replace
365	[BUG]  [BUGGY]  if(lhsClass.isArray())  {  lhs  =  lhsClass.getSuperclass();  lhs  =  lhsClass.getSuperclass();  }  else  {  this.setEquals(false);  return  this;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  if(lhsClass.isArray())  {  lhs  =  lhsClass.getSuperclass();  lhs  =  lhsClass.getSuperclass();  }  else  {  this.setEquals(false);  return  this;  }  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	if(lhsClass.isArray())  {  lhs  =  lhsClass.getSuperclass();  lhs  =  lhsClass.getSuperclass();  }  else  {  this.setEquals(false);  return  this;  }	          lhs    =    lhsClass.getSuperclass();    lhs    =    lhsClass.getSuperclass();    	compilable	  [FE]  AssertionFailedError  	58	8	replace
366	[BUG]  [BUGGY]  lhsClass  =  lhsClass  ==  null?  null  :  lhsClass.getRawClass();  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  lhsClass  =  lhsClass  ==  null?  null  :  lhsClass.getRawClass();  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	lhsClass  =  lhsClass  ==  null?  null  :  lhsClass.getRawClass();	  lhsClass    =    lhsClass    ==    null?    null    :    lhsClass.getSuperclass();    	non-compiled	[CE]  cannot  find  symbol	89	None	replace
367	[BUG]  [BUGGY]  lhsClass  =  lhsClass  ==  null?  null  :  lhsClass.getName();  [CE]  incompatible  types  [FE]      AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  lhsClass  =  lhsClass  ==  null?  null  :  lhsClass.getName();  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	lhsClass  =  lhsClass  ==  null?  null  :  lhsClass.getName();	  lhsClass    =    lhsClass    ==    null?    null    :    lhsClass.getSuperclass();    	non-compiled	[CE]  incompatible  types	89	None	replace
368	[BUG]  [BUGGY]  lhs  =  lhsClass  ==  null?  null  :  lhsClass.getSuperclass();  Lhs  =  lhsClass  ==  null?  null  :  lhsClass.getSuperclass();  [CE]  cannot  find  symbol  Lhs  [FE]    AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  lhs  =  lhsClass  ==  null?  null  :  lhsClass.getSuperclass();  Lhs  =  lhsClass  ==  null?  null  :  lhsClass.getSuperclass();  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	lhs    =    lhsClass    ==    null?    null    :    lhsClass.getSuperclass();    Lhs  =  lhsClass  ==  null?  null  :  lhsClass.getSuperclass();	  	non-compiled	[CE]  cannot  find  symbol  Lhs	100	None	add
369	[BUG]  [BUGGY]  isEquals  =  lhsClass.getClass().isAssignableFrom(rhsClass);  [CE]  cannot  find  symbol  rhsClass  [FE]    AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  lhsClass.getClass().isAssignableFrom(rhsClass);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals  =  lhsClass.getClass().isAssignableFrom(rhsClass);	  isEquals    =    lhsClass.getClass().isArray();    	non-compiled	[CE]  cannot  find  symbol  rhsClass	95	None	replace
370	[BUG]  [BUGGY]  Class  rhsClass  =  lhs.getClass();  class  rhsClass  =  lhs.getClass();  [CE]  '{'  expected  [FE]    AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  Class  rhsClass  =  lhs.getClass();  class  rhsClass  =  lhs.getClass();  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	Class    rhsClass    =    lhs.getClass();    class  rhsClass  =  lhs.getClass();	  	non-compiled	[CE]  '{'  expected	49	None	add
371	[BUG]  [BUGGY]  isEquals    =    lhsClass.equals(rhs);    isEquals  =  lhsClass.equals(rhs);  lhs  =  lhsClass.equals(rhs);  isEquals  =  lhsClass.equals(rhs);  [CE]  incompatible  types  [FE]    AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals    =    lhsClass.equals(rhs);    isEquals  =  lhsClass.equals(rhs);  lhs  =  lhsClass.equals(rhs);  isEquals  =  lhsClass.equals(rhs);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals        =        lhsClass.equals(rhs);        isEquals    =    lhsClass.equals(rhs);    lhs  =  lhsClass.equals(rhs);  isEquals  =  lhsClass.equals(rhs);	  	non-compiled	[CE]  incompatible  types	52	None	add
372	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals    =    lhsClass.equals(rhs);    isEquals  =  lhsClass.equals(rhs);  isEquals  =  lhsClass.getName().equals(rhs);  isEquals  =  lhsClass.getName().equals(rhs);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	add	isEquals        =        lhsClass.equals(rhs);        isEquals    =    lhsClass.equals(rhs);    isEquals  =  lhsClass.getName().equals(rhs);  isEquals  =  lhsClass.getName().equals(rhs);	  	compilable	  [FE]  AssertionFailedError  	52	1	add
373	[BUG]  [BUGGY]  isEquals    =    lhsClass.equals(rhs);    isEquals  =  lhsClass.equals(rhs);  isEquals  =  lhsClass.getName().equals(rhs);  isEquals  =  lhsClass.getName().equals(rhs);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals    =    lhsClass.equals(rhs);    isEquals  =  lhsClass.equals(rhs);  isEquals  =  lhsClass.getName().equals(rhs);  isEquals  =  lhsClass.getName().equals(rhs);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals        =        lhsClass.equals(rhs);        isEquals    =    lhsClass.equals(rhs);    isEquals  =  lhsClass.getName().equals(rhs);  isEquals  =  lhsClass.getName().equals(rhs);	  	compilable	  [FE]  AssertionFailedError  	52	1	add
374	[BUG]  [BUGGY]  isEquals    =    lhsClass.equals(rhs);    isEquals  =  lhsClass.equals(rhs);  isEquals  =  lhsClass.equals(rhs);  hasEquals  =  lhsClass.equals(rhs);  [CE]  cannot  find  symbol  hasEquals  [FE]        AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals    =    lhsClass.equals(rhs);    isEquals  =  lhsClass.equals(rhs);  isEquals  =  lhsClass.equals(rhs);  hasEquals  =  lhsClass.equals(rhs);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals        =        lhsClass.equals(rhs);        isEquals    =    lhsClass.equals(rhs);    isEquals  =  lhsClass.equals(rhs);  hasEquals  =  lhsClass.equals(rhs);	  	non-compiled	[CE]  cannot  find  symbol  hasEquals	52	None	add
375	[BUG]  [BUGGY]  Class  <?>  lhsClass  =  lhs.getSimpleName();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError      [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  Class  <?>  lhsClass  =  lhs.getSimpleName();  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	Class  <?>  lhsClass  =  lhs.getSimpleName();	  Class    <?>    lhsClass    =    lhs.getRawClass();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	62	None	replace
376	[BUG]  [BUGGY]  isEquals    =    lhs.getClass().equals(rhs);    isEquals  =  lhs.getClass().equals(rhs);  this.setEquals(lhs.getClass().equals(rhs);  isEquals  =  lhs.getClass().equals(rhs);  [CE]  ')'  expected  [FE]    AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals    =    lhs.getClass().equals(rhs);    isEquals  =  lhs.getClass().equals(rhs);  this.setEquals(lhs.getClass().equals(rhs);  isEquals  =  lhs.getClass().equals(rhs);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals        =        lhs.getClass().equals(rhs);        isEquals    =    lhs.getClass().equals(rhs);    this.setEquals(lhs.getClass().equals(rhs);  isEquals  =  lhs.getClass().equals(rhs);	  	non-compiled	[CE]  ')'  expected	43	None	add
377	[BUG]  [BUGGY]  isEquals  =  lhsClass.isArray()?  lhs.getClass()  :  lhsClass.equals(rhs,  lhsClass);  [CE]  method  equals  in  class  Object  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError      [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  lhsClass.isArray()?  lhs.getClass()  :  lhsClass.equals(rhs,  lhsClass);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals  =  lhsClass.isArray()?  lhs.getClass()  :  lhsClass.equals(rhs,  lhsClass);	  isEquals    =    lhsClass.isArray()?    rhs.getClass()    :    lhsClass.equals(rhs);    	non-compiled	[CE]  method  equals  in  class  Object  cannot  be  applied  to  given  types;	111	None	replace
378	[BUG]  [BUGGY]  isEquals  =  lhsClass.isArray()?  lhs.getClass()  :  lhsClass.equals(other);  [CE]  cannot  find  symbol  other  [FE]              AssertionFailedError      [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  lhsClass.isArray()?  lhs.getClass()  :  lhsClass.equals(other);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals  =  lhsClass.isArray()?  lhs.getClass()  :  lhsClass.equals(other);	  isEquals    =    lhsClass.isArray()?    rhs.getClass()    :    lhsClass.equals(rhs);    	non-compiled	[CE]  cannot  find  symbol  other	111	None	replace
379	[BUG]  [BUGGY]  isEquals  =  lhsClass.isArray();  isEquals  =  lhsClass.isExtern();  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  lhsClass.isArray();  isEquals  =  lhsClass.isExtern();  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals    =    lhsClass.isArray();    isEquals  =  lhsClass.isExtern();	  	non-compiled	[CE]  cannot  find  symbol	108	None	add
380	[BUG]  [BUGGY]  isEquals  =  lhsClass.isArray();  isEquals  =  lhsClass.isExported();  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  lhsClass.isArray();  isEquals  =  lhsClass.isExported();  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals    =    lhsClass.isArray();    isEquals  =  lhsClass.isExported();	  	non-compiled	[CE]  cannot  find  symbol	108	None	add
381	[BUG]  [BUGGY]  isEquals  =  lhs.equals(lhsClass);  hasEquals  =  lhs.equals(lhsClass);  [CE]  cannot  find  symbol  hasEquals  [FE]    AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  lhs.equals(lhsClass);  hasEquals  =  lhs.equals(lhsClass);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals    =    lhs.equals(lhsClass);    hasEquals  =  lhs.equals(lhsClass);	  	non-compiled	[CE]  cannot  find  symbol  hasEquals	32	None	add
382	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  lhs.getClass().getName().equals(lhsClass);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	add	isEquals  =  lhs.getClass().getName().equals(lhsClass);	  isEquals    =    lhs.getClass().getName().equals(rhs);    	compilable	  [FE]  AssertionFailedError  	77	8	replace
383	[BUG]  [BUGGY]  isEquals  =  lhs.getClass().getName().equals(lhsClass);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  lhs.getClass().getName().equals(lhsClass);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals  =  lhs.getClass().getName().equals(lhsClass);	  isEquals    =    lhs.getClass().getName().equals(rhs);    	compilable	  [FE]  AssertionFailedError  	77	8	replace
384	[BUG]  [BUGGY]  isEquals  =  lhs.getClass().getName().equals(rhs.getName());  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  lhs.getClass().getName().equals(rhs.getName());  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals  =  lhs.getClass().getName().equals(rhs.getName());	  isEquals    =    lhs.getClass().getName().equals(rhs);    	non-compiled	[CE]  cannot  find  symbol	77	None	replace
385	[BUG]  [BUGGY]  Object  lhs  =  lhsClass!=  null?  lhsClass.getSuperclass()  :  null;  [CE]  variable  lhs  is  already  defined  in  method  append(Object,Object)  [FE]                    AssertionFailedError      [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  Object  lhs  =  lhsClass!=  null?  lhsClass.getSuperclass()  :  null;  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	Object  lhs  =  lhsClass!=  null?  lhsClass.getSuperclass()  :  null;	  Object    lhs    =    lhsClass.getSuperclass();    	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  append(Object,Object)	19	None	replace
386	[BUG]  [BUGGY]  Class  lhsClass  =  lhs.restrictByNotNullOrUndefined();  [CE]  variable  lhsClass  is  already  defined  in  method  append(Object,Object)  [FE]              AssertionFailedError      [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  Class  lhsClass  =  lhs.restrictByNotNullOrUndefined();  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	Class  lhsClass  =  lhs.restrictByNotNullOrUndefined();	  Class    lhsClass    =    lhs.getClass();    	non-compiled	[CE]  variable  lhsClass  is  already  defined  in  method  append(Object,Object)	26	None	replace
387	[BUG]  [BUGGY]  lhsEquals  =  lhsClass.equals(rhs);  [CE]  cannot  find  symbol  lhsEquals  [FE]            AssertionFailedError      [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  lhsEquals  =  lhsClass.equals(rhs);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	lhsEquals  =  lhsClass.equals(rhs);	  isEquals    =    lhsClass.equals(rhs);    hasEquals    =    lhsClass.equals(rhs);    	non-compiled	[CE]  cannot  find  symbol  lhsEquals	55	None	replace
388	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  this.setEquals(lhsClass.equals(rhs));  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	add	this.setEquals(lhsClass.equals(rhs));	  isEquals    =    lhsClass.equals(rhs);    hasEquals    =    lhsClass.equals(rhs);    	compilable	  [FE]  AssertionFailedError  	55	8	replace
389	[BUG]  [BUGGY]  this.setEquals(lhsClass.equals(rhs));  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  this.setEquals(lhsClass.equals(rhs));  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	this.setEquals(lhsClass.equals(rhs));	  isEquals    =    lhsClass.equals(rhs);    hasEquals    =    lhsClass.equals(rhs);    	compilable	  [FE]  AssertionFailedError  	55	8	replace
390	[BUG]  [BUGGY]          Class    rhsClass    =    lhsClass.getSuperclass();    Class  hsClass  =  lhsClass.getSuperclass();  Class  rhsClass  =  lhsClass.getSuperclass();  Class  hSClass  =  lhsClass.getSuperclass();  [CE]  variable  rhsClass  is  already  defined  in  method  append(Object,Object)  [FE]    AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]          Class    rhsClass    =    lhsClass.getSuperclass();    Class  hsClass  =  lhsClass.getSuperclass();  Class  rhsClass  =  lhsClass.getSuperclass();  Class  hSClass  =  lhsClass.getSuperclass();  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	                Class        rhsClass        =        lhsClass.getSuperclass();        Class    hsClass    =    lhsClass.getSuperclass();    Class  rhsClass  =  lhsClass.getSuperclass();  Class  hSClass  =  lhsClass.getSuperclass();	  	non-compiled	[CE]  variable  rhsClass  is  already  defined  in  method  append(Object,Object)	17	None	add
391	[BUG]  [BUGGY]          Class    rhsClass    =    lhsClass.getSuperclass();    Class  hsClass  =  lhsClass.getSuperclass();  Object  rhsClass  =  lhsClass.getSuperclass();  Class  hsClass  =  lhsClass.getSuperclass();  [CE]  variable  rhsClass  is  already  defined  in  method  append(Object,Object)  [FE]      AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]          Class    rhsClass    =    lhsClass.getSuperclass();    Class  hsClass  =  lhsClass.getSuperclass();  Object  rhsClass  =  lhsClass.getSuperclass();  Class  hsClass  =  lhsClass.getSuperclass();  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	                Class        rhsClass        =        lhsClass.getSuperclass();        Class    hsClass    =    lhsClass.getSuperclass();    Object  rhsClass  =  lhsClass.getSuperclass();  Class  hsClass  =  lhsClass.getSuperclass();	  	non-compiled	[CE]  variable  rhsClass  is  already  defined  in  method  append(Object,Object)	17	None	add
392	[BUG]  [BUGGY]  Class  <?>  rhsClass  =  lhs.getParent();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          AssertionFailedError      [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  Class  <?>  rhsClass  =  lhs.getParent();  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	Class  <?>  rhsClass  =  lhs.getParent();	  Class    <?>    rhsClass    =    lhs.getClass();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	51	None	replace
393	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  lhs.getClass().equals(lhsClass);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	add	isEquals  =  lhs.getClass().equals(lhsClass);	  isEquals    =    lhs.getClass().equals(rhsClass);    	compilable	  [FE]  AssertionFailedError  	42	7	replace
394	[BUG]  [BUGGY]  isEquals  =  lhs.getClass().equals(lhsClass);  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  lhs.getClass().equals(lhsClass);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals  =  lhs.getClass().equals(lhsClass);	  isEquals    =    lhs.getClass().equals(rhsClass);    	compilable	  [FE]  AssertionFailedError  	42	7	replace
395	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  if(lhsClass!=  null)  {  lhsClass  =  lhsClass.getSuperclass();  lhsClass  =  lhsClass.getSuperclass();  }  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	add	if(lhsClass!=  null)  {  lhsClass  =  lhsClass.getSuperclass();  lhsClass  =  lhsClass.getSuperclass();  }	          lhsClass    =    lhsClass.getSuperclass();    lhsClass    =    lhsClass.getSuperclass();    	compilable	  [FE]  AssertionFailedError  	6	7	replace
396	[BUG]  [BUGGY]  if(lhsClass!=  null)  {  lhsClass  =  lhsClass.getSuperclass();  lhsClass  =  lhsClass.getSuperclass();  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  if(lhsClass!=  null)  {  lhsClass  =  lhsClass.getSuperclass();  lhsClass  =  lhsClass.getSuperclass();  }  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	if(lhsClass!=  null)  {  lhsClass  =  lhsClass.getSuperclass();  lhsClass  =  lhsClass.getSuperclass();  }	          lhsClass    =    lhsClass.getSuperclass();    lhsClass    =    lhsClass.getSuperclass();    	compilable	  [FE]  AssertionFailedError  	6	7	replace
397	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  if(lhsClass!=  null)  {  lhsClass  =  lhsClass.getSuperclass();  lhsClass  =  lhsClass.getSuperclass();  }  else  {  this.setEquals(false);  return  this;  }  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	add	if(lhsClass!=  null)  {  lhsClass  =  lhsClass.getSuperclass();  lhsClass  =  lhsClass.getSuperclass();  }  else  {  this.setEquals(false);  return  this;  }	          lhsClass    =    lhsClass.getSuperclass();    lhsClass    =    lhsClass.getSuperclass();    	compilable	  [FE]  AssertionFailedError  	6	7	replace
398	[BUG]  [BUGGY]  if(lhsClass!=  null)  {  lhsClass  =  lhsClass.getSuperclass();  lhsClass  =  lhsClass.getSuperclass();  }  else  {  this.setEquals(false);  return  this;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  if(lhsClass!=  null)  {  lhsClass  =  lhsClass.getSuperclass();  lhsClass  =  lhsClass.getSuperclass();  }  else  {  this.setEquals(false);  return  this;  }  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	if(lhsClass!=  null)  {  lhsClass  =  lhsClass.getSuperclass();  lhsClass  =  lhsClass.getSuperclass();  }  else  {  this.setEquals(false);  return  this;  }	          lhsClass    =    lhsClass.getSuperclass();    lhsClass    =    lhsClass.getSuperclass();    	compilable	  [FE]  AssertionFailedError  	6	7	replace
399	[BUG]  [BUGGY]  hasEquals  =  lhs.getClass().equals(rhs);  isEquals  =  lhs.getClass().equals(rhs);  [CE]  cannot  find  symbol  hasEquals  [FE]          AssertionFailedError      [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  hasEquals  =  lhs.getClass().equals(rhs);  isEquals  =  lhs.getClass().equals(rhs);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	hasEquals  =  lhs.getClass().equals(rhs);  isEquals  =  lhs.getClass().equals(rhs);	  isEquals    =    lhs.getClass().equals(rhs);    areEquals    =    lhs.getClass().equals(rhs);    	non-compiled	[CE]  cannot  find  symbol  hasEquals	45	None	replace
400	[BUG]  [BUGGY]  isEquals  =  lhsClass.getClass().equals(rhs);  estEquals  =  lhsClass.getClass().equals(rhs);  [CE]  cannot  find  symbol  estEquals  [FE]    AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  lhsClass.getClass().equals(rhs);  estEquals  =  lhsClass.getClass().equals(rhs);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals    =    lhsClass.getClass().equals(rhs);    estEquals  =  lhsClass.getClass().equals(rhs);	  	non-compiled	[CE]  cannot  find  symbol  estEquals	38	None	add
401	[BUG]  [BUGGY]  isEquals  =  lhsClass.equals(rhs);  lhsClass  =  lhsClass.equals(rhs,  lhsClass);  [CE]  method  equals  in  class  Object  cannot  be  applied  to  given  types;  [FE]        AssertionFailedError      [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  lhsClass.equals(rhs);  lhsClass  =  lhsClass.equals(rhs,  lhsClass);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals  =  lhsClass.equals(rhs);  lhsClass  =  lhsClass.equals(rhs,  lhsClass);	  isEquals    =    lhsClass.equals(rhs);    lhsClass    =    lhsClass.equals(rhs);    	non-compiled	[CE]  method  equals  in  class  Object  cannot  be  applied  to  given  types;	69	None	replace
402	[BUG]  [BUGGY]  Class  <?>  lhs  =  lhsClass.getName();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              AssertionFailedError      [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  Class  <?>  lhs  =  lhsClass.getName();  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	Class  <?>  lhs  =  lhsClass.getName();	  Class    <?>    lhs    =    lhsClass.getRawClass();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	84	None	replace
403	[BUG]  [BUGGY]  Class  <?>  lhs  =  lhsClass.getSimpleName();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                AssertionFailedError      [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  Class  <?>  lhs  =  lhsClass.getSimpleName();  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	Class  <?>  lhs  =  lhsClass.getSimpleName();	  Class    <?>    lhs    =    lhsClass.getRawClass();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	84	None	replace
404	[BUG]  [BUGGY]  isEquals  =  lhsClass.getClass().isArray();  isEquals  =  lhsClass.getClass().isExtern();  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  lhsClass.getClass().isArray();  isEquals  =  lhsClass.getClass().isExtern();  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals    =    lhsClass.getClass().isArray();    isEquals  =  lhsClass.getClass().isExtern();	  	non-compiled	[CE]  cannot  find  symbol	94	None	add
405	[BUG]  [BUGGY]  isEquals  =  lhsClass.isEmpty()?  false  :  lhs,  rhs.equals(rhs);  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  lhsClass.isEmpty()?  false  :  lhs,  rhs.equals(rhs);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals  =  lhsClass.isEmpty()?  false  :  lhs,  rhs.equals(rhs);	  isEquals    =    lhsClass.isEmpty()?    false    :    lhs.equals(rhs);    	non-compiled	[CE]  ';'  expected	9	None	replace
406	[BUG]  [BUGGY]  isEquals  =  lhs.getClass().isAssignableFrom(rhs);  [CE]  method  isAssignableFrom  in  class  Class  cannot  be  applied  to  given  types;  [FE]    AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  lhs.getClass().isAssignableFrom(rhs);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals  =  lhs.getClass().isAssignableFrom(rhs);	  isEquals    =    lhs.getClass().isArray();    	non-compiled	[CE]  method  isAssignableFrom  in  class  Class  cannot  be  applied  to  given  types;	41	None	replace
407	[BUG]  [BUGGY]  Lhs  =  lhsClass.getSuperclass();  lhs  =  lhsClass.getSuperclass();  [CE]  cannot  find  symbol  Lhs  [FE]        AssertionFailedError      [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  Lhs  =  lhsClass.getSuperclass();  lhs  =  lhsClass.getSuperclass();  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	Lhs  =  lhsClass.getSuperclass();  lhs  =  lhsClass.getSuperclass();	          lhs    =    lhsClass.getSuperclass();    lhs    =    rhsClass.getSuperclass();    	non-compiled	[CE]  cannot  find  symbol  Lhs	74	None	replace
408	[BUG]  [BUGGY]  Lhs  lhs  =  lhsClass.getSuperclass();  lhs  =  lhs.getSuperclass();  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  Lhs  lhs  =  lhsClass.getSuperclass();  lhs  =  lhs.getSuperclass();  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	Lhs  lhs  =  lhsClass.getSuperclass();  lhs  =  lhs.getSuperclass();	          lhs    =    lhsClass.getSuperclass();    lhs    =    rhsClass.getSuperclass();    	non-compiled	[CE]  cannot  find  symbol	74	None	replace
409	[BUG]  [BUGGY]  isEquals  =  lhs.getClass().isArray();  isEquals  =  lhs.getClass().isExtern();  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  lhs.getClass().isArray();  isEquals  =  lhs.getClass().isExtern();  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals    =    lhs.getClass().isArray();    isEquals  =  lhs.getClass().isExtern();	  	non-compiled	[CE]  cannot  find  symbol	40	None	add
410	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  if(lhsClass.isArray())  {  isEquals  =  lhs.getClass().equals(rhs);  isEquals  =  lhs.getClass().equals(rhs);  }  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	add	if(lhsClass.isArray())  {  isEquals  =  lhs.getClass().equals(rhs);  isEquals  =  lhs.getClass().equals(rhs);  }	  isEquals    =    lhs.getClass().equals(rhs);    isEquals    =    lhs.getClass().equals(rhs);    	compilable	  [FE]  AssertionFailedError  	44	7	replace
411	[BUG]  [BUGGY]  if(lhsClass.isArray())  {  isEquals  =  lhs.getClass().equals(rhs);  isEquals  =  lhs.getClass().equals(rhs);  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  if(lhsClass.isArray())  {  isEquals  =  lhs.getClass().equals(rhs);  isEquals  =  lhs.getClass().equals(rhs);  }  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	if(lhsClass.isArray())  {  isEquals  =  lhs.getClass().equals(rhs);  isEquals  =  lhs.getClass().equals(rhs);  }	  isEquals    =    lhs.getClass().equals(rhs);    isEquals    =    lhs.getClass().equals(rhs);    	compilable	  [FE]  AssertionFailedError  	44	7	replace
412	[BUG]  [BUGGY]          lhs    =    lhsClass.getSuperclass();    lhs  =  lhsClass.getSuperclass();  Class  lhsClass  =  lhsClass.getSuperclass();  lhs  =  lhsClass.getSuperclass();  [CE]  variable  lhsClass  is  already  defined  in  method  append(Object,Object)  [FE]    AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]          lhs    =    lhsClass.getSuperclass();    lhs  =  lhsClass.getSuperclass();  Class  lhsClass  =  lhsClass.getSuperclass();  lhs  =  lhsClass.getSuperclass();  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	                lhs        =        lhsClass.getSuperclass();        lhs    =    lhsClass.getSuperclass();    Class  lhsClass  =  lhsClass.getSuperclass();  lhs  =  lhsClass.getSuperclass();	  	non-compiled	[CE]  variable  lhsClass  is  already  defined  in  method  append(Object,Object)	57	None	add
413	[BUG]  [BUGGY]  if(lhsClass!=  null)  {  Class  rhsClass  =  lhsClass.getSuperclass();  class  lhsClass  =  lhsClass.getSuperclass();  }  [CE]  '{'  expected  [FE]        AssertionFailedError      [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  if(lhsClass!=  null)  {  Class  rhsClass  =  lhsClass.getSuperclass();  class  lhsClass  =  lhsClass.getSuperclass();  }  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	if(lhsClass!=  null)  {  Class  rhsClass  =  lhsClass.getSuperclass();  class  lhsClass  =  lhsClass.getSuperclass();  }	          Class    rhsClass    =    lhsClass.getSuperclass();    class    lhsClass    =    lhsClass.getSuperclass();    	non-compiled	[CE]  '{'  expected	79	None	replace
414	[BUG]  [BUGGY]  if(lhsClass!=  null)  {  Class  rhsClass  =  lhsClass.getSuperclass();  class  lhsClass  =  lhsClass.getSuperclass();  }  else  {  this.setEquals(false);  return  this;  }  [CE]  '{'  expected  [FE]          AssertionFailedError      [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  if(lhsClass!=  null)  {  Class  rhsClass  =  lhsClass.getSuperclass();  class  lhsClass  =  lhsClass.getSuperclass();  }  else  {  this.setEquals(false);  return  this;  }  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	if(lhsClass!=  null)  {  Class  rhsClass  =  lhsClass.getSuperclass();  class  lhsClass  =  lhsClass.getSuperclass();  }  else  {  this.setEquals(false);  return  this;  }	          Class    rhsClass    =    lhsClass.getSuperclass();    class    lhsClass    =    lhsClass.getSuperclass();    	non-compiled	[CE]  '{'  expected	79	None	replace
415	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  lhsClass.isArray()  ||  lhsClass.isArray();  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	add	isEquals  =  lhsClass.isArray()  ||  lhsClass.isArray();	  isEquals    =    lhsClass.equals(lhs);    	compilable	  [FE]  AssertionFailedError  	31	8	replace
416	[BUG]  [BUGGY]  isEquals  =  lhsClass.isArray()  ||  lhsClass.isArray();  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  lhsClass.isArray()  ||  lhsClass.isArray();  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals  =  lhsClass.isArray()  ||  lhsClass.isArray();	  isEquals    =    lhsClass.equals(lhs);    	compilable	  [FE]  AssertionFailedError  	31	8	replace
417	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  Class  rhsClass  =(lhsClass  ==  null)?  null  :  lhs.getClass();  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	add	Class  rhsClass  =(lhsClass  ==  null)?  null  :  lhs.getClass();	  Class    rhsClass    =    lhs.getClass();    	compilable	  [FE]  AssertionFailedError  	50	7	replace
418	[BUG]  [BUGGY]  Class  rhsClass  =(lhsClass  ==  null)?  null  :  lhs.getClass();  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  Class  rhsClass  =(lhsClass  ==  null)?  null  :  lhs.getClass();  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	Class  rhsClass  =(lhsClass  ==  null)?  null  :  lhs.getClass();	  Class    rhsClass    =    lhs.getClass();    	compilable	  [FE]  AssertionFailedError  	50	7	replace
419	[BUG]  [BUGGY]  Class  lhsClass  =(lhsClass  ==  null)?  null  :  lhs.getClass();  [CE]  variable  lhsClass  is  already  defined  in  method  append(Object,Object)  [FE]      AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  Class  lhsClass  =(lhsClass  ==  null)?  null  :  lhs.getClass();  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	Class  lhsClass  =(lhsClass  ==  null)?  null  :  lhs.getClass();	  Class    rhsClass    =    lhs.getClass();    	non-compiled	[CE]  variable  lhsClass  is  already  defined  in  method  append(Object,Object)	50	None	replace
420	[BUG]  [BUGGY]          Class    rhsClass    =    lhsClass.getClass();    Class  hsClass  =  lhsClass.getClass();  Class  rhsClass  =  lhsClass.getClass();  Class  hSClass  =  lhsClass.getClass();  [CE]  variable  rhsClass  is  already  defined  in  method  append(Object,Object)  [FE]    AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]          Class    rhsClass    =    lhsClass.getClass();    Class  hsClass  =  lhsClass.getClass();  Class  rhsClass  =  lhsClass.getClass();  Class  hSClass  =  lhsClass.getClass();  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	                Class        rhsClass        =        lhsClass.getClass();        Class    hsClass    =    lhsClass.getClass();    Class  rhsClass  =  lhsClass.getClass();  Class  hSClass  =  lhsClass.getClass();	  	non-compiled	[CE]  variable  rhsClass  is  already  defined  in  method  append(Object,Object)	70	None	add
421	[BUG]  [BUGGY]          Class    rhsClass    =    lhsClass.getClass();    Class  hsClass  =  lhsClass.getClass();  class  rhsClass  =  lhsClass.getClass();  Class  hsClass  =  lhsClass.getClass();  [CE]  '{'  expected  [FE]      AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]          Class    rhsClass    =    lhsClass.getClass();    Class  hsClass  =  lhsClass.getClass();  class  rhsClass  =  lhsClass.getClass();  Class  hsClass  =  lhsClass.getClass();  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	                Class        rhsClass        =        lhsClass.getClass();        Class    hsClass    =    lhsClass.getClass();    class  rhsClass  =  lhsClass.getClass();  Class  hsClass  =  lhsClass.getClass();	  	non-compiled	[CE]  '{'  expected	70	None	add
422	[BUG]  [BUGGY]          Class    rhsClass    =    lhsClass.getClass();    Class  hhsClass  =  lhsClass.getClass();  class  rhsClass  =  lhsClass.getClass();  Class  hhsClass  =  lhsClass.getClass();  [CE]  '{'  expected  [FE]    AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]          Class    rhsClass    =    lhsClass.getClass();    Class  hhsClass  =  lhsClass.getClass();  class  rhsClass  =  lhsClass.getClass();  Class  hhsClass  =  lhsClass.getClass();  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	                Class        rhsClass        =        lhsClass.getClass();        Class    hhsClass    =    lhsClass.getClass();    class  rhsClass  =  lhsClass.getClass();  Class  hhsClass  =  lhsClass.getClass();	  	non-compiled	[CE]  '{'  expected	3	None	add
423	[BUG]  [BUGGY]  lhs  =  lhsClass.getReturnType();  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  lhs  =  lhsClass.getReturnType();  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	lhs  =  lhsClass.getReturnType();	  lhs    =    lhsClass.getSimpleName();    	non-compiled	[CE]  cannot  find  symbol	36	None	replace
424	[BUG]  [BUGGY]  Object  rhs  =  lhsClass  ==  null?  null  :  lhsClass.getRawClass();  [CE]  variable  rhs  is  already  defined  in  method  append(Object,Object)  [FE]                    AssertionFailedError      [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  Object  rhs  =  lhsClass  ==  null?  null  :  lhsClass.getRawClass();  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	Object  rhs  =  lhsClass  ==  null?  null  :  lhsClass.getRawClass();	  Object    rhs    =    lhsClass    ==    null?    null    :    lhsClass.getSuperclass();    	non-compiled	[CE]  variable  rhs  is  already  defined  in  method  append(Object,Object)	82	None	replace
425	[BUG]  [BUGGY]  Object  lhs  =  lhsClass  ==  null?  null  :  lhsClass.getName();  [CE]  variable  lhs  is  already  defined  in  method  append(Object,Object)  [FE]                      AssertionFailedError      [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  Object  lhs  =  lhsClass  ==  null?  null  :  lhsClass.getName();  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	Object  lhs  =  lhsClass  ==  null?  null  :  lhsClass.getName();	  Object    rhs    =    lhsClass    ==    null?    null    :    lhsClass.getSuperclass();    	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  append(Object,Object)	82	None	replace
426	[BUG]  [BUGGY]  Class  lhsClass  =(lhsClass  ==  null)?  null  :  lhsClass.getClass();  [CE]  variable  lhsClass  is  already  defined  in  method  append(Object,Object)  [FE]                    AssertionFailedError      [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  Class  lhsClass  =(lhsClass  ==  null)?  null  :  lhsClass.getClass();  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	Class  lhsClass  =(lhsClass  ==  null)?  null  :  lhsClass.getClass();	  Class    lhsClass    =    this.lhsClass.getClass();    	non-compiled	[CE]  variable  lhsClass  is  already  defined  in  method  append(Object,Object)	29	None	replace
427	[BUG]  [BUGGY]  Class  lhsClass  =(lhsClass  ==  null)? "null "  :  lhsClass.getClass();  [CE]  variable  lhsClass  is  already  defined  in  method  append(Object,Object)  [FE]                      AssertionFailedError      [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  Class  lhsClass  =(lhsClass  ==  null)? "null "  :  lhsClass.getClass();  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	Class  lhsClass  =(lhsClass  ==  null)? "null "  :  lhsClass.getClass();	  Class    lhsClass    =    this.lhsClass.getClass();    	non-compiled	[CE]  variable  lhsClass  is  already  defined  in  method  append(Object,Object)	29	None	replace
428	[BUG]  [BUGGY]  lhsClass  =  lhs,  rhs.getSuperclass();  [CE]  ';'  expected  [FE]        AssertionFailedError      [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  lhsClass  =  lhs,  rhs.getSuperclass();  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	lhsClass  =  lhs,  rhs.getSuperclass();	  lhsClass    =    lhs.getSuperclass();    	non-compiled	[CE]  ';'  expected	21	None	replace
429	[BUG]  [BUGGY]  isEquals  =  lhsClass.getReturnType().equals(rhs);  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  lhsClass.getReturnType().equals(rhs);  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals  =  lhsClass.getReturnType().equals(rhs);	  isEquals    =    lhs.getClass().equals(rhs);    isEquals    =    lhsClass.equals(rhs);    	non-compiled	[CE]  cannot  find  symbol	47	None	replace
430	[BUG]  [BUGGY]  Class  lhsClass  =  lhsClass.getSuperclass();  Lhs  =  lhsClass.getSuperclass();  [CE]  variable  lhsClass  is  already  defined  in  method  append(Object,Object)  [FE]          AssertionFailedError      [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  Class  lhsClass  =  lhsClass.getSuperclass();  Lhs  =  lhsClass.getSuperclass();  [BUGGY]      isEquals  =  lhs.equals(rhs);  }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	Class  lhsClass  =  lhsClass.getSuperclass();  Lhs  =  lhsClass.getSuperclass();	          lhs    =    lhsClass.getSuperclass();    Lhs    =    lhsClass.getSuperclass();    	non-compiled	[CE]  variable  lhsClass  is  already  defined  in  method  append(Object,Object)	59	None	replace
431	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  lhsClass.isInterface();  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	add	isEquals  =  lhsClass.isInterface();	  isEquals    =    lhsClass.isArray();    	compilable	  [FE]  AssertionFailedError  	109	8	replace
432	[BUG]  [BUGGY]  isEquals  =  lhsClass.isInterface();  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (lhs  ==  rhs)  {  return  this;  }  if  (lhs  ==  null  ||  rhs  ==  null)  {  this.setEquals(false);  return  this;  }  Class  lhsClass  =  lhs.getClass();  if  (!lhsClass.isArray())  {        [BUGGY]  isEquals  =  lhsClass.isInterface();  [BUGGY]      }  else  if  (lhs.getClass()  !=  rhs.getClass())  {  this.setEquals(false);  }    else  if  (lhs  instanceof  long[])  {  append((long[])  lhs,  (long[])  rhs);  }  else  if  (lhs  instanceof  int[])  {  append((int[])  lhs,  (int[])  rhs);  [CLASS]  EqualsBuilder  [METHOD]  append  [RETURN_TYPE]  EqualsBuilder  Object  lhs  Object  rhs  [VARIABLES]  Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  	projects/Lang48/src/java/org/apache/commons/lang/builder/EqualsBuilder.java	0.31622776601683794	381	381	1	replace	isEquals  =  lhsClass.isInterface();	  isEquals    =    lhsClass.isArray();    	compilable	  [FE]  AssertionFailedError  	109	8	replace
