bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    Error    [CONTEXT]    if  (!right.hasChildren()  ||  right.getFirstChild().getNext()  !=  right.getLastChild())  {      [BUGGY]  return  right.removeFirstChild();  [BUGGY]    }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldAssign  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  DIVIDE_BY_0_ERROR  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  val  int  newType  Node  left  leftChild  n  newNode  right  	projects/Closure97/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.22360679774997896	335	335	1	add	return  right.removeFirstChild();	  return    n.removeFirstChild();    	compilable	  [FE]  AssertionFailedError  	15	4	replace
2	[BUG]  [BUGGY]  return  right.removeFirstChild();  [FE]  AssertionFailedError  [FE]    Error    [CONTEXT]    if  (!right.hasChildren()  ||  right.getFirstChild().getNext()  !=  right.getLastChild())  {      [BUGGY]  return  right.removeFirstChild();  [BUGGY]    }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldAssign  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  DIVIDE_BY_0_ERROR  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  val  int  newType  Node  left  leftChild  n  newNode  right  	projects/Closure97/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.22360679774997896	335	335	1	replace	return  right.removeFirstChild();	  return    n.removeFirstChild();    	compilable	  [FE]  AssertionFailedError  	15	4	replace
3	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      Error    [CONTEXT]    if  (!right.hasChildren()  ||  right.getFirstChild().getNext()  !=  right.getLastChild())  {      [BUGGY]  return  left.removeFirstChild();  [BUGGY]    }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldAssign  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  DIVIDE_BY_0_ERROR  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  val  int  newType  Node  left  leftChild  n  newNode  right  	projects/Closure97/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.22360679774997896	335	335	1	add	return  left.removeFirstChild();	  return    n.removeFirstChild();    	compilable	  [FE]  AssertionFailedError  	15	1	replace
4	[BUG]  [BUGGY]  return  left.removeFirstChild();  [FE]  AssertionFailedError  [FE]      Error    [CONTEXT]    if  (!right.hasChildren()  ||  right.getFirstChild().getNext()  !=  right.getLastChild())  {      [BUGGY]  return  left.removeFirstChild();  [BUGGY]    }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldAssign  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  DIVIDE_BY_0_ERROR  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  val  int  newType  Node  left  leftChild  n  newNode  right  	projects/Closure97/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.22360679774997896	335	335	1	replace	return  left.removeFirstChild();	  return    n.removeFirstChild();    	compilable	  [FE]  AssertionFailedError  	15	1	replace
5	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        Error    [CONTEXT]    if  (!right.hasChildren()  ||  right.getFirstChild().getNext()  !=  right.getLastChild())  {      [BUGGY]  return  right.getLastChild();  [BUGGY]    }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldAssign  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  DIVIDE_BY_0_ERROR  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  val  int  newType  Node  left  leftChild  n  newNode  right  	projects/Closure97/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.22360679774997896	335	335	1	add	return  right.getLastChild();	  return    n.removeFirstChild();    	compilable	  [FE]  AssertionFailedError  	15	1	replace
6	[BUG]  [BUGGY]  return  right.getLastChild();  [FE]  AssertionFailedError  [FE]        Error    [CONTEXT]    if  (!right.hasChildren()  ||  right.getFirstChild().getNext()  !=  right.getLastChild())  {      [BUGGY]  return  right.getLastChild();  [BUGGY]    }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldAssign  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  DIVIDE_BY_0_ERROR  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  val  int  newType  Node  left  leftChild  n  newNode  right  	projects/Closure97/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.22360679774997896	335	335	1	replace	return  right.getLastChild();	  return    n.removeFirstChild();    	compilable	  [FE]  AssertionFailedError  	15	1	replace
7	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          Error    [CONTEXT]    if  (!right.hasChildren()  ||  right.getFirstChild().getNext()  !=  right.getLastChild())  {      [BUGGY]  return  right.getFirstChild();  [BUGGY]    }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldAssign  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  DIVIDE_BY_0_ERROR  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  val  int  newType  Node  left  leftChild  n  newNode  right  	projects/Closure97/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.22360679774997896	335	335	1	add	return  right.getFirstChild();	  return    n.removeFirstChild();    	compilable	  [FE]  AssertionFailedError  	15	1	replace
8	[BUG]  [BUGGY]  return  right.getFirstChild();  [FE]  AssertionFailedError  [FE]          Error    [CONTEXT]    if  (!right.hasChildren()  ||  right.getFirstChild().getNext()  !=  right.getLastChild())  {      [BUGGY]  return  right.getFirstChild();  [BUGGY]    }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldAssign  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  DIVIDE_BY_0_ERROR  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  val  int  newType  Node  left  leftChild  n  newNode  right  	projects/Closure97/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.22360679774997896	335	335	1	replace	return  right.getFirstChild();	  return    n.removeFirstChild();    	compilable	  [FE]  AssertionFailedError  	15	1	replace
9	[BUG]  [BUGGY]  return  right.removeLastChild();  [CE]  cannot  find  symbol  [FE]            Error    [CONTEXT]    if  (!right.hasChildren()  ||  right.getFirstChild().getNext()  !=  right.getLastChild())  {      [BUGGY]  return  right.removeLastChild();  [BUGGY]    }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldAssign  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  DIVIDE_BY_0_ERROR  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  val  int  newType  Node  left  leftChild  n  newNode  right  	projects/Closure97/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.22360679774997896	335	335	1	replace	return  right.removeLastChild();	  return    n.removeFirstChild();    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
10	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              Error    [CONTEXT]    if  (!right.hasChildren()  ||  right.getFirstChild().getNext()  !=  right.getLastChild())  {      [BUGGY]  return  n.getLastChild();  [BUGGY]    }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldAssign  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  DIVIDE_BY_0_ERROR  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  val  int  newType  Node  left  leftChild  n  newNode  right  	projects/Closure97/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.22360679774997896	335	335	1	add	return  n.getLastChild();	  return    n.removeFirstChild();    	compilable	  [FE]  AssertionFailedError  	15	1	replace
11	[BUG]  [BUGGY]  return  n.getLastChild();  [FE]  AssertionFailedError  [FE]              Error    [CONTEXT]    if  (!right.hasChildren()  ||  right.getFirstChild().getNext()  !=  right.getLastChild())  {      [BUGGY]  return  n.getLastChild();  [BUGGY]    }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldAssign  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  DIVIDE_BY_0_ERROR  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  val  int  newType  Node  left  leftChild  n  newNode  right  	projects/Closure97/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.22360679774997896	335	335	1	replace	return  n.getLastChild();	  return    n.removeFirstChild();    	compilable	  [FE]  AssertionFailedError  	15	1	replace
12	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    if  (!right.hasChildren()  ||  right.getFirstChild().getNext()  !=  right.getLastChild())  {      [BUGGY]  return  right.getNext();  [BUGGY]    }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldAssign  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  DIVIDE_BY_0_ERROR  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  val  int  newType  Node  left  leftChild  n  newNode  right  	projects/Closure97/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.22360679774997896	335	335	1	add	return  right.getNext();	  return    n.getFirstChild();    	compilable	  [FE]  AssertionFailedError  	7	1	replace
13	[BUG]  [BUGGY]  return  right.getNext();  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    if  (!right.hasChildren()  ||  right.getFirstChild().getNext()  !=  right.getLastChild())  {      [BUGGY]  return  right.getNext();  [BUGGY]    }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldAssign  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  DIVIDE_BY_0_ERROR  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  val  int  newType  Node  left  leftChild  n  newNode  right  	projects/Closure97/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.22360679774997896	335	335	1	replace	return  right.getNext();	  return    n.getFirstChild();    	compilable	  [FE]  AssertionFailedError  	7	1	replace
14	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  leftChild,  new  AssertionFailedError(right.getFirstChild(),  right.getLastChild()));  [CE]  cannot  find  symbol  compiler  [FE]    RuntimeException    [CONTEXT]    if  (!right.hasChildren()  ||  right.getFirstChild().getNext()  !=  right.getLastChild())  {      [BUGGY]  NodeTraversal.traverse(compiler,  leftChild,  new  AssertionFailedError(right.getFirstChild(),  right.getLastChild()));  [BUGGY]    }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldAssign  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  DIVIDE_BY_0_ERROR  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  val  int  newType  Node  left  leftChild  n  newNode  right  	projects/Closure97/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.22360679774997896	335	335	1	replace	NodeTraversal.traverse(compiler,  leftChild,  new  AssertionFailedError(right.getFirstChild(),  right.getLastChild()));	      	non-compiled	[CE]  cannot  find  symbol  compiler	11	None	replace
15	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  leftChild,  new  AssertionFailedError(n,  right.getFirstChild(),  right.getLastChild()));  [CE]  cannot  find  symbol  compiler  [FE]      RuntimeException    [CONTEXT]    if  (!right.hasChildren()  ||  right.getFirstChild().getNext()  !=  right.getLastChild())  {      [BUGGY]  NodeTraversal.traverse(compiler,  leftChild,  new  AssertionFailedError(n,  right.getFirstChild(),  right.getLastChild()));  [BUGGY]    }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldAssign  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  DIVIDE_BY_0_ERROR  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  val  int  newType  Node  left  leftChild  n  newNode  right  	projects/Closure97/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.22360679774997896	335	335	1	replace	NodeTraversal.traverse(compiler,  leftChild,  new  AssertionFailedError(n,  right.getFirstChild(),  right.getLastChild()));	      	non-compiled	[CE]  cannot  find  symbol  compiler	11	None	replace
16	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  leftChild,  new  AssertionFailedError(right.getFirstChild().getNext(),  right.getLastChild()));  [CE]  cannot  find  symbol  compiler  [FE]        RuntimeException    [CONTEXT]    if  (!right.hasChildren()  ||  right.getFirstChild().getNext()  !=  right.getLastChild())  {      [BUGGY]  NodeTraversal.traverse(compiler,  leftChild,  new  AssertionFailedError(right.getFirstChild().getNext(),  right.getLastChild()));  [BUGGY]    }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldAssign  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  DIVIDE_BY_0_ERROR  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  val  int  newType  Node  left  leftChild  n  newNode  right  	projects/Closure97/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.22360679774997896	335	335	1	replace	NodeTraversal.traverse(compiler,  leftChild,  new  AssertionFailedError(right.getFirstChild().getNext(),  right.getLastChild()));	      	non-compiled	[CE]  cannot  find  symbol  compiler	11	None	replace
17	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  left,  new  NodeTraversal());  [CE]  cannot  find  symbol  compiler  [FE]          RuntimeException    [CONTEXT]    if  (!right.hasChildren()  ||  right.getFirstChild().getNext()  !=  right.getLastChild())  {      [BUGGY]  NodeTraversal.traverse(compiler,  left,  new  NodeTraversal());  [BUGGY]    }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldAssign  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  DIVIDE_BY_0_ERROR  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  val  int  newType  Node  left  leftChild  n  newNode  right  	projects/Closure97/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.22360679774997896	335	335	1	replace	NodeTraversal.traverse(compiler,  left,  new  NodeTraversal());	      	non-compiled	[CE]  cannot  find  symbol  compiler	11	None	replace
18	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  leftChild,  new  AssertionFailedError(n,  left,  right.getLastChild()));  [CE]  cannot  find  symbol  compiler  [FE]            RuntimeException    [CONTEXT]    if  (!right.hasChildren()  ||  right.getFirstChild().getNext()  !=  right.getLastChild())  {      [BUGGY]  NodeTraversal.traverse(compiler,  leftChild,  new  AssertionFailedError(n,  left,  right.getLastChild()));  [BUGGY]    }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldAssign  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  DIVIDE_BY_0_ERROR  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  val  int  newType  Node  left  leftChild  n  newNode  right  	projects/Closure97/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.22360679774997896	335	335	1	replace	NodeTraversal.traverse(compiler,  leftChild,  new  AssertionFailedError(n,  left,  right.getLastChild()));	      	non-compiled	[CE]  cannot  find  symbol  compiler	11	None	replace
19	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  leftChild,  new  AssertionFailedError(right.getFirstChild().getNext()));  [CE]  cannot  find  symbol  compiler  [FE]              RuntimeException    [CONTEXT]    if  (!right.hasChildren()  ||  right.getFirstChild().getNext()  !=  right.getLastChild())  {      [BUGGY]  NodeTraversal.traverse(compiler,  leftChild,  new  AssertionFailedError(right.getFirstChild().getNext()));  [BUGGY]    }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldAssign  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  DIVIDE_BY_0_ERROR  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  val  int  newType  Node  left  leftChild  n  newNode  right  	projects/Closure97/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.22360679774997896	335	335	1	replace	NodeTraversal.traverse(compiler,  leftChild,  new  AssertionFailedError(right.getFirstChild().getNext()));	      	non-compiled	[CE]  cannot  find  symbol  compiler	11	None	replace
20	[BUG]  [BUGGY]  return  right.getType()  ==  Token.EXPR_RESULT;  [CE]  incompatible  types  [FE]                AssertionFailedError    [CONTEXT]    if  (!right.hasChildren()  ||  right.getFirstChild().getNext()  !=  right.getLastChild())  {      [BUGGY]  return  right.getType()  ==  Token.EXPR_RESULT;  [BUGGY]    }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldAssign  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  DIVIDE_BY_0_ERROR  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  val  int  newType  Node  left  leftChild  n  newNode  right  	projects/Closure97/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.22360679774997896	335	335	1	replace	return  right.getType()  ==  Token.EXPR_RESULT;	  return    n.getType()    ==    Token.EXPR_RESULT;    	non-compiled	[CE]  incompatible  types	8	None	replace
21	[BUG]  [BUGGY]  return  left.getType()  ==  Token.EXPR_RESULT;  [CE]  incompatible  types  [FE]                  AssertionFailedError    [CONTEXT]    if  (!right.hasChildren()  ||  right.getFirstChild().getNext()  !=  right.getLastChild())  {      [BUGGY]  return  left.getType()  ==  Token.EXPR_RESULT;  [BUGGY]    }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldAssign  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  DIVIDE_BY_0_ERROR  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  val  int  newType  Node  left  leftChild  n  newNode  right  	projects/Closure97/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.22360679774997896	335	335	1	replace	return  left.getType()  ==  Token.EXPR_RESULT;	  return    n.getType()    ==    Token.EXPR_RESULT;    	non-compiled	[CE]  incompatible  types	8	None	replace
22	[BUG]  [BUGGY]  return  right.getType()!=  Token.EXPR_RESULT;  [CE]  incompatible  types  [FE]                    AssertionFailedError    [CONTEXT]    if  (!right.hasChildren()  ||  right.getFirstChild().getNext()  !=  right.getLastChild())  {      [BUGGY]  return  right.getType()!=  Token.EXPR_RESULT;  [BUGGY]    }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldAssign  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  DIVIDE_BY_0_ERROR  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  val  int  newType  Node  left  leftChild  n  newNode  right  	projects/Closure97/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.22360679774997896	335	335	1	replace	return  right.getType()!=  Token.EXPR_RESULT;	  return    n.getType()    ==    Token.EXPR_RESULT;    	non-compiled	[CE]  incompatible  types	8	None	replace
23	[BUG]  [BUGGY]  return  leftChild.getType()  ==  Token.EXPR_RESULT;  [CE]  cannot  find  symbol  leftChild  [FE]                      AssertionFailedError    [CONTEXT]    if  (!right.hasChildren()  ||  right.getFirstChild().getNext()  !=  right.getLastChild())  {      [BUGGY]  return  leftChild.getType()  ==  Token.EXPR_RESULT;  [BUGGY]    }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldAssign  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  DIVIDE_BY_0_ERROR  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  val  int  newType  Node  left  leftChild  n  newNode  right  	projects/Closure97/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.22360679774997896	335	335	1	replace	return  leftChild.getType()  ==  Token.EXPR_RESULT;	  return    n.getType()    ==    Token.EXPR_RESULT;    	non-compiled	[CE]  cannot  find  symbol  leftChild	8	None	replace
24	[BUG]  [BUGGY]  return  left.getType()!=  Token.EXPR_RESULT;  [CE]  incompatible  types  [FE]                        AssertionFailedError    [CONTEXT]    if  (!right.hasChildren()  ||  right.getFirstChild().getNext()  !=  right.getLastChild())  {      [BUGGY]  return  left.getType()!=  Token.EXPR_RESULT;  [BUGGY]    }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldAssign  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  DIVIDE_BY_0_ERROR  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  val  int  newType  Node  left  leftChild  n  newNode  right  	projects/Closure97/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.22360679774997896	335	335	1	replace	return  left.getType()!=  Token.EXPR_RESULT;	  return    n.getType()    ==    Token.EXPR_RESULT;    	non-compiled	[CE]  incompatible  types	8	None	replace
25	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    if  (!right.hasChildren()  ||  right.getFirstChild().getNext()  !=  right.getLastChild())  {      [BUGGY]  return  right;  [BUGGY]    }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldAssign  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  DIVIDE_BY_0_ERROR  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  val  int  newType  Node  left  leftChild  n  newNode  right  	projects/Closure97/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.22360679774997896	335	335	1	add	return  right;	  return    leftChild;    	compilable	  [FE]  AssertionFailedError  	1	1	replace
26	[BUG]  [BUGGY]  return  right;  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    if  (!right.hasChildren()  ||  right.getFirstChild().getNext()  !=  right.getLastChild())  {      [BUGGY]  return  right;  [BUGGY]    }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldAssign  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  DIVIDE_BY_0_ERROR  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  val  int  newType  Node  left  leftChild  n  newNode  right  	projects/Closure97/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.22360679774997896	335	335	1	replace	return  right;	  return    leftChild;    	compilable	  [FE]  AssertionFailedError  	1	1	replace
27	[BUG]  [BUGGY]  return  newNode;  [CE]  cannot  find  symbol  newNode  [FE]          AssertionFailedError    [CONTEXT]    if  (!right.hasChildren()  ||  right.getFirstChild().getNext()  !=  right.getLastChild())  {      [BUGGY]  return  newNode;  [BUGGY]    }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldAssign  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  DIVIDE_BY_0_ERROR  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  val  int  newType  Node  left  leftChild  n  newNode  right  	projects/Closure97/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.22360679774997896	335	335	1	replace	return  newNode;	  return    leftChild;    	non-compiled	[CE]  cannot  find  symbol  newNode	1	None	replace
28	[BUG]  [BUGGY]  return  this.node;  [CE]  cannot  find  symbol  node  [FE]            AssertionFailedError    [CONTEXT]    if  (!right.hasChildren()  ||  right.getFirstChild().getNext()  !=  right.getLastChild())  {      [BUGGY]  return  this.node;  [BUGGY]    }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldAssign  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  DIVIDE_BY_0_ERROR  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  val  int  newType  Node  left  leftChild  n  newNode  right  	projects/Closure97/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.22360679774997896	335	335	1	replace	return  this.node;	  return    leftChild;    	non-compiled	[CE]  cannot  find  symbol  node	1	None	replace
29	[BUG]  [BUGGY]  return  left.getFirstChild();  Node  leftChild  =  right.getFirstChild();  [CE]  unreachable  statement  [FE]    AssertionFailedError    [CONTEXT]    if  (!right.hasChildren()  ||  right.getFirstChild().getNext()  !=  right.getLastChild())  {      [BUGGY]  return  left.getFirstChild();  Node  leftChild  =  right.getFirstChild();  [BUGGY]    }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldAssign  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  DIVIDE_BY_0_ERROR  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  val  int  newType  Node  left  leftChild  n  newNode  right  	projects/Closure97/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.22360679774997896	335	335	1	replace	return    left.getFirstChild();    Node  leftChild  =  right.getFirstChild();	  	non-compiled	[CE]  unreachable  statement	4	None	add
30	[BUG]  [BUGGY]  return  left.getFirstChild();  Node  leftChild  =  right.getLastChild();  [CE]  unreachable  statement  [FE]      AssertionFailedError    [CONTEXT]    if  (!right.hasChildren()  ||  right.getFirstChild().getNext()  !=  right.getLastChild())  {      [BUGGY]  return  left.getFirstChild();  Node  leftChild  =  right.getLastChild();  [BUGGY]    }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldAssign  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  DIVIDE_BY_0_ERROR  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  val  int  newType  Node  left  leftChild  n  newNode  right  	projects/Closure97/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.22360679774997896	335	335	1	replace	return    left.getFirstChild();    Node  leftChild  =  right.getLastChild();	  	non-compiled	[CE]  unreachable  statement	4	None	add
31	[BUG]  [BUGGY]  return  left.getFirstChild();  Node  leftChild  =  right.getNext();  [CE]  unreachable  statement  [FE]        AssertionFailedError    [CONTEXT]    if  (!right.hasChildren()  ||  right.getFirstChild().getNext()  !=  right.getLastChild())  {      [BUGGY]  return  left.getFirstChild();  Node  leftChild  =  right.getNext();  [BUGGY]    }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldAssign  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  DIVIDE_BY_0_ERROR  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  val  int  newType  Node  left  leftChild  n  newNode  right  	projects/Closure97/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.22360679774997896	335	335	1	replace	return    left.getFirstChild();    Node  leftChild  =  right.getNext();	  	non-compiled	[CE]  unreachable  statement	4	None	add
32	[BUG]  [BUGGY]  return  left.getFirstChild();  Node  leftChild  =  left.getFirstChild();  [CE]  unreachable  statement  [FE]          AssertionFailedError    [CONTEXT]    if  (!right.hasChildren()  ||  right.getFirstChild().getNext()  !=  right.getLastChild())  {      [BUGGY]  return  left.getFirstChild();  Node  leftChild  =  left.getFirstChild();  [BUGGY]    }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldAssign  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  DIVIDE_BY_0_ERROR  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  val  int  newType  Node  left  leftChild  n  newNode  right  	projects/Closure97/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.22360679774997896	335	335	1	replace	return    left.getFirstChild();    Node  leftChild  =  left.getFirstChild();	  	non-compiled	[CE]  unreachable  statement	4	None	add
33	[BUG]  [BUGGY]  return  left.getFirstChild();  Node  left  =  right.getFirstChild();  [CE]  variable  left  is  already  defined  in  method  tryFoldAssign(Node,Node,Node)  [FE]            AssertionFailedError    [CONTEXT]    if  (!right.hasChildren()  ||  right.getFirstChild().getNext()  !=  right.getLastChild())  {      [BUGGY]  return  left.getFirstChild();  Node  left  =  right.getFirstChild();  [BUGGY]    }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldAssign  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  DIVIDE_BY_0_ERROR  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  val  int  newType  Node  left  leftChild  n  newNode  right  	projects/Closure97/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.22360679774997896	335	335	1	replace	return    left.getFirstChild();    Node  left  =  right.getFirstChild();	  	non-compiled	[CE]  variable  left  is  already  defined  in  method  tryFoldAssign(Node,Node,Node)	4	None	add
34	[BUG]  [BUGGY]  return  left.getFirstChild();  Node  left  =  right.getLastChild();  [CE]  variable  left  is  already  defined  in  method  tryFoldAssign(Node,Node,Node)  [FE]              AssertionFailedError    [CONTEXT]    if  (!right.hasChildren()  ||  right.getFirstChild().getNext()  !=  right.getLastChild())  {      [BUGGY]  return  left.getFirstChild();  Node  left  =  right.getLastChild();  [BUGGY]    }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldAssign  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  DIVIDE_BY_0_ERROR  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  val  int  newType  Node  left  leftChild  n  newNode  right  	projects/Closure97/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.22360679774997896	335	335	1	replace	return    left.getFirstChild();    Node  left  =  right.getLastChild();	  	non-compiled	[CE]  variable  left  is  already  defined  in  method  tryFoldAssign(Node,Node,Node)	4	None	add
35	[BUG]  [BUGGY]  return  left.getFirstChild();  Node  leftChild  =  left.getNext();  [CE]  unreachable  statement  [FE]                AssertionFailedError    [CONTEXT]    if  (!right.hasChildren()  ||  right.getFirstChild().getNext()  !=  right.getLastChild())  {      [BUGGY]  return  left.getFirstChild();  Node  leftChild  =  left.getNext();  [BUGGY]    }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldAssign  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  DIVIDE_BY_0_ERROR  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  val  int  newType  Node  left  leftChild  n  newNode  right  	projects/Closure97/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.22360679774997896	335	335	1	replace	return    left.getFirstChild();    Node  leftChild  =  left.getNext();	  	non-compiled	[CE]  unreachable  statement	4	None	add
36	[BUG]  [BUGGY]  return  n.getFirstChild();  Node  n  =  left.getFirstChild();  [CE]  variable  n  is  already  defined  in  method  tryFoldAssign(Node,Node,Node)  [FE]    AssertionFailedError    [CONTEXT]    if  (!right.hasChildren()  ||  right.getFirstChild().getNext()  !=  right.getLastChild())  {      [BUGGY]  return  n.getFirstChild();  Node  n  =  left.getFirstChild();  [BUGGY]    }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldAssign  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  DIVIDE_BY_0_ERROR  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  val  int  newType  Node  left  leftChild  n  newNode  right  	projects/Closure97/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.22360679774997896	335	335	1	replace	return    n.getFirstChild();    Node  n  =  left.getFirstChild();	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  tryFoldAssign(Node,Node,Node)	6	None	add
37	[BUG]  [BUGGY]  return  n.getFirstChild();  Node  n  =  left.getNext();  [CE]  variable  n  is  already  defined  in  method  tryFoldAssign(Node,Node,Node)  [FE]      AssertionFailedError    [CONTEXT]    if  (!right.hasChildren()  ||  right.getFirstChild().getNext()  !=  right.getLastChild())  {      [BUGGY]  return  n.getFirstChild();  Node  n  =  left.getNext();  [BUGGY]    }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldAssign  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  DIVIDE_BY_0_ERROR  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  val  int  newType  Node  left  leftChild  n  newNode  right  	projects/Closure97/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.22360679774997896	335	335	1	replace	return    n.getFirstChild();    Node  n  =  left.getNext();	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  tryFoldAssign(Node,Node,Node)	6	None	add
38	[BUG]  [BUGGY]  return  n.getFirstChild();  Node  n  =  right.getFirstChild();  [CE]  variable  n  is  already  defined  in  method  tryFoldAssign(Node,Node,Node)  [FE]        AssertionFailedError    [CONTEXT]    if  (!right.hasChildren()  ||  right.getFirstChild().getNext()  !=  right.getLastChild())  {      [BUGGY]  return  n.getFirstChild();  Node  n  =  right.getFirstChild();  [BUGGY]    }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldAssign  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  DIVIDE_BY_0_ERROR  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  val  int  newType  Node  left  leftChild  n  newNode  right  	projects/Closure97/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.22360679774997896	335	335	1	replace	return    n.getFirstChild();    Node  n  =  right.getFirstChild();	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  tryFoldAssign(Node,Node,Node)	6	None	add
39	[BUG]  [BUGGY]  return  n.getFirstChild();  Node  n  =  left.getLastChild();  [CE]  variable  n  is  already  defined  in  method  tryFoldAssign(Node,Node,Node)  [FE]          AssertionFailedError    [CONTEXT]    if  (!right.hasChildren()  ||  right.getFirstChild().getNext()  !=  right.getLastChild())  {      [BUGGY]  return  n.getFirstChild();  Node  n  =  left.getLastChild();  [BUGGY]    }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldAssign  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  DIVIDE_BY_0_ERROR  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  val  int  newType  Node  left  leftChild  n  newNode  right  	projects/Closure97/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.22360679774997896	335	335	1	replace	return    n.getFirstChild();    Node  n  =  left.getLastChild();	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  tryFoldAssign(Node,Node,Node)	6	None	add
40	[BUG]  [BUGGY]  return  n.getFirstChild();  Node  n  =  leftChild.getFirstChild();  [CE]  variable  n  is  already  defined  in  method  tryFoldAssign(Node,Node,Node)  [FE]            AssertionFailedError    [CONTEXT]    if  (!right.hasChildren()  ||  right.getFirstChild().getNext()  !=  right.getLastChild())  {      [BUGGY]  return  n.getFirstChild();  Node  n  =  leftChild.getFirstChild();  [BUGGY]    }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldAssign  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  DIVIDE_BY_0_ERROR  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  val  int  newType  Node  left  leftChild  n  newNode  right  	projects/Closure97/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.22360679774997896	335	335	1	replace	return    n.getFirstChild();    Node  n  =  leftChild.getFirstChild();	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  tryFoldAssign(Node,Node,Node)	6	None	add
41	[BUG]  [BUGGY]  return  n.getFirstChild();  Node  n  =  leftChild.getNext();  [CE]  variable  n  is  already  defined  in  method  tryFoldAssign(Node,Node,Node)  [FE]              AssertionFailedError    [CONTEXT]    if  (!right.hasChildren()  ||  right.getFirstChild().getNext()  !=  right.getLastChild())  {      [BUGGY]  return  n.getFirstChild();  Node  n  =  leftChild.getNext();  [BUGGY]    }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldAssign  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  DIVIDE_BY_0_ERROR  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  val  int  newType  Node  left  leftChild  n  newNode  right  	projects/Closure97/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.22360679774997896	335	335	1	replace	return    n.getFirstChild();    Node  n  =  leftChild.getNext();	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  tryFoldAssign(Node,Node,Node)	6	None	add
42	[BUG]  [BUGGY]  return  n.getFirstChild();  return  n.getFirstChild();  [CE]  unreachable  statement  [FE]                AssertionFailedError    [CONTEXT]    if  (!right.hasChildren()  ||  right.getFirstChild().getNext()  !=  right.getLastChild())  {      [BUGGY]  return  n.getFirstChild();  return  n.getFirstChild();  [BUGGY]    }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldAssign  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  DIVIDE_BY_0_ERROR  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  val  int  newType  Node  left  leftChild  n  newNode  right  	projects/Closure97/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.22360679774997896	335	335	1	replace	return    n.getFirstChild();    return  n.getFirstChild();	  	non-compiled	[CE]  unreachable  statement	6	None	add
43	[BUG]  [BUGGY]      NodeTraversal.traverse(compiler,  leftChild,  new  PsiElementTraversal());  [CE]  cannot  find  symbol  compiler  [FE]    RuntimeException    [CONTEXT]    if  (!right.hasChildren()  ||  right.getFirstChild().getNext()  !=  right.getLastChild())  {      [BUGGY]      NodeTraversal.traverse(compiler,  leftChild,  new  PsiElementTraversal());  [BUGGY]    }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldAssign  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  DIVIDE_BY_0_ERROR  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  val  int  newType  Node  left  leftChild  n  newNode  right  	projects/Closure97/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.22360679774997896	335	335	1	replace	        NodeTraversal.traverse(compiler,  leftChild,  new  PsiElementTraversal());	  	non-compiled	[CE]  cannot  find  symbol  compiler	10	None	add
44	[BUG]  [BUGGY]  return  left.getLastChild();  Node  leftChild  =  right.getFirstChild();  [CE]  unreachable  statement  [FE]    AssertionFailedError    [CONTEXT]    if  (!right.hasChildren()  ||  right.getFirstChild().getNext()  !=  right.getLastChild())  {      [BUGGY]  return  left.getLastChild();  Node  leftChild  =  right.getFirstChild();  [BUGGY]    }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldAssign  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  DIVIDE_BY_0_ERROR  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  val  int  newType  Node  left  leftChild  n  newNode  right  	projects/Closure97/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.22360679774997896	335	335	1	replace	return    left.getLastChild();    Node  leftChild  =  right.getFirstChild();	  	non-compiled	[CE]  unreachable  statement	12	None	add
45	[BUG]  [BUGGY]  return  left.getLastChild();  Node  leftChild  =  right.getLastChild();  [CE]  unreachable  statement  [FE]      AssertionFailedError    [CONTEXT]    if  (!right.hasChildren()  ||  right.getFirstChild().getNext()  !=  right.getLastChild())  {      [BUGGY]  return  left.getLastChild();  Node  leftChild  =  right.getLastChild();  [BUGGY]    }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldAssign  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  DIVIDE_BY_0_ERROR  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  val  int  newType  Node  left  leftChild  n  newNode  right  	projects/Closure97/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.22360679774997896	335	335	1	replace	return    left.getLastChild();    Node  leftChild  =  right.getLastChild();	  	non-compiled	[CE]  unreachable  statement	12	None	add
46	[BUG]  [BUGGY]  return  left.getLastChild();  Node  left  =  right.getFirstChild();  [CE]  variable  left  is  already  defined  in  method  tryFoldAssign(Node,Node,Node)  [FE]        AssertionFailedError    [CONTEXT]    if  (!right.hasChildren()  ||  right.getFirstChild().getNext()  !=  right.getLastChild())  {      [BUGGY]  return  left.getLastChild();  Node  left  =  right.getFirstChild();  [BUGGY]    }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldAssign  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  DIVIDE_BY_0_ERROR  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  val  int  newType  Node  left  leftChild  n  newNode  right  	projects/Closure97/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.22360679774997896	335	335	1	replace	return    left.getLastChild();    Node  left  =  right.getFirstChild();	  	non-compiled	[CE]  variable  left  is  already  defined  in  method  tryFoldAssign(Node,Node,Node)	12	None	add
47	[BUG]  [BUGGY]  return  left.getLastChild();  Node  leftChild  =  left.getFirstChild();  [CE]  unreachable  statement  [FE]          AssertionFailedError    [CONTEXT]    if  (!right.hasChildren()  ||  right.getFirstChild().getNext()  !=  right.getLastChild())  {      [BUGGY]  return  left.getLastChild();  Node  leftChild  =  left.getFirstChild();  [BUGGY]    }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldAssign  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  DIVIDE_BY_0_ERROR  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  val  int  newType  Node  left  leftChild  n  newNode  right  	projects/Closure97/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.22360679774997896	335	335	1	replace	return    left.getLastChild();    Node  leftChild  =  left.getFirstChild();	  	non-compiled	[CE]  unreachable  statement	12	None	add
48	[BUG]  [BUGGY]  return  left.getLastChild();  Node  leftChild  =  right.getNext();  [CE]  unreachable  statement  [FE]            AssertionFailedError    [CONTEXT]    if  (!right.hasChildren()  ||  right.getFirstChild().getNext()  !=  right.getLastChild())  {      [BUGGY]  return  left.getLastChild();  Node  leftChild  =  right.getNext();  [BUGGY]    }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldAssign  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  DIVIDE_BY_0_ERROR  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  val  int  newType  Node  left  leftChild  n  newNode  right  	projects/Closure97/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.22360679774997896	335	335	1	replace	return    left.getLastChild();    Node  leftChild  =  right.getNext();	  	non-compiled	[CE]  unreachable  statement	12	None	add
49	[BUG]  [BUGGY]  return  left.getLastChild();  Node  left  =  left.getFirstChild();  [CE]  variable  left  is  already  defined  in  method  tryFoldAssign(Node,Node,Node)  [FE]              AssertionFailedError    [CONTEXT]    if  (!right.hasChildren()  ||  right.getFirstChild().getNext()  !=  right.getLastChild())  {      [BUGGY]  return  left.getLastChild();  Node  left  =  left.getFirstChild();  [BUGGY]    }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldAssign  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  DIVIDE_BY_0_ERROR  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  val  int  newType  Node  left  leftChild  n  newNode  right  	projects/Closure97/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.22360679774997896	335	335	1	replace	return    left.getLastChild();    Node  left  =  left.getFirstChild();	  	non-compiled	[CE]  variable  left  is  already  defined  in  method  tryFoldAssign(Node,Node,Node)	12	None	add
50	[BUG]  [BUGGY]  return  left.getLastChild();  return  left.getLastChild();  [CE]  unreachable  statement  [FE]                AssertionFailedError    [CONTEXT]    if  (!right.hasChildren()  ||  right.getFirstChild().getNext()  !=  right.getLastChild())  {      [BUGGY]  return  left.getLastChild();  return  left.getLastChild();  [BUGGY]    }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldAssign  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  DIVIDE_BY_0_ERROR  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  val  int  newType  Node  left  leftChild  n  newNode  right  	projects/Closure97/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.22360679774997896	335	335	1	replace	return    left.getLastChild();    return  left.getLastChild();	  	non-compiled	[CE]  unreachable  statement	12	None	add
51	[BUG]  [BUGGY]  return  new  Node(leftChild,  right.getFirstChild());  [CE]  cannot  find  symbol  leftChild  [FE]          AssertionFailedError    [CONTEXT]    if  (!right.hasChildren()  ||  right.getFirstChild().getNext()  !=  right.getLastChild())  {      [BUGGY]  return  new  Node(leftChild,  right.getFirstChild());  [BUGGY]    }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldAssign  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  DIVIDE_BY_0_ERROR  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  val  int  newType  Node  left  leftChild  n  newNode  right  	projects/Closure97/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.22360679774997896	335	335	1	replace	return  new  Node(leftChild,  right.getFirstChild());	  return    new    Node(leftChild,    left.getFirstChild());    	non-compiled	[CE]  cannot  find  symbol  leftChild	16	None	replace
52	[BUG]  [BUGGY]  return  new  Node(n,  left.getFirstChild());  [CE]  no  suitable  constructor  found  for  Node(Node,Node)  [FE]            AssertionFailedError    [CONTEXT]    if  (!right.hasChildren()  ||  right.getFirstChild().getNext()  !=  right.getLastChild())  {      [BUGGY]  return  new  Node(n,  left.getFirstChild());  [BUGGY]    }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldAssign  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  DIVIDE_BY_0_ERROR  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  val  int  newType  Node  left  leftChild  n  newNode  right  	projects/Closure97/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.22360679774997896	335	335	1	replace	return  new  Node(n,  left.getFirstChild());	  return    new    Node(leftChild,    left.getFirstChild());    	non-compiled	[CE]  no  suitable  constructor  found  for  Node(Node,Node)	16	None	replace
53	[BUG]  [BUGGY]  return  new  Node(right,  right.getFirstChild());  [CE]  no  suitable  constructor  found  for  Node(Node,Node)  [FE]              AssertionFailedError    [CONTEXT]    if  (!right.hasChildren()  ||  right.getFirstChild().getNext()  !=  right.getLastChild())  {      [BUGGY]  return  new  Node(right,  right.getFirstChild());  [BUGGY]    }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldAssign  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  DIVIDE_BY_0_ERROR  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  val  int  newType  Node  left  leftChild  n  newNode  right  	projects/Closure97/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.22360679774997896	335	335	1	replace	return  new  Node(right,  right.getFirstChild());	  return    new    Node(leftChild,    left.getFirstChild());    	non-compiled	[CE]  no  suitable  constructor  found  for  Node(Node,Node)	16	None	replace
54	[BUG]  [BUGGY]  return  new  Node(rightChild,  right.getFirstChild());  [CE]  cannot  find  symbol  rightChild  [FE]                AssertionFailedError    [CONTEXT]    if  (!right.hasChildren()  ||  right.getFirstChild().getNext()  !=  right.getLastChild())  {      [BUGGY]  return  new  Node(rightChild,  right.getFirstChild());  [BUGGY]    }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldAssign  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  DIVIDE_BY_0_ERROR  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  val  int  newType  Node  left  leftChild  n  newNode  right  	projects/Closure97/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.22360679774997896	335	335	1	replace	return  new  Node(rightChild,  right.getFirstChild());	  return    new    Node(leftChild,    left.getFirstChild());    	non-compiled	[CE]  cannot  find  symbol  rightChild	16	None	replace
55	[BUG]  [BUGGY]  return  new  Node(right,  left.getFirstChild());  [CE]  no  suitable  constructor  found  for  Node(Node,Node)  [FE]                  AssertionFailedError    [CONTEXT]    if  (!right.hasChildren()  ||  right.getFirstChild().getNext()  !=  right.getLastChild())  {      [BUGGY]  return  new  Node(right,  left.getFirstChild());  [BUGGY]    }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldAssign  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  DIVIDE_BY_0_ERROR  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  val  int  newType  Node  left  leftChild  n  newNode  right  	projects/Closure97/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.22360679774997896	335	335	1	replace	return  new  Node(right,  left.getFirstChild());	  return    new    Node(leftChild,    left.getFirstChild());    	non-compiled	[CE]  no  suitable  constructor  found  for  Node(Node,Node)	16	None	replace
56	[BUG]  [BUGGY]  return  new  Node(n,  right.getFirstChild());  [CE]  no  suitable  constructor  found  for  Node(Node,Node)  [FE]                    AssertionFailedError    [CONTEXT]    if  (!right.hasChildren()  ||  right.getFirstChild().getNext()  !=  right.getLastChild())  {      [BUGGY]  return  new  Node(n,  right.getFirstChild());  [BUGGY]    }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldAssign  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  DIVIDE_BY_0_ERROR  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  val  int  newType  Node  left  leftChild  n  newNode  right  	projects/Closure97/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.22360679774997896	335	335	1	replace	return  new  Node(n,  right.getFirstChild());	  return    new    Node(leftChild,    left.getFirstChild());    	non-compiled	[CE]  no  suitable  constructor  found  for  Node(Node,Node)	16	None	replace
57	[BUG]  [BUGGY]  return  rightChild.getFirstChild();  [CE]  cannot  find  symbol  rightChild  [FE]                  AssertionFailedError    [CONTEXT]    if  (!right.hasChildren()  ||  right.getFirstChild().getNext()  !=  right.getLastChild())  {      [BUGGY]  return  rightChild.getFirstChild();  [BUGGY]    }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldAssign  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  DIVIDE_BY_0_ERROR  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  val  int  newType  Node  left  leftChild  n  newNode  right  	projects/Closure97/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.22360679774997896	335	335	1	replace	return  rightChild.getFirstChild();	  return    leftChild.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol  rightChild	9	None	replace
58	[BUG]  [BUGGY]  return  n.removeFirstChild();  Node  n  =  left.getFirstChild();  [CE]  variable  n  is  already  defined  in  method  tryFoldAssign(Node,Node,Node)  [FE]    Error    [CONTEXT]    if  (!right.hasChildren()  ||  right.getFirstChild().getNext()  !=  right.getLastChild())  {      [BUGGY]  return  n.removeFirstChild();  Node  n  =  left.getFirstChild();  [BUGGY]    }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldAssign  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  DIVIDE_BY_0_ERROR  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  val  int  newType  Node  left  leftChild  n  newNode  right  	projects/Closure97/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.22360679774997896	335	335	1	replace	return    n.removeFirstChild();    Node  n  =  left.getFirstChild();	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  tryFoldAssign(Node,Node,Node)	14	None	add
59	[BUG]  [BUGGY]  return  n.removeFirstChild();  Node  n  =  left.getNext();  [CE]  variable  n  is  already  defined  in  method  tryFoldAssign(Node,Node,Node)  [FE]      Error    [CONTEXT]    if  (!right.hasChildren()  ||  right.getFirstChild().getNext()  !=  right.getLastChild())  {      [BUGGY]  return  n.removeFirstChild();  Node  n  =  left.getNext();  [BUGGY]    }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldAssign  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  DIVIDE_BY_0_ERROR  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  val  int  newType  Node  left  leftChild  n  newNode  right  	projects/Closure97/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.22360679774997896	335	335	1	replace	return    n.removeFirstChild();    Node  n  =  left.getNext();	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  tryFoldAssign(Node,Node,Node)	14	None	add
60	[BUG]  [BUGGY]  return  n.removeFirstChild();  Node  n  =  right.getFirstChild();  [CE]  variable  n  is  already  defined  in  method  tryFoldAssign(Node,Node,Node)  [FE]        Error    [CONTEXT]    if  (!right.hasChildren()  ||  right.getFirstChild().getNext()  !=  right.getLastChild())  {      [BUGGY]  return  n.removeFirstChild();  Node  n  =  right.getFirstChild();  [BUGGY]    }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldAssign  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  DIVIDE_BY_0_ERROR  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  val  int  newType  Node  left  leftChild  n  newNode  right  	projects/Closure97/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.22360679774997896	335	335	1	replace	return    n.removeFirstChild();    Node  n  =  right.getFirstChild();	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  tryFoldAssign(Node,Node,Node)	14	None	add
61	[BUG]  [BUGGY]  return  n.removeFirstChild();  Node  n  =  leftChild.getFirstChild();  [CE]  variable  n  is  already  defined  in  method  tryFoldAssign(Node,Node,Node)  [FE]          Error    [CONTEXT]    if  (!right.hasChildren()  ||  right.getFirstChild().getNext()  !=  right.getLastChild())  {      [BUGGY]  return  n.removeFirstChild();  Node  n  =  leftChild.getFirstChild();  [BUGGY]    }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldAssign  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  DIVIDE_BY_0_ERROR  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  val  int  newType  Node  left  leftChild  n  newNode  right  	projects/Closure97/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.22360679774997896	335	335	1	replace	return    n.removeFirstChild();    Node  n  =  leftChild.getFirstChild();	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  tryFoldAssign(Node,Node,Node)	14	None	add
62	[BUG]  [BUGGY]  return  n.removeFirstChild();  Node  n  =  leftChild.getNext();  [CE]  variable  n  is  already  defined  in  method  tryFoldAssign(Node,Node,Node)  [FE]            Error    [CONTEXT]    if  (!right.hasChildren()  ||  right.getFirstChild().getNext()  !=  right.getLastChild())  {      [BUGGY]  return  n.removeFirstChild();  Node  n  =  leftChild.getNext();  [BUGGY]    }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldAssign  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  DIVIDE_BY_0_ERROR  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  val  int  newType  Node  left  leftChild  n  newNode  right  	projects/Closure97/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.22360679774997896	335	335	1	replace	return    n.removeFirstChild();    Node  n  =  leftChild.getNext();	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  tryFoldAssign(Node,Node,Node)	14	None	add
63	[BUG]  [BUGGY]  return  n.removeFirstChild();  Node  n  =  left.getLastChild();  [CE]  variable  n  is  already  defined  in  method  tryFoldAssign(Node,Node,Node)  [FE]              Error    [CONTEXT]    if  (!right.hasChildren()  ||  right.getFirstChild().getNext()  !=  right.getLastChild())  {      [BUGGY]  return  n.removeFirstChild();  Node  n  =  left.getLastChild();  [BUGGY]    }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldAssign  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  DIVIDE_BY_0_ERROR  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  val  int  newType  Node  left  leftChild  n  newNode  right  	projects/Closure97/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.22360679774997896	335	335	1	replace	return    n.removeFirstChild();    Node  n  =  left.getLastChild();	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  tryFoldAssign(Node,Node,Node)	14	None	add
64	[BUG]  [BUGGY]  return  n.removeFirstChild();  n.removeFirstChild();  [CE]  unreachable  statement  [FE]                Error    [CONTEXT]    if  (!right.hasChildren()  ||  right.getFirstChild().getNext()  !=  right.getLastChild())  {      [BUGGY]  return  n.removeFirstChild();  n.removeFirstChild();  [BUGGY]    }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldAssign  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  DIVIDE_BY_0_ERROR  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  val  int  newType  Node  left  leftChild  n  newNode  right  	projects/Closure97/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.22360679774997896	335	335	1	replace	return    n.removeFirstChild();    n.removeFirstChild();	  	non-compiled	[CE]  unreachable  statement	14	None	add
65	[BUG]  [BUGGY]  return  left;  Node  leftChild  =  right.getFirstChild();  [CE]  unreachable  statement  [FE]    AssertionFailedError    [CONTEXT]    if  (!right.hasChildren()  ||  right.getFirstChild().getNext()  !=  right.getLastChild())  {      [BUGGY]  return  left;  Node  leftChild  =  right.getFirstChild();  [BUGGY]    }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldAssign  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  DIVIDE_BY_0_ERROR  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  val  int  newType  Node  left  leftChild  n  newNode  right  	projects/Closure97/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.22360679774997896	335	335	1	replace	return    left;    Node  leftChild  =  right.getFirstChild();	  	non-compiled	[CE]  unreachable  statement	2	None	add
66	[BUG]  [BUGGY]  return  left;  Node  left  =  right.getFirstChild();  [CE]  variable  left  is  already  defined  in  method  tryFoldAssign(Node,Node,Node)  [FE]      AssertionFailedError    [CONTEXT]    if  (!right.hasChildren()  ||  right.getFirstChild().getNext()  !=  right.getLastChild())  {      [BUGGY]  return  left;  Node  left  =  right.getFirstChild();  [BUGGY]    }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldAssign  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  DIVIDE_BY_0_ERROR  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  val  int  newType  Node  left  leftChild  n  newNode  right  	projects/Closure97/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.22360679774997896	335	335	1	replace	return    left;    Node  left  =  right.getFirstChild();	  	non-compiled	[CE]  variable  left  is  already  defined  in  method  tryFoldAssign(Node,Node,Node)	2	None	add
67	[BUG]  [BUGGY]  return  left;  Node  leftChild  =  right.getLastChild();  [CE]  unreachable  statement  [FE]        AssertionFailedError    [CONTEXT]    if  (!right.hasChildren()  ||  right.getFirstChild().getNext()  !=  right.getLastChild())  {      [BUGGY]  return  left;  Node  leftChild  =  right.getLastChild();  [BUGGY]    }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldAssign  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  DIVIDE_BY_0_ERROR  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  val  int  newType  Node  left  leftChild  n  newNode  right  	projects/Closure97/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.22360679774997896	335	335	1	replace	return    left;    Node  leftChild  =  right.getLastChild();	  	non-compiled	[CE]  unreachable  statement	2	None	add
68	[BUG]  [BUGGY]  return  left;  Node  leftChild  =  right.getNext();  [CE]  unreachable  statement  [FE]          AssertionFailedError    [CONTEXT]    if  (!right.hasChildren()  ||  right.getFirstChild().getNext()  !=  right.getLastChild())  {      [BUGGY]  return  left;  Node  leftChild  =  right.getNext();  [BUGGY]    }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldAssign  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  DIVIDE_BY_0_ERROR  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  val  int  newType  Node  left  leftChild  n  newNode  right  	projects/Closure97/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.22360679774997896	335	335	1	replace	return    left;    Node  leftChild  =  right.getNext();	  	non-compiled	[CE]  unreachable  statement	2	None	add
69	[BUG]  [BUGGY]  return  left;  Node  left  =  right.getNext();  [CE]  variable  left  is  already  defined  in  method  tryFoldAssign(Node,Node,Node)  [FE]            AssertionFailedError    [CONTEXT]    if  (!right.hasChildren()  ||  right.getFirstChild().getNext()  !=  right.getLastChild())  {      [BUGGY]  return  left;  Node  left  =  right.getNext();  [BUGGY]    }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldAssign  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  DIVIDE_BY_0_ERROR  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  val  int  newType  Node  left  leftChild  n  newNode  right  	projects/Closure97/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.22360679774997896	335	335	1	replace	return    left;    Node  left  =  right.getNext();	  	non-compiled	[CE]  variable  left  is  already  defined  in  method  tryFoldAssign(Node,Node,Node)	2	None	add
70	[BUG]  [BUGGY]  return  left;  Node  left  =  right.getLastChild();  [CE]  variable  left  is  already  defined  in  method  tryFoldAssign(Node,Node,Node)  [FE]              AssertionFailedError    [CONTEXT]    if  (!right.hasChildren()  ||  right.getFirstChild().getNext()  !=  right.getLastChild())  {      [BUGGY]  return  left;  Node  left  =  right.getLastChild();  [BUGGY]    }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldAssign  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  DIVIDE_BY_0_ERROR  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  val  int  newType  Node  left  leftChild  n  newNode  right  	projects/Closure97/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.22360679774997896	335	335	1	replace	return    left;    Node  left  =  right.getLastChild();	  	non-compiled	[CE]  variable  left  is  already  defined  in  method  tryFoldAssign(Node,Node,Node)	2	None	add
71	[BUG]  [BUGGY]  return  left;  Node  leftChild  =  right.getFirstChild().getNext();  [CE]  unreachable  statement  [FE]                AssertionFailedError    [CONTEXT]    if  (!right.hasChildren()  ||  right.getFirstChild().getNext()  !=  right.getLastChild())  {      [BUGGY]  return  left;  Node  leftChild  =  right.getFirstChild().getNext();  [BUGGY]    }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldAssign  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  DIVIDE_BY_0_ERROR  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  val  int  newType  Node  left  leftChild  n  newNode  right  	projects/Closure97/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.22360679774997896	335	335	1	replace	return    left;    Node  leftChild  =  right.getFirstChild().getNext();	  	non-compiled	[CE]  unreachable  statement	2	None	add
72	[BUG]  [BUGGY]  return  leftChild.removeFirstChild();  [CE]  cannot  find  symbol  leftChild  [FE]    Error    [CONTEXT]    if  (!right.hasChildren()  ||  right.getFirstChild().getNext()  !=  right.getLastChild())  {      [BUGGY]  return  leftChild.removeFirstChild();  [BUGGY]    }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldAssign  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  DIVIDE_BY_0_ERROR  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  val  int  newType  Node  left  leftChild  n  newNode  right  	projects/Closure97/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.22360679774997896	335	335	1	replace	return  leftChild.removeFirstChild();	  return    n.removeFirstChild();    	non-compiled	[CE]  cannot  find  symbol  leftChild	15	None	replace
73	[BUG]  [BUGGY]  return  right.replaceChild(left,  newNode);  [CE]  cannot  find  symbol  newNode  [FE]      Error    [CONTEXT]    if  (!right.hasChildren()  ||  right.getFirstChild().getNext()  !=  right.getLastChild())  {      [BUGGY]  return  right.replaceChild(left,  newNode);  [BUGGY]    }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldAssign  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  DIVIDE_BY_0_ERROR  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  val  int  newType  Node  left  leftChild  n  newNode  right  	projects/Closure97/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.22360679774997896	335	335	1	replace	return  right.replaceChild(left,  newNode);	  return    n.removeFirstChild();    	non-compiled	[CE]  cannot  find  symbol  newNode	15	None	replace
74	[BUG]  [BUGGY]  return  n.removeFirstChild();  NodeTraversal.traverse(compiler,  left,  new  AssertionFailedError(right));  [CE]  cannot  find  symbol  compiler  [FE]    Error    [CONTEXT]    if  (!right.hasChildren()  ||  right.getFirstChild().getNext()  !=  right.getLastChild())  {      [BUGGY]  return  n.removeFirstChild();  NodeTraversal.traverse(compiler,  left,  new  AssertionFailedError(right));  [BUGGY]    }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldAssign  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  DIVIDE_BY_0_ERROR  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  val  int  newType  Node  left  leftChild  n  newNode  right  	projects/Closure97/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.22360679774997896	335	335	1	replace	return    n.removeFirstChild();    NodeTraversal.traverse(compiler,  left,  new  AssertionFailedError(right));	  	non-compiled	[CE]  cannot  find  symbol  compiler	14	None	add
75	[BUG]  [BUGGY]  return  n.removeFirstChild();  NodeTraversal.traverse(compiler,  left,  new  AssertionFailedError(left,  right.getFirstChild()));  [CE]  cannot  find  symbol  compiler  [FE]      Error    [CONTEXT]    if  (!right.hasChildren()  ||  right.getFirstChild().getNext()  !=  right.getLastChild())  {      [BUGGY]  return  n.removeFirstChild();  NodeTraversal.traverse(compiler,  left,  new  AssertionFailedError(left,  right.getFirstChild()));  [BUGGY]    }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldAssign  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  DIVIDE_BY_0_ERROR  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  val  int  newType  Node  left  leftChild  n  newNode  right  	projects/Closure97/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.22360679774997896	335	335	1	replace	return    n.removeFirstChild();    NodeTraversal.traverse(compiler,  left,  new  AssertionFailedError(left,  right.getFirstChild()));	  	non-compiled	[CE]  cannot  find  symbol  compiler	14	None	add
76	[BUG]  [BUGGY]  return  n.removeFirstChild();  NodeTraversal.traverse(compiler,  left,  new  AssertionFailedError(left,  right.getFirstChild(),  right.getLastChild()));  [CE]  cannot  find  symbol  compiler  [FE]        Error    [CONTEXT]    if  (!right.hasChildren()  ||  right.getFirstChild().getNext()  !=  right.getLastChild())  {      [BUGGY]  return  n.removeFirstChild();  NodeTraversal.traverse(compiler,  left,  new  AssertionFailedError(left,  right.getFirstChild(),  right.getLastChild()));  [BUGGY]    }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldAssign  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  DIVIDE_BY_0_ERROR  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  val  int  newType  Node  left  leftChild  n  newNode  right  	projects/Closure97/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.22360679774997896	335	335	1	replace	return    n.removeFirstChild();    NodeTraversal.traverse(compiler,  left,  new  AssertionFailedError(left,  right.getFirstChild(),  right.getLastChild()));	  	non-compiled	[CE]  cannot  find  symbol  compiler	14	None	add
77	[BUG]  [BUGGY]  return  n.removeFirstChild();  NodeTraversal.traverse(compiler,  left,  new  AssertionFailedError(right),  this);  [CE]  cannot  find  symbol  compiler  [FE]          Error    [CONTEXT]    if  (!right.hasChildren()  ||  right.getFirstChild().getNext()  !=  right.getLastChild())  {      [BUGGY]  return  n.removeFirstChild();  NodeTraversal.traverse(compiler,  left,  new  AssertionFailedError(right),  this);  [BUGGY]    }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldAssign  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  DIVIDE_BY_0_ERROR  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  val  int  newType  Node  left  leftChild  n  newNode  right  	projects/Closure97/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.22360679774997896	335	335	1	replace	return    n.removeFirstChild();    NodeTraversal.traverse(compiler,  left,  new  AssertionFailedError(right),  this);	  	non-compiled	[CE]  cannot  find  symbol  compiler	14	None	add
78	[BUG]  [BUGGY]  return  n.removeFirstChild();  NodeTraversal.traverse(compiler,  left,  new  AssertionFailedError(left,  right));  [CE]  cannot  find  symbol  compiler  [FE]            Error    [CONTEXT]    if  (!right.hasChildren()  ||  right.getFirstChild().getNext()  !=  right.getLastChild())  {      [BUGGY]  return  n.removeFirstChild();  NodeTraversal.traverse(compiler,  left,  new  AssertionFailedError(left,  right));  [BUGGY]    }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldAssign  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  DIVIDE_BY_0_ERROR  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  val  int  newType  Node  left  leftChild  n  newNode  right  	projects/Closure97/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.22360679774997896	335	335	1	replace	return    n.removeFirstChild();    NodeTraversal.traverse(compiler,  left,  new  AssertionFailedError(left,  right));	  	non-compiled	[CE]  cannot  find  symbol  compiler	14	None	add
79	[BUG]  [BUGGY]  return  left.getLastChild();  Node  leftChild  =  left.getNext();  [CE]  unreachable  statement  [FE]    AssertionFailedError    [CONTEXT]    if  (!right.hasChildren()  ||  right.getFirstChild().getNext()  !=  right.getLastChild())  {      [BUGGY]  return  left.getLastChild();  Node  leftChild  =  left.getNext();  [BUGGY]    }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldAssign  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  DIVIDE_BY_0_ERROR  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  val  int  newType  Node  left  leftChild  n  newNode  right  	projects/Closure97/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.22360679774997896	335	335	1	replace	return    left.getLastChild();    Node  leftChild  =  left.getNext();	  	non-compiled	[CE]  unreachable  statement	12	None	add
80	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    if  (!right.hasChildren()  ||  right.getFirstChild().getNext()  !=  right.getLastChild())  {      [BUGGY]  return  left.getNext();  [BUGGY]    }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldAssign  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  DIVIDE_BY_0_ERROR  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  val  int  newType  Node  left  leftChild  n  newNode  right  	projects/Closure97/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.22360679774997896	335	335	1	add	return  left.getNext();	  return    left.getFirstChild();    	compilable	  [FE]  AssertionFailedError  	5	1	replace
81	[BUG]  [BUGGY]  return  left.getNext();  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    if  (!right.hasChildren()  ||  right.getFirstChild().getNext()  !=  right.getLastChild())  {      [BUGGY]  return  left.getNext();  [BUGGY]    }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldAssign  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  DIVIDE_BY_0_ERROR  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  val  int  newType  Node  left  leftChild  n  newNode  right  	projects/Closure97/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.22360679774997896	335	335	1	replace	return  left.getNext();	  return    left.getFirstChild();    	compilable	  [FE]  AssertionFailedError  	5	1	replace
82	[BUG]  [BUGGY]  return  new  Node(rightChild,  left.getFirstChild());  [CE]  cannot  find  symbol  rightChild  [FE]          AssertionFailedError    [CONTEXT]    if  (!right.hasChildren()  ||  right.getFirstChild().getNext()  !=  right.getLastChild())  {      [BUGGY]  return  new  Node(rightChild,  left.getFirstChild());  [BUGGY]    }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldAssign  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  DIVIDE_BY_0_ERROR  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  val  int  newType  Node  left  leftChild  n  newNode  right  	projects/Closure97/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.22360679774997896	335	335	1	replace	return  new  Node(rightChild,  left.getFirstChild());	  return    new    Node(leftChild,    left.getFirstChild());    	non-compiled	[CE]  cannot  find  symbol  rightChild	16	None	replace
83	[BUG]  [BUGGY]      NodeTraversal.traverse(compiler,  left,  new  AssertionFailedError(right));  [CE]  cannot  find  symbol  compiler  [FE]    RuntimeException    [CONTEXT]    if  (!right.hasChildren()  ||  right.getFirstChild().getNext()  !=  right.getLastChild())  {      [BUGGY]      NodeTraversal.traverse(compiler,  left,  new  AssertionFailedError(right));  [BUGGY]    }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldAssign  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  DIVIDE_BY_0_ERROR  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  val  int  newType  Node  left  leftChild  n  newNode  right  	projects/Closure97/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.22360679774997896	335	335	1	replace	        NodeTraversal.traverse(compiler,  left,  new  AssertionFailedError(right));	  	non-compiled	[CE]  cannot  find  symbol  compiler	10	None	add
84	[BUG]  [BUGGY]      NodeTraversal.traverse(compiler,  left,  new  AssertionFailedError(left,  right.getFirstChild()));  [CE]  cannot  find  symbol  compiler  [FE]      RuntimeException    [CONTEXT]    if  (!right.hasChildren()  ||  right.getFirstChild().getNext()  !=  right.getLastChild())  {      [BUGGY]      NodeTraversal.traverse(compiler,  left,  new  AssertionFailedError(left,  right.getFirstChild()));  [BUGGY]    }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldAssign  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  DIVIDE_BY_0_ERROR  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  val  int  newType  Node  left  leftChild  n  newNode  right  	projects/Closure97/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.22360679774997896	335	335	1	replace	        NodeTraversal.traverse(compiler,  left,  new  AssertionFailedError(left,  right.getFirstChild()));	  	non-compiled	[CE]  cannot  find  symbol  compiler	10	None	add
85	[BUG]  [BUGGY]      NodeTraversal.traverse(compiler,  left,  new  PeepholeFoldConstants());  [CE]  cannot  find  symbol  compiler  [FE]        RuntimeException    [CONTEXT]    if  (!right.hasChildren()  ||  right.getFirstChild().getNext()  !=  right.getLastChild())  {      [BUGGY]      NodeTraversal.traverse(compiler,  left,  new  PeepholeFoldConstants());  [BUGGY]    }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldAssign  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  DIVIDE_BY_0_ERROR  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  val  int  newType  Node  left  leftChild  n  newNode  right  	projects/Closure97/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.22360679774997896	335	335	1	replace	        NodeTraversal.traverse(compiler,  left,  new  PeepholeFoldConstants());	  	non-compiled	[CE]  cannot  find  symbol  compiler	10	None	add
86	[BUG]  [BUGGY]      NodeTraversal.traverse(compiler,  left,  new  AssertionFailedError(left,  right.getLastChild()));  [CE]  cannot  find  symbol  compiler  [FE]          RuntimeException    [CONTEXT]    if  (!right.hasChildren()  ||  right.getFirstChild().getNext()  !=  right.getLastChild())  {      [BUGGY]      NodeTraversal.traverse(compiler,  left,  new  AssertionFailedError(left,  right.getLastChild()));  [BUGGY]    }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldAssign  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  DIVIDE_BY_0_ERROR  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  val  int  newType  Node  left  leftChild  n  newNode  right  	projects/Closure97/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.22360679774997896	335	335	1	replace	        NodeTraversal.traverse(compiler,  left,  new  AssertionFailedError(left,  right.getLastChild()));	  	non-compiled	[CE]  cannot  find  symbol  compiler	10	None	add
87	[BUG]  [BUGGY]      NodeTraversal.traverse(compiler,  left,  new  AssertionFailedError(left,  right));  [CE]  cannot  find  symbol  compiler  [FE]            RuntimeException    [CONTEXT]    if  (!right.hasChildren()  ||  right.getFirstChild().getNext()  !=  right.getLastChild())  {      [BUGGY]      NodeTraversal.traverse(compiler,  left,  new  AssertionFailedError(left,  right));  [BUGGY]    }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldAssign  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  DIVIDE_BY_0_ERROR  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  val  int  newType  Node  left  leftChild  n  newNode  right  	projects/Closure97/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.22360679774997896	335	335	1	replace	        NodeTraversal.traverse(compiler,  left,  new  AssertionFailedError(left,  right));	  	non-compiled	[CE]  cannot  find  symbol  compiler	10	None	add
88	[BUG]  [BUGGY]      NodeTraversal.traverse(compiler,  left,  new  AssertionFailedError(right),  this);  [CE]  cannot  find  symbol  compiler  [FE]              RuntimeException    [CONTEXT]    if  (!right.hasChildren()  ||  right.getFirstChild().getNext()  !=  right.getLastChild())  {      [BUGGY]      NodeTraversal.traverse(compiler,  left,  new  AssertionFailedError(right),  this);  [BUGGY]    }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldAssign  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  DIVIDE_BY_0_ERROR  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  val  int  newType  Node  left  leftChild  n  newNode  right  	projects/Closure97/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.22360679774997896	335	335	1	replace	        NodeTraversal.traverse(compiler,  left,  new  AssertionFailedError(right),  this);	  	non-compiled	[CE]  cannot  find  symbol  compiler	10	None	add
89	[BUG]  [BUGGY]      NodeTraversal.traverse(compiler,  left,  new  AssertionFailedError(right),  n);  [CE]  cannot  find  symbol  compiler  [FE]                RuntimeException    [CONTEXT]    if  (!right.hasChildren()  ||  right.getFirstChild().getNext()  !=  right.getLastChild())  {      [BUGGY]      NodeTraversal.traverse(compiler,  left,  new  AssertionFailedError(right),  n);  [BUGGY]    }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldAssign  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  DIVIDE_BY_0_ERROR  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  val  int  newType  Node  left  leftChild  n  newNode  right  	projects/Closure97/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.22360679774997896	335	335	1	replace	        NodeTraversal.traverse(compiler,  left,  new  AssertionFailedError(right),  n);	  	non-compiled	[CE]  cannot  find  symbol  compiler	10	None	add
90	[BUG]  [BUGGY]  return  n.getFirstChild();  NodeTraversal.traverse(compiler,  left,  new  AssertionFailedError(right));  [CE]  cannot  find  symbol  compiler  [FE]    AssertionFailedError    [CONTEXT]    if  (!right.hasChildren()  ||  right.getFirstChild().getNext()  !=  right.getLastChild())  {      [BUGGY]  return  n.getFirstChild();  NodeTraversal.traverse(compiler,  left,  new  AssertionFailedError(right));  [BUGGY]    }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldAssign  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  DIVIDE_BY_0_ERROR  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  val  int  newType  Node  left  leftChild  n  newNode  right  	projects/Closure97/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.22360679774997896	335	335	1	replace	return    n.getFirstChild();    NodeTraversal.traverse(compiler,  left,  new  AssertionFailedError(right));	  	non-compiled	[CE]  cannot  find  symbol  compiler	6	None	add
91	[BUG]  [BUGGY]  return  n.getFirstChild();  NodeTraversal.traverse(compiler,  left,  new  AssertionFailedError(left));  [CE]  cannot  find  symbol  compiler  [FE]      AssertionFailedError    [CONTEXT]    if  (!right.hasChildren()  ||  right.getFirstChild().getNext()  !=  right.getLastChild())  {      [BUGGY]  return  n.getFirstChild();  NodeTraversal.traverse(compiler,  left,  new  AssertionFailedError(left));  [BUGGY]    }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldAssign  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  DIVIDE_BY_0_ERROR  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  val  int  newType  Node  left  leftChild  n  newNode  right  	projects/Closure97/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.22360679774997896	335	335	1	replace	return    n.getFirstChild();    NodeTraversal.traverse(compiler,  left,  new  AssertionFailedError(left));	  	non-compiled	[CE]  cannot  find  symbol  compiler	6	None	add
92	[BUG]  [BUGGY]  return  n.getFirstChild();  NodeTraversal.traverse(compiler,  left,  new  AssertionFailedError());  [CE]  cannot  find  symbol  compiler  [FE]        AssertionFailedError    [CONTEXT]    if  (!right.hasChildren()  ||  right.getFirstChild().getNext()  !=  right.getLastChild())  {      [BUGGY]  return  n.getFirstChild();  NodeTraversal.traverse(compiler,  left,  new  AssertionFailedError());  [BUGGY]    }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldAssign  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  DIVIDE_BY_0_ERROR  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  val  int  newType  Node  left  leftChild  n  newNode  right  	projects/Closure97/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.22360679774997896	335	335	1	replace	return    n.getFirstChild();    NodeTraversal.traverse(compiler,  left,  new  AssertionFailedError());	  	non-compiled	[CE]  cannot  find  symbol  compiler	6	None	add
93	[BUG]  [BUGGY]  return  n.getFirstChild();  NodeTraversal.traverse(compiler,  left,  new  AssertionFailedError(left,  right));  [CE]  cannot  find  symbol  compiler  [FE]          AssertionFailedError    [CONTEXT]    if  (!right.hasChildren()  ||  right.getFirstChild().getNext()  !=  right.getLastChild())  {      [BUGGY]  return  n.getFirstChild();  NodeTraversal.traverse(compiler,  left,  new  AssertionFailedError(left,  right));  [BUGGY]    }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldAssign  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  DIVIDE_BY_0_ERROR  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  val  int  newType  Node  left  leftChild  n  newNode  right  	projects/Closure97/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.22360679774997896	335	335	1	replace	return    n.getFirstChild();    NodeTraversal.traverse(compiler,  left,  new  AssertionFailedError(left,  right));	  	non-compiled	[CE]  cannot  find  symbol  compiler	6	None	add
94	[BUG]  [BUGGY]  return  n.getFirstChild();  NodeTraversal.traverse(compiler,  left,  new  AssertionFailedError(right),  this);  [CE]  cannot  find  symbol  compiler  [FE]            AssertionFailedError    [CONTEXT]    if  (!right.hasChildren()  ||  right.getFirstChild().getNext()  !=  right.getLastChild())  {      [BUGGY]  return  n.getFirstChild();  NodeTraversal.traverse(compiler,  left,  new  AssertionFailedError(right),  this);  [BUGGY]    }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldAssign  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  DIVIDE_BY_0_ERROR  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  val  int  newType  Node  left  leftChild  n  newNode  right  	projects/Closure97/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.22360679774997896	335	335	1	replace	return    n.getFirstChild();    NodeTraversal.traverse(compiler,  left,  new  AssertionFailedError(right),  this);	  	non-compiled	[CE]  cannot  find  symbol  compiler	6	None	add
95	[BUG]  [BUGGY]  return  leftChild.getLastChild();  [CE]  cannot  find  symbol  leftChild  [FE]    AssertionFailedError    [CONTEXT]    if  (!right.hasChildren()  ||  right.getFirstChild().getNext()  !=  right.getLastChild())  {      [BUGGY]  return  leftChild.getLastChild();  [BUGGY]    }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldAssign  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  DIVIDE_BY_0_ERROR  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  val  int  newType  Node  left  leftChild  n  newNode  right  	projects/Closure97/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.22360679774997896	335	335	1	replace	return  leftChild.getLastChild();	  return    n.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol  leftChild	7	None	replace
96	[BUG]  [BUGGY]  return  right.getfirstChild();  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]    if  (!right.hasChildren()  ||  right.getFirstChild().getNext()  !=  right.getLastChild())  {      [BUGGY]  return  right.getfirstChild();  [BUGGY]    }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldAssign  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  DIVIDE_BY_0_ERROR  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  val  int  newType  Node  left  leftChild  n  newNode  right  	projects/Closure97/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.22360679774997896	335	335	1	replace	return  right.getfirstChild();	  return    left.getLastChild();    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
97	[BUG]  [BUGGY]  return  left;  Node  left  =  left.getNext();  [CE]  variable  left  is  already  defined  in  method  tryFoldAssign(Node,Node,Node)  [FE]    AssertionFailedError    [CONTEXT]    if  (!right.hasChildren()  ||  right.getFirstChild().getNext()  !=  right.getLastChild())  {      [BUGGY]  return  left;  Node  left  =  left.getNext();  [BUGGY]    }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldAssign  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  DIVIDE_BY_0_ERROR  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  val  int  newType  Node  left  leftChild  n  newNode  right  	projects/Closure97/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.22360679774997896	335	335	1	replace	return    left;    Node  left  =  left.getNext();	  	non-compiled	[CE]  variable  left  is  already  defined  in  method  tryFoldAssign(Node,Node,Node)	2	None	add
98	[BUG]  [BUGGY]  return  left;  Node  left  =  left.getFirstChild();  [CE]  variable  left  is  already  defined  in  method  tryFoldAssign(Node,Node,Node)  [FE]      AssertionFailedError    [CONTEXT]    if  (!right.hasChildren()  ||  right.getFirstChild().getNext()  !=  right.getLastChild())  {      [BUGGY]  return  left;  Node  left  =  left.getFirstChild();  [BUGGY]    }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldAssign  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  DIVIDE_BY_0_ERROR  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  val  int  newType  Node  left  leftChild  n  newNode  right  	projects/Closure97/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.22360679774997896	335	335	1	replace	return    left;    Node  left  =  left.getFirstChild();	  	non-compiled	[CE]  variable  left  is  already  defined  in  method  tryFoldAssign(Node,Node,Node)	2	None	add
99	[BUG]  [BUGGY]  return  leftChild.getNext();  [CE]  cannot  find  symbol  leftChild  [FE]    AssertionFailedError    [CONTEXT]    if  (!right.hasChildren()  ||  right.getFirstChild().getNext()  !=  right.getLastChild())  {      [BUGGY]  return  leftChild.getNext();  [BUGGY]    }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldAssign  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  DIVIDE_BY_0_ERROR  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  val  int  newType  Node  left  leftChild  n  newNode  right  	projects/Closure97/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.22360679774997896	335	335	1	replace	return  leftChild.getNext();	  return    left;    	non-compiled	[CE]  cannot  find  symbol  leftChild	3	None	replace
100	[BUG]  [BUGGY]  return  left.getFirstChild();  Node  leftChild  =  left.getLastChild();  [CE]  unreachable  statement  [FE]    AssertionFailedError    [CONTEXT]    if  (!right.hasChildren()  ||  right.getFirstChild().getNext()  !=  right.getLastChild())  {      [BUGGY]  return  left.getFirstChild();  Node  leftChild  =  left.getLastChild();  [BUGGY]    }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldAssign  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  DIVIDE_BY_0_ERROR  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  val  int  newType  Node  left  leftChild  n  newNode  right  	projects/Closure97/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.22360679774997896	335	335	1	replace	return    left.getFirstChild();    Node  leftChild  =  left.getLastChild();	  	non-compiled	[CE]  unreachable  statement	4	None	add
101	[BUG]  [BUGGY]  return  left.getFirstChild();  Node  left  =  left.getFirstChild();  [CE]  variable  left  is  already  defined  in  method  tryFoldAssign(Node,Node,Node)  [FE]      AssertionFailedError    [CONTEXT]    if  (!right.hasChildren()  ||  right.getFirstChild().getNext()  !=  right.getLastChild())  {      [BUGGY]  return  left.getFirstChild();  Node  left  =  left.getFirstChild();  [BUGGY]    }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldAssign  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  DIVIDE_BY_0_ERROR  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  val  int  newType  Node  left  leftChild  n  newNode  right  	projects/Closure97/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.22360679774997896	335	335	1	replace	return    left.getFirstChild();    Node  left  =  left.getFirstChild();	  	non-compiled	[CE]  variable  left  is  already  defined  in  method  tryFoldAssign(Node,Node,Node)	4	None	add
102	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  left,  new  AssignmentFailure(right));  [CE]  cannot  find  symbol  compiler  [FE]    RuntimeException    [CONTEXT]    if  (!right.hasChildren()  ||  right.getFirstChild().getNext()  !=  right.getLastChild())  {      [BUGGY]  NodeTraversal.traverse(compiler,  left,  new  AssignmentFailure(right));  [BUGGY]    }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldAssign  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  DIVIDE_BY_0_ERROR  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  val  int  newType  Node  left  leftChild  n  newNode  right  	projects/Closure97/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.22360679774997896	335	335	1	replace	NodeTraversal.traverse(compiler,  left,  new  AssignmentFailure(right));	      	non-compiled	[CE]  cannot  find  symbol  compiler	11	None	replace
103	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  left,  new  AssertionFailedError(left),  n);  [CE]  cannot  find  symbol  compiler  [FE]      RuntimeException    [CONTEXT]    if  (!right.hasChildren()  ||  right.getFirstChild().getNext()  !=  right.getLastChild())  {      [BUGGY]  NodeTraversal.traverse(compiler,  left,  new  AssertionFailedError(left),  n);  [BUGGY]    }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldAssign  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  DIVIDE_BY_0_ERROR  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  val  int  newType  Node  left  leftChild  n  newNode  right  	projects/Closure97/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.22360679774997896	335	335	1	replace	NodeTraversal.traverse(compiler,  left,  new  AssertionFailedError(left),  n);	      	non-compiled	[CE]  cannot  find  symbol  compiler	11	None	replace
104	[BUG]  [BUGGY]  return  n.removeFirstChild();  NodeTraversal.traverse(compiler,  left,  new  AssertionFailedError());  [CE]  cannot  find  symbol  compiler  [FE]    Error    [CONTEXT]    if  (!right.hasChildren()  ||  right.getFirstChild().getNext()  !=  right.getLastChild())  {      [BUGGY]  return  n.removeFirstChild();  NodeTraversal.traverse(compiler,  left,  new  AssertionFailedError());  [BUGGY]    }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldAssign  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  DIVIDE_BY_0_ERROR  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  val  int  newType  Node  left  leftChild  n  newNode  right  	projects/Closure97/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.22360679774997896	335	335	1	replace	return    n.removeFirstChild();    NodeTraversal.traverse(compiler,  left,  new  AssertionFailedError());	  	non-compiled	[CE]  cannot  find  symbol  compiler	14	None	add
105	[BUG]  [BUGGY]  return  n.removeFirstChild();  Node  n  =  left.getFirstChild();  return  n.removeFirstChild();  [CE]  variable  n  is  already  defined  in  method  tryFoldAssign(Node,Node,Node)  [FE]      Error    [CONTEXT]    if  (!right.hasChildren()  ||  right.getFirstChild().getNext()  !=  right.getLastChild())  {      [BUGGY]  return  n.removeFirstChild();  Node  n  =  left.getFirstChild();  return  n.removeFirstChild();  [BUGGY]    }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldAssign  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  DIVIDE_BY_0_ERROR  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  val  int  newType  Node  left  leftChild  n  newNode  right  	projects/Closure97/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.22360679774997896	335	335	1	replace	return    n.removeFirstChild();    Node  n  =  left.getFirstChild();  return  n.removeFirstChild();	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  tryFoldAssign(Node,Node,Node)	14	None	add
106	[BUG]  [BUGGY]  return  n.removeFirstChild();  NodeTraversal.traverse(compiler,  left,  new  AssertionFailedError(right),  n);  [CE]  cannot  find  symbol  compiler  [FE]        Error    [CONTEXT]    if  (!right.hasChildren()  ||  right.getFirstChild().getNext()  !=  right.getLastChild())  {      [BUGGY]  return  n.removeFirstChild();  NodeTraversal.traverse(compiler,  left,  new  AssertionFailedError(right),  n);  [BUGGY]    }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldAssign  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  DIVIDE_BY_0_ERROR  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  val  int  newType  Node  left  leftChild  n  newNode  right  	projects/Closure97/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.22360679774997896	335	335	1	replace	return    n.removeFirstChild();    NodeTraversal.traverse(compiler,  left,  new  AssertionFailedError(right),  n);	  	non-compiled	[CE]  cannot  find  symbol  compiler	14	None	add
107	[BUG]  [BUGGY]  return  new  Node(newNode,  right.getFirstChild());  [CE]  cannot  find  symbol  newNode  [FE]          AssertionFailedError    [CONTEXT]    if  (!right.hasChildren()  ||  right.getFirstChild().getNext()  !=  right.getLastChild())  {      [BUGGY]  return  new  Node(newNode,  right.getFirstChild());  [BUGGY]    }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldAssign  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  DIVIDE_BY_0_ERROR  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  val  int  newType  Node  left  leftChild  n  newNode  right  	projects/Closure97/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.22360679774997896	335	335	1	replace	return  new  Node(newNode,  right.getFirstChild());	  return    new    Node(leftChild,    left.getFirstChild());    	non-compiled	[CE]  cannot  find  symbol  newNode	16	None	replace
108	[BUG]  [BUGGY]  return  this.leftChild;  [CE]  cannot  find  symbol  leftChild  [FE]        AssertionFailedError    [CONTEXT]    if  (!right.hasChildren()  ||  right.getFirstChild().getNext()  !=  right.getLastChild())  {      [BUGGY]  return  this.leftChild;  [BUGGY]    }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldAssign  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  DIVIDE_BY_0_ERROR  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  val  int  newType  Node  left  leftChild  n  newNode  right  	projects/Closure97/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.22360679774997896	335	335	1	replace	return  this.leftChild;	  return    leftChild;    	non-compiled	[CE]  cannot  find  symbol  leftChild	1	None	replace
109	[BUG]  [BUGGY]  return  n.getFirstChild();  if(!right.hasChildren()  ||  right.getFirstChild().getNext()!=  right.getLastChild())  {  return  n.getFirstChild();  }  [CE]  unreachable  statement  [FE]    AssertionFailedError    [CONTEXT]    if  (!right.hasChildren()  ||  right.getFirstChild().getNext()  !=  right.getLastChild())  {      [BUGGY]  return  n.getFirstChild();  if(!right.hasChildren()  ||  right.getFirstChild().getNext()!=  right.getLastChild())  {  return  n.getFirstChild();  }  [BUGGY]    }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldAssign  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  DIVIDE_BY_0_ERROR  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  val  int  newType  Node  left  leftChild  n  newNode  right  	projects/Closure97/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.22360679774997896	335	335	1	replace	return    n.getFirstChild();    if(!right.hasChildren()  ||  right.getFirstChild().getNext()!=  right.getLastChild())  {  return  n.getFirstChild();  }	  	non-compiled	[CE]  unreachable  statement	6	None	add
110	[BUG]  [BUGGY]  return  n.getFirstChild();  if(!right.hasChildren()  ||  right.getFirstChild().getNext()  ==  right.getLastChild())  {  return  n.getFirstChild();  }  [CE]  unreachable  statement  [FE]      AssertionFailedError    [CONTEXT]    if  (!right.hasChildren()  ||  right.getFirstChild().getNext()  !=  right.getLastChild())  {      [BUGGY]  return  n.getFirstChild();  if(!right.hasChildren()  ||  right.getFirstChild().getNext()  ==  right.getLastChild())  {  return  n.getFirstChild();  }  [BUGGY]    }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldAssign  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  DIVIDE_BY_0_ERROR  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  val  int  newType  Node  left  leftChild  n  newNode  right  	projects/Closure97/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.22360679774997896	335	335	1	replace	return    n.getFirstChild();    if(!right.hasChildren()  ||  right.getFirstChild().getNext()  ==  right.getLastChild())  {  return  n.getFirstChild();  }	  	non-compiled	[CE]  unreachable  statement	6	None	add
111	[BUG]  [BUGGY]  return  n.getFirstChild();  if(!right.hasChildren()  ||  right.getFirstChild().getNext()!=  right.getLastChild())  {  return  left.getFirstChild();  }  [CE]  unreachable  statement  [FE]        AssertionFailedError    [CONTEXT]    if  (!right.hasChildren()  ||  right.getFirstChild().getNext()  !=  right.getLastChild())  {      [BUGGY]  return  n.getFirstChild();  if(!right.hasChildren()  ||  right.getFirstChild().getNext()!=  right.getLastChild())  {  return  left.getFirstChild();  }  [BUGGY]    }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldAssign  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  DIVIDE_BY_0_ERROR  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  val  int  newType  Node  left  leftChild  n  newNode  right  	projects/Closure97/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.22360679774997896	335	335	1	replace	return    n.getFirstChild();    if(!right.hasChildren()  ||  right.getFirstChild().getNext()!=  right.getLastChild())  {  return  left.getFirstChild();  }	  	non-compiled	[CE]  unreachable  statement	6	None	add
112	[BUG]  [BUGGY]  return  n.getFirstChild();  if(!right.hasChildren()  ||  right.getFirstChild().getNext()  ==  right.getLastChild())  {  return  left.getFirstChild();  }  [CE]  unreachable  statement  [FE]          AssertionFailedError    [CONTEXT]    if  (!right.hasChildren()  ||  right.getFirstChild().getNext()  !=  right.getLastChild())  {      [BUGGY]  return  n.getFirstChild();  if(!right.hasChildren()  ||  right.getFirstChild().getNext()  ==  right.getLastChild())  {  return  left.getFirstChild();  }  [BUGGY]    }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldAssign  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  DIVIDE_BY_0_ERROR  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  val  int  newType  Node  left  leftChild  n  newNode  right  	projects/Closure97/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.22360679774997896	335	335	1	replace	return    n.getFirstChild();    if(!right.hasChildren()  ||  right.getFirstChild().getNext()  ==  right.getLastChild())  {  return  left.getFirstChild();  }	  	non-compiled	[CE]  unreachable  statement	6	None	add
113	[BUG]  [BUGGY]  return  n.getType()  ==  Token.EXPR_RESULT  ||  left.getFirstChild().getNext()!=  right.getLastChild();  [CE]  incompatible  types  [FE]                AssertionFailedError    [CONTEXT]    if  (!right.hasChildren()  ||  right.getFirstChild().getNext()  !=  right.getLastChild())  {      [BUGGY]  return  n.getType()  ==  Token.EXPR_RESULT  ||  left.getFirstChild().getNext()!=  right.getLastChild();  [BUGGY]    }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldAssign  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  DIVIDE_BY_0_ERROR  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  val  int  newType  Node  left  leftChild  n  newNode  right  	projects/Closure97/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.22360679774997896	335	335	1	replace	return  n.getType()  ==  Token.EXPR_RESULT  ||  left.getFirstChild().getNext()!=  right.getLastChild();	  return    n.getType()    ==    Token.EXPR_RESULT;    	non-compiled	[CE]  incompatible  types	8	None	replace
114	[BUG]  [BUGGY]  return  n.getType()  ==  Token.EXPR_RESULT  ||  right.getFirstChild().getNext()!=  right.getLastChild();  [CE]  incompatible  types  [FE]                  AssertionFailedError    [CONTEXT]    if  (!right.hasChildren()  ||  right.getFirstChild().getNext()  !=  right.getLastChild())  {      [BUGGY]  return  n.getType()  ==  Token.EXPR_RESULT  ||  right.getFirstChild().getNext()!=  right.getLastChild();  [BUGGY]    }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldAssign  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  DIVIDE_BY_0_ERROR  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  val  int  newType  Node  left  leftChild  n  newNode  right  	projects/Closure97/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.22360679774997896	335	335	1	replace	return  n.getType()  ==  Token.EXPR_RESULT  ||  right.getFirstChild().getNext()!=  right.getLastChild();	  return    n.getType()    ==    Token.EXPR_RESULT;    	non-compiled	[CE]  incompatible  types	8	None	replace
115	[BUG]  [BUGGY]  return  n.getType()  ==  Token.EXPR_RESULT  &&  left.getFirstChild().getString().equals(right.getLastChild());  [CE]  incompatible  types  [FE]                    AssertionFailedError    [CONTEXT]    if  (!right.hasChildren()  ||  right.getFirstChild().getNext()  !=  right.getLastChild())  {      [BUGGY]  return  n.getType()  ==  Token.EXPR_RESULT  &&  left.getFirstChild().getString().equals(right.getLastChild());  [BUGGY]    }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldAssign  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  DIVIDE_BY_0_ERROR  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  val  int  newType  Node  left  leftChild  n  newNode  right  	projects/Closure97/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.22360679774997896	335	335	1	replace	return  n.getType()  ==  Token.EXPR_RESULT  &&  left.getFirstChild().getString().equals(right.getLastChild());	  return    n.getType()    ==    Token.EXPR_RESULT;    	non-compiled	[CE]  incompatible  types	8	None	replace
116	[BUG]  [BUGGY]  return  n.getType()  ==  Token.EXPR_RESULT  &&  left.getFirstChild().getNext()!=  right.getLastChild();  [CE]  incompatible  types  [FE]                      AssertionFailedError    [CONTEXT]    if  (!right.hasChildren()  ||  right.getFirstChild().getNext()  !=  right.getLastChild())  {      [BUGGY]  return  n.getType()  ==  Token.EXPR_RESULT  &&  left.getFirstChild().getNext()!=  right.getLastChild();  [BUGGY]    }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldAssign  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  DIVIDE_BY_0_ERROR  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  val  int  newType  Node  left  leftChild  n  newNode  right  	projects/Closure97/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.22360679774997896	335	335	1	replace	return  n.getType()  ==  Token.EXPR_RESULT  &&  left.getFirstChild().getNext()!=  right.getLastChild();	  return    n.getType()    ==    Token.EXPR_RESULT;    	non-compiled	[CE]  incompatible  types	8	None	replace
117	[BUG]  [BUGGY]  return  left.getFirstChild();  return  left.getFirstChild();  [CE]  unreachable  statement  [FE]    AssertionFailedError    [CONTEXT]    if  (!right.hasChildren()  ||  right.getFirstChild().getNext()  !=  right.getLastChild())  {      [BUGGY]  return  left.getFirstChild();  return  left.getFirstChild();  [BUGGY]    }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldAssign  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  DIVIDE_BY_0_ERROR  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  val  int  newType  Node  left  leftChild  n  newNode  right  	projects/Closure97/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.22360679774997896	335	335	1	replace	return    left.getFirstChild();    return  left.getFirstChild();	  	non-compiled	[CE]  unreachable  statement	4	None	add
118	[BUG]  [BUGGY]  return  newNode.getFirstChild();  [CE]  cannot  find  symbol  newNode  [FE]                  AssertionFailedError    [CONTEXT]    if  (!right.hasChildren()  ||  right.getFirstChild().getNext()  !=  right.getLastChild())  {      [BUGGY]  return  newNode.getFirstChild();  [BUGGY]    }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldAssign  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  DIVIDE_BY_0_ERROR  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  val  int  newType  Node  left  leftChild  n  newNode  right  	projects/Closure97/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.22360679774997896	335	335	1	replace	return  newNode.getFirstChild();	  return    leftChild.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol  newNode	9	None	replace
119	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    AssertionFailedError    [CONTEXT]    if  (!right.hasChildren()  ||  right.getFirstChild().getNext()  !=  right.getLastChild())  {      [BUGGY]  return  left.getFirstChild().getNext();  [BUGGY]    }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldAssign  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  DIVIDE_BY_0_ERROR  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  val  int  newType  Node  left  leftChild  n  newNode  right  	projects/Closure97/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.22360679774997896	335	335	1	add	return  left.getFirstChild().getNext();	  return    left.getFirstChild();    	compilable	  [FE]  RuntimeException  	5	20	replace
120	[BUG]  [BUGGY]  return  left.getFirstChild().getNext();  [FE]  RuntimeException  [FE]    AssertionFailedError    [CONTEXT]    if  (!right.hasChildren()  ||  right.getFirstChild().getNext()  !=  right.getLastChild())  {      [BUGGY]  return  left.getFirstChild().getNext();  [BUGGY]    }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldAssign  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  DIVIDE_BY_0_ERROR  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  val  int  newType  Node  left  leftChild  n  newNode  right  	projects/Closure97/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.22360679774997896	335	335	1	replace	return  left.getFirstChild().getNext();	  return    left.getFirstChild();    	compilable	  [FE]  RuntimeException  	5	20	replace
121	[BUG]  [BUGGY]      NodeTraversal.traverse(compiler,  right,  new  AssertionFailedError(left),  n);  [CE]  cannot  find  symbol  compiler  [FE]    RuntimeException    [CONTEXT]    if  (!right.hasChildren()  ||  right.getFirstChild().getNext()  !=  right.getLastChild())  {      [BUGGY]      NodeTraversal.traverse(compiler,  right,  new  AssertionFailedError(left),  n);  [BUGGY]    }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldAssign  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  DIVIDE_BY_0_ERROR  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  val  int  newType  Node  left  leftChild  n  newNode  right  	projects/Closure97/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.22360679774997896	335	335	1	replace	        NodeTraversal.traverse(compiler,  right,  new  AssertionFailedError(left),  n);	  	non-compiled	[CE]  cannot  find  symbol  compiler	10	None	add
122	[BUG]  [BUGGY]  return  left.getLastChild();  return  left.getFirstChild();  [CE]  unreachable  statement  [FE]    AssertionFailedError    [CONTEXT]    if  (!right.hasChildren()  ||  right.getFirstChild().getNext()  !=  right.getLastChild())  {      [BUGGY]  return  left.getLastChild();  return  left.getFirstChild();  [BUGGY]    }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldAssign  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  DIVIDE_BY_0_ERROR  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  val  int  newType  Node  left  leftChild  n  newNode  right  	projects/Closure97/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.22360679774997896	335	335	1	replace	return    left.getLastChild();    return  left.getFirstChild();	  	non-compiled	[CE]  unreachable  statement	12	None	add
123	[BUG]  [BUGGY]  return  left.getLastChild();  Node  return  left.getFirstChild();  [CE]  not  a  statement  [FE]      AssertionFailedError    [CONTEXT]    if  (!right.hasChildren()  ||  right.getFirstChild().getNext()  !=  right.getLastChild())  {      [BUGGY]  return  left.getLastChild();  Node  return  left.getFirstChild();  [BUGGY]    }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldAssign  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  DIVIDE_BY_0_ERROR  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  val  int  newType  Node  left  leftChild  n  newNode  right  	projects/Closure97/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.22360679774997896	335	335	1	replace	return    left.getLastChild();    Node  return  left.getFirstChild();	  	non-compiled	[CE]  not  a  statement	12	None	add
124	[BUG]  [BUGGY]  return  newType  <  Node>(leftChild,  right.getFirstChild().getNext(),  right.getLastChild());  [CE]  ')'  expected  [FE]    AssertionFailedError    [CONTEXT]    if  (!right.hasChildren()  ||  right.getFirstChild().getNext()  !=  right.getLastChild())  {      [BUGGY]  return  newType  <  Node>(leftChild,  right.getFirstChild().getNext(),  right.getLastChild());  [BUGGY]    }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldAssign  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  DIVIDE_BY_0_ERROR  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  val  int  newType  Node  left  leftChild  n  newNode  right  	projects/Closure97/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.22360679774997896	335	335	1	replace	return  newType  <  Node>(leftChild,  right.getFirstChild().getNext(),  right.getLastChild());	  return    left;    	non-compiled	[CE]  ')'  expected	3	None	replace
125	[BUG]  [BUGGY]  return  newType  <  Node>(leftChild.getFirstChild(),  right.getLastChild());  [CE]  ')'  expected  [FE]      AssertionFailedError    [CONTEXT]    if  (!right.hasChildren()  ||  right.getFirstChild().getNext()  !=  right.getLastChild())  {      [BUGGY]  return  newType  <  Node>(leftChild.getFirstChild(),  right.getLastChild());  [BUGGY]    }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldAssign  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  DIVIDE_BY_0_ERROR  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  val  int  newType  Node  left  leftChild  n  newNode  right  	projects/Closure97/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.22360679774997896	335	335	1	replace	return  newType  <  Node>(leftChild.getFirstChild(),  right.getLastChild());	  return    left;    	non-compiled	[CE]  ')'  expected	3	None	replace
126	[BUG]  [BUGGY]  return  newType  <  Node>(right.getFirstChild(),  right.getLastChild());  [CE]  ')'  expected  [FE]        AssertionFailedError    [CONTEXT]    if  (!right.hasChildren()  ||  right.getFirstChild().getNext()  !=  right.getLastChild())  {      [BUGGY]  return  newType  <  Node>(right.getFirstChild(),  right.getLastChild());  [BUGGY]    }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldAssign  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  DIVIDE_BY_0_ERROR  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  val  int  newType  Node  left  leftChild  n  newNode  right  	projects/Closure97/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.22360679774997896	335	335	1	replace	return  newType  <  Node>(right.getFirstChild(),  right.getLastChild());	  return    left;    	non-compiled	[CE]  ')'  expected	3	None	replace
127	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    if  (!right.hasChildren()  ||  right.getFirstChild().getNext()  !=  right.getLastChild())  {      [BUGGY]  return  n.getFirstChild().getNext();  [BUGGY]    }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldAssign  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  DIVIDE_BY_0_ERROR  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  val  int  newType  Node  left  leftChild  n  newNode  right  	projects/Closure97/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.22360679774997896	335	335	1	add	return  n.getFirstChild().getNext();	  return    n.getFirstChild();    	compilable	  [FE]  AssertionFailedError  	7	1	replace
128	[BUG]  [BUGGY]  return  n.getFirstChild().getNext();  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    if  (!right.hasChildren()  ||  right.getFirstChild().getNext()  !=  right.getLastChild())  {      [BUGGY]  return  n.getFirstChild().getNext();  [BUGGY]    }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldAssign  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  DIVIDE_BY_0_ERROR  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  val  int  newType  Node  left  leftChild  n  newNode  right  	projects/Closure97/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.22360679774997896	335	335	1	replace	return  n.getFirstChild().getNext();	  return    n.getFirstChild();    	compilable	  [FE]  AssertionFailedError  	7	1	replace
129	[BUG]  [BUGGY]  return  left;  Node  left  =  right.getFirstChild();  if(left!=  null  ||  left.getFirstChild().getNext()!=  right.getLastChild())  {  return  left;  }  [CE]  variable  left  is  already  defined  in  method  tryFoldAssign(Node,Node,Node)  [FE]    AssertionFailedError    [CONTEXT]    if  (!right.hasChildren()  ||  right.getFirstChild().getNext()  !=  right.getLastChild())  {      [BUGGY]  return  left;  Node  left  =  right.getFirstChild();  if(left!=  null  ||  left.getFirstChild().getNext()!=  right.getLastChild())  {  return  left;  }  [BUGGY]    }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldAssign  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  DIVIDE_BY_0_ERROR  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  val  int  newType  Node  left  leftChild  n  newNode  right  	projects/Closure97/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.22360679774997896	335	335	1	replace	return    left;    Node  left  =  right.getFirstChild();  if(left!=  null  ||  left.getFirstChild().getNext()!=  right.getLastChild())  {  return  left;  }	  	non-compiled	[CE]  variable  left  is  already  defined  in  method  tryFoldAssign(Node,Node,Node)	2	None	add
130	[BUG]  [BUGGY]  return  left;  Node  leftChild  =  right.getFirstChild();  if(leftChild.getType()  ==  Token.RETURN)  {  return  left;  }  [CE]  unreachable  statement  [FE]      AssertionFailedError    [CONTEXT]    if  (!right.hasChildren()  ||  right.getFirstChild().getNext()  !=  right.getLastChild())  {      [BUGGY]  return  left;  Node  leftChild  =  right.getFirstChild();  if(leftChild.getType()  ==  Token.RETURN)  {  return  left;  }  [BUGGY]    }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldAssign  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  DIVIDE_BY_0_ERROR  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  val  int  newType  Node  left  leftChild  n  newNode  right  	projects/Closure97/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.22360679774997896	335	335	1	replace	return    left;    Node  leftChild  =  right.getFirstChild();  if(leftChild.getType()  ==  Token.RETURN)  {  return  left;  }	  	non-compiled	[CE]  unreachable  statement	2	None	add
131	[BUG]  [BUGGY]  return  left;  Node  leftChild  =  right.getFirstChild();  if(leftChild.getType()  ==  Token.VAR)  {  return  left;  }  [CE]  unreachable  statement  [FE]        AssertionFailedError    [CONTEXT]    if  (!right.hasChildren()  ||  right.getFirstChild().getNext()  !=  right.getLastChild())  {      [BUGGY]  return  left;  Node  leftChild  =  right.getFirstChild();  if(leftChild.getType()  ==  Token.VAR)  {  return  left;  }  [BUGGY]    }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldAssign  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  DIVIDE_BY_0_ERROR  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  val  int  newType  Node  left  leftChild  n  newNode  right  	projects/Closure97/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.22360679774997896	335	335	1	replace	return    left;    Node  leftChild  =  right.getFirstChild();  if(leftChild.getType()  ==  Token.VAR)  {  return  left;  }	  	non-compiled	[CE]  unreachable  statement	2	None	add
132	[BUG]  [BUGGY]  return  left;  Node  leftChild  =  right.getFirstChild();  if(leftChild.getType()  ==  Token.VAR  ||  leftChild.getType()  ==  Token.BLOCK)  {  return  left;  }  [CE]  unreachable  statement  [FE]          AssertionFailedError    [CONTEXT]    if  (!right.hasChildren()  ||  right.getFirstChild().getNext()  !=  right.getLastChild())  {      [BUGGY]  return  left;  Node  leftChild  =  right.getFirstChild();  if(leftChild.getType()  ==  Token.VAR  ||  leftChild.getType()  ==  Token.BLOCK)  {  return  left;  }  [BUGGY]    }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldAssign  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  DIVIDE_BY_0_ERROR  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  val  int  newType  Node  left  leftChild  n  newNode  right  	projects/Closure97/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.22360679774997896	335	335	1	replace	return    left;    Node  leftChild  =  right.getFirstChild();  if(leftChild.getType()  ==  Token.VAR  ||  leftChild.getType()  ==  Token.BLOCK)  {  return  left;  }	  	non-compiled	[CE]  unreachable  statement	2	None	add
133	[BUG]  [BUGGY]  return  left;  Node  leftChild  =  right.getFirstChild();  if(leftChild.getType()  ==  Token.VAR  ||  leftChild.getType()  ==  Token.FUNCTION)  {  return  left;  }  [CE]  unreachable  statement  [FE]            AssertionFailedError    [CONTEXT]    if  (!right.hasChildren()  ||  right.getFirstChild().getNext()  !=  right.getLastChild())  {      [BUGGY]  return  left;  Node  leftChild  =  right.getFirstChild();  if(leftChild.getType()  ==  Token.VAR  ||  leftChild.getType()  ==  Token.FUNCTION)  {  return  left;  }  [BUGGY]    }  [CLASS]  PeepholeFoldConstants  [METHOD]  tryFoldAssign  [RETURN_TYPE]  Node  Node  n  Node  left  Node  right  [VARIABLES]  boolean  DiagnosticType  BITWISE_OPERAND_OUT_OF_RANGE  DIVIDE_BY_0_ERROR  FRACTIONAL_BITWISE_OPERAND  INDEX_OUT_OF_BOUNDS_ERROR  INVALID_GETELEM_INDEX_ERROR  NEGATING_A_NON_NUMBER_ERROR  SHIFT_AMOUNT_OUT_OF_BOUNDS  double  MAX_FOLD_NUMBER  negNum  val  int  newType  Node  left  leftChild  n  newNode  right  	projects/Closure97/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	0.22360679774997896	335	335	1	replace	return    left;    Node  leftChild  =  right.getFirstChild();  if(leftChild.getType()  ==  Token.VAR  ||  leftChild.getType()  ==  Token.FUNCTION)  {  return  left;  }	  	non-compiled	[CE]  unreachable  statement	2	None	add
