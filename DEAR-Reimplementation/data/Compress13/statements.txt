if (fields[i] instanceof UnparseableExtraFieldData) {
extraFields.put(fields[i].getHeaderId(), fields[i]);
super(name);
private int method = -1;
private long size = SIZE_UNKNOWN;
private int internalAttributes = 0;
private int platform = PLATFORM_FAT;
private long externalAttributes = 0;
private LinkedHashMap<ZipShort, ZipExtraField> extraFields = null;
private UnparseableExtraFieldData unparseableExtra = null;
private String name = null;
private byte[] rawName = null;
private GeneralPurposeBit gpb = new GeneralPurposeBit();
setName(name);
}
this("");
}
if (method < 0) {
this.method = method;
}
this.platform = platform;
}
extraFields = new LinkedHashMap<ZipShort, ZipExtraField>();
for (int i = 0; i < fields.length; i++) {
setExtra();
}
if (extraFields == null) {
List<ZipExtraField> result =
if (includeUnparseable && unparseableExtra != null) {
return result.toArray(new ZipExtraField[0]);
if (extraFields != null) {
return extraFields.get(type);
ZipExtraField[] local =
mergeExtraFields(local, true);
}
}
super.setExtra(ExtraFieldUtils.mergeLocalFileDataData(getExtraFields(true)));
}
return name == null ? super.getName() : name;
this.name = name;
}
if (size < 0) {
this.size = size;
}
setName(name);
this.rawName = rawName;
}
gpb = b;
}
if (extraFields == null) {
