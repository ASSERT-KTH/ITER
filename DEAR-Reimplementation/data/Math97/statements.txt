throw new IllegalArgumentException
setResult(x1, i);
return result;
ret = solve(min, yMin, max, yMax, min, yMin);
return ret;
double delta = x1 - x0;
double oldDelta = delta;
int i = 0;
while (i < maximalIterationCount) {
if (Math.abs(y2) < Math.abs(y1)) {
x0 = x1;
x1 = x2;
x2 = x0;
y0 = y1;
y1 = y2;
y2 = y0;
if (Math.abs(y1) <= functionValueAccuracy) {
super(f, 100, 1E-6);
}
clearResult();
verifyInterval(min, max);
double ret = Double.NaN;
double yMin = f.value(min);
double yMax = f.value(max);
double sign = yMin * yMax;
if (sign >= 0) {
if (((initial - min) * (max -initial)) < 0) {
throw new IllegalArgumentException("Initial guess is not in search" +
double yInitial = f.value(initial);
if (Math.abs(yInitial) <= functionValueAccuracy) {
setResult(initial, 0);
return result;
double yMin = f.value(min);
if (Math.abs(yMin) <= functionValueAccuracy) {
setResult(yMin, 0);
return result;
if (yInitial * yMin < 0) {
return solve(min, yMin, initial, yInitial, min, yMin);
double yMax = f.value(max);
if (Math.abs(yMax) <= functionValueAccuracy) {
setResult(yMax, 0);
return result;
if (yInitial * yMax < 0) {
return solve(initial, yInitial, max, yMax, initial, yInitial);
return solve(min, yMin, max, yMax, initial, yInitial);
double dx = (x2 - x1);
double tolerance =
if (Math.abs(dx) <= tolerance) {
setResult(x1, i);
return result;
