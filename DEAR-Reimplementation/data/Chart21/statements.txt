this.maximumRangeValue = maxval;
this.maximumRangeValueRow = r;
this.maximumRangeValueColumn = c;
updateBounds();
else if (minval < this.minimumRangeValue) {
this.minimumRangeValue = Double.NaN;
this.maximumRangeValue = Double.NaN;
}
else if (maxval > this.maximumRangeValue) {
return this.rangeBounds;
this.data.addObject(item, rowKey, columnKey);
int r = this.data.getRowIndex(rowKey);
int c = this.data.getColumnIndex(columnKey);
if ((this.maximumRangeValueRow == r && this.maximumRangeValueColumn
double minval = Double.NaN;
if (item.getMinOutlier() != null) {
minval = item.getMinOutlier().doubleValue();
double maxval = Double.NaN;
if (item.getMaxOutlier() != null) {
maxval = item.getMaxOutlier().doubleValue();
if (Double.isNaN(this.maximumRangeValue)) {
this.maximumRangeValue = maxval;
this.maximumRangeValueRow = r;
this.maximumRangeValueColumn = c;
if (Double.isNaN(this.minimumRangeValue)) {
this.minimumRangeValue = minval;
this.minimumRangeValueRow = r;
this.minimumRangeValueColumn = c;
this.rangeBounds = new Range(this.minimumRangeValue,
fireDatasetChanged();
}
public DefaultBoxAndWhiskerCategoryDataset() {
this.data = new KeyedObjects2D();
this.minimumRangeValue = Double.NaN;
this.minimumRangeValueRow = -1;
this.minimumRangeValueColumn = -1;
this.maximumRangeValue = Double.NaN;
this.maximumRangeValueRow = -1;
this.maximumRangeValueColumn = -1;
this.rangeBounds = new Range(0.0, 0.0);
}
BoxAndWhiskerItem item = BoxAndWhiskerCalculator
add(item, rowKey, columnKey);
}
this.minimumRangeValue = minval;
this.minimumRangeValueRow = r;
this.minimumRangeValueColumn = c;
return (BoxAndWhiskerItem) this.data.getObject(row, column);
return getMedianValue(row, column);
return getMedianValue(rowKey, columnKey);
