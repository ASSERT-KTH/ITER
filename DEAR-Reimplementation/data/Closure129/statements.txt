this(compiler, false);
}
PrepareAst(AbstractCompiler compiler, boolean checkOnly) {
this.compiler = compiler;
this.checkOnly = checkOnly;
}
if (checkOnly) {
if (externs != null) {
if (root != null) {
NodeTraversal.traverse(
}
if (checkOnly) {
Preconditions.checkState(false, "normalizeNodeType constraints violated");
}
normalizeNodeTypes(root);
NodeTraversal.traverse(
normalizeBlocks(n);
for (Node child = n.getFirstChild();
child != null; child = child.getNext()) {
Preconditions.checkState(child.getParent() == n);
normalizeNodeTypes(child);
}
if (NodeUtil.isControlStructure(n)
for (Node c = n.getFirstChild(); c != null; c = c.getNext()) {
if (NodeUtil.isControlStructureCodeBlock(n,c) &&
Node newBlock = IR.block().srcref(n);
n.replaceChild(c, newBlock);
if (!c.isEmpty()) {
newBlock.addChildrenToFront(c);
newBlock.setWasEmptyNode(true);
c = newBlock;
reportChange();
}
