org.apache.commons.math3.distribution.FDistribution:275-return true;[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:184-return false;	1
org.apache.commons.math3.distribution.FDistribution:275-return true;[CLS]org.apache.commons.math3.distribution.FDistribution:129-final double nhalf = numeratorDegreesOfFreedom / 2;	0
org.apache.commons.math3.distribution.FDistribution:275-return true;[CLS]org.apache.commons.math3.distribution.FDistribution:130-final double mhalf = denominatorDegreesOfFreedom / 2;	0
org.apache.commons.math3.distribution.FDistribution:275-return true;[CLS]org.apache.commons.math3.distribution.FDistribution:131-final double logx = FastMath.log(x);	0
org.apache.commons.math3.distribution.FDistribution:275-return true;[CLS]org.apache.commons.math3.distribution.FDistribution:132-final double logn = FastMath.log(numeratorDegreesOfFreedom);	0
org.apache.commons.math3.distribution.FDistribution:275-return true;[CLS]org.apache.commons.math3.distribution.FDistribution:133-final double logm = FastMath.log(denominatorDegreesOfFreedom);	0
org.apache.commons.math3.distribution.FDistribution:275-return true;[CLS]org.apache.commons.math3.distribution.FDistribution:134-final double lognxm = FastMath.log(numeratorDegreesOfFreedom * x +	0
org.apache.commons.math3.distribution.FDistribution:275-return true;[CLS]org.apache.commons.math3.distribution.FDistribution:136-return FastMath.exp(nhalf * logn + nhalf * logx - logx +	0
org.apache.commons.math3.distribution.FDistribution:275-return true;[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:109-if (x < lower || x > upper) {	0
org.apache.commons.math3.distribution.FDistribution:275-return true;[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:112-return 1 / (upper - lower);	0
org.apache.commons.math3.distribution.FDistribution:275-return true;[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:174-return upper;	0
org.apache.commons.math3.distribution.FDistribution:275-return true;[CLS]org.apache.commons.math3.distribution.FDistribution:258-return 0;	0
org.apache.commons.math3.distribution.FDistribution:275-return true;[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:64-this(lower, upper, DEFAULT_INVERSE_ABSOLUTE_ACCURACY);	0
org.apache.commons.math3.distribution.FDistribution:275-return true;[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:65-}	0
org.apache.commons.math3.distribution.FDistribution:275-return true;[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:77-this(newWell19937c(), lower, upper, inverseCumAccuracy);	0
org.apache.commons.math3.distribution.FDistribution:275-return true;[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:78-}	0
org.apache.commons.math3.distribution.FDistribution:275-return true;[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:95-super(rng);	0
org.apache.commons.math3.distribution.FDistribution:275-return true;[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:96-if (lower >= upper) {	0
org.apache.commons.math3.distribution.FDistribution:275-return true;[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:102-this.lower = lower;	0
org.apache.commons.math3.distribution.FDistribution:275-return true;[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:103-this.upper = upper;	0
org.apache.commons.math3.distribution.FDistribution:275-return true;[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:104-solverAbsoluteAccuracy = inverseCumAccuracy;	0
org.apache.commons.math3.distribution.FDistribution:275-return true;[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:105-}	0
org.apache.commons.math3.distribution.FDistribution:275-return true;[CLS]org.apache.commons.math3.distribution.FDistribution:65-this(numeratorDegreesOfFreedom, denominatorDegreesOfFreedom,	0
org.apache.commons.math3.distribution.FDistribution:275-return true;[CLS]org.apache.commons.math3.distribution.FDistribution:67-}	0
org.apache.commons.math3.distribution.FDistribution:275-return true;[CLS]org.apache.commons.math3.distribution.FDistribution:86-this(new Well19937c(), numeratorDegreesOfFreedom,	0
org.apache.commons.math3.distribution.FDistribution:275-return true;[CLS]org.apache.commons.math3.distribution.FDistribution:88-}	0
org.apache.commons.math3.distribution.FDistribution:275-return true;[CLS]org.apache.commons.math3.distribution.FDistribution:108-super(rng);	0
org.apache.commons.math3.distribution.FDistribution:275-return true;[CLS]org.apache.commons.math3.distribution.FDistribution:49-private double numericalVariance = Double.NaN;	0
org.apache.commons.math3.distribution.FDistribution:275-return true;[CLS]org.apache.commons.math3.distribution.FDistribution:51-private boolean numericalVarianceIsCalculated = false;	0
org.apache.commons.math3.distribution.FDistribution:275-return true;[CLS]org.apache.commons.math3.distribution.FDistribution:110-if (numeratorDegreesOfFreedom <= 0) {	0
org.apache.commons.math3.distribution.FDistribution:275-return true;[CLS]org.apache.commons.math3.distribution.FDistribution:114-if (denominatorDegreesOfFreedom <= 0) {	0
org.apache.commons.math3.distribution.FDistribution:275-return true;[CLS]org.apache.commons.math3.distribution.FDistribution:118-this.numeratorDegreesOfFreedom = numeratorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.FDistribution:275-return true;[CLS]org.apache.commons.math3.distribution.FDistribution:119-this.denominatorDegreesOfFreedom = denominatorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.FDistribution:275-return true;[CLS]org.apache.commons.math3.distribution.FDistribution:120-solverAbsoluteAccuracy = inverseCumAccuracy;	0
org.apache.commons.math3.distribution.FDistribution:275-return true;[CLS]org.apache.commons.math3.distribution.FDistribution:121-}	0
org.apache.commons.math3.distribution.FDistribution:275-return true;[CLS]org.apache.commons.math3.distribution.FDistribution:111-throw new NotStrictlyPositiveException(LocalizedFormats.DEGREES_OF_FREEDOM,	0
org.apache.commons.math3.distribution.FDistribution:275-return true;[CLS]org.apache.commons.math3.distribution.FDistribution:115-throw new NotStrictlyPositiveException(LocalizedFormats.DEGREES_OF_FREEDOM,	0
org.apache.commons.math3.distribution.FDistribution:275-return true;[CLS]org.apache.commons.math3.distribution.FDistribution:154-if (x <= 0) {	0
org.apache.commons.math3.distribution.FDistribution:275-return true;[CLS]org.apache.commons.math3.distribution.FDistribution:155-ret = 0;	0
org.apache.commons.math3.distribution.FDistribution:275-return true;[CLS]org.apache.commons.math3.distribution.FDistribution:157-double n = numeratorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.FDistribution:275-return true;[CLS]org.apache.commons.math3.distribution.FDistribution:158-double m = denominatorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.FDistribution:275-return true;[CLS]org.apache.commons.math3.distribution.FDistribution:160-ret = Beta.regularizedBeta((n * x) / (m + n * x),	0
org.apache.commons.math3.distribution.FDistribution:275-return true;[CLS]org.apache.commons.math3.distribution.FDistribution:164-return ret;	0
org.apache.commons.math3.distribution.FDistribution:275-return true;[CLS]org.apache.commons.math3.distribution.FDistribution:173-return numeratorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.FDistribution:275-return true;[CLS]org.apache.commons.math3.distribution.FDistribution:182-return denominatorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.FDistribution:275-return true;[CLS]org.apache.commons.math3.distribution.FDistribution:188-return solverAbsoluteAccuracy;	0
org.apache.commons.math3.distribution.FDistribution:275-return true;[CLS]org.apache.commons.math3.distribution.FDistribution:201-final double denominatorDF = getDenominatorDegreesOfFreedom();	0
org.apache.commons.math3.distribution.FDistribution:275-return true;[CLS]org.apache.commons.math3.distribution.FDistribution:203-if (denominatorDF > 2) {	0
org.apache.commons.math3.distribution.FDistribution:275-return true;[CLS]org.apache.commons.math3.distribution.FDistribution:204-return denominatorDF / (denominatorDF - 2);	0
org.apache.commons.math3.distribution.UniformRealDistribution:184-return false;[CLS]org.apache.commons.math3.distribution.FDistribution:129-final double nhalf = numeratorDegreesOfFreedom / 2;	0
org.apache.commons.math3.distribution.UniformRealDistribution:184-return false;[CLS]org.apache.commons.math3.distribution.FDistribution:130-final double mhalf = denominatorDegreesOfFreedom / 2;	0
org.apache.commons.math3.distribution.UniformRealDistribution:184-return false;[CLS]org.apache.commons.math3.distribution.FDistribution:131-final double logx = FastMath.log(x);	0
org.apache.commons.math3.distribution.UniformRealDistribution:184-return false;[CLS]org.apache.commons.math3.distribution.FDistribution:132-final double logn = FastMath.log(numeratorDegreesOfFreedom);	0
org.apache.commons.math3.distribution.UniformRealDistribution:184-return false;[CLS]org.apache.commons.math3.distribution.FDistribution:133-final double logm = FastMath.log(denominatorDegreesOfFreedom);	0
org.apache.commons.math3.distribution.UniformRealDistribution:184-return false;[CLS]org.apache.commons.math3.distribution.FDistribution:134-final double lognxm = FastMath.log(numeratorDegreesOfFreedom * x +	0
org.apache.commons.math3.distribution.UniformRealDistribution:184-return false;[CLS]org.apache.commons.math3.distribution.FDistribution:136-return FastMath.exp(nhalf * logn + nhalf * logx - logx +	0
org.apache.commons.math3.distribution.UniformRealDistribution:184-return false;[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:109-if (x < lower || x > upper) {	0
org.apache.commons.math3.distribution.UniformRealDistribution:184-return false;[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:112-return 1 / (upper - lower);	0
org.apache.commons.math3.distribution.UniformRealDistribution:184-return false;[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:174-return upper;	0
org.apache.commons.math3.distribution.UniformRealDistribution:184-return false;[CLS]org.apache.commons.math3.distribution.FDistribution:258-return 0;	0
org.apache.commons.math3.distribution.UniformRealDistribution:184-return false;[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:64-this(lower, upper, DEFAULT_INVERSE_ABSOLUTE_ACCURACY);	0
org.apache.commons.math3.distribution.UniformRealDistribution:184-return false;[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:65-}	0
org.apache.commons.math3.distribution.UniformRealDistribution:184-return false;[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:77-this(newWell19937c(), lower, upper, inverseCumAccuracy);	0
org.apache.commons.math3.distribution.UniformRealDistribution:184-return false;[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:78-}	0
org.apache.commons.math3.distribution.UniformRealDistribution:184-return false;[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:95-super(rng);	0
org.apache.commons.math3.distribution.UniformRealDistribution:184-return false;[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:96-if (lower >= upper) {	0
org.apache.commons.math3.distribution.UniformRealDistribution:184-return false;[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:102-this.lower = lower;	0
org.apache.commons.math3.distribution.UniformRealDistribution:184-return false;[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:103-this.upper = upper;	0
org.apache.commons.math3.distribution.UniformRealDistribution:184-return false;[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:104-solverAbsoluteAccuracy = inverseCumAccuracy;	0
org.apache.commons.math3.distribution.UniformRealDistribution:184-return false;[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:105-}	0
org.apache.commons.math3.distribution.UniformRealDistribution:184-return false;[CLS]org.apache.commons.math3.distribution.FDistribution:65-this(numeratorDegreesOfFreedom, denominatorDegreesOfFreedom,	0
org.apache.commons.math3.distribution.UniformRealDistribution:184-return false;[CLS]org.apache.commons.math3.distribution.FDistribution:67-}	0
org.apache.commons.math3.distribution.UniformRealDistribution:184-return false;[CLS]org.apache.commons.math3.distribution.FDistribution:86-this(new Well19937c(), numeratorDegreesOfFreedom,	0
org.apache.commons.math3.distribution.UniformRealDistribution:184-return false;[CLS]org.apache.commons.math3.distribution.FDistribution:88-}	0
org.apache.commons.math3.distribution.UniformRealDistribution:184-return false;[CLS]org.apache.commons.math3.distribution.FDistribution:108-super(rng);	0
org.apache.commons.math3.distribution.UniformRealDistribution:184-return false;[CLS]org.apache.commons.math3.distribution.FDistribution:49-private double numericalVariance = Double.NaN;	0
org.apache.commons.math3.distribution.UniformRealDistribution:184-return false;[CLS]org.apache.commons.math3.distribution.FDistribution:51-private boolean numericalVarianceIsCalculated = false;	0
org.apache.commons.math3.distribution.UniformRealDistribution:184-return false;[CLS]org.apache.commons.math3.distribution.FDistribution:110-if (numeratorDegreesOfFreedom <= 0) {	0
org.apache.commons.math3.distribution.UniformRealDistribution:184-return false;[CLS]org.apache.commons.math3.distribution.FDistribution:114-if (denominatorDegreesOfFreedom <= 0) {	0
org.apache.commons.math3.distribution.UniformRealDistribution:184-return false;[CLS]org.apache.commons.math3.distribution.FDistribution:118-this.numeratorDegreesOfFreedom = numeratorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.UniformRealDistribution:184-return false;[CLS]org.apache.commons.math3.distribution.FDistribution:119-this.denominatorDegreesOfFreedom = denominatorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.UniformRealDistribution:184-return false;[CLS]org.apache.commons.math3.distribution.FDistribution:120-solverAbsoluteAccuracy = inverseCumAccuracy;	0
org.apache.commons.math3.distribution.UniformRealDistribution:184-return false;[CLS]org.apache.commons.math3.distribution.FDistribution:121-}	0
org.apache.commons.math3.distribution.UniformRealDistribution:184-return false;[CLS]org.apache.commons.math3.distribution.FDistribution:111-throw new NotStrictlyPositiveException(LocalizedFormats.DEGREES_OF_FREEDOM,	0
org.apache.commons.math3.distribution.UniformRealDistribution:184-return false;[CLS]org.apache.commons.math3.distribution.FDistribution:115-throw new NotStrictlyPositiveException(LocalizedFormats.DEGREES_OF_FREEDOM,	0
org.apache.commons.math3.distribution.UniformRealDistribution:184-return false;[CLS]org.apache.commons.math3.distribution.FDistribution:154-if (x <= 0) {	0
org.apache.commons.math3.distribution.UniformRealDistribution:184-return false;[CLS]org.apache.commons.math3.distribution.FDistribution:155-ret = 0;	0
org.apache.commons.math3.distribution.UniformRealDistribution:184-return false;[CLS]org.apache.commons.math3.distribution.FDistribution:157-double n = numeratorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.UniformRealDistribution:184-return false;[CLS]org.apache.commons.math3.distribution.FDistribution:158-double m = denominatorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.UniformRealDistribution:184-return false;[CLS]org.apache.commons.math3.distribution.FDistribution:160-ret = Beta.regularizedBeta((n * x) / (m + n * x),	0
org.apache.commons.math3.distribution.UniformRealDistribution:184-return false;[CLS]org.apache.commons.math3.distribution.FDistribution:164-return ret;	0
org.apache.commons.math3.distribution.UniformRealDistribution:184-return false;[CLS]org.apache.commons.math3.distribution.FDistribution:173-return numeratorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.UniformRealDistribution:184-return false;[CLS]org.apache.commons.math3.distribution.FDistribution:182-return denominatorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.UniformRealDistribution:184-return false;[CLS]org.apache.commons.math3.distribution.FDistribution:188-return solverAbsoluteAccuracy;	0
org.apache.commons.math3.distribution.UniformRealDistribution:184-return false;[CLS]org.apache.commons.math3.distribution.FDistribution:201-final double denominatorDF = getDenominatorDegreesOfFreedom();	0
org.apache.commons.math3.distribution.UniformRealDistribution:184-return false;[CLS]org.apache.commons.math3.distribution.FDistribution:203-if (denominatorDF > 2) {	0
org.apache.commons.math3.distribution.UniformRealDistribution:184-return false;[CLS]org.apache.commons.math3.distribution.FDistribution:204-return denominatorDF / (denominatorDF - 2);	0
org.apache.commons.math3.distribution.FDistribution:129-final double nhalf = numeratorDegreesOfFreedom / 2;[CLS]org.apache.commons.math3.distribution.FDistribution:130-final double mhalf = denominatorDegreesOfFreedom / 2;	0
org.apache.commons.math3.distribution.FDistribution:129-final double nhalf = numeratorDegreesOfFreedom / 2;[CLS]org.apache.commons.math3.distribution.FDistribution:131-final double logx = FastMath.log(x);	0
org.apache.commons.math3.distribution.FDistribution:129-final double nhalf = numeratorDegreesOfFreedom / 2;[CLS]org.apache.commons.math3.distribution.FDistribution:132-final double logn = FastMath.log(numeratorDegreesOfFreedom);	0
org.apache.commons.math3.distribution.FDistribution:129-final double nhalf = numeratorDegreesOfFreedom / 2;[CLS]org.apache.commons.math3.distribution.FDistribution:133-final double logm = FastMath.log(denominatorDegreesOfFreedom);	0
org.apache.commons.math3.distribution.FDistribution:129-final double nhalf = numeratorDegreesOfFreedom / 2;[CLS]org.apache.commons.math3.distribution.FDistribution:134-final double lognxm = FastMath.log(numeratorDegreesOfFreedom * x +	0
org.apache.commons.math3.distribution.FDistribution:129-final double nhalf = numeratorDegreesOfFreedom / 2;[CLS]org.apache.commons.math3.distribution.FDistribution:136-return FastMath.exp(nhalf * logn + nhalf * logx - logx +	0
org.apache.commons.math3.distribution.FDistribution:129-final double nhalf = numeratorDegreesOfFreedom / 2;[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:109-if (x < lower || x > upper) {	0
org.apache.commons.math3.distribution.FDistribution:129-final double nhalf = numeratorDegreesOfFreedom / 2;[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:112-return 1 / (upper - lower);	0
org.apache.commons.math3.distribution.FDistribution:129-final double nhalf = numeratorDegreesOfFreedom / 2;[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:174-return upper;	0
org.apache.commons.math3.distribution.FDistribution:129-final double nhalf = numeratorDegreesOfFreedom / 2;[CLS]org.apache.commons.math3.distribution.FDistribution:258-return 0;	0
org.apache.commons.math3.distribution.FDistribution:129-final double nhalf = numeratorDegreesOfFreedom / 2;[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:64-this(lower, upper, DEFAULT_INVERSE_ABSOLUTE_ACCURACY);	0
org.apache.commons.math3.distribution.FDistribution:129-final double nhalf = numeratorDegreesOfFreedom / 2;[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:65-}	0
org.apache.commons.math3.distribution.FDistribution:129-final double nhalf = numeratorDegreesOfFreedom / 2;[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:77-this(newWell19937c(), lower, upper, inverseCumAccuracy);	0
org.apache.commons.math3.distribution.FDistribution:129-final double nhalf = numeratorDegreesOfFreedom / 2;[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:78-}	0
org.apache.commons.math3.distribution.FDistribution:129-final double nhalf = numeratorDegreesOfFreedom / 2;[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:95-super(rng);	0
org.apache.commons.math3.distribution.FDistribution:129-final double nhalf = numeratorDegreesOfFreedom / 2;[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:96-if (lower >= upper) {	0
org.apache.commons.math3.distribution.FDistribution:129-final double nhalf = numeratorDegreesOfFreedom / 2;[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:102-this.lower = lower;	0
org.apache.commons.math3.distribution.FDistribution:129-final double nhalf = numeratorDegreesOfFreedom / 2;[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:103-this.upper = upper;	0
org.apache.commons.math3.distribution.FDistribution:129-final double nhalf = numeratorDegreesOfFreedom / 2;[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:104-solverAbsoluteAccuracy = inverseCumAccuracy;	0
org.apache.commons.math3.distribution.FDistribution:129-final double nhalf = numeratorDegreesOfFreedom / 2;[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:105-}	0
org.apache.commons.math3.distribution.FDistribution:129-final double nhalf = numeratorDegreesOfFreedom / 2;[CLS]org.apache.commons.math3.distribution.FDistribution:65-this(numeratorDegreesOfFreedom, denominatorDegreesOfFreedom,	0
org.apache.commons.math3.distribution.FDistribution:129-final double nhalf = numeratorDegreesOfFreedom / 2;[CLS]org.apache.commons.math3.distribution.FDistribution:67-}	0
org.apache.commons.math3.distribution.FDistribution:129-final double nhalf = numeratorDegreesOfFreedom / 2;[CLS]org.apache.commons.math3.distribution.FDistribution:86-this(new Well19937c(), numeratorDegreesOfFreedom,	0
org.apache.commons.math3.distribution.FDistribution:129-final double nhalf = numeratorDegreesOfFreedom / 2;[CLS]org.apache.commons.math3.distribution.FDistribution:88-}	0
org.apache.commons.math3.distribution.FDistribution:129-final double nhalf = numeratorDegreesOfFreedom / 2;[CLS]org.apache.commons.math3.distribution.FDistribution:108-super(rng);	0
org.apache.commons.math3.distribution.FDistribution:129-final double nhalf = numeratorDegreesOfFreedom / 2;[CLS]org.apache.commons.math3.distribution.FDistribution:49-private double numericalVariance = Double.NaN;	0
org.apache.commons.math3.distribution.FDistribution:129-final double nhalf = numeratorDegreesOfFreedom / 2;[CLS]org.apache.commons.math3.distribution.FDistribution:51-private boolean numericalVarianceIsCalculated = false;	0
org.apache.commons.math3.distribution.FDistribution:129-final double nhalf = numeratorDegreesOfFreedom / 2;[CLS]org.apache.commons.math3.distribution.FDistribution:110-if (numeratorDegreesOfFreedom <= 0) {	0
org.apache.commons.math3.distribution.FDistribution:129-final double nhalf = numeratorDegreesOfFreedom / 2;[CLS]org.apache.commons.math3.distribution.FDistribution:114-if (denominatorDegreesOfFreedom <= 0) {	0
org.apache.commons.math3.distribution.FDistribution:129-final double nhalf = numeratorDegreesOfFreedom / 2;[CLS]org.apache.commons.math3.distribution.FDistribution:118-this.numeratorDegreesOfFreedom = numeratorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.FDistribution:129-final double nhalf = numeratorDegreesOfFreedom / 2;[CLS]org.apache.commons.math3.distribution.FDistribution:119-this.denominatorDegreesOfFreedom = denominatorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.FDistribution:129-final double nhalf = numeratorDegreesOfFreedom / 2;[CLS]org.apache.commons.math3.distribution.FDistribution:120-solverAbsoluteAccuracy = inverseCumAccuracy;	0
org.apache.commons.math3.distribution.FDistribution:129-final double nhalf = numeratorDegreesOfFreedom / 2;[CLS]org.apache.commons.math3.distribution.FDistribution:121-}	0
org.apache.commons.math3.distribution.FDistribution:129-final double nhalf = numeratorDegreesOfFreedom / 2;[CLS]org.apache.commons.math3.distribution.FDistribution:111-throw new NotStrictlyPositiveException(LocalizedFormats.DEGREES_OF_FREEDOM,	0
org.apache.commons.math3.distribution.FDistribution:129-final double nhalf = numeratorDegreesOfFreedom / 2;[CLS]org.apache.commons.math3.distribution.FDistribution:115-throw new NotStrictlyPositiveException(LocalizedFormats.DEGREES_OF_FREEDOM,	0
org.apache.commons.math3.distribution.FDistribution:129-final double nhalf = numeratorDegreesOfFreedom / 2;[CLS]org.apache.commons.math3.distribution.FDistribution:154-if (x <= 0) {	0
org.apache.commons.math3.distribution.FDistribution:129-final double nhalf = numeratorDegreesOfFreedom / 2;[CLS]org.apache.commons.math3.distribution.FDistribution:155-ret = 0;	0
org.apache.commons.math3.distribution.FDistribution:129-final double nhalf = numeratorDegreesOfFreedom / 2;[CLS]org.apache.commons.math3.distribution.FDistribution:157-double n = numeratorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.FDistribution:129-final double nhalf = numeratorDegreesOfFreedom / 2;[CLS]org.apache.commons.math3.distribution.FDistribution:158-double m = denominatorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.FDistribution:129-final double nhalf = numeratorDegreesOfFreedom / 2;[CLS]org.apache.commons.math3.distribution.FDistribution:160-ret = Beta.regularizedBeta((n * x) / (m + n * x),	0
org.apache.commons.math3.distribution.FDistribution:129-final double nhalf = numeratorDegreesOfFreedom / 2;[CLS]org.apache.commons.math3.distribution.FDistribution:164-return ret;	0
org.apache.commons.math3.distribution.FDistribution:129-final double nhalf = numeratorDegreesOfFreedom / 2;[CLS]org.apache.commons.math3.distribution.FDistribution:173-return numeratorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.FDistribution:129-final double nhalf = numeratorDegreesOfFreedom / 2;[CLS]org.apache.commons.math3.distribution.FDistribution:182-return denominatorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.FDistribution:129-final double nhalf = numeratorDegreesOfFreedom / 2;[CLS]org.apache.commons.math3.distribution.FDistribution:188-return solverAbsoluteAccuracy;	0
org.apache.commons.math3.distribution.FDistribution:129-final double nhalf = numeratorDegreesOfFreedom / 2;[CLS]org.apache.commons.math3.distribution.FDistribution:201-final double denominatorDF = getDenominatorDegreesOfFreedom();	0
org.apache.commons.math3.distribution.FDistribution:129-final double nhalf = numeratorDegreesOfFreedom / 2;[CLS]org.apache.commons.math3.distribution.FDistribution:203-if (denominatorDF > 2) {	0
org.apache.commons.math3.distribution.FDistribution:129-final double nhalf = numeratorDegreesOfFreedom / 2;[CLS]org.apache.commons.math3.distribution.FDistribution:204-return denominatorDF / (denominatorDF - 2);	0
org.apache.commons.math3.distribution.FDistribution:130-final double mhalf = denominatorDegreesOfFreedom / 2;[CLS]org.apache.commons.math3.distribution.FDistribution:131-final double logx = FastMath.log(x);	0
org.apache.commons.math3.distribution.FDistribution:130-final double mhalf = denominatorDegreesOfFreedom / 2;[CLS]org.apache.commons.math3.distribution.FDistribution:132-final double logn = FastMath.log(numeratorDegreesOfFreedom);	0
org.apache.commons.math3.distribution.FDistribution:130-final double mhalf = denominatorDegreesOfFreedom / 2;[CLS]org.apache.commons.math3.distribution.FDistribution:133-final double logm = FastMath.log(denominatorDegreesOfFreedom);	0
org.apache.commons.math3.distribution.FDistribution:130-final double mhalf = denominatorDegreesOfFreedom / 2;[CLS]org.apache.commons.math3.distribution.FDistribution:134-final double lognxm = FastMath.log(numeratorDegreesOfFreedom * x +	0
org.apache.commons.math3.distribution.FDistribution:130-final double mhalf = denominatorDegreesOfFreedom / 2;[CLS]org.apache.commons.math3.distribution.FDistribution:136-return FastMath.exp(nhalf * logn + nhalf * logx - logx +	0
org.apache.commons.math3.distribution.FDistribution:130-final double mhalf = denominatorDegreesOfFreedom / 2;[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:109-if (x < lower || x > upper) {	0
org.apache.commons.math3.distribution.FDistribution:130-final double mhalf = denominatorDegreesOfFreedom / 2;[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:112-return 1 / (upper - lower);	0
org.apache.commons.math3.distribution.FDistribution:130-final double mhalf = denominatorDegreesOfFreedom / 2;[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:174-return upper;	0
org.apache.commons.math3.distribution.FDistribution:130-final double mhalf = denominatorDegreesOfFreedom / 2;[CLS]org.apache.commons.math3.distribution.FDistribution:258-return 0;	0
org.apache.commons.math3.distribution.FDistribution:130-final double mhalf = denominatorDegreesOfFreedom / 2;[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:64-this(lower, upper, DEFAULT_INVERSE_ABSOLUTE_ACCURACY);	0
org.apache.commons.math3.distribution.FDistribution:130-final double mhalf = denominatorDegreesOfFreedom / 2;[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:65-}	0
org.apache.commons.math3.distribution.FDistribution:130-final double mhalf = denominatorDegreesOfFreedom / 2;[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:77-this(newWell19937c(), lower, upper, inverseCumAccuracy);	0
org.apache.commons.math3.distribution.FDistribution:130-final double mhalf = denominatorDegreesOfFreedom / 2;[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:78-}	0
org.apache.commons.math3.distribution.FDistribution:130-final double mhalf = denominatorDegreesOfFreedom / 2;[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:95-super(rng);	0
org.apache.commons.math3.distribution.FDistribution:130-final double mhalf = denominatorDegreesOfFreedom / 2;[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:96-if (lower >= upper) {	0
org.apache.commons.math3.distribution.FDistribution:130-final double mhalf = denominatorDegreesOfFreedom / 2;[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:102-this.lower = lower;	0
org.apache.commons.math3.distribution.FDistribution:130-final double mhalf = denominatorDegreesOfFreedom / 2;[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:103-this.upper = upper;	0
org.apache.commons.math3.distribution.FDistribution:130-final double mhalf = denominatorDegreesOfFreedom / 2;[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:104-solverAbsoluteAccuracy = inverseCumAccuracy;	0
org.apache.commons.math3.distribution.FDistribution:130-final double mhalf = denominatorDegreesOfFreedom / 2;[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:105-}	0
org.apache.commons.math3.distribution.FDistribution:130-final double mhalf = denominatorDegreesOfFreedom / 2;[CLS]org.apache.commons.math3.distribution.FDistribution:65-this(numeratorDegreesOfFreedom, denominatorDegreesOfFreedom,	0
org.apache.commons.math3.distribution.FDistribution:130-final double mhalf = denominatorDegreesOfFreedom / 2;[CLS]org.apache.commons.math3.distribution.FDistribution:67-}	0
org.apache.commons.math3.distribution.FDistribution:130-final double mhalf = denominatorDegreesOfFreedom / 2;[CLS]org.apache.commons.math3.distribution.FDistribution:86-this(new Well19937c(), numeratorDegreesOfFreedom,	0
org.apache.commons.math3.distribution.FDistribution:130-final double mhalf = denominatorDegreesOfFreedom / 2;[CLS]org.apache.commons.math3.distribution.FDistribution:88-}	0
org.apache.commons.math3.distribution.FDistribution:130-final double mhalf = denominatorDegreesOfFreedom / 2;[CLS]org.apache.commons.math3.distribution.FDistribution:108-super(rng);	0
org.apache.commons.math3.distribution.FDistribution:130-final double mhalf = denominatorDegreesOfFreedom / 2;[CLS]org.apache.commons.math3.distribution.FDistribution:49-private double numericalVariance = Double.NaN;	0
org.apache.commons.math3.distribution.FDistribution:130-final double mhalf = denominatorDegreesOfFreedom / 2;[CLS]org.apache.commons.math3.distribution.FDistribution:51-private boolean numericalVarianceIsCalculated = false;	0
org.apache.commons.math3.distribution.FDistribution:130-final double mhalf = denominatorDegreesOfFreedom / 2;[CLS]org.apache.commons.math3.distribution.FDistribution:110-if (numeratorDegreesOfFreedom <= 0) {	0
org.apache.commons.math3.distribution.FDistribution:130-final double mhalf = denominatorDegreesOfFreedom / 2;[CLS]org.apache.commons.math3.distribution.FDistribution:114-if (denominatorDegreesOfFreedom <= 0) {	0
org.apache.commons.math3.distribution.FDistribution:130-final double mhalf = denominatorDegreesOfFreedom / 2;[CLS]org.apache.commons.math3.distribution.FDistribution:118-this.numeratorDegreesOfFreedom = numeratorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.FDistribution:130-final double mhalf = denominatorDegreesOfFreedom / 2;[CLS]org.apache.commons.math3.distribution.FDistribution:119-this.denominatorDegreesOfFreedom = denominatorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.FDistribution:130-final double mhalf = denominatorDegreesOfFreedom / 2;[CLS]org.apache.commons.math3.distribution.FDistribution:120-solverAbsoluteAccuracy = inverseCumAccuracy;	0
org.apache.commons.math3.distribution.FDistribution:130-final double mhalf = denominatorDegreesOfFreedom / 2;[CLS]org.apache.commons.math3.distribution.FDistribution:121-}	0
org.apache.commons.math3.distribution.FDistribution:130-final double mhalf = denominatorDegreesOfFreedom / 2;[CLS]org.apache.commons.math3.distribution.FDistribution:111-throw new NotStrictlyPositiveException(LocalizedFormats.DEGREES_OF_FREEDOM,	0
org.apache.commons.math3.distribution.FDistribution:130-final double mhalf = denominatorDegreesOfFreedom / 2;[CLS]org.apache.commons.math3.distribution.FDistribution:115-throw new NotStrictlyPositiveException(LocalizedFormats.DEGREES_OF_FREEDOM,	0
org.apache.commons.math3.distribution.FDistribution:130-final double mhalf = denominatorDegreesOfFreedom / 2;[CLS]org.apache.commons.math3.distribution.FDistribution:154-if (x <= 0) {	0
org.apache.commons.math3.distribution.FDistribution:130-final double mhalf = denominatorDegreesOfFreedom / 2;[CLS]org.apache.commons.math3.distribution.FDistribution:155-ret = 0;	0
org.apache.commons.math3.distribution.FDistribution:130-final double mhalf = denominatorDegreesOfFreedom / 2;[CLS]org.apache.commons.math3.distribution.FDistribution:157-double n = numeratorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.FDistribution:130-final double mhalf = denominatorDegreesOfFreedom / 2;[CLS]org.apache.commons.math3.distribution.FDistribution:158-double m = denominatorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.FDistribution:130-final double mhalf = denominatorDegreesOfFreedom / 2;[CLS]org.apache.commons.math3.distribution.FDistribution:160-ret = Beta.regularizedBeta((n * x) / (m + n * x),	0
org.apache.commons.math3.distribution.FDistribution:130-final double mhalf = denominatorDegreesOfFreedom / 2;[CLS]org.apache.commons.math3.distribution.FDistribution:164-return ret;	0
org.apache.commons.math3.distribution.FDistribution:130-final double mhalf = denominatorDegreesOfFreedom / 2;[CLS]org.apache.commons.math3.distribution.FDistribution:173-return numeratorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.FDistribution:130-final double mhalf = denominatorDegreesOfFreedom / 2;[CLS]org.apache.commons.math3.distribution.FDistribution:182-return denominatorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.FDistribution:130-final double mhalf = denominatorDegreesOfFreedom / 2;[CLS]org.apache.commons.math3.distribution.FDistribution:188-return solverAbsoluteAccuracy;	0
org.apache.commons.math3.distribution.FDistribution:130-final double mhalf = denominatorDegreesOfFreedom / 2;[CLS]org.apache.commons.math3.distribution.FDistribution:201-final double denominatorDF = getDenominatorDegreesOfFreedom();	0
org.apache.commons.math3.distribution.FDistribution:130-final double mhalf = denominatorDegreesOfFreedom / 2;[CLS]org.apache.commons.math3.distribution.FDistribution:203-if (denominatorDF > 2) {	0
org.apache.commons.math3.distribution.FDistribution:130-final double mhalf = denominatorDegreesOfFreedom / 2;[CLS]org.apache.commons.math3.distribution.FDistribution:204-return denominatorDF / (denominatorDF - 2);	0
org.apache.commons.math3.distribution.FDistribution:131-final double logx = FastMath.log(x);[CLS]org.apache.commons.math3.distribution.FDistribution:132-final double logn = FastMath.log(numeratorDegreesOfFreedom);	0
org.apache.commons.math3.distribution.FDistribution:131-final double logx = FastMath.log(x);[CLS]org.apache.commons.math3.distribution.FDistribution:133-final double logm = FastMath.log(denominatorDegreesOfFreedom);	0
org.apache.commons.math3.distribution.FDistribution:131-final double logx = FastMath.log(x);[CLS]org.apache.commons.math3.distribution.FDistribution:134-final double lognxm = FastMath.log(numeratorDegreesOfFreedom * x +	0
org.apache.commons.math3.distribution.FDistribution:131-final double logx = FastMath.log(x);[CLS]org.apache.commons.math3.distribution.FDistribution:136-return FastMath.exp(nhalf * logn + nhalf * logx - logx +	0
org.apache.commons.math3.distribution.FDistribution:131-final double logx = FastMath.log(x);[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:109-if (x < lower || x > upper) {	0
org.apache.commons.math3.distribution.FDistribution:131-final double logx = FastMath.log(x);[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:112-return 1 / (upper - lower);	0
org.apache.commons.math3.distribution.FDistribution:131-final double logx = FastMath.log(x);[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:174-return upper;	0
org.apache.commons.math3.distribution.FDistribution:131-final double logx = FastMath.log(x);[CLS]org.apache.commons.math3.distribution.FDistribution:258-return 0;	0
org.apache.commons.math3.distribution.FDistribution:131-final double logx = FastMath.log(x);[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:64-this(lower, upper, DEFAULT_INVERSE_ABSOLUTE_ACCURACY);	0
org.apache.commons.math3.distribution.FDistribution:131-final double logx = FastMath.log(x);[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:65-}	0
org.apache.commons.math3.distribution.FDistribution:131-final double logx = FastMath.log(x);[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:77-this(newWell19937c(), lower, upper, inverseCumAccuracy);	0
org.apache.commons.math3.distribution.FDistribution:131-final double logx = FastMath.log(x);[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:78-}	0
org.apache.commons.math3.distribution.FDistribution:131-final double logx = FastMath.log(x);[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:95-super(rng);	0
org.apache.commons.math3.distribution.FDistribution:131-final double logx = FastMath.log(x);[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:96-if (lower >= upper) {	0
org.apache.commons.math3.distribution.FDistribution:131-final double logx = FastMath.log(x);[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:102-this.lower = lower;	0
org.apache.commons.math3.distribution.FDistribution:131-final double logx = FastMath.log(x);[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:103-this.upper = upper;	0
org.apache.commons.math3.distribution.FDistribution:131-final double logx = FastMath.log(x);[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:104-solverAbsoluteAccuracy = inverseCumAccuracy;	0
org.apache.commons.math3.distribution.FDistribution:131-final double logx = FastMath.log(x);[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:105-}	0
org.apache.commons.math3.distribution.FDistribution:131-final double logx = FastMath.log(x);[CLS]org.apache.commons.math3.distribution.FDistribution:65-this(numeratorDegreesOfFreedom, denominatorDegreesOfFreedom,	0
org.apache.commons.math3.distribution.FDistribution:131-final double logx = FastMath.log(x);[CLS]org.apache.commons.math3.distribution.FDistribution:67-}	0
org.apache.commons.math3.distribution.FDistribution:131-final double logx = FastMath.log(x);[CLS]org.apache.commons.math3.distribution.FDistribution:86-this(new Well19937c(), numeratorDegreesOfFreedom,	0
org.apache.commons.math3.distribution.FDistribution:131-final double logx = FastMath.log(x);[CLS]org.apache.commons.math3.distribution.FDistribution:88-}	0
org.apache.commons.math3.distribution.FDistribution:131-final double logx = FastMath.log(x);[CLS]org.apache.commons.math3.distribution.FDistribution:108-super(rng);	0
org.apache.commons.math3.distribution.FDistribution:131-final double logx = FastMath.log(x);[CLS]org.apache.commons.math3.distribution.FDistribution:49-private double numericalVariance = Double.NaN;	0
org.apache.commons.math3.distribution.FDistribution:131-final double logx = FastMath.log(x);[CLS]org.apache.commons.math3.distribution.FDistribution:51-private boolean numericalVarianceIsCalculated = false;	0
org.apache.commons.math3.distribution.FDistribution:131-final double logx = FastMath.log(x);[CLS]org.apache.commons.math3.distribution.FDistribution:110-if (numeratorDegreesOfFreedom <= 0) {	0
org.apache.commons.math3.distribution.FDistribution:131-final double logx = FastMath.log(x);[CLS]org.apache.commons.math3.distribution.FDistribution:114-if (denominatorDegreesOfFreedom <= 0) {	0
org.apache.commons.math3.distribution.FDistribution:131-final double logx = FastMath.log(x);[CLS]org.apache.commons.math3.distribution.FDistribution:118-this.numeratorDegreesOfFreedom = numeratorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.FDistribution:131-final double logx = FastMath.log(x);[CLS]org.apache.commons.math3.distribution.FDistribution:119-this.denominatorDegreesOfFreedom = denominatorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.FDistribution:131-final double logx = FastMath.log(x);[CLS]org.apache.commons.math3.distribution.FDistribution:120-solverAbsoluteAccuracy = inverseCumAccuracy;	0
org.apache.commons.math3.distribution.FDistribution:131-final double logx = FastMath.log(x);[CLS]org.apache.commons.math3.distribution.FDistribution:121-}	0
org.apache.commons.math3.distribution.FDistribution:131-final double logx = FastMath.log(x);[CLS]org.apache.commons.math3.distribution.FDistribution:111-throw new NotStrictlyPositiveException(LocalizedFormats.DEGREES_OF_FREEDOM,	0
org.apache.commons.math3.distribution.FDistribution:131-final double logx = FastMath.log(x);[CLS]org.apache.commons.math3.distribution.FDistribution:115-throw new NotStrictlyPositiveException(LocalizedFormats.DEGREES_OF_FREEDOM,	0
org.apache.commons.math3.distribution.FDistribution:131-final double logx = FastMath.log(x);[CLS]org.apache.commons.math3.distribution.FDistribution:154-if (x <= 0) {	0
org.apache.commons.math3.distribution.FDistribution:131-final double logx = FastMath.log(x);[CLS]org.apache.commons.math3.distribution.FDistribution:155-ret = 0;	0
org.apache.commons.math3.distribution.FDistribution:131-final double logx = FastMath.log(x);[CLS]org.apache.commons.math3.distribution.FDistribution:157-double n = numeratorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.FDistribution:131-final double logx = FastMath.log(x);[CLS]org.apache.commons.math3.distribution.FDistribution:158-double m = denominatorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.FDistribution:131-final double logx = FastMath.log(x);[CLS]org.apache.commons.math3.distribution.FDistribution:160-ret = Beta.regularizedBeta((n * x) / (m + n * x),	0
org.apache.commons.math3.distribution.FDistribution:131-final double logx = FastMath.log(x);[CLS]org.apache.commons.math3.distribution.FDistribution:164-return ret;	0
org.apache.commons.math3.distribution.FDistribution:131-final double logx = FastMath.log(x);[CLS]org.apache.commons.math3.distribution.FDistribution:173-return numeratorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.FDistribution:131-final double logx = FastMath.log(x);[CLS]org.apache.commons.math3.distribution.FDistribution:182-return denominatorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.FDistribution:131-final double logx = FastMath.log(x);[CLS]org.apache.commons.math3.distribution.FDistribution:188-return solverAbsoluteAccuracy;	0
org.apache.commons.math3.distribution.FDistribution:131-final double logx = FastMath.log(x);[CLS]org.apache.commons.math3.distribution.FDistribution:201-final double denominatorDF = getDenominatorDegreesOfFreedom();	0
org.apache.commons.math3.distribution.FDistribution:131-final double logx = FastMath.log(x);[CLS]org.apache.commons.math3.distribution.FDistribution:203-if (denominatorDF > 2) {	0
org.apache.commons.math3.distribution.FDistribution:131-final double logx = FastMath.log(x);[CLS]org.apache.commons.math3.distribution.FDistribution:204-return denominatorDF / (denominatorDF - 2);	0
org.apache.commons.math3.distribution.FDistribution:132-final double logn = FastMath.log(numeratorDegreesOfFreedom);[CLS]org.apache.commons.math3.distribution.FDistribution:133-final double logm = FastMath.log(denominatorDegreesOfFreedom);	0
org.apache.commons.math3.distribution.FDistribution:132-final double logn = FastMath.log(numeratorDegreesOfFreedom);[CLS]org.apache.commons.math3.distribution.FDistribution:134-final double lognxm = FastMath.log(numeratorDegreesOfFreedom * x +	0
org.apache.commons.math3.distribution.FDistribution:132-final double logn = FastMath.log(numeratorDegreesOfFreedom);[CLS]org.apache.commons.math3.distribution.FDistribution:136-return FastMath.exp(nhalf * logn + nhalf * logx - logx +	0
org.apache.commons.math3.distribution.FDistribution:132-final double logn = FastMath.log(numeratorDegreesOfFreedom);[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:109-if (x < lower || x > upper) {	0
org.apache.commons.math3.distribution.FDistribution:132-final double logn = FastMath.log(numeratorDegreesOfFreedom);[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:112-return 1 / (upper - lower);	0
org.apache.commons.math3.distribution.FDistribution:132-final double logn = FastMath.log(numeratorDegreesOfFreedom);[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:174-return upper;	0
org.apache.commons.math3.distribution.FDistribution:132-final double logn = FastMath.log(numeratorDegreesOfFreedom);[CLS]org.apache.commons.math3.distribution.FDistribution:258-return 0;	0
org.apache.commons.math3.distribution.FDistribution:132-final double logn = FastMath.log(numeratorDegreesOfFreedom);[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:64-this(lower, upper, DEFAULT_INVERSE_ABSOLUTE_ACCURACY);	0
org.apache.commons.math3.distribution.FDistribution:132-final double logn = FastMath.log(numeratorDegreesOfFreedom);[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:65-}	0
org.apache.commons.math3.distribution.FDistribution:132-final double logn = FastMath.log(numeratorDegreesOfFreedom);[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:77-this(newWell19937c(), lower, upper, inverseCumAccuracy);	0
org.apache.commons.math3.distribution.FDistribution:132-final double logn = FastMath.log(numeratorDegreesOfFreedom);[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:78-}	0
org.apache.commons.math3.distribution.FDistribution:132-final double logn = FastMath.log(numeratorDegreesOfFreedom);[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:95-super(rng);	0
org.apache.commons.math3.distribution.FDistribution:132-final double logn = FastMath.log(numeratorDegreesOfFreedom);[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:96-if (lower >= upper) {	0
org.apache.commons.math3.distribution.FDistribution:132-final double logn = FastMath.log(numeratorDegreesOfFreedom);[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:102-this.lower = lower;	0
org.apache.commons.math3.distribution.FDistribution:132-final double logn = FastMath.log(numeratorDegreesOfFreedom);[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:103-this.upper = upper;	0
org.apache.commons.math3.distribution.FDistribution:132-final double logn = FastMath.log(numeratorDegreesOfFreedom);[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:104-solverAbsoluteAccuracy = inverseCumAccuracy;	0
org.apache.commons.math3.distribution.FDistribution:132-final double logn = FastMath.log(numeratorDegreesOfFreedom);[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:105-}	0
org.apache.commons.math3.distribution.FDistribution:132-final double logn = FastMath.log(numeratorDegreesOfFreedom);[CLS]org.apache.commons.math3.distribution.FDistribution:65-this(numeratorDegreesOfFreedom, denominatorDegreesOfFreedom,	0
org.apache.commons.math3.distribution.FDistribution:132-final double logn = FastMath.log(numeratorDegreesOfFreedom);[CLS]org.apache.commons.math3.distribution.FDistribution:67-}	0
org.apache.commons.math3.distribution.FDistribution:132-final double logn = FastMath.log(numeratorDegreesOfFreedom);[CLS]org.apache.commons.math3.distribution.FDistribution:86-this(new Well19937c(), numeratorDegreesOfFreedom,	0
org.apache.commons.math3.distribution.FDistribution:132-final double logn = FastMath.log(numeratorDegreesOfFreedom);[CLS]org.apache.commons.math3.distribution.FDistribution:88-}	0
org.apache.commons.math3.distribution.FDistribution:132-final double logn = FastMath.log(numeratorDegreesOfFreedom);[CLS]org.apache.commons.math3.distribution.FDistribution:108-super(rng);	0
org.apache.commons.math3.distribution.FDistribution:132-final double logn = FastMath.log(numeratorDegreesOfFreedom);[CLS]org.apache.commons.math3.distribution.FDistribution:49-private double numericalVariance = Double.NaN;	0
org.apache.commons.math3.distribution.FDistribution:132-final double logn = FastMath.log(numeratorDegreesOfFreedom);[CLS]org.apache.commons.math3.distribution.FDistribution:51-private boolean numericalVarianceIsCalculated = false;	0
org.apache.commons.math3.distribution.FDistribution:132-final double logn = FastMath.log(numeratorDegreesOfFreedom);[CLS]org.apache.commons.math3.distribution.FDistribution:110-if (numeratorDegreesOfFreedom <= 0) {	0
org.apache.commons.math3.distribution.FDistribution:132-final double logn = FastMath.log(numeratorDegreesOfFreedom);[CLS]org.apache.commons.math3.distribution.FDistribution:114-if (denominatorDegreesOfFreedom <= 0) {	0
org.apache.commons.math3.distribution.FDistribution:132-final double logn = FastMath.log(numeratorDegreesOfFreedom);[CLS]org.apache.commons.math3.distribution.FDistribution:118-this.numeratorDegreesOfFreedom = numeratorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.FDistribution:132-final double logn = FastMath.log(numeratorDegreesOfFreedom);[CLS]org.apache.commons.math3.distribution.FDistribution:119-this.denominatorDegreesOfFreedom = denominatorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.FDistribution:132-final double logn = FastMath.log(numeratorDegreesOfFreedom);[CLS]org.apache.commons.math3.distribution.FDistribution:120-solverAbsoluteAccuracy = inverseCumAccuracy;	0
org.apache.commons.math3.distribution.FDistribution:132-final double logn = FastMath.log(numeratorDegreesOfFreedom);[CLS]org.apache.commons.math3.distribution.FDistribution:121-}	0
org.apache.commons.math3.distribution.FDistribution:132-final double logn = FastMath.log(numeratorDegreesOfFreedom);[CLS]org.apache.commons.math3.distribution.FDistribution:111-throw new NotStrictlyPositiveException(LocalizedFormats.DEGREES_OF_FREEDOM,	0
org.apache.commons.math3.distribution.FDistribution:132-final double logn = FastMath.log(numeratorDegreesOfFreedom);[CLS]org.apache.commons.math3.distribution.FDistribution:115-throw new NotStrictlyPositiveException(LocalizedFormats.DEGREES_OF_FREEDOM,	0
org.apache.commons.math3.distribution.FDistribution:132-final double logn = FastMath.log(numeratorDegreesOfFreedom);[CLS]org.apache.commons.math3.distribution.FDistribution:154-if (x <= 0) {	0
org.apache.commons.math3.distribution.FDistribution:132-final double logn = FastMath.log(numeratorDegreesOfFreedom);[CLS]org.apache.commons.math3.distribution.FDistribution:155-ret = 0;	0
org.apache.commons.math3.distribution.FDistribution:132-final double logn = FastMath.log(numeratorDegreesOfFreedom);[CLS]org.apache.commons.math3.distribution.FDistribution:157-double n = numeratorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.FDistribution:132-final double logn = FastMath.log(numeratorDegreesOfFreedom);[CLS]org.apache.commons.math3.distribution.FDistribution:158-double m = denominatorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.FDistribution:132-final double logn = FastMath.log(numeratorDegreesOfFreedom);[CLS]org.apache.commons.math3.distribution.FDistribution:160-ret = Beta.regularizedBeta((n * x) / (m + n * x),	0
org.apache.commons.math3.distribution.FDistribution:132-final double logn = FastMath.log(numeratorDegreesOfFreedom);[CLS]org.apache.commons.math3.distribution.FDistribution:164-return ret;	0
org.apache.commons.math3.distribution.FDistribution:132-final double logn = FastMath.log(numeratorDegreesOfFreedom);[CLS]org.apache.commons.math3.distribution.FDistribution:173-return numeratorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.FDistribution:132-final double logn = FastMath.log(numeratorDegreesOfFreedom);[CLS]org.apache.commons.math3.distribution.FDistribution:182-return denominatorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.FDistribution:132-final double logn = FastMath.log(numeratorDegreesOfFreedom);[CLS]org.apache.commons.math3.distribution.FDistribution:188-return solverAbsoluteAccuracy;	0
org.apache.commons.math3.distribution.FDistribution:132-final double logn = FastMath.log(numeratorDegreesOfFreedom);[CLS]org.apache.commons.math3.distribution.FDistribution:201-final double denominatorDF = getDenominatorDegreesOfFreedom();	0
org.apache.commons.math3.distribution.FDistribution:132-final double logn = FastMath.log(numeratorDegreesOfFreedom);[CLS]org.apache.commons.math3.distribution.FDistribution:203-if (denominatorDF > 2) {	0
org.apache.commons.math3.distribution.FDistribution:132-final double logn = FastMath.log(numeratorDegreesOfFreedom);[CLS]org.apache.commons.math3.distribution.FDistribution:204-return denominatorDF / (denominatorDF - 2);	0
org.apache.commons.math3.distribution.FDistribution:133-final double logm = FastMath.log(denominatorDegreesOfFreedom);[CLS]org.apache.commons.math3.distribution.FDistribution:134-final double lognxm = FastMath.log(numeratorDegreesOfFreedom * x +	0
org.apache.commons.math3.distribution.FDistribution:133-final double logm = FastMath.log(denominatorDegreesOfFreedom);[CLS]org.apache.commons.math3.distribution.FDistribution:136-return FastMath.exp(nhalf * logn + nhalf * logx - logx +	0
org.apache.commons.math3.distribution.FDistribution:133-final double logm = FastMath.log(denominatorDegreesOfFreedom);[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:109-if (x < lower || x > upper) {	0
org.apache.commons.math3.distribution.FDistribution:133-final double logm = FastMath.log(denominatorDegreesOfFreedom);[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:112-return 1 / (upper - lower);	0
org.apache.commons.math3.distribution.FDistribution:133-final double logm = FastMath.log(denominatorDegreesOfFreedom);[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:174-return upper;	0
org.apache.commons.math3.distribution.FDistribution:133-final double logm = FastMath.log(denominatorDegreesOfFreedom);[CLS]org.apache.commons.math3.distribution.FDistribution:258-return 0;	0
org.apache.commons.math3.distribution.FDistribution:133-final double logm = FastMath.log(denominatorDegreesOfFreedom);[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:64-this(lower, upper, DEFAULT_INVERSE_ABSOLUTE_ACCURACY);	0
org.apache.commons.math3.distribution.FDistribution:133-final double logm = FastMath.log(denominatorDegreesOfFreedom);[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:65-}	0
org.apache.commons.math3.distribution.FDistribution:133-final double logm = FastMath.log(denominatorDegreesOfFreedom);[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:77-this(newWell19937c(), lower, upper, inverseCumAccuracy);	0
org.apache.commons.math3.distribution.FDistribution:133-final double logm = FastMath.log(denominatorDegreesOfFreedom);[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:78-}	0
org.apache.commons.math3.distribution.FDistribution:133-final double logm = FastMath.log(denominatorDegreesOfFreedom);[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:95-super(rng);	0
org.apache.commons.math3.distribution.FDistribution:133-final double logm = FastMath.log(denominatorDegreesOfFreedom);[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:96-if (lower >= upper) {	0
org.apache.commons.math3.distribution.FDistribution:133-final double logm = FastMath.log(denominatorDegreesOfFreedom);[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:102-this.lower = lower;	0
org.apache.commons.math3.distribution.FDistribution:133-final double logm = FastMath.log(denominatorDegreesOfFreedom);[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:103-this.upper = upper;	0
org.apache.commons.math3.distribution.FDistribution:133-final double logm = FastMath.log(denominatorDegreesOfFreedom);[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:104-solverAbsoluteAccuracy = inverseCumAccuracy;	0
org.apache.commons.math3.distribution.FDistribution:133-final double logm = FastMath.log(denominatorDegreesOfFreedom);[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:105-}	0
org.apache.commons.math3.distribution.FDistribution:133-final double logm = FastMath.log(denominatorDegreesOfFreedom);[CLS]org.apache.commons.math3.distribution.FDistribution:65-this(numeratorDegreesOfFreedom, denominatorDegreesOfFreedom,	0
org.apache.commons.math3.distribution.FDistribution:133-final double logm = FastMath.log(denominatorDegreesOfFreedom);[CLS]org.apache.commons.math3.distribution.FDistribution:67-}	0
org.apache.commons.math3.distribution.FDistribution:133-final double logm = FastMath.log(denominatorDegreesOfFreedom);[CLS]org.apache.commons.math3.distribution.FDistribution:86-this(new Well19937c(), numeratorDegreesOfFreedom,	0
org.apache.commons.math3.distribution.FDistribution:133-final double logm = FastMath.log(denominatorDegreesOfFreedom);[CLS]org.apache.commons.math3.distribution.FDistribution:88-}	0
org.apache.commons.math3.distribution.FDistribution:133-final double logm = FastMath.log(denominatorDegreesOfFreedom);[CLS]org.apache.commons.math3.distribution.FDistribution:108-super(rng);	0
org.apache.commons.math3.distribution.FDistribution:133-final double logm = FastMath.log(denominatorDegreesOfFreedom);[CLS]org.apache.commons.math3.distribution.FDistribution:49-private double numericalVariance = Double.NaN;	0
org.apache.commons.math3.distribution.FDistribution:133-final double logm = FastMath.log(denominatorDegreesOfFreedom);[CLS]org.apache.commons.math3.distribution.FDistribution:51-private boolean numericalVarianceIsCalculated = false;	0
org.apache.commons.math3.distribution.FDistribution:133-final double logm = FastMath.log(denominatorDegreesOfFreedom);[CLS]org.apache.commons.math3.distribution.FDistribution:110-if (numeratorDegreesOfFreedom <= 0) {	0
org.apache.commons.math3.distribution.FDistribution:133-final double logm = FastMath.log(denominatorDegreesOfFreedom);[CLS]org.apache.commons.math3.distribution.FDistribution:114-if (denominatorDegreesOfFreedom <= 0) {	0
org.apache.commons.math3.distribution.FDistribution:133-final double logm = FastMath.log(denominatorDegreesOfFreedom);[CLS]org.apache.commons.math3.distribution.FDistribution:118-this.numeratorDegreesOfFreedom = numeratorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.FDistribution:133-final double logm = FastMath.log(denominatorDegreesOfFreedom);[CLS]org.apache.commons.math3.distribution.FDistribution:119-this.denominatorDegreesOfFreedom = denominatorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.FDistribution:133-final double logm = FastMath.log(denominatorDegreesOfFreedom);[CLS]org.apache.commons.math3.distribution.FDistribution:120-solverAbsoluteAccuracy = inverseCumAccuracy;	0
org.apache.commons.math3.distribution.FDistribution:133-final double logm = FastMath.log(denominatorDegreesOfFreedom);[CLS]org.apache.commons.math3.distribution.FDistribution:121-}	0
org.apache.commons.math3.distribution.FDistribution:133-final double logm = FastMath.log(denominatorDegreesOfFreedom);[CLS]org.apache.commons.math3.distribution.FDistribution:111-throw new NotStrictlyPositiveException(LocalizedFormats.DEGREES_OF_FREEDOM,	0
org.apache.commons.math3.distribution.FDistribution:133-final double logm = FastMath.log(denominatorDegreesOfFreedom);[CLS]org.apache.commons.math3.distribution.FDistribution:115-throw new NotStrictlyPositiveException(LocalizedFormats.DEGREES_OF_FREEDOM,	0
org.apache.commons.math3.distribution.FDistribution:133-final double logm = FastMath.log(denominatorDegreesOfFreedom);[CLS]org.apache.commons.math3.distribution.FDistribution:154-if (x <= 0) {	0
org.apache.commons.math3.distribution.FDistribution:133-final double logm = FastMath.log(denominatorDegreesOfFreedom);[CLS]org.apache.commons.math3.distribution.FDistribution:155-ret = 0;	0
org.apache.commons.math3.distribution.FDistribution:133-final double logm = FastMath.log(denominatorDegreesOfFreedom);[CLS]org.apache.commons.math3.distribution.FDistribution:157-double n = numeratorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.FDistribution:133-final double logm = FastMath.log(denominatorDegreesOfFreedom);[CLS]org.apache.commons.math3.distribution.FDistribution:158-double m = denominatorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.FDistribution:133-final double logm = FastMath.log(denominatorDegreesOfFreedom);[CLS]org.apache.commons.math3.distribution.FDistribution:160-ret = Beta.regularizedBeta((n * x) / (m + n * x),	0
org.apache.commons.math3.distribution.FDistribution:133-final double logm = FastMath.log(denominatorDegreesOfFreedom);[CLS]org.apache.commons.math3.distribution.FDistribution:164-return ret;	0
org.apache.commons.math3.distribution.FDistribution:133-final double logm = FastMath.log(denominatorDegreesOfFreedom);[CLS]org.apache.commons.math3.distribution.FDistribution:173-return numeratorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.FDistribution:133-final double logm = FastMath.log(denominatorDegreesOfFreedom);[CLS]org.apache.commons.math3.distribution.FDistribution:182-return denominatorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.FDistribution:133-final double logm = FastMath.log(denominatorDegreesOfFreedom);[CLS]org.apache.commons.math3.distribution.FDistribution:188-return solverAbsoluteAccuracy;	0
org.apache.commons.math3.distribution.FDistribution:133-final double logm = FastMath.log(denominatorDegreesOfFreedom);[CLS]org.apache.commons.math3.distribution.FDistribution:201-final double denominatorDF = getDenominatorDegreesOfFreedom();	0
org.apache.commons.math3.distribution.FDistribution:133-final double logm = FastMath.log(denominatorDegreesOfFreedom);[CLS]org.apache.commons.math3.distribution.FDistribution:203-if (denominatorDF > 2) {	0
org.apache.commons.math3.distribution.FDistribution:133-final double logm = FastMath.log(denominatorDegreesOfFreedom);[CLS]org.apache.commons.math3.distribution.FDistribution:204-return denominatorDF / (denominatorDF - 2);	0
org.apache.commons.math3.distribution.FDistribution:134-final double lognxm = FastMath.log(numeratorDegreesOfFreedom * x +[CLS]org.apache.commons.math3.distribution.FDistribution:136-return FastMath.exp(nhalf * logn + nhalf * logx - logx +	0
org.apache.commons.math3.distribution.FDistribution:134-final double lognxm = FastMath.log(numeratorDegreesOfFreedom * x +[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:109-if (x < lower || x > upper) {	0
org.apache.commons.math3.distribution.FDistribution:134-final double lognxm = FastMath.log(numeratorDegreesOfFreedom * x +[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:112-return 1 / (upper - lower);	0
org.apache.commons.math3.distribution.FDistribution:134-final double lognxm = FastMath.log(numeratorDegreesOfFreedom * x +[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:174-return upper;	0
org.apache.commons.math3.distribution.FDistribution:134-final double lognxm = FastMath.log(numeratorDegreesOfFreedom * x +[CLS]org.apache.commons.math3.distribution.FDistribution:258-return 0;	0
org.apache.commons.math3.distribution.FDistribution:134-final double lognxm = FastMath.log(numeratorDegreesOfFreedom * x +[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:64-this(lower, upper, DEFAULT_INVERSE_ABSOLUTE_ACCURACY);	0
org.apache.commons.math3.distribution.FDistribution:134-final double lognxm = FastMath.log(numeratorDegreesOfFreedom * x +[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:65-}	0
org.apache.commons.math3.distribution.FDistribution:134-final double lognxm = FastMath.log(numeratorDegreesOfFreedom * x +[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:77-this(newWell19937c(), lower, upper, inverseCumAccuracy);	0
org.apache.commons.math3.distribution.FDistribution:134-final double lognxm = FastMath.log(numeratorDegreesOfFreedom * x +[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:78-}	0
org.apache.commons.math3.distribution.FDistribution:134-final double lognxm = FastMath.log(numeratorDegreesOfFreedom * x +[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:95-super(rng);	0
org.apache.commons.math3.distribution.FDistribution:134-final double lognxm = FastMath.log(numeratorDegreesOfFreedom * x +[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:96-if (lower >= upper) {	0
org.apache.commons.math3.distribution.FDistribution:134-final double lognxm = FastMath.log(numeratorDegreesOfFreedom * x +[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:102-this.lower = lower;	0
org.apache.commons.math3.distribution.FDistribution:134-final double lognxm = FastMath.log(numeratorDegreesOfFreedom * x +[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:103-this.upper = upper;	0
org.apache.commons.math3.distribution.FDistribution:134-final double lognxm = FastMath.log(numeratorDegreesOfFreedom * x +[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:104-solverAbsoluteAccuracy = inverseCumAccuracy;	0
org.apache.commons.math3.distribution.FDistribution:134-final double lognxm = FastMath.log(numeratorDegreesOfFreedom * x +[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:105-}	0
org.apache.commons.math3.distribution.FDistribution:134-final double lognxm = FastMath.log(numeratorDegreesOfFreedom * x +[CLS]org.apache.commons.math3.distribution.FDistribution:65-this(numeratorDegreesOfFreedom, denominatorDegreesOfFreedom,	0
org.apache.commons.math3.distribution.FDistribution:134-final double lognxm = FastMath.log(numeratorDegreesOfFreedom * x +[CLS]org.apache.commons.math3.distribution.FDistribution:67-}	0
org.apache.commons.math3.distribution.FDistribution:134-final double lognxm = FastMath.log(numeratorDegreesOfFreedom * x +[CLS]org.apache.commons.math3.distribution.FDistribution:86-this(new Well19937c(), numeratorDegreesOfFreedom,	0
org.apache.commons.math3.distribution.FDistribution:134-final double lognxm = FastMath.log(numeratorDegreesOfFreedom * x +[CLS]org.apache.commons.math3.distribution.FDistribution:88-}	0
org.apache.commons.math3.distribution.FDistribution:134-final double lognxm = FastMath.log(numeratorDegreesOfFreedom * x +[CLS]org.apache.commons.math3.distribution.FDistribution:108-super(rng);	0
org.apache.commons.math3.distribution.FDistribution:134-final double lognxm = FastMath.log(numeratorDegreesOfFreedom * x +[CLS]org.apache.commons.math3.distribution.FDistribution:49-private double numericalVariance = Double.NaN;	0
org.apache.commons.math3.distribution.FDistribution:134-final double lognxm = FastMath.log(numeratorDegreesOfFreedom * x +[CLS]org.apache.commons.math3.distribution.FDistribution:51-private boolean numericalVarianceIsCalculated = false;	0
org.apache.commons.math3.distribution.FDistribution:134-final double lognxm = FastMath.log(numeratorDegreesOfFreedom * x +[CLS]org.apache.commons.math3.distribution.FDistribution:110-if (numeratorDegreesOfFreedom <= 0) {	0
org.apache.commons.math3.distribution.FDistribution:134-final double lognxm = FastMath.log(numeratorDegreesOfFreedom * x +[CLS]org.apache.commons.math3.distribution.FDistribution:114-if (denominatorDegreesOfFreedom <= 0) {	0
org.apache.commons.math3.distribution.FDistribution:134-final double lognxm = FastMath.log(numeratorDegreesOfFreedom * x +[CLS]org.apache.commons.math3.distribution.FDistribution:118-this.numeratorDegreesOfFreedom = numeratorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.FDistribution:134-final double lognxm = FastMath.log(numeratorDegreesOfFreedom * x +[CLS]org.apache.commons.math3.distribution.FDistribution:119-this.denominatorDegreesOfFreedom = denominatorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.FDistribution:134-final double lognxm = FastMath.log(numeratorDegreesOfFreedom * x +[CLS]org.apache.commons.math3.distribution.FDistribution:120-solverAbsoluteAccuracy = inverseCumAccuracy;	0
org.apache.commons.math3.distribution.FDistribution:134-final double lognxm = FastMath.log(numeratorDegreesOfFreedom * x +[CLS]org.apache.commons.math3.distribution.FDistribution:121-}	0
org.apache.commons.math3.distribution.FDistribution:134-final double lognxm = FastMath.log(numeratorDegreesOfFreedom * x +[CLS]org.apache.commons.math3.distribution.FDistribution:111-throw new NotStrictlyPositiveException(LocalizedFormats.DEGREES_OF_FREEDOM,	0
org.apache.commons.math3.distribution.FDistribution:134-final double lognxm = FastMath.log(numeratorDegreesOfFreedom * x +[CLS]org.apache.commons.math3.distribution.FDistribution:115-throw new NotStrictlyPositiveException(LocalizedFormats.DEGREES_OF_FREEDOM,	0
org.apache.commons.math3.distribution.FDistribution:134-final double lognxm = FastMath.log(numeratorDegreesOfFreedom * x +[CLS]org.apache.commons.math3.distribution.FDistribution:154-if (x <= 0) {	0
org.apache.commons.math3.distribution.FDistribution:134-final double lognxm = FastMath.log(numeratorDegreesOfFreedom * x +[CLS]org.apache.commons.math3.distribution.FDistribution:155-ret = 0;	0
org.apache.commons.math3.distribution.FDistribution:134-final double lognxm = FastMath.log(numeratorDegreesOfFreedom * x +[CLS]org.apache.commons.math3.distribution.FDistribution:157-double n = numeratorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.FDistribution:134-final double lognxm = FastMath.log(numeratorDegreesOfFreedom * x +[CLS]org.apache.commons.math3.distribution.FDistribution:158-double m = denominatorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.FDistribution:134-final double lognxm = FastMath.log(numeratorDegreesOfFreedom * x +[CLS]org.apache.commons.math3.distribution.FDistribution:160-ret = Beta.regularizedBeta((n * x) / (m + n * x),	0
org.apache.commons.math3.distribution.FDistribution:134-final double lognxm = FastMath.log(numeratorDegreesOfFreedom * x +[CLS]org.apache.commons.math3.distribution.FDistribution:164-return ret;	0
org.apache.commons.math3.distribution.FDistribution:134-final double lognxm = FastMath.log(numeratorDegreesOfFreedom * x +[CLS]org.apache.commons.math3.distribution.FDistribution:173-return numeratorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.FDistribution:134-final double lognxm = FastMath.log(numeratorDegreesOfFreedom * x +[CLS]org.apache.commons.math3.distribution.FDistribution:182-return denominatorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.FDistribution:134-final double lognxm = FastMath.log(numeratorDegreesOfFreedom * x +[CLS]org.apache.commons.math3.distribution.FDistribution:188-return solverAbsoluteAccuracy;	0
org.apache.commons.math3.distribution.FDistribution:134-final double lognxm = FastMath.log(numeratorDegreesOfFreedom * x +[CLS]org.apache.commons.math3.distribution.FDistribution:201-final double denominatorDF = getDenominatorDegreesOfFreedom();	0
org.apache.commons.math3.distribution.FDistribution:134-final double lognxm = FastMath.log(numeratorDegreesOfFreedom * x +[CLS]org.apache.commons.math3.distribution.FDistribution:203-if (denominatorDF > 2) {	0
org.apache.commons.math3.distribution.FDistribution:134-final double lognxm = FastMath.log(numeratorDegreesOfFreedom * x +[CLS]org.apache.commons.math3.distribution.FDistribution:204-return denominatorDF / (denominatorDF - 2);	0
org.apache.commons.math3.distribution.FDistribution:136-return FastMath.exp(nhalf * logn + nhalf * logx - logx +[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:109-if (x < lower || x > upper) {	0
org.apache.commons.math3.distribution.FDistribution:136-return FastMath.exp(nhalf * logn + nhalf * logx - logx +[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:112-return 1 / (upper - lower);	0
org.apache.commons.math3.distribution.FDistribution:136-return FastMath.exp(nhalf * logn + nhalf * logx - logx +[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:174-return upper;	0
org.apache.commons.math3.distribution.FDistribution:136-return FastMath.exp(nhalf * logn + nhalf * logx - logx +[CLS]org.apache.commons.math3.distribution.FDistribution:258-return 0;	0
org.apache.commons.math3.distribution.FDistribution:136-return FastMath.exp(nhalf * logn + nhalf * logx - logx +[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:64-this(lower, upper, DEFAULT_INVERSE_ABSOLUTE_ACCURACY);	0
org.apache.commons.math3.distribution.FDistribution:136-return FastMath.exp(nhalf * logn + nhalf * logx - logx +[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:65-}	0
org.apache.commons.math3.distribution.FDistribution:136-return FastMath.exp(nhalf * logn + nhalf * logx - logx +[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:77-this(newWell19937c(), lower, upper, inverseCumAccuracy);	0
org.apache.commons.math3.distribution.FDistribution:136-return FastMath.exp(nhalf * logn + nhalf * logx - logx +[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:78-}	0
org.apache.commons.math3.distribution.FDistribution:136-return FastMath.exp(nhalf * logn + nhalf * logx - logx +[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:95-super(rng);	0
org.apache.commons.math3.distribution.FDistribution:136-return FastMath.exp(nhalf * logn + nhalf * logx - logx +[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:96-if (lower >= upper) {	0
org.apache.commons.math3.distribution.FDistribution:136-return FastMath.exp(nhalf * logn + nhalf * logx - logx +[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:102-this.lower = lower;	0
org.apache.commons.math3.distribution.FDistribution:136-return FastMath.exp(nhalf * logn + nhalf * logx - logx +[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:103-this.upper = upper;	0
org.apache.commons.math3.distribution.FDistribution:136-return FastMath.exp(nhalf * logn + nhalf * logx - logx +[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:104-solverAbsoluteAccuracy = inverseCumAccuracy;	0
org.apache.commons.math3.distribution.FDistribution:136-return FastMath.exp(nhalf * logn + nhalf * logx - logx +[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:105-}	0
org.apache.commons.math3.distribution.FDistribution:136-return FastMath.exp(nhalf * logn + nhalf * logx - logx +[CLS]org.apache.commons.math3.distribution.FDistribution:65-this(numeratorDegreesOfFreedom, denominatorDegreesOfFreedom,	0
org.apache.commons.math3.distribution.FDistribution:136-return FastMath.exp(nhalf * logn + nhalf * logx - logx +[CLS]org.apache.commons.math3.distribution.FDistribution:67-}	0
org.apache.commons.math3.distribution.FDistribution:136-return FastMath.exp(nhalf * logn + nhalf * logx - logx +[CLS]org.apache.commons.math3.distribution.FDistribution:86-this(new Well19937c(), numeratorDegreesOfFreedom,	0
org.apache.commons.math3.distribution.FDistribution:136-return FastMath.exp(nhalf * logn + nhalf * logx - logx +[CLS]org.apache.commons.math3.distribution.FDistribution:88-}	0
org.apache.commons.math3.distribution.FDistribution:136-return FastMath.exp(nhalf * logn + nhalf * logx - logx +[CLS]org.apache.commons.math3.distribution.FDistribution:108-super(rng);	0
org.apache.commons.math3.distribution.FDistribution:136-return FastMath.exp(nhalf * logn + nhalf * logx - logx +[CLS]org.apache.commons.math3.distribution.FDistribution:49-private double numericalVariance = Double.NaN;	0
org.apache.commons.math3.distribution.FDistribution:136-return FastMath.exp(nhalf * logn + nhalf * logx - logx +[CLS]org.apache.commons.math3.distribution.FDistribution:51-private boolean numericalVarianceIsCalculated = false;	0
org.apache.commons.math3.distribution.FDistribution:136-return FastMath.exp(nhalf * logn + nhalf * logx - logx +[CLS]org.apache.commons.math3.distribution.FDistribution:110-if (numeratorDegreesOfFreedom <= 0) {	0
org.apache.commons.math3.distribution.FDistribution:136-return FastMath.exp(nhalf * logn + nhalf * logx - logx +[CLS]org.apache.commons.math3.distribution.FDistribution:114-if (denominatorDegreesOfFreedom <= 0) {	0
org.apache.commons.math3.distribution.FDistribution:136-return FastMath.exp(nhalf * logn + nhalf * logx - logx +[CLS]org.apache.commons.math3.distribution.FDistribution:118-this.numeratorDegreesOfFreedom = numeratorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.FDistribution:136-return FastMath.exp(nhalf * logn + nhalf * logx - logx +[CLS]org.apache.commons.math3.distribution.FDistribution:119-this.denominatorDegreesOfFreedom = denominatorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.FDistribution:136-return FastMath.exp(nhalf * logn + nhalf * logx - logx +[CLS]org.apache.commons.math3.distribution.FDistribution:120-solverAbsoluteAccuracy = inverseCumAccuracy;	0
org.apache.commons.math3.distribution.FDistribution:136-return FastMath.exp(nhalf * logn + nhalf * logx - logx +[CLS]org.apache.commons.math3.distribution.FDistribution:121-}	0
org.apache.commons.math3.distribution.FDistribution:136-return FastMath.exp(nhalf * logn + nhalf * logx - logx +[CLS]org.apache.commons.math3.distribution.FDistribution:111-throw new NotStrictlyPositiveException(LocalizedFormats.DEGREES_OF_FREEDOM,	0
org.apache.commons.math3.distribution.FDistribution:136-return FastMath.exp(nhalf * logn + nhalf * logx - logx +[CLS]org.apache.commons.math3.distribution.FDistribution:115-throw new NotStrictlyPositiveException(LocalizedFormats.DEGREES_OF_FREEDOM,	0
org.apache.commons.math3.distribution.FDistribution:136-return FastMath.exp(nhalf * logn + nhalf * logx - logx +[CLS]org.apache.commons.math3.distribution.FDistribution:154-if (x <= 0) {	0
org.apache.commons.math3.distribution.FDistribution:136-return FastMath.exp(nhalf * logn + nhalf * logx - logx +[CLS]org.apache.commons.math3.distribution.FDistribution:155-ret = 0;	0
org.apache.commons.math3.distribution.FDistribution:136-return FastMath.exp(nhalf * logn + nhalf * logx - logx +[CLS]org.apache.commons.math3.distribution.FDistribution:157-double n = numeratorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.FDistribution:136-return FastMath.exp(nhalf * logn + nhalf * logx - logx +[CLS]org.apache.commons.math3.distribution.FDistribution:158-double m = denominatorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.FDistribution:136-return FastMath.exp(nhalf * logn + nhalf * logx - logx +[CLS]org.apache.commons.math3.distribution.FDistribution:160-ret = Beta.regularizedBeta((n * x) / (m + n * x),	0
org.apache.commons.math3.distribution.FDistribution:136-return FastMath.exp(nhalf * logn + nhalf * logx - logx +[CLS]org.apache.commons.math3.distribution.FDistribution:164-return ret;	0
org.apache.commons.math3.distribution.FDistribution:136-return FastMath.exp(nhalf * logn + nhalf * logx - logx +[CLS]org.apache.commons.math3.distribution.FDistribution:173-return numeratorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.FDistribution:136-return FastMath.exp(nhalf * logn + nhalf * logx - logx +[CLS]org.apache.commons.math3.distribution.FDistribution:182-return denominatorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.FDistribution:136-return FastMath.exp(nhalf * logn + nhalf * logx - logx +[CLS]org.apache.commons.math3.distribution.FDistribution:188-return solverAbsoluteAccuracy;	0
org.apache.commons.math3.distribution.FDistribution:136-return FastMath.exp(nhalf * logn + nhalf * logx - logx +[CLS]org.apache.commons.math3.distribution.FDistribution:201-final double denominatorDF = getDenominatorDegreesOfFreedom();	0
org.apache.commons.math3.distribution.FDistribution:136-return FastMath.exp(nhalf * logn + nhalf * logx - logx +[CLS]org.apache.commons.math3.distribution.FDistribution:203-if (denominatorDF > 2) {	0
org.apache.commons.math3.distribution.FDistribution:136-return FastMath.exp(nhalf * logn + nhalf * logx - logx +[CLS]org.apache.commons.math3.distribution.FDistribution:204-return denominatorDF / (denominatorDF - 2);	0
org.apache.commons.math3.distribution.UniformRealDistribution:109-if (x < lower || x > upper) {[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:112-return 1 / (upper - lower);	0
org.apache.commons.math3.distribution.UniformRealDistribution:109-if (x < lower || x > upper) {[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:174-return upper;	0
org.apache.commons.math3.distribution.UniformRealDistribution:109-if (x < lower || x > upper) {[CLS]org.apache.commons.math3.distribution.FDistribution:258-return 0;	0
org.apache.commons.math3.distribution.UniformRealDistribution:109-if (x < lower || x > upper) {[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:64-this(lower, upper, DEFAULT_INVERSE_ABSOLUTE_ACCURACY);	0
org.apache.commons.math3.distribution.UniformRealDistribution:109-if (x < lower || x > upper) {[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:65-}	0
org.apache.commons.math3.distribution.UniformRealDistribution:109-if (x < lower || x > upper) {[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:77-this(newWell19937c(), lower, upper, inverseCumAccuracy);	0
org.apache.commons.math3.distribution.UniformRealDistribution:109-if (x < lower || x > upper) {[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:78-}	0
org.apache.commons.math3.distribution.UniformRealDistribution:109-if (x < lower || x > upper) {[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:95-super(rng);	0
org.apache.commons.math3.distribution.UniformRealDistribution:109-if (x < lower || x > upper) {[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:96-if (lower >= upper) {	0
org.apache.commons.math3.distribution.UniformRealDistribution:109-if (x < lower || x > upper) {[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:102-this.lower = lower;	0
org.apache.commons.math3.distribution.UniformRealDistribution:109-if (x < lower || x > upper) {[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:103-this.upper = upper;	0
org.apache.commons.math3.distribution.UniformRealDistribution:109-if (x < lower || x > upper) {[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:104-solverAbsoluteAccuracy = inverseCumAccuracy;	0
org.apache.commons.math3.distribution.UniformRealDistribution:109-if (x < lower || x > upper) {[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:105-}	0
org.apache.commons.math3.distribution.UniformRealDistribution:109-if (x < lower || x > upper) {[CLS]org.apache.commons.math3.distribution.FDistribution:65-this(numeratorDegreesOfFreedom, denominatorDegreesOfFreedom,	0
org.apache.commons.math3.distribution.UniformRealDistribution:109-if (x < lower || x > upper) {[CLS]org.apache.commons.math3.distribution.FDistribution:67-}	0
org.apache.commons.math3.distribution.UniformRealDistribution:109-if (x < lower || x > upper) {[CLS]org.apache.commons.math3.distribution.FDistribution:86-this(new Well19937c(), numeratorDegreesOfFreedom,	0
org.apache.commons.math3.distribution.UniformRealDistribution:109-if (x < lower || x > upper) {[CLS]org.apache.commons.math3.distribution.FDistribution:88-}	0
org.apache.commons.math3.distribution.UniformRealDistribution:109-if (x < lower || x > upper) {[CLS]org.apache.commons.math3.distribution.FDistribution:108-super(rng);	0
org.apache.commons.math3.distribution.UniformRealDistribution:109-if (x < lower || x > upper) {[CLS]org.apache.commons.math3.distribution.FDistribution:49-private double numericalVariance = Double.NaN;	0
org.apache.commons.math3.distribution.UniformRealDistribution:109-if (x < lower || x > upper) {[CLS]org.apache.commons.math3.distribution.FDistribution:51-private boolean numericalVarianceIsCalculated = false;	0
org.apache.commons.math3.distribution.UniformRealDistribution:109-if (x < lower || x > upper) {[CLS]org.apache.commons.math3.distribution.FDistribution:110-if (numeratorDegreesOfFreedom <= 0) {	0
org.apache.commons.math3.distribution.UniformRealDistribution:109-if (x < lower || x > upper) {[CLS]org.apache.commons.math3.distribution.FDistribution:114-if (denominatorDegreesOfFreedom <= 0) {	0
org.apache.commons.math3.distribution.UniformRealDistribution:109-if (x < lower || x > upper) {[CLS]org.apache.commons.math3.distribution.FDistribution:118-this.numeratorDegreesOfFreedom = numeratorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.UniformRealDistribution:109-if (x < lower || x > upper) {[CLS]org.apache.commons.math3.distribution.FDistribution:119-this.denominatorDegreesOfFreedom = denominatorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.UniformRealDistribution:109-if (x < lower || x > upper) {[CLS]org.apache.commons.math3.distribution.FDistribution:120-solverAbsoluteAccuracy = inverseCumAccuracy;	0
org.apache.commons.math3.distribution.UniformRealDistribution:109-if (x < lower || x > upper) {[CLS]org.apache.commons.math3.distribution.FDistribution:121-}	0
org.apache.commons.math3.distribution.UniformRealDistribution:109-if (x < lower || x > upper) {[CLS]org.apache.commons.math3.distribution.FDistribution:111-throw new NotStrictlyPositiveException(LocalizedFormats.DEGREES_OF_FREEDOM,	0
org.apache.commons.math3.distribution.UniformRealDistribution:109-if (x < lower || x > upper) {[CLS]org.apache.commons.math3.distribution.FDistribution:115-throw new NotStrictlyPositiveException(LocalizedFormats.DEGREES_OF_FREEDOM,	0
org.apache.commons.math3.distribution.UniformRealDistribution:109-if (x < lower || x > upper) {[CLS]org.apache.commons.math3.distribution.FDistribution:154-if (x <= 0) {	0
org.apache.commons.math3.distribution.UniformRealDistribution:109-if (x < lower || x > upper) {[CLS]org.apache.commons.math3.distribution.FDistribution:155-ret = 0;	0
org.apache.commons.math3.distribution.UniformRealDistribution:109-if (x < lower || x > upper) {[CLS]org.apache.commons.math3.distribution.FDistribution:157-double n = numeratorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.UniformRealDistribution:109-if (x < lower || x > upper) {[CLS]org.apache.commons.math3.distribution.FDistribution:158-double m = denominatorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.UniformRealDistribution:109-if (x < lower || x > upper) {[CLS]org.apache.commons.math3.distribution.FDistribution:160-ret = Beta.regularizedBeta((n * x) / (m + n * x),	0
org.apache.commons.math3.distribution.UniformRealDistribution:109-if (x < lower || x > upper) {[CLS]org.apache.commons.math3.distribution.FDistribution:164-return ret;	0
org.apache.commons.math3.distribution.UniformRealDistribution:109-if (x < lower || x > upper) {[CLS]org.apache.commons.math3.distribution.FDistribution:173-return numeratorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.UniformRealDistribution:109-if (x < lower || x > upper) {[CLS]org.apache.commons.math3.distribution.FDistribution:182-return denominatorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.UniformRealDistribution:109-if (x < lower || x > upper) {[CLS]org.apache.commons.math3.distribution.FDistribution:188-return solverAbsoluteAccuracy;	0
org.apache.commons.math3.distribution.UniformRealDistribution:109-if (x < lower || x > upper) {[CLS]org.apache.commons.math3.distribution.FDistribution:201-final double denominatorDF = getDenominatorDegreesOfFreedom();	0
org.apache.commons.math3.distribution.UniformRealDistribution:109-if (x < lower || x > upper) {[CLS]org.apache.commons.math3.distribution.FDistribution:203-if (denominatorDF > 2) {	0
org.apache.commons.math3.distribution.UniformRealDistribution:109-if (x < lower || x > upper) {[CLS]org.apache.commons.math3.distribution.FDistribution:204-return denominatorDF / (denominatorDF - 2);	0
org.apache.commons.math3.distribution.UniformRealDistribution:112-return 1 / (upper - lower);[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:174-return upper;	0
org.apache.commons.math3.distribution.UniformRealDistribution:112-return 1 / (upper - lower);[CLS]org.apache.commons.math3.distribution.FDistribution:258-return 0;	0
org.apache.commons.math3.distribution.UniformRealDistribution:112-return 1 / (upper - lower);[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:64-this(lower, upper, DEFAULT_INVERSE_ABSOLUTE_ACCURACY);	0
org.apache.commons.math3.distribution.UniformRealDistribution:112-return 1 / (upper - lower);[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:65-}	0
org.apache.commons.math3.distribution.UniformRealDistribution:112-return 1 / (upper - lower);[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:77-this(newWell19937c(), lower, upper, inverseCumAccuracy);	0
org.apache.commons.math3.distribution.UniformRealDistribution:112-return 1 / (upper - lower);[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:78-}	0
org.apache.commons.math3.distribution.UniformRealDistribution:112-return 1 / (upper - lower);[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:95-super(rng);	0
org.apache.commons.math3.distribution.UniformRealDistribution:112-return 1 / (upper - lower);[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:96-if (lower >= upper) {	0
org.apache.commons.math3.distribution.UniformRealDistribution:112-return 1 / (upper - lower);[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:102-this.lower = lower;	0
org.apache.commons.math3.distribution.UniformRealDistribution:112-return 1 / (upper - lower);[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:103-this.upper = upper;	0
org.apache.commons.math3.distribution.UniformRealDistribution:112-return 1 / (upper - lower);[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:104-solverAbsoluteAccuracy = inverseCumAccuracy;	0
org.apache.commons.math3.distribution.UniformRealDistribution:112-return 1 / (upper - lower);[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:105-}	0
org.apache.commons.math3.distribution.UniformRealDistribution:112-return 1 / (upper - lower);[CLS]org.apache.commons.math3.distribution.FDistribution:65-this(numeratorDegreesOfFreedom, denominatorDegreesOfFreedom,	0
org.apache.commons.math3.distribution.UniformRealDistribution:112-return 1 / (upper - lower);[CLS]org.apache.commons.math3.distribution.FDistribution:67-}	0
org.apache.commons.math3.distribution.UniformRealDistribution:112-return 1 / (upper - lower);[CLS]org.apache.commons.math3.distribution.FDistribution:86-this(new Well19937c(), numeratorDegreesOfFreedom,	0
org.apache.commons.math3.distribution.UniformRealDistribution:112-return 1 / (upper - lower);[CLS]org.apache.commons.math3.distribution.FDistribution:88-}	0
org.apache.commons.math3.distribution.UniformRealDistribution:112-return 1 / (upper - lower);[CLS]org.apache.commons.math3.distribution.FDistribution:108-super(rng);	0
org.apache.commons.math3.distribution.UniformRealDistribution:112-return 1 / (upper - lower);[CLS]org.apache.commons.math3.distribution.FDistribution:49-private double numericalVariance = Double.NaN;	0
org.apache.commons.math3.distribution.UniformRealDistribution:112-return 1 / (upper - lower);[CLS]org.apache.commons.math3.distribution.FDistribution:51-private boolean numericalVarianceIsCalculated = false;	0
org.apache.commons.math3.distribution.UniformRealDistribution:112-return 1 / (upper - lower);[CLS]org.apache.commons.math3.distribution.FDistribution:110-if (numeratorDegreesOfFreedom <= 0) {	0
org.apache.commons.math3.distribution.UniformRealDistribution:112-return 1 / (upper - lower);[CLS]org.apache.commons.math3.distribution.FDistribution:114-if (denominatorDegreesOfFreedom <= 0) {	0
org.apache.commons.math3.distribution.UniformRealDistribution:112-return 1 / (upper - lower);[CLS]org.apache.commons.math3.distribution.FDistribution:118-this.numeratorDegreesOfFreedom = numeratorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.UniformRealDistribution:112-return 1 / (upper - lower);[CLS]org.apache.commons.math3.distribution.FDistribution:119-this.denominatorDegreesOfFreedom = denominatorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.UniformRealDistribution:112-return 1 / (upper - lower);[CLS]org.apache.commons.math3.distribution.FDistribution:120-solverAbsoluteAccuracy = inverseCumAccuracy;	0
org.apache.commons.math3.distribution.UniformRealDistribution:112-return 1 / (upper - lower);[CLS]org.apache.commons.math3.distribution.FDistribution:121-}	0
org.apache.commons.math3.distribution.UniformRealDistribution:112-return 1 / (upper - lower);[CLS]org.apache.commons.math3.distribution.FDistribution:111-throw new NotStrictlyPositiveException(LocalizedFormats.DEGREES_OF_FREEDOM,	0
org.apache.commons.math3.distribution.UniformRealDistribution:112-return 1 / (upper - lower);[CLS]org.apache.commons.math3.distribution.FDistribution:115-throw new NotStrictlyPositiveException(LocalizedFormats.DEGREES_OF_FREEDOM,	0
org.apache.commons.math3.distribution.UniformRealDistribution:112-return 1 / (upper - lower);[CLS]org.apache.commons.math3.distribution.FDistribution:154-if (x <= 0) {	0
org.apache.commons.math3.distribution.UniformRealDistribution:112-return 1 / (upper - lower);[CLS]org.apache.commons.math3.distribution.FDistribution:155-ret = 0;	0
org.apache.commons.math3.distribution.UniformRealDistribution:112-return 1 / (upper - lower);[CLS]org.apache.commons.math3.distribution.FDistribution:157-double n = numeratorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.UniformRealDistribution:112-return 1 / (upper - lower);[CLS]org.apache.commons.math3.distribution.FDistribution:158-double m = denominatorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.UniformRealDistribution:112-return 1 / (upper - lower);[CLS]org.apache.commons.math3.distribution.FDistribution:160-ret = Beta.regularizedBeta((n * x) / (m + n * x),	0
org.apache.commons.math3.distribution.UniformRealDistribution:112-return 1 / (upper - lower);[CLS]org.apache.commons.math3.distribution.FDistribution:164-return ret;	0
org.apache.commons.math3.distribution.UniformRealDistribution:112-return 1 / (upper - lower);[CLS]org.apache.commons.math3.distribution.FDistribution:173-return numeratorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.UniformRealDistribution:112-return 1 / (upper - lower);[CLS]org.apache.commons.math3.distribution.FDistribution:182-return denominatorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.UniformRealDistribution:112-return 1 / (upper - lower);[CLS]org.apache.commons.math3.distribution.FDistribution:188-return solverAbsoluteAccuracy;	0
org.apache.commons.math3.distribution.UniformRealDistribution:112-return 1 / (upper - lower);[CLS]org.apache.commons.math3.distribution.FDistribution:201-final double denominatorDF = getDenominatorDegreesOfFreedom();	0
org.apache.commons.math3.distribution.UniformRealDistribution:112-return 1 / (upper - lower);[CLS]org.apache.commons.math3.distribution.FDistribution:203-if (denominatorDF > 2) {	0
org.apache.commons.math3.distribution.UniformRealDistribution:112-return 1 / (upper - lower);[CLS]org.apache.commons.math3.distribution.FDistribution:204-return denominatorDF / (denominatorDF - 2);	0
org.apache.commons.math3.distribution.UniformRealDistribution:174-return upper;[CLS]org.apache.commons.math3.distribution.FDistribution:258-return 0;	0
org.apache.commons.math3.distribution.UniformRealDistribution:174-return upper;[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:64-this(lower, upper, DEFAULT_INVERSE_ABSOLUTE_ACCURACY);	0
org.apache.commons.math3.distribution.UniformRealDistribution:174-return upper;[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:65-}	0
org.apache.commons.math3.distribution.UniformRealDistribution:174-return upper;[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:77-this(newWell19937c(), lower, upper, inverseCumAccuracy);	0
org.apache.commons.math3.distribution.UniformRealDistribution:174-return upper;[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:78-}	0
org.apache.commons.math3.distribution.UniformRealDistribution:174-return upper;[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:95-super(rng);	0
org.apache.commons.math3.distribution.UniformRealDistribution:174-return upper;[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:96-if (lower >= upper) {	0
org.apache.commons.math3.distribution.UniformRealDistribution:174-return upper;[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:102-this.lower = lower;	0
org.apache.commons.math3.distribution.UniformRealDistribution:174-return upper;[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:103-this.upper = upper;	0
org.apache.commons.math3.distribution.UniformRealDistribution:174-return upper;[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:104-solverAbsoluteAccuracy = inverseCumAccuracy;	0
org.apache.commons.math3.distribution.UniformRealDistribution:174-return upper;[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:105-}	0
org.apache.commons.math3.distribution.UniformRealDistribution:174-return upper;[CLS]org.apache.commons.math3.distribution.FDistribution:65-this(numeratorDegreesOfFreedom, denominatorDegreesOfFreedom,	0
org.apache.commons.math3.distribution.UniformRealDistribution:174-return upper;[CLS]org.apache.commons.math3.distribution.FDistribution:67-}	0
org.apache.commons.math3.distribution.UniformRealDistribution:174-return upper;[CLS]org.apache.commons.math3.distribution.FDistribution:86-this(new Well19937c(), numeratorDegreesOfFreedom,	0
org.apache.commons.math3.distribution.UniformRealDistribution:174-return upper;[CLS]org.apache.commons.math3.distribution.FDistribution:88-}	0
org.apache.commons.math3.distribution.UniformRealDistribution:174-return upper;[CLS]org.apache.commons.math3.distribution.FDistribution:108-super(rng);	0
org.apache.commons.math3.distribution.UniformRealDistribution:174-return upper;[CLS]org.apache.commons.math3.distribution.FDistribution:49-private double numericalVariance = Double.NaN;	0
org.apache.commons.math3.distribution.UniformRealDistribution:174-return upper;[CLS]org.apache.commons.math3.distribution.FDistribution:51-private boolean numericalVarianceIsCalculated = false;	0
org.apache.commons.math3.distribution.UniformRealDistribution:174-return upper;[CLS]org.apache.commons.math3.distribution.FDistribution:110-if (numeratorDegreesOfFreedom <= 0) {	0
org.apache.commons.math3.distribution.UniformRealDistribution:174-return upper;[CLS]org.apache.commons.math3.distribution.FDistribution:114-if (denominatorDegreesOfFreedom <= 0) {	0
org.apache.commons.math3.distribution.UniformRealDistribution:174-return upper;[CLS]org.apache.commons.math3.distribution.FDistribution:118-this.numeratorDegreesOfFreedom = numeratorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.UniformRealDistribution:174-return upper;[CLS]org.apache.commons.math3.distribution.FDistribution:119-this.denominatorDegreesOfFreedom = denominatorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.UniformRealDistribution:174-return upper;[CLS]org.apache.commons.math3.distribution.FDistribution:120-solverAbsoluteAccuracy = inverseCumAccuracy;	0
org.apache.commons.math3.distribution.UniformRealDistribution:174-return upper;[CLS]org.apache.commons.math3.distribution.FDistribution:121-}	0
org.apache.commons.math3.distribution.UniformRealDistribution:174-return upper;[CLS]org.apache.commons.math3.distribution.FDistribution:111-throw new NotStrictlyPositiveException(LocalizedFormats.DEGREES_OF_FREEDOM,	0
org.apache.commons.math3.distribution.UniformRealDistribution:174-return upper;[CLS]org.apache.commons.math3.distribution.FDistribution:115-throw new NotStrictlyPositiveException(LocalizedFormats.DEGREES_OF_FREEDOM,	0
org.apache.commons.math3.distribution.UniformRealDistribution:174-return upper;[CLS]org.apache.commons.math3.distribution.FDistribution:154-if (x <= 0) {	0
org.apache.commons.math3.distribution.UniformRealDistribution:174-return upper;[CLS]org.apache.commons.math3.distribution.FDistribution:155-ret = 0;	0
org.apache.commons.math3.distribution.UniformRealDistribution:174-return upper;[CLS]org.apache.commons.math3.distribution.FDistribution:157-double n = numeratorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.UniformRealDistribution:174-return upper;[CLS]org.apache.commons.math3.distribution.FDistribution:158-double m = denominatorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.UniformRealDistribution:174-return upper;[CLS]org.apache.commons.math3.distribution.FDistribution:160-ret = Beta.regularizedBeta((n * x) / (m + n * x),	0
org.apache.commons.math3.distribution.UniformRealDistribution:174-return upper;[CLS]org.apache.commons.math3.distribution.FDistribution:164-return ret;	0
org.apache.commons.math3.distribution.UniformRealDistribution:174-return upper;[CLS]org.apache.commons.math3.distribution.FDistribution:173-return numeratorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.UniformRealDistribution:174-return upper;[CLS]org.apache.commons.math3.distribution.FDistribution:182-return denominatorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.UniformRealDistribution:174-return upper;[CLS]org.apache.commons.math3.distribution.FDistribution:188-return solverAbsoluteAccuracy;	0
org.apache.commons.math3.distribution.UniformRealDistribution:174-return upper;[CLS]org.apache.commons.math3.distribution.FDistribution:201-final double denominatorDF = getDenominatorDegreesOfFreedom();	0
org.apache.commons.math3.distribution.UniformRealDistribution:174-return upper;[CLS]org.apache.commons.math3.distribution.FDistribution:203-if (denominatorDF > 2) {	0
org.apache.commons.math3.distribution.UniformRealDistribution:174-return upper;[CLS]org.apache.commons.math3.distribution.FDistribution:204-return denominatorDF / (denominatorDF - 2);	0
org.apache.commons.math3.distribution.FDistribution:258-return 0;[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:64-this(lower, upper, DEFAULT_INVERSE_ABSOLUTE_ACCURACY);	0
org.apache.commons.math3.distribution.FDistribution:258-return 0;[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:65-}	0
org.apache.commons.math3.distribution.FDistribution:258-return 0;[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:77-this(newWell19937c(), lower, upper, inverseCumAccuracy);	0
org.apache.commons.math3.distribution.FDistribution:258-return 0;[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:78-}	0
org.apache.commons.math3.distribution.FDistribution:258-return 0;[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:95-super(rng);	0
org.apache.commons.math3.distribution.FDistribution:258-return 0;[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:96-if (lower >= upper) {	0
org.apache.commons.math3.distribution.FDistribution:258-return 0;[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:102-this.lower = lower;	0
org.apache.commons.math3.distribution.FDistribution:258-return 0;[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:103-this.upper = upper;	0
org.apache.commons.math3.distribution.FDistribution:258-return 0;[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:104-solverAbsoluteAccuracy = inverseCumAccuracy;	0
org.apache.commons.math3.distribution.FDistribution:258-return 0;[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:105-}	0
org.apache.commons.math3.distribution.FDistribution:258-return 0;[CLS]org.apache.commons.math3.distribution.FDistribution:65-this(numeratorDegreesOfFreedom, denominatorDegreesOfFreedom,	0
org.apache.commons.math3.distribution.FDistribution:258-return 0;[CLS]org.apache.commons.math3.distribution.FDistribution:67-}	0
org.apache.commons.math3.distribution.FDistribution:258-return 0;[CLS]org.apache.commons.math3.distribution.FDistribution:86-this(new Well19937c(), numeratorDegreesOfFreedom,	0
org.apache.commons.math3.distribution.FDistribution:258-return 0;[CLS]org.apache.commons.math3.distribution.FDistribution:88-}	0
org.apache.commons.math3.distribution.FDistribution:258-return 0;[CLS]org.apache.commons.math3.distribution.FDistribution:108-super(rng);	0
org.apache.commons.math3.distribution.FDistribution:258-return 0;[CLS]org.apache.commons.math3.distribution.FDistribution:49-private double numericalVariance = Double.NaN;	0
org.apache.commons.math3.distribution.FDistribution:258-return 0;[CLS]org.apache.commons.math3.distribution.FDistribution:51-private boolean numericalVarianceIsCalculated = false;	0
org.apache.commons.math3.distribution.FDistribution:258-return 0;[CLS]org.apache.commons.math3.distribution.FDistribution:110-if (numeratorDegreesOfFreedom <= 0) {	0
org.apache.commons.math3.distribution.FDistribution:258-return 0;[CLS]org.apache.commons.math3.distribution.FDistribution:114-if (denominatorDegreesOfFreedom <= 0) {	0
org.apache.commons.math3.distribution.FDistribution:258-return 0;[CLS]org.apache.commons.math3.distribution.FDistribution:118-this.numeratorDegreesOfFreedom = numeratorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.FDistribution:258-return 0;[CLS]org.apache.commons.math3.distribution.FDistribution:119-this.denominatorDegreesOfFreedom = denominatorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.FDistribution:258-return 0;[CLS]org.apache.commons.math3.distribution.FDistribution:120-solverAbsoluteAccuracy = inverseCumAccuracy;	0
org.apache.commons.math3.distribution.FDistribution:258-return 0;[CLS]org.apache.commons.math3.distribution.FDistribution:121-}	0
org.apache.commons.math3.distribution.FDistribution:258-return 0;[CLS]org.apache.commons.math3.distribution.FDistribution:111-throw new NotStrictlyPositiveException(LocalizedFormats.DEGREES_OF_FREEDOM,	0
org.apache.commons.math3.distribution.FDistribution:258-return 0;[CLS]org.apache.commons.math3.distribution.FDistribution:115-throw new NotStrictlyPositiveException(LocalizedFormats.DEGREES_OF_FREEDOM,	0
org.apache.commons.math3.distribution.FDistribution:258-return 0;[CLS]org.apache.commons.math3.distribution.FDistribution:154-if (x <= 0) {	0
org.apache.commons.math3.distribution.FDistribution:258-return 0;[CLS]org.apache.commons.math3.distribution.FDistribution:155-ret = 0;	0
org.apache.commons.math3.distribution.FDistribution:258-return 0;[CLS]org.apache.commons.math3.distribution.FDistribution:157-double n = numeratorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.FDistribution:258-return 0;[CLS]org.apache.commons.math3.distribution.FDistribution:158-double m = denominatorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.FDistribution:258-return 0;[CLS]org.apache.commons.math3.distribution.FDistribution:160-ret = Beta.regularizedBeta((n * x) / (m + n * x),	0
org.apache.commons.math3.distribution.FDistribution:258-return 0;[CLS]org.apache.commons.math3.distribution.FDistribution:164-return ret;	0
org.apache.commons.math3.distribution.FDistribution:258-return 0;[CLS]org.apache.commons.math3.distribution.FDistribution:173-return numeratorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.FDistribution:258-return 0;[CLS]org.apache.commons.math3.distribution.FDistribution:182-return denominatorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.FDistribution:258-return 0;[CLS]org.apache.commons.math3.distribution.FDistribution:188-return solverAbsoluteAccuracy;	0
org.apache.commons.math3.distribution.FDistribution:258-return 0;[CLS]org.apache.commons.math3.distribution.FDistribution:201-final double denominatorDF = getDenominatorDegreesOfFreedom();	0
org.apache.commons.math3.distribution.FDistribution:258-return 0;[CLS]org.apache.commons.math3.distribution.FDistribution:203-if (denominatorDF > 2) {	0
org.apache.commons.math3.distribution.FDistribution:258-return 0;[CLS]org.apache.commons.math3.distribution.FDistribution:204-return denominatorDF / (denominatorDF - 2);	0
org.apache.commons.math3.distribution.UniformRealDistribution:64-this(lower, upper, DEFAULT_INVERSE_ABSOLUTE_ACCURACY);[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:65-}	0
org.apache.commons.math3.distribution.UniformRealDistribution:64-this(lower, upper, DEFAULT_INVERSE_ABSOLUTE_ACCURACY);[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:77-this(newWell19937c(), lower, upper, inverseCumAccuracy);	0
org.apache.commons.math3.distribution.UniformRealDistribution:64-this(lower, upper, DEFAULT_INVERSE_ABSOLUTE_ACCURACY);[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:78-}	0
org.apache.commons.math3.distribution.UniformRealDistribution:64-this(lower, upper, DEFAULT_INVERSE_ABSOLUTE_ACCURACY);[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:95-super(rng);	0
org.apache.commons.math3.distribution.UniformRealDistribution:64-this(lower, upper, DEFAULT_INVERSE_ABSOLUTE_ACCURACY);[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:96-if (lower >= upper) {	0
org.apache.commons.math3.distribution.UniformRealDistribution:64-this(lower, upper, DEFAULT_INVERSE_ABSOLUTE_ACCURACY);[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:102-this.lower = lower;	0
org.apache.commons.math3.distribution.UniformRealDistribution:64-this(lower, upper, DEFAULT_INVERSE_ABSOLUTE_ACCURACY);[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:103-this.upper = upper;	0
org.apache.commons.math3.distribution.UniformRealDistribution:64-this(lower, upper, DEFAULT_INVERSE_ABSOLUTE_ACCURACY);[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:104-solverAbsoluteAccuracy = inverseCumAccuracy;	0
org.apache.commons.math3.distribution.UniformRealDistribution:64-this(lower, upper, DEFAULT_INVERSE_ABSOLUTE_ACCURACY);[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:105-}	0
org.apache.commons.math3.distribution.UniformRealDistribution:64-this(lower, upper, DEFAULT_INVERSE_ABSOLUTE_ACCURACY);[CLS]org.apache.commons.math3.distribution.FDistribution:65-this(numeratorDegreesOfFreedom, denominatorDegreesOfFreedom,	0
org.apache.commons.math3.distribution.UniformRealDistribution:64-this(lower, upper, DEFAULT_INVERSE_ABSOLUTE_ACCURACY);[CLS]org.apache.commons.math3.distribution.FDistribution:67-}	0
org.apache.commons.math3.distribution.UniformRealDistribution:64-this(lower, upper, DEFAULT_INVERSE_ABSOLUTE_ACCURACY);[CLS]org.apache.commons.math3.distribution.FDistribution:86-this(new Well19937c(), numeratorDegreesOfFreedom,	0
org.apache.commons.math3.distribution.UniformRealDistribution:64-this(lower, upper, DEFAULT_INVERSE_ABSOLUTE_ACCURACY);[CLS]org.apache.commons.math3.distribution.FDistribution:88-}	0
org.apache.commons.math3.distribution.UniformRealDistribution:64-this(lower, upper, DEFAULT_INVERSE_ABSOLUTE_ACCURACY);[CLS]org.apache.commons.math3.distribution.FDistribution:108-super(rng);	0
org.apache.commons.math3.distribution.UniformRealDistribution:64-this(lower, upper, DEFAULT_INVERSE_ABSOLUTE_ACCURACY);[CLS]org.apache.commons.math3.distribution.FDistribution:49-private double numericalVariance = Double.NaN;	0
org.apache.commons.math3.distribution.UniformRealDistribution:64-this(lower, upper, DEFAULT_INVERSE_ABSOLUTE_ACCURACY);[CLS]org.apache.commons.math3.distribution.FDistribution:51-private boolean numericalVarianceIsCalculated = false;	0
org.apache.commons.math3.distribution.UniformRealDistribution:64-this(lower, upper, DEFAULT_INVERSE_ABSOLUTE_ACCURACY);[CLS]org.apache.commons.math3.distribution.FDistribution:110-if (numeratorDegreesOfFreedom <= 0) {	0
org.apache.commons.math3.distribution.UniformRealDistribution:64-this(lower, upper, DEFAULT_INVERSE_ABSOLUTE_ACCURACY);[CLS]org.apache.commons.math3.distribution.FDistribution:114-if (denominatorDegreesOfFreedom <= 0) {	0
org.apache.commons.math3.distribution.UniformRealDistribution:64-this(lower, upper, DEFAULT_INVERSE_ABSOLUTE_ACCURACY);[CLS]org.apache.commons.math3.distribution.FDistribution:118-this.numeratorDegreesOfFreedom = numeratorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.UniformRealDistribution:64-this(lower, upper, DEFAULT_INVERSE_ABSOLUTE_ACCURACY);[CLS]org.apache.commons.math3.distribution.FDistribution:119-this.denominatorDegreesOfFreedom = denominatorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.UniformRealDistribution:64-this(lower, upper, DEFAULT_INVERSE_ABSOLUTE_ACCURACY);[CLS]org.apache.commons.math3.distribution.FDistribution:120-solverAbsoluteAccuracy = inverseCumAccuracy;	0
org.apache.commons.math3.distribution.UniformRealDistribution:64-this(lower, upper, DEFAULT_INVERSE_ABSOLUTE_ACCURACY);[CLS]org.apache.commons.math3.distribution.FDistribution:121-}	0
org.apache.commons.math3.distribution.UniformRealDistribution:64-this(lower, upper, DEFAULT_INVERSE_ABSOLUTE_ACCURACY);[CLS]org.apache.commons.math3.distribution.FDistribution:111-throw new NotStrictlyPositiveException(LocalizedFormats.DEGREES_OF_FREEDOM,	0
org.apache.commons.math3.distribution.UniformRealDistribution:64-this(lower, upper, DEFAULT_INVERSE_ABSOLUTE_ACCURACY);[CLS]org.apache.commons.math3.distribution.FDistribution:115-throw new NotStrictlyPositiveException(LocalizedFormats.DEGREES_OF_FREEDOM,	0
org.apache.commons.math3.distribution.UniformRealDistribution:64-this(lower, upper, DEFAULT_INVERSE_ABSOLUTE_ACCURACY);[CLS]org.apache.commons.math3.distribution.FDistribution:154-if (x <= 0) {	0
org.apache.commons.math3.distribution.UniformRealDistribution:64-this(lower, upper, DEFAULT_INVERSE_ABSOLUTE_ACCURACY);[CLS]org.apache.commons.math3.distribution.FDistribution:155-ret = 0;	0
org.apache.commons.math3.distribution.UniformRealDistribution:64-this(lower, upper, DEFAULT_INVERSE_ABSOLUTE_ACCURACY);[CLS]org.apache.commons.math3.distribution.FDistribution:157-double n = numeratorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.UniformRealDistribution:64-this(lower, upper, DEFAULT_INVERSE_ABSOLUTE_ACCURACY);[CLS]org.apache.commons.math3.distribution.FDistribution:158-double m = denominatorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.UniformRealDistribution:64-this(lower, upper, DEFAULT_INVERSE_ABSOLUTE_ACCURACY);[CLS]org.apache.commons.math3.distribution.FDistribution:160-ret = Beta.regularizedBeta((n * x) / (m + n * x),	0
org.apache.commons.math3.distribution.UniformRealDistribution:64-this(lower, upper, DEFAULT_INVERSE_ABSOLUTE_ACCURACY);[CLS]org.apache.commons.math3.distribution.FDistribution:164-return ret;	0
org.apache.commons.math3.distribution.UniformRealDistribution:64-this(lower, upper, DEFAULT_INVERSE_ABSOLUTE_ACCURACY);[CLS]org.apache.commons.math3.distribution.FDistribution:173-return numeratorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.UniformRealDistribution:64-this(lower, upper, DEFAULT_INVERSE_ABSOLUTE_ACCURACY);[CLS]org.apache.commons.math3.distribution.FDistribution:182-return denominatorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.UniformRealDistribution:64-this(lower, upper, DEFAULT_INVERSE_ABSOLUTE_ACCURACY);[CLS]org.apache.commons.math3.distribution.FDistribution:188-return solverAbsoluteAccuracy;	0
org.apache.commons.math3.distribution.UniformRealDistribution:64-this(lower, upper, DEFAULT_INVERSE_ABSOLUTE_ACCURACY);[CLS]org.apache.commons.math3.distribution.FDistribution:201-final double denominatorDF = getDenominatorDegreesOfFreedom();	0
org.apache.commons.math3.distribution.UniformRealDistribution:64-this(lower, upper, DEFAULT_INVERSE_ABSOLUTE_ACCURACY);[CLS]org.apache.commons.math3.distribution.FDistribution:203-if (denominatorDF > 2) {	0
org.apache.commons.math3.distribution.UniformRealDistribution:64-this(lower, upper, DEFAULT_INVERSE_ABSOLUTE_ACCURACY);[CLS]org.apache.commons.math3.distribution.FDistribution:204-return denominatorDF / (denominatorDF - 2);	0
org.apache.commons.math3.distribution.UniformRealDistribution:65-}[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:77-this(newWell19937c(), lower, upper, inverseCumAccuracy);	0
org.apache.commons.math3.distribution.UniformRealDistribution:65-}[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:78-}	0
org.apache.commons.math3.distribution.UniformRealDistribution:65-}[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:95-super(rng);	0
org.apache.commons.math3.distribution.UniformRealDistribution:65-}[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:96-if (lower >= upper) {	0
org.apache.commons.math3.distribution.UniformRealDistribution:65-}[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:102-this.lower = lower;	0
org.apache.commons.math3.distribution.UniformRealDistribution:65-}[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:103-this.upper = upper;	0
org.apache.commons.math3.distribution.UniformRealDistribution:65-}[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:104-solverAbsoluteAccuracy = inverseCumAccuracy;	0
org.apache.commons.math3.distribution.UniformRealDistribution:65-}[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:105-}	0
org.apache.commons.math3.distribution.UniformRealDistribution:65-}[CLS]org.apache.commons.math3.distribution.FDistribution:65-this(numeratorDegreesOfFreedom, denominatorDegreesOfFreedom,	0
org.apache.commons.math3.distribution.UniformRealDistribution:65-}[CLS]org.apache.commons.math3.distribution.FDistribution:67-}	0
org.apache.commons.math3.distribution.UniformRealDistribution:65-}[CLS]org.apache.commons.math3.distribution.FDistribution:86-this(new Well19937c(), numeratorDegreesOfFreedom,	0
org.apache.commons.math3.distribution.UniformRealDistribution:65-}[CLS]org.apache.commons.math3.distribution.FDistribution:88-}	0
org.apache.commons.math3.distribution.UniformRealDistribution:65-}[CLS]org.apache.commons.math3.distribution.FDistribution:108-super(rng);	0
org.apache.commons.math3.distribution.UniformRealDistribution:65-}[CLS]org.apache.commons.math3.distribution.FDistribution:49-private double numericalVariance = Double.NaN;	0
org.apache.commons.math3.distribution.UniformRealDistribution:65-}[CLS]org.apache.commons.math3.distribution.FDistribution:51-private boolean numericalVarianceIsCalculated = false;	0
org.apache.commons.math3.distribution.UniformRealDistribution:65-}[CLS]org.apache.commons.math3.distribution.FDistribution:110-if (numeratorDegreesOfFreedom <= 0) {	0
org.apache.commons.math3.distribution.UniformRealDistribution:65-}[CLS]org.apache.commons.math3.distribution.FDistribution:114-if (denominatorDegreesOfFreedom <= 0) {	0
org.apache.commons.math3.distribution.UniformRealDistribution:65-}[CLS]org.apache.commons.math3.distribution.FDistribution:118-this.numeratorDegreesOfFreedom = numeratorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.UniformRealDistribution:65-}[CLS]org.apache.commons.math3.distribution.FDistribution:119-this.denominatorDegreesOfFreedom = denominatorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.UniformRealDistribution:65-}[CLS]org.apache.commons.math3.distribution.FDistribution:120-solverAbsoluteAccuracy = inverseCumAccuracy;	0
org.apache.commons.math3.distribution.UniformRealDistribution:65-}[CLS]org.apache.commons.math3.distribution.FDistribution:121-}	0
org.apache.commons.math3.distribution.UniformRealDistribution:65-}[CLS]org.apache.commons.math3.distribution.FDistribution:111-throw new NotStrictlyPositiveException(LocalizedFormats.DEGREES_OF_FREEDOM,	0
org.apache.commons.math3.distribution.UniformRealDistribution:65-}[CLS]org.apache.commons.math3.distribution.FDistribution:115-throw new NotStrictlyPositiveException(LocalizedFormats.DEGREES_OF_FREEDOM,	0
org.apache.commons.math3.distribution.UniformRealDistribution:65-}[CLS]org.apache.commons.math3.distribution.FDistribution:154-if (x <= 0) {	0
org.apache.commons.math3.distribution.UniformRealDistribution:65-}[CLS]org.apache.commons.math3.distribution.FDistribution:155-ret = 0;	0
org.apache.commons.math3.distribution.UniformRealDistribution:65-}[CLS]org.apache.commons.math3.distribution.FDistribution:157-double n = numeratorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.UniformRealDistribution:65-}[CLS]org.apache.commons.math3.distribution.FDistribution:158-double m = denominatorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.UniformRealDistribution:65-}[CLS]org.apache.commons.math3.distribution.FDistribution:160-ret = Beta.regularizedBeta((n * x) / (m + n * x),	0
org.apache.commons.math3.distribution.UniformRealDistribution:65-}[CLS]org.apache.commons.math3.distribution.FDistribution:164-return ret;	0
org.apache.commons.math3.distribution.UniformRealDistribution:65-}[CLS]org.apache.commons.math3.distribution.FDistribution:173-return numeratorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.UniformRealDistribution:65-}[CLS]org.apache.commons.math3.distribution.FDistribution:182-return denominatorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.UniformRealDistribution:65-}[CLS]org.apache.commons.math3.distribution.FDistribution:188-return solverAbsoluteAccuracy;	0
org.apache.commons.math3.distribution.UniformRealDistribution:65-}[CLS]org.apache.commons.math3.distribution.FDistribution:201-final double denominatorDF = getDenominatorDegreesOfFreedom();	0
org.apache.commons.math3.distribution.UniformRealDistribution:65-}[CLS]org.apache.commons.math3.distribution.FDistribution:203-if (denominatorDF > 2) {	0
org.apache.commons.math3.distribution.UniformRealDistribution:65-}[CLS]org.apache.commons.math3.distribution.FDistribution:204-return denominatorDF / (denominatorDF - 2);	0
org.apache.commons.math3.distribution.UniformRealDistribution:77-this(newWell19937c(), lower, upper, inverseCumAccuracy);[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:78-}	0
org.apache.commons.math3.distribution.UniformRealDistribution:77-this(newWell19937c(), lower, upper, inverseCumAccuracy);[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:95-super(rng);	0
org.apache.commons.math3.distribution.UniformRealDistribution:77-this(newWell19937c(), lower, upper, inverseCumAccuracy);[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:96-if (lower >= upper) {	0
org.apache.commons.math3.distribution.UniformRealDistribution:77-this(newWell19937c(), lower, upper, inverseCumAccuracy);[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:102-this.lower = lower;	0
org.apache.commons.math3.distribution.UniformRealDistribution:77-this(newWell19937c(), lower, upper, inverseCumAccuracy);[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:103-this.upper = upper;	0
org.apache.commons.math3.distribution.UniformRealDistribution:77-this(newWell19937c(), lower, upper, inverseCumAccuracy);[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:104-solverAbsoluteAccuracy = inverseCumAccuracy;	0
org.apache.commons.math3.distribution.UniformRealDistribution:77-this(newWell19937c(), lower, upper, inverseCumAccuracy);[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:105-}	0
org.apache.commons.math3.distribution.UniformRealDistribution:77-this(newWell19937c(), lower, upper, inverseCumAccuracy);[CLS]org.apache.commons.math3.distribution.FDistribution:65-this(numeratorDegreesOfFreedom, denominatorDegreesOfFreedom,	0
org.apache.commons.math3.distribution.UniformRealDistribution:77-this(newWell19937c(), lower, upper, inverseCumAccuracy);[CLS]org.apache.commons.math3.distribution.FDistribution:67-}	0
org.apache.commons.math3.distribution.UniformRealDistribution:77-this(newWell19937c(), lower, upper, inverseCumAccuracy);[CLS]org.apache.commons.math3.distribution.FDistribution:86-this(new Well19937c(), numeratorDegreesOfFreedom,	0
org.apache.commons.math3.distribution.UniformRealDistribution:77-this(newWell19937c(), lower, upper, inverseCumAccuracy);[CLS]org.apache.commons.math3.distribution.FDistribution:88-}	0
org.apache.commons.math3.distribution.UniformRealDistribution:77-this(newWell19937c(), lower, upper, inverseCumAccuracy);[CLS]org.apache.commons.math3.distribution.FDistribution:108-super(rng);	0
org.apache.commons.math3.distribution.UniformRealDistribution:77-this(newWell19937c(), lower, upper, inverseCumAccuracy);[CLS]org.apache.commons.math3.distribution.FDistribution:49-private double numericalVariance = Double.NaN;	0
org.apache.commons.math3.distribution.UniformRealDistribution:77-this(newWell19937c(), lower, upper, inverseCumAccuracy);[CLS]org.apache.commons.math3.distribution.FDistribution:51-private boolean numericalVarianceIsCalculated = false;	0
org.apache.commons.math3.distribution.UniformRealDistribution:77-this(newWell19937c(), lower, upper, inverseCumAccuracy);[CLS]org.apache.commons.math3.distribution.FDistribution:110-if (numeratorDegreesOfFreedom <= 0) {	0
org.apache.commons.math3.distribution.UniformRealDistribution:77-this(newWell19937c(), lower, upper, inverseCumAccuracy);[CLS]org.apache.commons.math3.distribution.FDistribution:114-if (denominatorDegreesOfFreedom <= 0) {	0
org.apache.commons.math3.distribution.UniformRealDistribution:77-this(newWell19937c(), lower, upper, inverseCumAccuracy);[CLS]org.apache.commons.math3.distribution.FDistribution:118-this.numeratorDegreesOfFreedom = numeratorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.UniformRealDistribution:77-this(newWell19937c(), lower, upper, inverseCumAccuracy);[CLS]org.apache.commons.math3.distribution.FDistribution:119-this.denominatorDegreesOfFreedom = denominatorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.UniformRealDistribution:77-this(newWell19937c(), lower, upper, inverseCumAccuracy);[CLS]org.apache.commons.math3.distribution.FDistribution:120-solverAbsoluteAccuracy = inverseCumAccuracy;	0
org.apache.commons.math3.distribution.UniformRealDistribution:77-this(newWell19937c(), lower, upper, inverseCumAccuracy);[CLS]org.apache.commons.math3.distribution.FDistribution:121-}	0
org.apache.commons.math3.distribution.UniformRealDistribution:77-this(newWell19937c(), lower, upper, inverseCumAccuracy);[CLS]org.apache.commons.math3.distribution.FDistribution:111-throw new NotStrictlyPositiveException(LocalizedFormats.DEGREES_OF_FREEDOM,	0
org.apache.commons.math3.distribution.UniformRealDistribution:77-this(newWell19937c(), lower, upper, inverseCumAccuracy);[CLS]org.apache.commons.math3.distribution.FDistribution:115-throw new NotStrictlyPositiveException(LocalizedFormats.DEGREES_OF_FREEDOM,	0
org.apache.commons.math3.distribution.UniformRealDistribution:77-this(newWell19937c(), lower, upper, inverseCumAccuracy);[CLS]org.apache.commons.math3.distribution.FDistribution:154-if (x <= 0) {	0
org.apache.commons.math3.distribution.UniformRealDistribution:77-this(newWell19937c(), lower, upper, inverseCumAccuracy);[CLS]org.apache.commons.math3.distribution.FDistribution:155-ret = 0;	0
org.apache.commons.math3.distribution.UniformRealDistribution:77-this(newWell19937c(), lower, upper, inverseCumAccuracy);[CLS]org.apache.commons.math3.distribution.FDistribution:157-double n = numeratorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.UniformRealDistribution:77-this(newWell19937c(), lower, upper, inverseCumAccuracy);[CLS]org.apache.commons.math3.distribution.FDistribution:158-double m = denominatorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.UniformRealDistribution:77-this(newWell19937c(), lower, upper, inverseCumAccuracy);[CLS]org.apache.commons.math3.distribution.FDistribution:160-ret = Beta.regularizedBeta((n * x) / (m + n * x),	0
org.apache.commons.math3.distribution.UniformRealDistribution:77-this(newWell19937c(), lower, upper, inverseCumAccuracy);[CLS]org.apache.commons.math3.distribution.FDistribution:164-return ret;	0
org.apache.commons.math3.distribution.UniformRealDistribution:77-this(newWell19937c(), lower, upper, inverseCumAccuracy);[CLS]org.apache.commons.math3.distribution.FDistribution:173-return numeratorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.UniformRealDistribution:77-this(newWell19937c(), lower, upper, inverseCumAccuracy);[CLS]org.apache.commons.math3.distribution.FDistribution:182-return denominatorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.UniformRealDistribution:77-this(newWell19937c(), lower, upper, inverseCumAccuracy);[CLS]org.apache.commons.math3.distribution.FDistribution:188-return solverAbsoluteAccuracy;	0
org.apache.commons.math3.distribution.UniformRealDistribution:77-this(newWell19937c(), lower, upper, inverseCumAccuracy);[CLS]org.apache.commons.math3.distribution.FDistribution:201-final double denominatorDF = getDenominatorDegreesOfFreedom();	0
org.apache.commons.math3.distribution.UniformRealDistribution:77-this(newWell19937c(), lower, upper, inverseCumAccuracy);[CLS]org.apache.commons.math3.distribution.FDistribution:203-if (denominatorDF > 2) {	0
org.apache.commons.math3.distribution.UniformRealDistribution:77-this(newWell19937c(), lower, upper, inverseCumAccuracy);[CLS]org.apache.commons.math3.distribution.FDistribution:204-return denominatorDF / (denominatorDF - 2);	0
org.apache.commons.math3.distribution.UniformRealDistribution:78-}[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:95-super(rng);	0
org.apache.commons.math3.distribution.UniformRealDistribution:78-}[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:96-if (lower >= upper) {	0
org.apache.commons.math3.distribution.UniformRealDistribution:78-}[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:102-this.lower = lower;	0
org.apache.commons.math3.distribution.UniformRealDistribution:78-}[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:103-this.upper = upper;	0
org.apache.commons.math3.distribution.UniformRealDistribution:78-}[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:104-solverAbsoluteAccuracy = inverseCumAccuracy;	0
org.apache.commons.math3.distribution.UniformRealDistribution:78-}[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:105-}	0
org.apache.commons.math3.distribution.UniformRealDistribution:78-}[CLS]org.apache.commons.math3.distribution.FDistribution:65-this(numeratorDegreesOfFreedom, denominatorDegreesOfFreedom,	0
org.apache.commons.math3.distribution.UniformRealDistribution:78-}[CLS]org.apache.commons.math3.distribution.FDistribution:67-}	0
org.apache.commons.math3.distribution.UniformRealDistribution:78-}[CLS]org.apache.commons.math3.distribution.FDistribution:86-this(new Well19937c(), numeratorDegreesOfFreedom,	0
org.apache.commons.math3.distribution.UniformRealDistribution:78-}[CLS]org.apache.commons.math3.distribution.FDistribution:88-}	0
org.apache.commons.math3.distribution.UniformRealDistribution:78-}[CLS]org.apache.commons.math3.distribution.FDistribution:108-super(rng);	0
org.apache.commons.math3.distribution.UniformRealDistribution:78-}[CLS]org.apache.commons.math3.distribution.FDistribution:49-private double numericalVariance = Double.NaN;	0
org.apache.commons.math3.distribution.UniformRealDistribution:78-}[CLS]org.apache.commons.math3.distribution.FDistribution:51-private boolean numericalVarianceIsCalculated = false;	0
org.apache.commons.math3.distribution.UniformRealDistribution:78-}[CLS]org.apache.commons.math3.distribution.FDistribution:110-if (numeratorDegreesOfFreedom <= 0) {	0
org.apache.commons.math3.distribution.UniformRealDistribution:78-}[CLS]org.apache.commons.math3.distribution.FDistribution:114-if (denominatorDegreesOfFreedom <= 0) {	0
org.apache.commons.math3.distribution.UniformRealDistribution:78-}[CLS]org.apache.commons.math3.distribution.FDistribution:118-this.numeratorDegreesOfFreedom = numeratorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.UniformRealDistribution:78-}[CLS]org.apache.commons.math3.distribution.FDistribution:119-this.denominatorDegreesOfFreedom = denominatorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.UniformRealDistribution:78-}[CLS]org.apache.commons.math3.distribution.FDistribution:120-solverAbsoluteAccuracy = inverseCumAccuracy;	0
org.apache.commons.math3.distribution.UniformRealDistribution:78-}[CLS]org.apache.commons.math3.distribution.FDistribution:121-}	0
org.apache.commons.math3.distribution.UniformRealDistribution:78-}[CLS]org.apache.commons.math3.distribution.FDistribution:111-throw new NotStrictlyPositiveException(LocalizedFormats.DEGREES_OF_FREEDOM,	0
org.apache.commons.math3.distribution.UniformRealDistribution:78-}[CLS]org.apache.commons.math3.distribution.FDistribution:115-throw new NotStrictlyPositiveException(LocalizedFormats.DEGREES_OF_FREEDOM,	0
org.apache.commons.math3.distribution.UniformRealDistribution:78-}[CLS]org.apache.commons.math3.distribution.FDistribution:154-if (x <= 0) {	0
org.apache.commons.math3.distribution.UniformRealDistribution:78-}[CLS]org.apache.commons.math3.distribution.FDistribution:155-ret = 0;	0
org.apache.commons.math3.distribution.UniformRealDistribution:78-}[CLS]org.apache.commons.math3.distribution.FDistribution:157-double n = numeratorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.UniformRealDistribution:78-}[CLS]org.apache.commons.math3.distribution.FDistribution:158-double m = denominatorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.UniformRealDistribution:78-}[CLS]org.apache.commons.math3.distribution.FDistribution:160-ret = Beta.regularizedBeta((n * x) / (m + n * x),	0
org.apache.commons.math3.distribution.UniformRealDistribution:78-}[CLS]org.apache.commons.math3.distribution.FDistribution:164-return ret;	0
org.apache.commons.math3.distribution.UniformRealDistribution:78-}[CLS]org.apache.commons.math3.distribution.FDistribution:173-return numeratorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.UniformRealDistribution:78-}[CLS]org.apache.commons.math3.distribution.FDistribution:182-return denominatorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.UniformRealDistribution:78-}[CLS]org.apache.commons.math3.distribution.FDistribution:188-return solverAbsoluteAccuracy;	0
org.apache.commons.math3.distribution.UniformRealDistribution:78-}[CLS]org.apache.commons.math3.distribution.FDistribution:201-final double denominatorDF = getDenominatorDegreesOfFreedom();	0
org.apache.commons.math3.distribution.UniformRealDistribution:78-}[CLS]org.apache.commons.math3.distribution.FDistribution:203-if (denominatorDF > 2) {	0
org.apache.commons.math3.distribution.UniformRealDistribution:78-}[CLS]org.apache.commons.math3.distribution.FDistribution:204-return denominatorDF / (denominatorDF - 2);	0
org.apache.commons.math3.distribution.UniformRealDistribution:95-super(rng);[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:96-if (lower >= upper) {	0
org.apache.commons.math3.distribution.UniformRealDistribution:95-super(rng);[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:102-this.lower = lower;	0
org.apache.commons.math3.distribution.UniformRealDistribution:95-super(rng);[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:103-this.upper = upper;	0
org.apache.commons.math3.distribution.UniformRealDistribution:95-super(rng);[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:104-solverAbsoluteAccuracy = inverseCumAccuracy;	0
org.apache.commons.math3.distribution.UniformRealDistribution:95-super(rng);[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:105-}	0
org.apache.commons.math3.distribution.UniformRealDistribution:95-super(rng);[CLS]org.apache.commons.math3.distribution.FDistribution:65-this(numeratorDegreesOfFreedom, denominatorDegreesOfFreedom,	0
org.apache.commons.math3.distribution.UniformRealDistribution:95-super(rng);[CLS]org.apache.commons.math3.distribution.FDistribution:67-}	0
org.apache.commons.math3.distribution.UniformRealDistribution:95-super(rng);[CLS]org.apache.commons.math3.distribution.FDistribution:86-this(new Well19937c(), numeratorDegreesOfFreedom,	0
org.apache.commons.math3.distribution.UniformRealDistribution:95-super(rng);[CLS]org.apache.commons.math3.distribution.FDistribution:88-}	0
org.apache.commons.math3.distribution.UniformRealDistribution:95-super(rng);[CLS]org.apache.commons.math3.distribution.FDistribution:108-super(rng);	0
org.apache.commons.math3.distribution.UniformRealDistribution:95-super(rng);[CLS]org.apache.commons.math3.distribution.FDistribution:49-private double numericalVariance = Double.NaN;	0
org.apache.commons.math3.distribution.UniformRealDistribution:95-super(rng);[CLS]org.apache.commons.math3.distribution.FDistribution:51-private boolean numericalVarianceIsCalculated = false;	0
org.apache.commons.math3.distribution.UniformRealDistribution:95-super(rng);[CLS]org.apache.commons.math3.distribution.FDistribution:110-if (numeratorDegreesOfFreedom <= 0) {	0
org.apache.commons.math3.distribution.UniformRealDistribution:95-super(rng);[CLS]org.apache.commons.math3.distribution.FDistribution:114-if (denominatorDegreesOfFreedom <= 0) {	0
org.apache.commons.math3.distribution.UniformRealDistribution:95-super(rng);[CLS]org.apache.commons.math3.distribution.FDistribution:118-this.numeratorDegreesOfFreedom = numeratorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.UniformRealDistribution:95-super(rng);[CLS]org.apache.commons.math3.distribution.FDistribution:119-this.denominatorDegreesOfFreedom = denominatorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.UniformRealDistribution:95-super(rng);[CLS]org.apache.commons.math3.distribution.FDistribution:120-solverAbsoluteAccuracy = inverseCumAccuracy;	0
org.apache.commons.math3.distribution.UniformRealDistribution:95-super(rng);[CLS]org.apache.commons.math3.distribution.FDistribution:121-}	0
org.apache.commons.math3.distribution.UniformRealDistribution:95-super(rng);[CLS]org.apache.commons.math3.distribution.FDistribution:111-throw new NotStrictlyPositiveException(LocalizedFormats.DEGREES_OF_FREEDOM,	0
org.apache.commons.math3.distribution.UniformRealDistribution:95-super(rng);[CLS]org.apache.commons.math3.distribution.FDistribution:115-throw new NotStrictlyPositiveException(LocalizedFormats.DEGREES_OF_FREEDOM,	0
org.apache.commons.math3.distribution.UniformRealDistribution:95-super(rng);[CLS]org.apache.commons.math3.distribution.FDistribution:154-if (x <= 0) {	0
org.apache.commons.math3.distribution.UniformRealDistribution:95-super(rng);[CLS]org.apache.commons.math3.distribution.FDistribution:155-ret = 0;	0
org.apache.commons.math3.distribution.UniformRealDistribution:95-super(rng);[CLS]org.apache.commons.math3.distribution.FDistribution:157-double n = numeratorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.UniformRealDistribution:95-super(rng);[CLS]org.apache.commons.math3.distribution.FDistribution:158-double m = denominatorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.UniformRealDistribution:95-super(rng);[CLS]org.apache.commons.math3.distribution.FDistribution:160-ret = Beta.regularizedBeta((n * x) / (m + n * x),	0
org.apache.commons.math3.distribution.UniformRealDistribution:95-super(rng);[CLS]org.apache.commons.math3.distribution.FDistribution:164-return ret;	0
org.apache.commons.math3.distribution.UniformRealDistribution:95-super(rng);[CLS]org.apache.commons.math3.distribution.FDistribution:173-return numeratorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.UniformRealDistribution:95-super(rng);[CLS]org.apache.commons.math3.distribution.FDistribution:182-return denominatorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.UniformRealDistribution:95-super(rng);[CLS]org.apache.commons.math3.distribution.FDistribution:188-return solverAbsoluteAccuracy;	0
org.apache.commons.math3.distribution.UniformRealDistribution:95-super(rng);[CLS]org.apache.commons.math3.distribution.FDistribution:201-final double denominatorDF = getDenominatorDegreesOfFreedom();	0
org.apache.commons.math3.distribution.UniformRealDistribution:95-super(rng);[CLS]org.apache.commons.math3.distribution.FDistribution:203-if (denominatorDF > 2) {	0
org.apache.commons.math3.distribution.UniformRealDistribution:95-super(rng);[CLS]org.apache.commons.math3.distribution.FDistribution:204-return denominatorDF / (denominatorDF - 2);	0
org.apache.commons.math3.distribution.UniformRealDistribution:96-if (lower >= upper) {[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:102-this.lower = lower;	0
org.apache.commons.math3.distribution.UniformRealDistribution:96-if (lower >= upper) {[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:103-this.upper = upper;	0
org.apache.commons.math3.distribution.UniformRealDistribution:96-if (lower >= upper) {[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:104-solverAbsoluteAccuracy = inverseCumAccuracy;	0
org.apache.commons.math3.distribution.UniformRealDistribution:96-if (lower >= upper) {[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:105-}	0
org.apache.commons.math3.distribution.UniformRealDistribution:96-if (lower >= upper) {[CLS]org.apache.commons.math3.distribution.FDistribution:65-this(numeratorDegreesOfFreedom, denominatorDegreesOfFreedom,	0
org.apache.commons.math3.distribution.UniformRealDistribution:96-if (lower >= upper) {[CLS]org.apache.commons.math3.distribution.FDistribution:67-}	0
org.apache.commons.math3.distribution.UniformRealDistribution:96-if (lower >= upper) {[CLS]org.apache.commons.math3.distribution.FDistribution:86-this(new Well19937c(), numeratorDegreesOfFreedom,	0
org.apache.commons.math3.distribution.UniformRealDistribution:96-if (lower >= upper) {[CLS]org.apache.commons.math3.distribution.FDistribution:88-}	0
org.apache.commons.math3.distribution.UniformRealDistribution:96-if (lower >= upper) {[CLS]org.apache.commons.math3.distribution.FDistribution:108-super(rng);	0
org.apache.commons.math3.distribution.UniformRealDistribution:96-if (lower >= upper) {[CLS]org.apache.commons.math3.distribution.FDistribution:49-private double numericalVariance = Double.NaN;	0
org.apache.commons.math3.distribution.UniformRealDistribution:96-if (lower >= upper) {[CLS]org.apache.commons.math3.distribution.FDistribution:51-private boolean numericalVarianceIsCalculated = false;	0
org.apache.commons.math3.distribution.UniformRealDistribution:96-if (lower >= upper) {[CLS]org.apache.commons.math3.distribution.FDistribution:110-if (numeratorDegreesOfFreedom <= 0) {	0
org.apache.commons.math3.distribution.UniformRealDistribution:96-if (lower >= upper) {[CLS]org.apache.commons.math3.distribution.FDistribution:114-if (denominatorDegreesOfFreedom <= 0) {	0
org.apache.commons.math3.distribution.UniformRealDistribution:96-if (lower >= upper) {[CLS]org.apache.commons.math3.distribution.FDistribution:118-this.numeratorDegreesOfFreedom = numeratorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.UniformRealDistribution:96-if (lower >= upper) {[CLS]org.apache.commons.math3.distribution.FDistribution:119-this.denominatorDegreesOfFreedom = denominatorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.UniformRealDistribution:96-if (lower >= upper) {[CLS]org.apache.commons.math3.distribution.FDistribution:120-solverAbsoluteAccuracy = inverseCumAccuracy;	0
org.apache.commons.math3.distribution.UniformRealDistribution:96-if (lower >= upper) {[CLS]org.apache.commons.math3.distribution.FDistribution:121-}	0
org.apache.commons.math3.distribution.UniformRealDistribution:96-if (lower >= upper) {[CLS]org.apache.commons.math3.distribution.FDistribution:111-throw new NotStrictlyPositiveException(LocalizedFormats.DEGREES_OF_FREEDOM,	0
org.apache.commons.math3.distribution.UniformRealDistribution:96-if (lower >= upper) {[CLS]org.apache.commons.math3.distribution.FDistribution:115-throw new NotStrictlyPositiveException(LocalizedFormats.DEGREES_OF_FREEDOM,	0
org.apache.commons.math3.distribution.UniformRealDistribution:96-if (lower >= upper) {[CLS]org.apache.commons.math3.distribution.FDistribution:154-if (x <= 0) {	0
org.apache.commons.math3.distribution.UniformRealDistribution:96-if (lower >= upper) {[CLS]org.apache.commons.math3.distribution.FDistribution:155-ret = 0;	0
org.apache.commons.math3.distribution.UniformRealDistribution:96-if (lower >= upper) {[CLS]org.apache.commons.math3.distribution.FDistribution:157-double n = numeratorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.UniformRealDistribution:96-if (lower >= upper) {[CLS]org.apache.commons.math3.distribution.FDistribution:158-double m = denominatorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.UniformRealDistribution:96-if (lower >= upper) {[CLS]org.apache.commons.math3.distribution.FDistribution:160-ret = Beta.regularizedBeta((n * x) / (m + n * x),	0
org.apache.commons.math3.distribution.UniformRealDistribution:96-if (lower >= upper) {[CLS]org.apache.commons.math3.distribution.FDistribution:164-return ret;	0
org.apache.commons.math3.distribution.UniformRealDistribution:96-if (lower >= upper) {[CLS]org.apache.commons.math3.distribution.FDistribution:173-return numeratorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.UniformRealDistribution:96-if (lower >= upper) {[CLS]org.apache.commons.math3.distribution.FDistribution:182-return denominatorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.UniformRealDistribution:96-if (lower >= upper) {[CLS]org.apache.commons.math3.distribution.FDistribution:188-return solverAbsoluteAccuracy;	0
org.apache.commons.math3.distribution.UniformRealDistribution:96-if (lower >= upper) {[CLS]org.apache.commons.math3.distribution.FDistribution:201-final double denominatorDF = getDenominatorDegreesOfFreedom();	0
org.apache.commons.math3.distribution.UniformRealDistribution:96-if (lower >= upper) {[CLS]org.apache.commons.math3.distribution.FDistribution:203-if (denominatorDF > 2) {	0
org.apache.commons.math3.distribution.UniformRealDistribution:96-if (lower >= upper) {[CLS]org.apache.commons.math3.distribution.FDistribution:204-return denominatorDF / (denominatorDF - 2);	0
org.apache.commons.math3.distribution.UniformRealDistribution:102-this.lower = lower;[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:103-this.upper = upper;	0
org.apache.commons.math3.distribution.UniformRealDistribution:102-this.lower = lower;[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:104-solverAbsoluteAccuracy = inverseCumAccuracy;	0
org.apache.commons.math3.distribution.UniformRealDistribution:102-this.lower = lower;[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:105-}	0
org.apache.commons.math3.distribution.UniformRealDistribution:102-this.lower = lower;[CLS]org.apache.commons.math3.distribution.FDistribution:65-this(numeratorDegreesOfFreedom, denominatorDegreesOfFreedom,	0
org.apache.commons.math3.distribution.UniformRealDistribution:102-this.lower = lower;[CLS]org.apache.commons.math3.distribution.FDistribution:67-}	0
org.apache.commons.math3.distribution.UniformRealDistribution:102-this.lower = lower;[CLS]org.apache.commons.math3.distribution.FDistribution:86-this(new Well19937c(), numeratorDegreesOfFreedom,	0
org.apache.commons.math3.distribution.UniformRealDistribution:102-this.lower = lower;[CLS]org.apache.commons.math3.distribution.FDistribution:88-}	0
org.apache.commons.math3.distribution.UniformRealDistribution:102-this.lower = lower;[CLS]org.apache.commons.math3.distribution.FDistribution:108-super(rng);	0
org.apache.commons.math3.distribution.UniformRealDistribution:102-this.lower = lower;[CLS]org.apache.commons.math3.distribution.FDistribution:49-private double numericalVariance = Double.NaN;	0
org.apache.commons.math3.distribution.UniformRealDistribution:102-this.lower = lower;[CLS]org.apache.commons.math3.distribution.FDistribution:51-private boolean numericalVarianceIsCalculated = false;	0
org.apache.commons.math3.distribution.UniformRealDistribution:102-this.lower = lower;[CLS]org.apache.commons.math3.distribution.FDistribution:110-if (numeratorDegreesOfFreedom <= 0) {	0
org.apache.commons.math3.distribution.UniformRealDistribution:102-this.lower = lower;[CLS]org.apache.commons.math3.distribution.FDistribution:114-if (denominatorDegreesOfFreedom <= 0) {	0
org.apache.commons.math3.distribution.UniformRealDistribution:102-this.lower = lower;[CLS]org.apache.commons.math3.distribution.FDistribution:118-this.numeratorDegreesOfFreedom = numeratorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.UniformRealDistribution:102-this.lower = lower;[CLS]org.apache.commons.math3.distribution.FDistribution:119-this.denominatorDegreesOfFreedom = denominatorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.UniformRealDistribution:102-this.lower = lower;[CLS]org.apache.commons.math3.distribution.FDistribution:120-solverAbsoluteAccuracy = inverseCumAccuracy;	0
org.apache.commons.math3.distribution.UniformRealDistribution:102-this.lower = lower;[CLS]org.apache.commons.math3.distribution.FDistribution:121-}	0
org.apache.commons.math3.distribution.UniformRealDistribution:102-this.lower = lower;[CLS]org.apache.commons.math3.distribution.FDistribution:111-throw new NotStrictlyPositiveException(LocalizedFormats.DEGREES_OF_FREEDOM,	0
org.apache.commons.math3.distribution.UniformRealDistribution:102-this.lower = lower;[CLS]org.apache.commons.math3.distribution.FDistribution:115-throw new NotStrictlyPositiveException(LocalizedFormats.DEGREES_OF_FREEDOM,	0
org.apache.commons.math3.distribution.UniformRealDistribution:102-this.lower = lower;[CLS]org.apache.commons.math3.distribution.FDistribution:154-if (x <= 0) {	0
org.apache.commons.math3.distribution.UniformRealDistribution:102-this.lower = lower;[CLS]org.apache.commons.math3.distribution.FDistribution:155-ret = 0;	0
org.apache.commons.math3.distribution.UniformRealDistribution:102-this.lower = lower;[CLS]org.apache.commons.math3.distribution.FDistribution:157-double n = numeratorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.UniformRealDistribution:102-this.lower = lower;[CLS]org.apache.commons.math3.distribution.FDistribution:158-double m = denominatorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.UniformRealDistribution:102-this.lower = lower;[CLS]org.apache.commons.math3.distribution.FDistribution:160-ret = Beta.regularizedBeta((n * x) / (m + n * x),	0
org.apache.commons.math3.distribution.UniformRealDistribution:102-this.lower = lower;[CLS]org.apache.commons.math3.distribution.FDistribution:164-return ret;	0
org.apache.commons.math3.distribution.UniformRealDistribution:102-this.lower = lower;[CLS]org.apache.commons.math3.distribution.FDistribution:173-return numeratorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.UniformRealDistribution:102-this.lower = lower;[CLS]org.apache.commons.math3.distribution.FDistribution:182-return denominatorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.UniformRealDistribution:102-this.lower = lower;[CLS]org.apache.commons.math3.distribution.FDistribution:188-return solverAbsoluteAccuracy;	0
org.apache.commons.math3.distribution.UniformRealDistribution:102-this.lower = lower;[CLS]org.apache.commons.math3.distribution.FDistribution:201-final double denominatorDF = getDenominatorDegreesOfFreedom();	0
org.apache.commons.math3.distribution.UniformRealDistribution:102-this.lower = lower;[CLS]org.apache.commons.math3.distribution.FDistribution:203-if (denominatorDF > 2) {	0
org.apache.commons.math3.distribution.UniformRealDistribution:102-this.lower = lower;[CLS]org.apache.commons.math3.distribution.FDistribution:204-return denominatorDF / (denominatorDF - 2);	0
org.apache.commons.math3.distribution.UniformRealDistribution:103-this.upper = upper;[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:104-solverAbsoluteAccuracy = inverseCumAccuracy;	0
org.apache.commons.math3.distribution.UniformRealDistribution:103-this.upper = upper;[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:105-}	0
org.apache.commons.math3.distribution.UniformRealDistribution:103-this.upper = upper;[CLS]org.apache.commons.math3.distribution.FDistribution:65-this(numeratorDegreesOfFreedom, denominatorDegreesOfFreedom,	0
org.apache.commons.math3.distribution.UniformRealDistribution:103-this.upper = upper;[CLS]org.apache.commons.math3.distribution.FDistribution:67-}	0
org.apache.commons.math3.distribution.UniformRealDistribution:103-this.upper = upper;[CLS]org.apache.commons.math3.distribution.FDistribution:86-this(new Well19937c(), numeratorDegreesOfFreedom,	0
org.apache.commons.math3.distribution.UniformRealDistribution:103-this.upper = upper;[CLS]org.apache.commons.math3.distribution.FDistribution:88-}	0
org.apache.commons.math3.distribution.UniformRealDistribution:103-this.upper = upper;[CLS]org.apache.commons.math3.distribution.FDistribution:108-super(rng);	0
org.apache.commons.math3.distribution.UniformRealDistribution:103-this.upper = upper;[CLS]org.apache.commons.math3.distribution.FDistribution:49-private double numericalVariance = Double.NaN;	0
org.apache.commons.math3.distribution.UniformRealDistribution:103-this.upper = upper;[CLS]org.apache.commons.math3.distribution.FDistribution:51-private boolean numericalVarianceIsCalculated = false;	0
org.apache.commons.math3.distribution.UniformRealDistribution:103-this.upper = upper;[CLS]org.apache.commons.math3.distribution.FDistribution:110-if (numeratorDegreesOfFreedom <= 0) {	0
org.apache.commons.math3.distribution.UniformRealDistribution:103-this.upper = upper;[CLS]org.apache.commons.math3.distribution.FDistribution:114-if (denominatorDegreesOfFreedom <= 0) {	0
org.apache.commons.math3.distribution.UniformRealDistribution:103-this.upper = upper;[CLS]org.apache.commons.math3.distribution.FDistribution:118-this.numeratorDegreesOfFreedom = numeratorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.UniformRealDistribution:103-this.upper = upper;[CLS]org.apache.commons.math3.distribution.FDistribution:119-this.denominatorDegreesOfFreedom = denominatorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.UniformRealDistribution:103-this.upper = upper;[CLS]org.apache.commons.math3.distribution.FDistribution:120-solverAbsoluteAccuracy = inverseCumAccuracy;	0
org.apache.commons.math3.distribution.UniformRealDistribution:103-this.upper = upper;[CLS]org.apache.commons.math3.distribution.FDistribution:121-}	0
org.apache.commons.math3.distribution.UniformRealDistribution:103-this.upper = upper;[CLS]org.apache.commons.math3.distribution.FDistribution:111-throw new NotStrictlyPositiveException(LocalizedFormats.DEGREES_OF_FREEDOM,	0
org.apache.commons.math3.distribution.UniformRealDistribution:103-this.upper = upper;[CLS]org.apache.commons.math3.distribution.FDistribution:115-throw new NotStrictlyPositiveException(LocalizedFormats.DEGREES_OF_FREEDOM,	0
org.apache.commons.math3.distribution.UniformRealDistribution:103-this.upper = upper;[CLS]org.apache.commons.math3.distribution.FDistribution:154-if (x <= 0) {	0
org.apache.commons.math3.distribution.UniformRealDistribution:103-this.upper = upper;[CLS]org.apache.commons.math3.distribution.FDistribution:155-ret = 0;	0
org.apache.commons.math3.distribution.UniformRealDistribution:103-this.upper = upper;[CLS]org.apache.commons.math3.distribution.FDistribution:157-double n = numeratorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.UniformRealDistribution:103-this.upper = upper;[CLS]org.apache.commons.math3.distribution.FDistribution:158-double m = denominatorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.UniformRealDistribution:103-this.upper = upper;[CLS]org.apache.commons.math3.distribution.FDistribution:160-ret = Beta.regularizedBeta((n * x) / (m + n * x),	0
org.apache.commons.math3.distribution.UniformRealDistribution:103-this.upper = upper;[CLS]org.apache.commons.math3.distribution.FDistribution:164-return ret;	0
org.apache.commons.math3.distribution.UniformRealDistribution:103-this.upper = upper;[CLS]org.apache.commons.math3.distribution.FDistribution:173-return numeratorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.UniformRealDistribution:103-this.upper = upper;[CLS]org.apache.commons.math3.distribution.FDistribution:182-return denominatorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.UniformRealDistribution:103-this.upper = upper;[CLS]org.apache.commons.math3.distribution.FDistribution:188-return solverAbsoluteAccuracy;	0
org.apache.commons.math3.distribution.UniformRealDistribution:103-this.upper = upper;[CLS]org.apache.commons.math3.distribution.FDistribution:201-final double denominatorDF = getDenominatorDegreesOfFreedom();	0
org.apache.commons.math3.distribution.UniformRealDistribution:103-this.upper = upper;[CLS]org.apache.commons.math3.distribution.FDistribution:203-if (denominatorDF > 2) {	0
org.apache.commons.math3.distribution.UniformRealDistribution:103-this.upper = upper;[CLS]org.apache.commons.math3.distribution.FDistribution:204-return denominatorDF / (denominatorDF - 2);	0
org.apache.commons.math3.distribution.UniformRealDistribution:104-solverAbsoluteAccuracy = inverseCumAccuracy;[CLS]org.apache.commons.math3.distribution.UniformRealDistribution:105-}	0
org.apache.commons.math3.distribution.UniformRealDistribution:104-solverAbsoluteAccuracy = inverseCumAccuracy;[CLS]org.apache.commons.math3.distribution.FDistribution:65-this(numeratorDegreesOfFreedom, denominatorDegreesOfFreedom,	0
org.apache.commons.math3.distribution.UniformRealDistribution:104-solverAbsoluteAccuracy = inverseCumAccuracy;[CLS]org.apache.commons.math3.distribution.FDistribution:67-}	0
org.apache.commons.math3.distribution.UniformRealDistribution:104-solverAbsoluteAccuracy = inverseCumAccuracy;[CLS]org.apache.commons.math3.distribution.FDistribution:86-this(new Well19937c(), numeratorDegreesOfFreedom,	0
org.apache.commons.math3.distribution.UniformRealDistribution:104-solverAbsoluteAccuracy = inverseCumAccuracy;[CLS]org.apache.commons.math3.distribution.FDistribution:88-}	0
org.apache.commons.math3.distribution.UniformRealDistribution:104-solverAbsoluteAccuracy = inverseCumAccuracy;[CLS]org.apache.commons.math3.distribution.FDistribution:108-super(rng);	0
org.apache.commons.math3.distribution.UniformRealDistribution:104-solverAbsoluteAccuracy = inverseCumAccuracy;[CLS]org.apache.commons.math3.distribution.FDistribution:49-private double numericalVariance = Double.NaN;	0
org.apache.commons.math3.distribution.UniformRealDistribution:104-solverAbsoluteAccuracy = inverseCumAccuracy;[CLS]org.apache.commons.math3.distribution.FDistribution:51-private boolean numericalVarianceIsCalculated = false;	0
org.apache.commons.math3.distribution.UniformRealDistribution:104-solverAbsoluteAccuracy = inverseCumAccuracy;[CLS]org.apache.commons.math3.distribution.FDistribution:110-if (numeratorDegreesOfFreedom <= 0) {	0
org.apache.commons.math3.distribution.UniformRealDistribution:104-solverAbsoluteAccuracy = inverseCumAccuracy;[CLS]org.apache.commons.math3.distribution.FDistribution:114-if (denominatorDegreesOfFreedom <= 0) {	0
org.apache.commons.math3.distribution.UniformRealDistribution:104-solverAbsoluteAccuracy = inverseCumAccuracy;[CLS]org.apache.commons.math3.distribution.FDistribution:118-this.numeratorDegreesOfFreedom = numeratorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.UniformRealDistribution:104-solverAbsoluteAccuracy = inverseCumAccuracy;[CLS]org.apache.commons.math3.distribution.FDistribution:119-this.denominatorDegreesOfFreedom = denominatorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.UniformRealDistribution:104-solverAbsoluteAccuracy = inverseCumAccuracy;[CLS]org.apache.commons.math3.distribution.FDistribution:120-solverAbsoluteAccuracy = inverseCumAccuracy;	0
org.apache.commons.math3.distribution.UniformRealDistribution:104-solverAbsoluteAccuracy = inverseCumAccuracy;[CLS]org.apache.commons.math3.distribution.FDistribution:121-}	0
org.apache.commons.math3.distribution.UniformRealDistribution:104-solverAbsoluteAccuracy = inverseCumAccuracy;[CLS]org.apache.commons.math3.distribution.FDistribution:111-throw new NotStrictlyPositiveException(LocalizedFormats.DEGREES_OF_FREEDOM,	0
org.apache.commons.math3.distribution.UniformRealDistribution:104-solverAbsoluteAccuracy = inverseCumAccuracy;[CLS]org.apache.commons.math3.distribution.FDistribution:115-throw new NotStrictlyPositiveException(LocalizedFormats.DEGREES_OF_FREEDOM,	0
org.apache.commons.math3.distribution.UniformRealDistribution:104-solverAbsoluteAccuracy = inverseCumAccuracy;[CLS]org.apache.commons.math3.distribution.FDistribution:154-if (x <= 0) {	0
org.apache.commons.math3.distribution.UniformRealDistribution:104-solverAbsoluteAccuracy = inverseCumAccuracy;[CLS]org.apache.commons.math3.distribution.FDistribution:155-ret = 0;	0
org.apache.commons.math3.distribution.UniformRealDistribution:104-solverAbsoluteAccuracy = inverseCumAccuracy;[CLS]org.apache.commons.math3.distribution.FDistribution:157-double n = numeratorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.UniformRealDistribution:104-solverAbsoluteAccuracy = inverseCumAccuracy;[CLS]org.apache.commons.math3.distribution.FDistribution:158-double m = denominatorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.UniformRealDistribution:104-solverAbsoluteAccuracy = inverseCumAccuracy;[CLS]org.apache.commons.math3.distribution.FDistribution:160-ret = Beta.regularizedBeta((n * x) / (m + n * x),	0
org.apache.commons.math3.distribution.UniformRealDistribution:104-solverAbsoluteAccuracy = inverseCumAccuracy;[CLS]org.apache.commons.math3.distribution.FDistribution:164-return ret;	0
org.apache.commons.math3.distribution.UniformRealDistribution:104-solverAbsoluteAccuracy = inverseCumAccuracy;[CLS]org.apache.commons.math3.distribution.FDistribution:173-return numeratorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.UniformRealDistribution:104-solverAbsoluteAccuracy = inverseCumAccuracy;[CLS]org.apache.commons.math3.distribution.FDistribution:182-return denominatorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.UniformRealDistribution:104-solverAbsoluteAccuracy = inverseCumAccuracy;[CLS]org.apache.commons.math3.distribution.FDistribution:188-return solverAbsoluteAccuracy;	0
org.apache.commons.math3.distribution.UniformRealDistribution:104-solverAbsoluteAccuracy = inverseCumAccuracy;[CLS]org.apache.commons.math3.distribution.FDistribution:201-final double denominatorDF = getDenominatorDegreesOfFreedom();	0
org.apache.commons.math3.distribution.UniformRealDistribution:104-solverAbsoluteAccuracy = inverseCumAccuracy;[CLS]org.apache.commons.math3.distribution.FDistribution:203-if (denominatorDF > 2) {	0
org.apache.commons.math3.distribution.UniformRealDistribution:104-solverAbsoluteAccuracy = inverseCumAccuracy;[CLS]org.apache.commons.math3.distribution.FDistribution:204-return denominatorDF / (denominatorDF - 2);	0
org.apache.commons.math3.distribution.UniformRealDistribution:105-}[CLS]org.apache.commons.math3.distribution.FDistribution:65-this(numeratorDegreesOfFreedom, denominatorDegreesOfFreedom,	0
org.apache.commons.math3.distribution.UniformRealDistribution:105-}[CLS]org.apache.commons.math3.distribution.FDistribution:67-}	0
org.apache.commons.math3.distribution.UniformRealDistribution:105-}[CLS]org.apache.commons.math3.distribution.FDistribution:86-this(new Well19937c(), numeratorDegreesOfFreedom,	0
org.apache.commons.math3.distribution.UniformRealDistribution:105-}[CLS]org.apache.commons.math3.distribution.FDistribution:88-}	0
org.apache.commons.math3.distribution.UniformRealDistribution:105-}[CLS]org.apache.commons.math3.distribution.FDistribution:108-super(rng);	0
org.apache.commons.math3.distribution.UniformRealDistribution:105-}[CLS]org.apache.commons.math3.distribution.FDistribution:49-private double numericalVariance = Double.NaN;	0
org.apache.commons.math3.distribution.UniformRealDistribution:105-}[CLS]org.apache.commons.math3.distribution.FDistribution:51-private boolean numericalVarianceIsCalculated = false;	0
org.apache.commons.math3.distribution.UniformRealDistribution:105-}[CLS]org.apache.commons.math3.distribution.FDistribution:110-if (numeratorDegreesOfFreedom <= 0) {	0
org.apache.commons.math3.distribution.UniformRealDistribution:105-}[CLS]org.apache.commons.math3.distribution.FDistribution:114-if (denominatorDegreesOfFreedom <= 0) {	0
org.apache.commons.math3.distribution.UniformRealDistribution:105-}[CLS]org.apache.commons.math3.distribution.FDistribution:118-this.numeratorDegreesOfFreedom = numeratorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.UniformRealDistribution:105-}[CLS]org.apache.commons.math3.distribution.FDistribution:119-this.denominatorDegreesOfFreedom = denominatorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.UniformRealDistribution:105-}[CLS]org.apache.commons.math3.distribution.FDistribution:120-solverAbsoluteAccuracy = inverseCumAccuracy;	0
org.apache.commons.math3.distribution.UniformRealDistribution:105-}[CLS]org.apache.commons.math3.distribution.FDistribution:121-}	0
org.apache.commons.math3.distribution.UniformRealDistribution:105-}[CLS]org.apache.commons.math3.distribution.FDistribution:111-throw new NotStrictlyPositiveException(LocalizedFormats.DEGREES_OF_FREEDOM,	0
org.apache.commons.math3.distribution.UniformRealDistribution:105-}[CLS]org.apache.commons.math3.distribution.FDistribution:115-throw new NotStrictlyPositiveException(LocalizedFormats.DEGREES_OF_FREEDOM,	0
org.apache.commons.math3.distribution.UniformRealDistribution:105-}[CLS]org.apache.commons.math3.distribution.FDistribution:154-if (x <= 0) {	0
org.apache.commons.math3.distribution.UniformRealDistribution:105-}[CLS]org.apache.commons.math3.distribution.FDistribution:155-ret = 0;	0
org.apache.commons.math3.distribution.UniformRealDistribution:105-}[CLS]org.apache.commons.math3.distribution.FDistribution:157-double n = numeratorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.UniformRealDistribution:105-}[CLS]org.apache.commons.math3.distribution.FDistribution:158-double m = denominatorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.UniformRealDistribution:105-}[CLS]org.apache.commons.math3.distribution.FDistribution:160-ret = Beta.regularizedBeta((n * x) / (m + n * x),	0
org.apache.commons.math3.distribution.UniformRealDistribution:105-}[CLS]org.apache.commons.math3.distribution.FDistribution:164-return ret;	0
org.apache.commons.math3.distribution.UniformRealDistribution:105-}[CLS]org.apache.commons.math3.distribution.FDistribution:173-return numeratorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.UniformRealDistribution:105-}[CLS]org.apache.commons.math3.distribution.FDistribution:182-return denominatorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.UniformRealDistribution:105-}[CLS]org.apache.commons.math3.distribution.FDistribution:188-return solverAbsoluteAccuracy;	0
org.apache.commons.math3.distribution.UniformRealDistribution:105-}[CLS]org.apache.commons.math3.distribution.FDistribution:201-final double denominatorDF = getDenominatorDegreesOfFreedom();	0
org.apache.commons.math3.distribution.UniformRealDistribution:105-}[CLS]org.apache.commons.math3.distribution.FDistribution:203-if (denominatorDF > 2) {	0
org.apache.commons.math3.distribution.UniformRealDistribution:105-}[CLS]org.apache.commons.math3.distribution.FDistribution:204-return denominatorDF / (denominatorDF - 2);	0
org.apache.commons.math3.distribution.FDistribution:65-this(numeratorDegreesOfFreedom, denominatorDegreesOfFreedom,[CLS]org.apache.commons.math3.distribution.FDistribution:67-}	0
org.apache.commons.math3.distribution.FDistribution:65-this(numeratorDegreesOfFreedom, denominatorDegreesOfFreedom,[CLS]org.apache.commons.math3.distribution.FDistribution:86-this(new Well19937c(), numeratorDegreesOfFreedom,	0
org.apache.commons.math3.distribution.FDistribution:65-this(numeratorDegreesOfFreedom, denominatorDegreesOfFreedom,[CLS]org.apache.commons.math3.distribution.FDistribution:88-}	0
org.apache.commons.math3.distribution.FDistribution:65-this(numeratorDegreesOfFreedom, denominatorDegreesOfFreedom,[CLS]org.apache.commons.math3.distribution.FDistribution:108-super(rng);	0
org.apache.commons.math3.distribution.FDistribution:65-this(numeratorDegreesOfFreedom, denominatorDegreesOfFreedom,[CLS]org.apache.commons.math3.distribution.FDistribution:49-private double numericalVariance = Double.NaN;	0
org.apache.commons.math3.distribution.FDistribution:65-this(numeratorDegreesOfFreedom, denominatorDegreesOfFreedom,[CLS]org.apache.commons.math3.distribution.FDistribution:51-private boolean numericalVarianceIsCalculated = false;	0
org.apache.commons.math3.distribution.FDistribution:65-this(numeratorDegreesOfFreedom, denominatorDegreesOfFreedom,[CLS]org.apache.commons.math3.distribution.FDistribution:110-if (numeratorDegreesOfFreedom <= 0) {	0
org.apache.commons.math3.distribution.FDistribution:65-this(numeratorDegreesOfFreedom, denominatorDegreesOfFreedom,[CLS]org.apache.commons.math3.distribution.FDistribution:114-if (denominatorDegreesOfFreedom <= 0) {	0
org.apache.commons.math3.distribution.FDistribution:65-this(numeratorDegreesOfFreedom, denominatorDegreesOfFreedom,[CLS]org.apache.commons.math3.distribution.FDistribution:118-this.numeratorDegreesOfFreedom = numeratorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.FDistribution:65-this(numeratorDegreesOfFreedom, denominatorDegreesOfFreedom,[CLS]org.apache.commons.math3.distribution.FDistribution:119-this.denominatorDegreesOfFreedom = denominatorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.FDistribution:65-this(numeratorDegreesOfFreedom, denominatorDegreesOfFreedom,[CLS]org.apache.commons.math3.distribution.FDistribution:120-solverAbsoluteAccuracy = inverseCumAccuracy;	0
org.apache.commons.math3.distribution.FDistribution:65-this(numeratorDegreesOfFreedom, denominatorDegreesOfFreedom,[CLS]org.apache.commons.math3.distribution.FDistribution:121-}	0
org.apache.commons.math3.distribution.FDistribution:65-this(numeratorDegreesOfFreedom, denominatorDegreesOfFreedom,[CLS]org.apache.commons.math3.distribution.FDistribution:111-throw new NotStrictlyPositiveException(LocalizedFormats.DEGREES_OF_FREEDOM,	0
org.apache.commons.math3.distribution.FDistribution:65-this(numeratorDegreesOfFreedom, denominatorDegreesOfFreedom,[CLS]org.apache.commons.math3.distribution.FDistribution:115-throw new NotStrictlyPositiveException(LocalizedFormats.DEGREES_OF_FREEDOM,	0
org.apache.commons.math3.distribution.FDistribution:65-this(numeratorDegreesOfFreedom, denominatorDegreesOfFreedom,[CLS]org.apache.commons.math3.distribution.FDistribution:154-if (x <= 0) {	0
org.apache.commons.math3.distribution.FDistribution:65-this(numeratorDegreesOfFreedom, denominatorDegreesOfFreedom,[CLS]org.apache.commons.math3.distribution.FDistribution:155-ret = 0;	0
org.apache.commons.math3.distribution.FDistribution:65-this(numeratorDegreesOfFreedom, denominatorDegreesOfFreedom,[CLS]org.apache.commons.math3.distribution.FDistribution:157-double n = numeratorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.FDistribution:65-this(numeratorDegreesOfFreedom, denominatorDegreesOfFreedom,[CLS]org.apache.commons.math3.distribution.FDistribution:158-double m = denominatorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.FDistribution:65-this(numeratorDegreesOfFreedom, denominatorDegreesOfFreedom,[CLS]org.apache.commons.math3.distribution.FDistribution:160-ret = Beta.regularizedBeta((n * x) / (m + n * x),	0
org.apache.commons.math3.distribution.FDistribution:65-this(numeratorDegreesOfFreedom, denominatorDegreesOfFreedom,[CLS]org.apache.commons.math3.distribution.FDistribution:164-return ret;	0
org.apache.commons.math3.distribution.FDistribution:65-this(numeratorDegreesOfFreedom, denominatorDegreesOfFreedom,[CLS]org.apache.commons.math3.distribution.FDistribution:173-return numeratorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.FDistribution:65-this(numeratorDegreesOfFreedom, denominatorDegreesOfFreedom,[CLS]org.apache.commons.math3.distribution.FDistribution:182-return denominatorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.FDistribution:65-this(numeratorDegreesOfFreedom, denominatorDegreesOfFreedom,[CLS]org.apache.commons.math3.distribution.FDistribution:188-return solverAbsoluteAccuracy;	0
org.apache.commons.math3.distribution.FDistribution:65-this(numeratorDegreesOfFreedom, denominatorDegreesOfFreedom,[CLS]org.apache.commons.math3.distribution.FDistribution:201-final double denominatorDF = getDenominatorDegreesOfFreedom();	0
org.apache.commons.math3.distribution.FDistribution:65-this(numeratorDegreesOfFreedom, denominatorDegreesOfFreedom,[CLS]org.apache.commons.math3.distribution.FDistribution:203-if (denominatorDF > 2) {	0
org.apache.commons.math3.distribution.FDistribution:65-this(numeratorDegreesOfFreedom, denominatorDegreesOfFreedom,[CLS]org.apache.commons.math3.distribution.FDistribution:204-return denominatorDF / (denominatorDF - 2);	0
org.apache.commons.math3.distribution.FDistribution:67-}[CLS]org.apache.commons.math3.distribution.FDistribution:86-this(new Well19937c(), numeratorDegreesOfFreedom,	0
org.apache.commons.math3.distribution.FDistribution:67-}[CLS]org.apache.commons.math3.distribution.FDistribution:88-}	0
org.apache.commons.math3.distribution.FDistribution:67-}[CLS]org.apache.commons.math3.distribution.FDistribution:108-super(rng);	0
org.apache.commons.math3.distribution.FDistribution:67-}[CLS]org.apache.commons.math3.distribution.FDistribution:49-private double numericalVariance = Double.NaN;	0
org.apache.commons.math3.distribution.FDistribution:67-}[CLS]org.apache.commons.math3.distribution.FDistribution:51-private boolean numericalVarianceIsCalculated = false;	0
org.apache.commons.math3.distribution.FDistribution:67-}[CLS]org.apache.commons.math3.distribution.FDistribution:110-if (numeratorDegreesOfFreedom <= 0) {	0
org.apache.commons.math3.distribution.FDistribution:67-}[CLS]org.apache.commons.math3.distribution.FDistribution:114-if (denominatorDegreesOfFreedom <= 0) {	0
org.apache.commons.math3.distribution.FDistribution:67-}[CLS]org.apache.commons.math3.distribution.FDistribution:118-this.numeratorDegreesOfFreedom = numeratorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.FDistribution:67-}[CLS]org.apache.commons.math3.distribution.FDistribution:119-this.denominatorDegreesOfFreedom = denominatorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.FDistribution:67-}[CLS]org.apache.commons.math3.distribution.FDistribution:120-solverAbsoluteAccuracy = inverseCumAccuracy;	0
org.apache.commons.math3.distribution.FDistribution:67-}[CLS]org.apache.commons.math3.distribution.FDistribution:121-}	0
org.apache.commons.math3.distribution.FDistribution:67-}[CLS]org.apache.commons.math3.distribution.FDistribution:111-throw new NotStrictlyPositiveException(LocalizedFormats.DEGREES_OF_FREEDOM,	0
org.apache.commons.math3.distribution.FDistribution:67-}[CLS]org.apache.commons.math3.distribution.FDistribution:115-throw new NotStrictlyPositiveException(LocalizedFormats.DEGREES_OF_FREEDOM,	0
org.apache.commons.math3.distribution.FDistribution:67-}[CLS]org.apache.commons.math3.distribution.FDistribution:154-if (x <= 0) {	0
org.apache.commons.math3.distribution.FDistribution:67-}[CLS]org.apache.commons.math3.distribution.FDistribution:155-ret = 0;	0
org.apache.commons.math3.distribution.FDistribution:67-}[CLS]org.apache.commons.math3.distribution.FDistribution:157-double n = numeratorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.FDistribution:67-}[CLS]org.apache.commons.math3.distribution.FDistribution:158-double m = denominatorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.FDistribution:67-}[CLS]org.apache.commons.math3.distribution.FDistribution:160-ret = Beta.regularizedBeta((n * x) / (m + n * x),	0
org.apache.commons.math3.distribution.FDistribution:67-}[CLS]org.apache.commons.math3.distribution.FDistribution:164-return ret;	0
org.apache.commons.math3.distribution.FDistribution:67-}[CLS]org.apache.commons.math3.distribution.FDistribution:173-return numeratorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.FDistribution:67-}[CLS]org.apache.commons.math3.distribution.FDistribution:182-return denominatorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.FDistribution:67-}[CLS]org.apache.commons.math3.distribution.FDistribution:188-return solverAbsoluteAccuracy;	0
org.apache.commons.math3.distribution.FDistribution:67-}[CLS]org.apache.commons.math3.distribution.FDistribution:201-final double denominatorDF = getDenominatorDegreesOfFreedom();	0
org.apache.commons.math3.distribution.FDistribution:67-}[CLS]org.apache.commons.math3.distribution.FDistribution:203-if (denominatorDF > 2) {	0
org.apache.commons.math3.distribution.FDistribution:67-}[CLS]org.apache.commons.math3.distribution.FDistribution:204-return denominatorDF / (denominatorDF - 2);	0
org.apache.commons.math3.distribution.FDistribution:86-this(new Well19937c(), numeratorDegreesOfFreedom,[CLS]org.apache.commons.math3.distribution.FDistribution:88-}	0
org.apache.commons.math3.distribution.FDistribution:86-this(new Well19937c(), numeratorDegreesOfFreedom,[CLS]org.apache.commons.math3.distribution.FDistribution:108-super(rng);	0
org.apache.commons.math3.distribution.FDistribution:86-this(new Well19937c(), numeratorDegreesOfFreedom,[CLS]org.apache.commons.math3.distribution.FDistribution:49-private double numericalVariance = Double.NaN;	0
org.apache.commons.math3.distribution.FDistribution:86-this(new Well19937c(), numeratorDegreesOfFreedom,[CLS]org.apache.commons.math3.distribution.FDistribution:51-private boolean numericalVarianceIsCalculated = false;	0
org.apache.commons.math3.distribution.FDistribution:86-this(new Well19937c(), numeratorDegreesOfFreedom,[CLS]org.apache.commons.math3.distribution.FDistribution:110-if (numeratorDegreesOfFreedom <= 0) {	0
org.apache.commons.math3.distribution.FDistribution:86-this(new Well19937c(), numeratorDegreesOfFreedom,[CLS]org.apache.commons.math3.distribution.FDistribution:114-if (denominatorDegreesOfFreedom <= 0) {	0
org.apache.commons.math3.distribution.FDistribution:86-this(new Well19937c(), numeratorDegreesOfFreedom,[CLS]org.apache.commons.math3.distribution.FDistribution:118-this.numeratorDegreesOfFreedom = numeratorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.FDistribution:86-this(new Well19937c(), numeratorDegreesOfFreedom,[CLS]org.apache.commons.math3.distribution.FDistribution:119-this.denominatorDegreesOfFreedom = denominatorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.FDistribution:86-this(new Well19937c(), numeratorDegreesOfFreedom,[CLS]org.apache.commons.math3.distribution.FDistribution:120-solverAbsoluteAccuracy = inverseCumAccuracy;	0
org.apache.commons.math3.distribution.FDistribution:86-this(new Well19937c(), numeratorDegreesOfFreedom,[CLS]org.apache.commons.math3.distribution.FDistribution:121-}	0
org.apache.commons.math3.distribution.FDistribution:86-this(new Well19937c(), numeratorDegreesOfFreedom,[CLS]org.apache.commons.math3.distribution.FDistribution:111-throw new NotStrictlyPositiveException(LocalizedFormats.DEGREES_OF_FREEDOM,	0
org.apache.commons.math3.distribution.FDistribution:86-this(new Well19937c(), numeratorDegreesOfFreedom,[CLS]org.apache.commons.math3.distribution.FDistribution:115-throw new NotStrictlyPositiveException(LocalizedFormats.DEGREES_OF_FREEDOM,	0
org.apache.commons.math3.distribution.FDistribution:86-this(new Well19937c(), numeratorDegreesOfFreedom,[CLS]org.apache.commons.math3.distribution.FDistribution:154-if (x <= 0) {	0
org.apache.commons.math3.distribution.FDistribution:86-this(new Well19937c(), numeratorDegreesOfFreedom,[CLS]org.apache.commons.math3.distribution.FDistribution:155-ret = 0;	0
org.apache.commons.math3.distribution.FDistribution:86-this(new Well19937c(), numeratorDegreesOfFreedom,[CLS]org.apache.commons.math3.distribution.FDistribution:157-double n = numeratorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.FDistribution:86-this(new Well19937c(), numeratorDegreesOfFreedom,[CLS]org.apache.commons.math3.distribution.FDistribution:158-double m = denominatorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.FDistribution:86-this(new Well19937c(), numeratorDegreesOfFreedom,[CLS]org.apache.commons.math3.distribution.FDistribution:160-ret = Beta.regularizedBeta((n * x) / (m + n * x),	0
org.apache.commons.math3.distribution.FDistribution:86-this(new Well19937c(), numeratorDegreesOfFreedom,[CLS]org.apache.commons.math3.distribution.FDistribution:164-return ret;	0
org.apache.commons.math3.distribution.FDistribution:86-this(new Well19937c(), numeratorDegreesOfFreedom,[CLS]org.apache.commons.math3.distribution.FDistribution:173-return numeratorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.FDistribution:86-this(new Well19937c(), numeratorDegreesOfFreedom,[CLS]org.apache.commons.math3.distribution.FDistribution:182-return denominatorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.FDistribution:86-this(new Well19937c(), numeratorDegreesOfFreedom,[CLS]org.apache.commons.math3.distribution.FDistribution:188-return solverAbsoluteAccuracy;	0
org.apache.commons.math3.distribution.FDistribution:86-this(new Well19937c(), numeratorDegreesOfFreedom,[CLS]org.apache.commons.math3.distribution.FDistribution:201-final double denominatorDF = getDenominatorDegreesOfFreedom();	0
org.apache.commons.math3.distribution.FDistribution:86-this(new Well19937c(), numeratorDegreesOfFreedom,[CLS]org.apache.commons.math3.distribution.FDistribution:203-if (denominatorDF > 2) {	0
org.apache.commons.math3.distribution.FDistribution:86-this(new Well19937c(), numeratorDegreesOfFreedom,[CLS]org.apache.commons.math3.distribution.FDistribution:204-return denominatorDF / (denominatorDF - 2);	0
org.apache.commons.math3.distribution.FDistribution:88-}[CLS]org.apache.commons.math3.distribution.FDistribution:108-super(rng);	0
org.apache.commons.math3.distribution.FDistribution:88-}[CLS]org.apache.commons.math3.distribution.FDistribution:49-private double numericalVariance = Double.NaN;	0
org.apache.commons.math3.distribution.FDistribution:88-}[CLS]org.apache.commons.math3.distribution.FDistribution:51-private boolean numericalVarianceIsCalculated = false;	0
org.apache.commons.math3.distribution.FDistribution:88-}[CLS]org.apache.commons.math3.distribution.FDistribution:110-if (numeratorDegreesOfFreedom <= 0) {	0
org.apache.commons.math3.distribution.FDistribution:88-}[CLS]org.apache.commons.math3.distribution.FDistribution:114-if (denominatorDegreesOfFreedom <= 0) {	0
org.apache.commons.math3.distribution.FDistribution:88-}[CLS]org.apache.commons.math3.distribution.FDistribution:118-this.numeratorDegreesOfFreedom = numeratorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.FDistribution:88-}[CLS]org.apache.commons.math3.distribution.FDistribution:119-this.denominatorDegreesOfFreedom = denominatorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.FDistribution:88-}[CLS]org.apache.commons.math3.distribution.FDistribution:120-solverAbsoluteAccuracy = inverseCumAccuracy;	0
org.apache.commons.math3.distribution.FDistribution:88-}[CLS]org.apache.commons.math3.distribution.FDistribution:121-}	0
org.apache.commons.math3.distribution.FDistribution:88-}[CLS]org.apache.commons.math3.distribution.FDistribution:111-throw new NotStrictlyPositiveException(LocalizedFormats.DEGREES_OF_FREEDOM,	0
org.apache.commons.math3.distribution.FDistribution:88-}[CLS]org.apache.commons.math3.distribution.FDistribution:115-throw new NotStrictlyPositiveException(LocalizedFormats.DEGREES_OF_FREEDOM,	0
org.apache.commons.math3.distribution.FDistribution:88-}[CLS]org.apache.commons.math3.distribution.FDistribution:154-if (x <= 0) {	0
org.apache.commons.math3.distribution.FDistribution:88-}[CLS]org.apache.commons.math3.distribution.FDistribution:155-ret = 0;	0
org.apache.commons.math3.distribution.FDistribution:88-}[CLS]org.apache.commons.math3.distribution.FDistribution:157-double n = numeratorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.FDistribution:88-}[CLS]org.apache.commons.math3.distribution.FDistribution:158-double m = denominatorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.FDistribution:88-}[CLS]org.apache.commons.math3.distribution.FDistribution:160-ret = Beta.regularizedBeta((n * x) / (m + n * x),	0
org.apache.commons.math3.distribution.FDistribution:88-}[CLS]org.apache.commons.math3.distribution.FDistribution:164-return ret;	0
org.apache.commons.math3.distribution.FDistribution:88-}[CLS]org.apache.commons.math3.distribution.FDistribution:173-return numeratorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.FDistribution:88-}[CLS]org.apache.commons.math3.distribution.FDistribution:182-return denominatorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.FDistribution:88-}[CLS]org.apache.commons.math3.distribution.FDistribution:188-return solverAbsoluteAccuracy;	0
org.apache.commons.math3.distribution.FDistribution:88-}[CLS]org.apache.commons.math3.distribution.FDistribution:201-final double denominatorDF = getDenominatorDegreesOfFreedom();	0
org.apache.commons.math3.distribution.FDistribution:88-}[CLS]org.apache.commons.math3.distribution.FDistribution:203-if (denominatorDF > 2) {	0
org.apache.commons.math3.distribution.FDistribution:88-}[CLS]org.apache.commons.math3.distribution.FDistribution:204-return denominatorDF / (denominatorDF - 2);	0
org.apache.commons.math3.distribution.FDistribution:108-super(rng);[CLS]org.apache.commons.math3.distribution.FDistribution:49-private double numericalVariance = Double.NaN;	0
org.apache.commons.math3.distribution.FDistribution:108-super(rng);[CLS]org.apache.commons.math3.distribution.FDistribution:51-private boolean numericalVarianceIsCalculated = false;	0
org.apache.commons.math3.distribution.FDistribution:108-super(rng);[CLS]org.apache.commons.math3.distribution.FDistribution:110-if (numeratorDegreesOfFreedom <= 0) {	0
org.apache.commons.math3.distribution.FDistribution:108-super(rng);[CLS]org.apache.commons.math3.distribution.FDistribution:114-if (denominatorDegreesOfFreedom <= 0) {	0
org.apache.commons.math3.distribution.FDistribution:108-super(rng);[CLS]org.apache.commons.math3.distribution.FDistribution:118-this.numeratorDegreesOfFreedom = numeratorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.FDistribution:108-super(rng);[CLS]org.apache.commons.math3.distribution.FDistribution:119-this.denominatorDegreesOfFreedom = denominatorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.FDistribution:108-super(rng);[CLS]org.apache.commons.math3.distribution.FDistribution:120-solverAbsoluteAccuracy = inverseCumAccuracy;	0
org.apache.commons.math3.distribution.FDistribution:108-super(rng);[CLS]org.apache.commons.math3.distribution.FDistribution:121-}	0
org.apache.commons.math3.distribution.FDistribution:108-super(rng);[CLS]org.apache.commons.math3.distribution.FDistribution:111-throw new NotStrictlyPositiveException(LocalizedFormats.DEGREES_OF_FREEDOM,	0
org.apache.commons.math3.distribution.FDistribution:108-super(rng);[CLS]org.apache.commons.math3.distribution.FDistribution:115-throw new NotStrictlyPositiveException(LocalizedFormats.DEGREES_OF_FREEDOM,	0
org.apache.commons.math3.distribution.FDistribution:108-super(rng);[CLS]org.apache.commons.math3.distribution.FDistribution:154-if (x <= 0) {	0
org.apache.commons.math3.distribution.FDistribution:108-super(rng);[CLS]org.apache.commons.math3.distribution.FDistribution:155-ret = 0;	0
org.apache.commons.math3.distribution.FDistribution:108-super(rng);[CLS]org.apache.commons.math3.distribution.FDistribution:157-double n = numeratorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.FDistribution:108-super(rng);[CLS]org.apache.commons.math3.distribution.FDistribution:158-double m = denominatorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.FDistribution:108-super(rng);[CLS]org.apache.commons.math3.distribution.FDistribution:160-ret = Beta.regularizedBeta((n * x) / (m + n * x),	0
org.apache.commons.math3.distribution.FDistribution:108-super(rng);[CLS]org.apache.commons.math3.distribution.FDistribution:164-return ret;	0
org.apache.commons.math3.distribution.FDistribution:108-super(rng);[CLS]org.apache.commons.math3.distribution.FDistribution:173-return numeratorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.FDistribution:108-super(rng);[CLS]org.apache.commons.math3.distribution.FDistribution:182-return denominatorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.FDistribution:108-super(rng);[CLS]org.apache.commons.math3.distribution.FDistribution:188-return solverAbsoluteAccuracy;	0
org.apache.commons.math3.distribution.FDistribution:108-super(rng);[CLS]org.apache.commons.math3.distribution.FDistribution:201-final double denominatorDF = getDenominatorDegreesOfFreedom();	0
org.apache.commons.math3.distribution.FDistribution:108-super(rng);[CLS]org.apache.commons.math3.distribution.FDistribution:203-if (denominatorDF > 2) {	0
org.apache.commons.math3.distribution.FDistribution:108-super(rng);[CLS]org.apache.commons.math3.distribution.FDistribution:204-return denominatorDF / (denominatorDF - 2);	0
org.apache.commons.math3.distribution.FDistribution:49-private double numericalVariance = Double.NaN;[CLS]org.apache.commons.math3.distribution.FDistribution:51-private boolean numericalVarianceIsCalculated = false;	0
org.apache.commons.math3.distribution.FDistribution:49-private double numericalVariance = Double.NaN;[CLS]org.apache.commons.math3.distribution.FDistribution:110-if (numeratorDegreesOfFreedom <= 0) {	0
org.apache.commons.math3.distribution.FDistribution:49-private double numericalVariance = Double.NaN;[CLS]org.apache.commons.math3.distribution.FDistribution:114-if (denominatorDegreesOfFreedom <= 0) {	0
org.apache.commons.math3.distribution.FDistribution:49-private double numericalVariance = Double.NaN;[CLS]org.apache.commons.math3.distribution.FDistribution:118-this.numeratorDegreesOfFreedom = numeratorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.FDistribution:49-private double numericalVariance = Double.NaN;[CLS]org.apache.commons.math3.distribution.FDistribution:119-this.denominatorDegreesOfFreedom = denominatorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.FDistribution:49-private double numericalVariance = Double.NaN;[CLS]org.apache.commons.math3.distribution.FDistribution:120-solverAbsoluteAccuracy = inverseCumAccuracy;	0
org.apache.commons.math3.distribution.FDistribution:49-private double numericalVariance = Double.NaN;[CLS]org.apache.commons.math3.distribution.FDistribution:121-}	0
org.apache.commons.math3.distribution.FDistribution:49-private double numericalVariance = Double.NaN;[CLS]org.apache.commons.math3.distribution.FDistribution:111-throw new NotStrictlyPositiveException(LocalizedFormats.DEGREES_OF_FREEDOM,	0
org.apache.commons.math3.distribution.FDistribution:49-private double numericalVariance = Double.NaN;[CLS]org.apache.commons.math3.distribution.FDistribution:115-throw new NotStrictlyPositiveException(LocalizedFormats.DEGREES_OF_FREEDOM,	0
org.apache.commons.math3.distribution.FDistribution:49-private double numericalVariance = Double.NaN;[CLS]org.apache.commons.math3.distribution.FDistribution:154-if (x <= 0) {	0
org.apache.commons.math3.distribution.FDistribution:49-private double numericalVariance = Double.NaN;[CLS]org.apache.commons.math3.distribution.FDistribution:155-ret = 0;	0
org.apache.commons.math3.distribution.FDistribution:49-private double numericalVariance = Double.NaN;[CLS]org.apache.commons.math3.distribution.FDistribution:157-double n = numeratorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.FDistribution:49-private double numericalVariance = Double.NaN;[CLS]org.apache.commons.math3.distribution.FDistribution:158-double m = denominatorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.FDistribution:49-private double numericalVariance = Double.NaN;[CLS]org.apache.commons.math3.distribution.FDistribution:160-ret = Beta.regularizedBeta((n * x) / (m + n * x),	0
org.apache.commons.math3.distribution.FDistribution:49-private double numericalVariance = Double.NaN;[CLS]org.apache.commons.math3.distribution.FDistribution:164-return ret;	0
org.apache.commons.math3.distribution.FDistribution:49-private double numericalVariance = Double.NaN;[CLS]org.apache.commons.math3.distribution.FDistribution:173-return numeratorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.FDistribution:49-private double numericalVariance = Double.NaN;[CLS]org.apache.commons.math3.distribution.FDistribution:182-return denominatorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.FDistribution:49-private double numericalVariance = Double.NaN;[CLS]org.apache.commons.math3.distribution.FDistribution:188-return solverAbsoluteAccuracy;	0
org.apache.commons.math3.distribution.FDistribution:49-private double numericalVariance = Double.NaN;[CLS]org.apache.commons.math3.distribution.FDistribution:201-final double denominatorDF = getDenominatorDegreesOfFreedom();	0
org.apache.commons.math3.distribution.FDistribution:49-private double numericalVariance = Double.NaN;[CLS]org.apache.commons.math3.distribution.FDistribution:203-if (denominatorDF > 2) {	0
org.apache.commons.math3.distribution.FDistribution:49-private double numericalVariance = Double.NaN;[CLS]org.apache.commons.math3.distribution.FDistribution:204-return denominatorDF / (denominatorDF - 2);	0
org.apache.commons.math3.distribution.FDistribution:51-private boolean numericalVarianceIsCalculated = false;[CLS]org.apache.commons.math3.distribution.FDistribution:110-if (numeratorDegreesOfFreedom <= 0) {	0
org.apache.commons.math3.distribution.FDistribution:51-private boolean numericalVarianceIsCalculated = false;[CLS]org.apache.commons.math3.distribution.FDistribution:114-if (denominatorDegreesOfFreedom <= 0) {	0
org.apache.commons.math3.distribution.FDistribution:51-private boolean numericalVarianceIsCalculated = false;[CLS]org.apache.commons.math3.distribution.FDistribution:118-this.numeratorDegreesOfFreedom = numeratorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.FDistribution:51-private boolean numericalVarianceIsCalculated = false;[CLS]org.apache.commons.math3.distribution.FDistribution:119-this.denominatorDegreesOfFreedom = denominatorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.FDistribution:51-private boolean numericalVarianceIsCalculated = false;[CLS]org.apache.commons.math3.distribution.FDistribution:120-solverAbsoluteAccuracy = inverseCumAccuracy;	0
org.apache.commons.math3.distribution.FDistribution:51-private boolean numericalVarianceIsCalculated = false;[CLS]org.apache.commons.math3.distribution.FDistribution:121-}	0
org.apache.commons.math3.distribution.FDistribution:51-private boolean numericalVarianceIsCalculated = false;[CLS]org.apache.commons.math3.distribution.FDistribution:111-throw new NotStrictlyPositiveException(LocalizedFormats.DEGREES_OF_FREEDOM,	0
org.apache.commons.math3.distribution.FDistribution:51-private boolean numericalVarianceIsCalculated = false;[CLS]org.apache.commons.math3.distribution.FDistribution:115-throw new NotStrictlyPositiveException(LocalizedFormats.DEGREES_OF_FREEDOM,	0
org.apache.commons.math3.distribution.FDistribution:51-private boolean numericalVarianceIsCalculated = false;[CLS]org.apache.commons.math3.distribution.FDistribution:154-if (x <= 0) {	0
org.apache.commons.math3.distribution.FDistribution:51-private boolean numericalVarianceIsCalculated = false;[CLS]org.apache.commons.math3.distribution.FDistribution:155-ret = 0;	0
org.apache.commons.math3.distribution.FDistribution:51-private boolean numericalVarianceIsCalculated = false;[CLS]org.apache.commons.math3.distribution.FDistribution:157-double n = numeratorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.FDistribution:51-private boolean numericalVarianceIsCalculated = false;[CLS]org.apache.commons.math3.distribution.FDistribution:158-double m = denominatorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.FDistribution:51-private boolean numericalVarianceIsCalculated = false;[CLS]org.apache.commons.math3.distribution.FDistribution:160-ret = Beta.regularizedBeta((n * x) / (m + n * x),	0
org.apache.commons.math3.distribution.FDistribution:51-private boolean numericalVarianceIsCalculated = false;[CLS]org.apache.commons.math3.distribution.FDistribution:164-return ret;	0
org.apache.commons.math3.distribution.FDistribution:51-private boolean numericalVarianceIsCalculated = false;[CLS]org.apache.commons.math3.distribution.FDistribution:173-return numeratorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.FDistribution:51-private boolean numericalVarianceIsCalculated = false;[CLS]org.apache.commons.math3.distribution.FDistribution:182-return denominatorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.FDistribution:51-private boolean numericalVarianceIsCalculated = false;[CLS]org.apache.commons.math3.distribution.FDistribution:188-return solverAbsoluteAccuracy;	0
org.apache.commons.math3.distribution.FDistribution:51-private boolean numericalVarianceIsCalculated = false;[CLS]org.apache.commons.math3.distribution.FDistribution:201-final double denominatorDF = getDenominatorDegreesOfFreedom();	0
org.apache.commons.math3.distribution.FDistribution:51-private boolean numericalVarianceIsCalculated = false;[CLS]org.apache.commons.math3.distribution.FDistribution:203-if (denominatorDF > 2) {	0
org.apache.commons.math3.distribution.FDistribution:51-private boolean numericalVarianceIsCalculated = false;[CLS]org.apache.commons.math3.distribution.FDistribution:204-return denominatorDF / (denominatorDF - 2);	0
org.apache.commons.math3.distribution.FDistribution:110-if (numeratorDegreesOfFreedom <= 0) {[CLS]org.apache.commons.math3.distribution.FDistribution:114-if (denominatorDegreesOfFreedom <= 0) {	0
org.apache.commons.math3.distribution.FDistribution:110-if (numeratorDegreesOfFreedom <= 0) {[CLS]org.apache.commons.math3.distribution.FDistribution:118-this.numeratorDegreesOfFreedom = numeratorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.FDistribution:110-if (numeratorDegreesOfFreedom <= 0) {[CLS]org.apache.commons.math3.distribution.FDistribution:119-this.denominatorDegreesOfFreedom = denominatorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.FDistribution:110-if (numeratorDegreesOfFreedom <= 0) {[CLS]org.apache.commons.math3.distribution.FDistribution:120-solverAbsoluteAccuracy = inverseCumAccuracy;	0
org.apache.commons.math3.distribution.FDistribution:110-if (numeratorDegreesOfFreedom <= 0) {[CLS]org.apache.commons.math3.distribution.FDistribution:121-}	0
org.apache.commons.math3.distribution.FDistribution:110-if (numeratorDegreesOfFreedom <= 0) {[CLS]org.apache.commons.math3.distribution.FDistribution:111-throw new NotStrictlyPositiveException(LocalizedFormats.DEGREES_OF_FREEDOM,	0
org.apache.commons.math3.distribution.FDistribution:110-if (numeratorDegreesOfFreedom <= 0) {[CLS]org.apache.commons.math3.distribution.FDistribution:115-throw new NotStrictlyPositiveException(LocalizedFormats.DEGREES_OF_FREEDOM,	0
org.apache.commons.math3.distribution.FDistribution:110-if (numeratorDegreesOfFreedom <= 0) {[CLS]org.apache.commons.math3.distribution.FDistribution:154-if (x <= 0) {	0
org.apache.commons.math3.distribution.FDistribution:110-if (numeratorDegreesOfFreedom <= 0) {[CLS]org.apache.commons.math3.distribution.FDistribution:155-ret = 0;	0
org.apache.commons.math3.distribution.FDistribution:110-if (numeratorDegreesOfFreedom <= 0) {[CLS]org.apache.commons.math3.distribution.FDistribution:157-double n = numeratorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.FDistribution:110-if (numeratorDegreesOfFreedom <= 0) {[CLS]org.apache.commons.math3.distribution.FDistribution:158-double m = denominatorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.FDistribution:110-if (numeratorDegreesOfFreedom <= 0) {[CLS]org.apache.commons.math3.distribution.FDistribution:160-ret = Beta.regularizedBeta((n * x) / (m + n * x),	0
org.apache.commons.math3.distribution.FDistribution:110-if (numeratorDegreesOfFreedom <= 0) {[CLS]org.apache.commons.math3.distribution.FDistribution:164-return ret;	0
org.apache.commons.math3.distribution.FDistribution:110-if (numeratorDegreesOfFreedom <= 0) {[CLS]org.apache.commons.math3.distribution.FDistribution:173-return numeratorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.FDistribution:110-if (numeratorDegreesOfFreedom <= 0) {[CLS]org.apache.commons.math3.distribution.FDistribution:182-return denominatorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.FDistribution:110-if (numeratorDegreesOfFreedom <= 0) {[CLS]org.apache.commons.math3.distribution.FDistribution:188-return solverAbsoluteAccuracy;	0
org.apache.commons.math3.distribution.FDistribution:110-if (numeratorDegreesOfFreedom <= 0) {[CLS]org.apache.commons.math3.distribution.FDistribution:201-final double denominatorDF = getDenominatorDegreesOfFreedom();	0
org.apache.commons.math3.distribution.FDistribution:110-if (numeratorDegreesOfFreedom <= 0) {[CLS]org.apache.commons.math3.distribution.FDistribution:203-if (denominatorDF > 2) {	0
org.apache.commons.math3.distribution.FDistribution:110-if (numeratorDegreesOfFreedom <= 0) {[CLS]org.apache.commons.math3.distribution.FDistribution:204-return denominatorDF / (denominatorDF - 2);	0
org.apache.commons.math3.distribution.FDistribution:114-if (denominatorDegreesOfFreedom <= 0) {[CLS]org.apache.commons.math3.distribution.FDistribution:118-this.numeratorDegreesOfFreedom = numeratorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.FDistribution:114-if (denominatorDegreesOfFreedom <= 0) {[CLS]org.apache.commons.math3.distribution.FDistribution:119-this.denominatorDegreesOfFreedom = denominatorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.FDistribution:114-if (denominatorDegreesOfFreedom <= 0) {[CLS]org.apache.commons.math3.distribution.FDistribution:120-solverAbsoluteAccuracy = inverseCumAccuracy;	0
org.apache.commons.math3.distribution.FDistribution:114-if (denominatorDegreesOfFreedom <= 0) {[CLS]org.apache.commons.math3.distribution.FDistribution:121-}	0
org.apache.commons.math3.distribution.FDistribution:114-if (denominatorDegreesOfFreedom <= 0) {[CLS]org.apache.commons.math3.distribution.FDistribution:111-throw new NotStrictlyPositiveException(LocalizedFormats.DEGREES_OF_FREEDOM,	0
org.apache.commons.math3.distribution.FDistribution:114-if (denominatorDegreesOfFreedom <= 0) {[CLS]org.apache.commons.math3.distribution.FDistribution:115-throw new NotStrictlyPositiveException(LocalizedFormats.DEGREES_OF_FREEDOM,	0
org.apache.commons.math3.distribution.FDistribution:114-if (denominatorDegreesOfFreedom <= 0) {[CLS]org.apache.commons.math3.distribution.FDistribution:154-if (x <= 0) {	0
org.apache.commons.math3.distribution.FDistribution:114-if (denominatorDegreesOfFreedom <= 0) {[CLS]org.apache.commons.math3.distribution.FDistribution:155-ret = 0;	0
org.apache.commons.math3.distribution.FDistribution:114-if (denominatorDegreesOfFreedom <= 0) {[CLS]org.apache.commons.math3.distribution.FDistribution:157-double n = numeratorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.FDistribution:114-if (denominatorDegreesOfFreedom <= 0) {[CLS]org.apache.commons.math3.distribution.FDistribution:158-double m = denominatorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.FDistribution:114-if (denominatorDegreesOfFreedom <= 0) {[CLS]org.apache.commons.math3.distribution.FDistribution:160-ret = Beta.regularizedBeta((n * x) / (m + n * x),	0
org.apache.commons.math3.distribution.FDistribution:114-if (denominatorDegreesOfFreedom <= 0) {[CLS]org.apache.commons.math3.distribution.FDistribution:164-return ret;	0
org.apache.commons.math3.distribution.FDistribution:114-if (denominatorDegreesOfFreedom <= 0) {[CLS]org.apache.commons.math3.distribution.FDistribution:173-return numeratorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.FDistribution:114-if (denominatorDegreesOfFreedom <= 0) {[CLS]org.apache.commons.math3.distribution.FDistribution:182-return denominatorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.FDistribution:114-if (denominatorDegreesOfFreedom <= 0) {[CLS]org.apache.commons.math3.distribution.FDistribution:188-return solverAbsoluteAccuracy;	0
org.apache.commons.math3.distribution.FDistribution:114-if (denominatorDegreesOfFreedom <= 0) {[CLS]org.apache.commons.math3.distribution.FDistribution:201-final double denominatorDF = getDenominatorDegreesOfFreedom();	0
org.apache.commons.math3.distribution.FDistribution:114-if (denominatorDegreesOfFreedom <= 0) {[CLS]org.apache.commons.math3.distribution.FDistribution:203-if (denominatorDF > 2) {	0
org.apache.commons.math3.distribution.FDistribution:114-if (denominatorDegreesOfFreedom <= 0) {[CLS]org.apache.commons.math3.distribution.FDistribution:204-return denominatorDF / (denominatorDF - 2);	0
org.apache.commons.math3.distribution.FDistribution:118-this.numeratorDegreesOfFreedom = numeratorDegreesOfFreedom;[CLS]org.apache.commons.math3.distribution.FDistribution:119-this.denominatorDegreesOfFreedom = denominatorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.FDistribution:118-this.numeratorDegreesOfFreedom = numeratorDegreesOfFreedom;[CLS]org.apache.commons.math3.distribution.FDistribution:120-solverAbsoluteAccuracy = inverseCumAccuracy;	0
org.apache.commons.math3.distribution.FDistribution:118-this.numeratorDegreesOfFreedom = numeratorDegreesOfFreedom;[CLS]org.apache.commons.math3.distribution.FDistribution:121-}	0
org.apache.commons.math3.distribution.FDistribution:118-this.numeratorDegreesOfFreedom = numeratorDegreesOfFreedom;[CLS]org.apache.commons.math3.distribution.FDistribution:111-throw new NotStrictlyPositiveException(LocalizedFormats.DEGREES_OF_FREEDOM,	0
org.apache.commons.math3.distribution.FDistribution:118-this.numeratorDegreesOfFreedom = numeratorDegreesOfFreedom;[CLS]org.apache.commons.math3.distribution.FDistribution:115-throw new NotStrictlyPositiveException(LocalizedFormats.DEGREES_OF_FREEDOM,	0
org.apache.commons.math3.distribution.FDistribution:118-this.numeratorDegreesOfFreedom = numeratorDegreesOfFreedom;[CLS]org.apache.commons.math3.distribution.FDistribution:154-if (x <= 0) {	0
org.apache.commons.math3.distribution.FDistribution:118-this.numeratorDegreesOfFreedom = numeratorDegreesOfFreedom;[CLS]org.apache.commons.math3.distribution.FDistribution:155-ret = 0;	0
org.apache.commons.math3.distribution.FDistribution:118-this.numeratorDegreesOfFreedom = numeratorDegreesOfFreedom;[CLS]org.apache.commons.math3.distribution.FDistribution:157-double n = numeratorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.FDistribution:118-this.numeratorDegreesOfFreedom = numeratorDegreesOfFreedom;[CLS]org.apache.commons.math3.distribution.FDistribution:158-double m = denominatorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.FDistribution:118-this.numeratorDegreesOfFreedom = numeratorDegreesOfFreedom;[CLS]org.apache.commons.math3.distribution.FDistribution:160-ret = Beta.regularizedBeta((n * x) / (m + n * x),	0
org.apache.commons.math3.distribution.FDistribution:118-this.numeratorDegreesOfFreedom = numeratorDegreesOfFreedom;[CLS]org.apache.commons.math3.distribution.FDistribution:164-return ret;	0
org.apache.commons.math3.distribution.FDistribution:118-this.numeratorDegreesOfFreedom = numeratorDegreesOfFreedom;[CLS]org.apache.commons.math3.distribution.FDistribution:173-return numeratorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.FDistribution:118-this.numeratorDegreesOfFreedom = numeratorDegreesOfFreedom;[CLS]org.apache.commons.math3.distribution.FDistribution:182-return denominatorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.FDistribution:118-this.numeratorDegreesOfFreedom = numeratorDegreesOfFreedom;[CLS]org.apache.commons.math3.distribution.FDistribution:188-return solverAbsoluteAccuracy;	0
org.apache.commons.math3.distribution.FDistribution:118-this.numeratorDegreesOfFreedom = numeratorDegreesOfFreedom;[CLS]org.apache.commons.math3.distribution.FDistribution:201-final double denominatorDF = getDenominatorDegreesOfFreedom();	0
org.apache.commons.math3.distribution.FDistribution:118-this.numeratorDegreesOfFreedom = numeratorDegreesOfFreedom;[CLS]org.apache.commons.math3.distribution.FDistribution:203-if (denominatorDF > 2) {	0
org.apache.commons.math3.distribution.FDistribution:118-this.numeratorDegreesOfFreedom = numeratorDegreesOfFreedom;[CLS]org.apache.commons.math3.distribution.FDistribution:204-return denominatorDF / (denominatorDF - 2);	0
org.apache.commons.math3.distribution.FDistribution:119-this.denominatorDegreesOfFreedom = denominatorDegreesOfFreedom;[CLS]org.apache.commons.math3.distribution.FDistribution:120-solverAbsoluteAccuracy = inverseCumAccuracy;	0
org.apache.commons.math3.distribution.FDistribution:119-this.denominatorDegreesOfFreedom = denominatorDegreesOfFreedom;[CLS]org.apache.commons.math3.distribution.FDistribution:121-}	0
org.apache.commons.math3.distribution.FDistribution:119-this.denominatorDegreesOfFreedom = denominatorDegreesOfFreedom;[CLS]org.apache.commons.math3.distribution.FDistribution:111-throw new NotStrictlyPositiveException(LocalizedFormats.DEGREES_OF_FREEDOM,	0
org.apache.commons.math3.distribution.FDistribution:119-this.denominatorDegreesOfFreedom = denominatorDegreesOfFreedom;[CLS]org.apache.commons.math3.distribution.FDistribution:115-throw new NotStrictlyPositiveException(LocalizedFormats.DEGREES_OF_FREEDOM,	0
org.apache.commons.math3.distribution.FDistribution:119-this.denominatorDegreesOfFreedom = denominatorDegreesOfFreedom;[CLS]org.apache.commons.math3.distribution.FDistribution:154-if (x <= 0) {	0
org.apache.commons.math3.distribution.FDistribution:119-this.denominatorDegreesOfFreedom = denominatorDegreesOfFreedom;[CLS]org.apache.commons.math3.distribution.FDistribution:155-ret = 0;	0
org.apache.commons.math3.distribution.FDistribution:119-this.denominatorDegreesOfFreedom = denominatorDegreesOfFreedom;[CLS]org.apache.commons.math3.distribution.FDistribution:157-double n = numeratorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.FDistribution:119-this.denominatorDegreesOfFreedom = denominatorDegreesOfFreedom;[CLS]org.apache.commons.math3.distribution.FDistribution:158-double m = denominatorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.FDistribution:119-this.denominatorDegreesOfFreedom = denominatorDegreesOfFreedom;[CLS]org.apache.commons.math3.distribution.FDistribution:160-ret = Beta.regularizedBeta((n * x) / (m + n * x),	0
org.apache.commons.math3.distribution.FDistribution:119-this.denominatorDegreesOfFreedom = denominatorDegreesOfFreedom;[CLS]org.apache.commons.math3.distribution.FDistribution:164-return ret;	0
org.apache.commons.math3.distribution.FDistribution:119-this.denominatorDegreesOfFreedom = denominatorDegreesOfFreedom;[CLS]org.apache.commons.math3.distribution.FDistribution:173-return numeratorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.FDistribution:119-this.denominatorDegreesOfFreedom = denominatorDegreesOfFreedom;[CLS]org.apache.commons.math3.distribution.FDistribution:182-return denominatorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.FDistribution:119-this.denominatorDegreesOfFreedom = denominatorDegreesOfFreedom;[CLS]org.apache.commons.math3.distribution.FDistribution:188-return solverAbsoluteAccuracy;	0
org.apache.commons.math3.distribution.FDistribution:119-this.denominatorDegreesOfFreedom = denominatorDegreesOfFreedom;[CLS]org.apache.commons.math3.distribution.FDistribution:201-final double denominatorDF = getDenominatorDegreesOfFreedom();	0
org.apache.commons.math3.distribution.FDistribution:119-this.denominatorDegreesOfFreedom = denominatorDegreesOfFreedom;[CLS]org.apache.commons.math3.distribution.FDistribution:203-if (denominatorDF > 2) {	0
org.apache.commons.math3.distribution.FDistribution:119-this.denominatorDegreesOfFreedom = denominatorDegreesOfFreedom;[CLS]org.apache.commons.math3.distribution.FDistribution:204-return denominatorDF / (denominatorDF - 2);	0
org.apache.commons.math3.distribution.FDistribution:120-solverAbsoluteAccuracy = inverseCumAccuracy;[CLS]org.apache.commons.math3.distribution.FDistribution:121-}	0
org.apache.commons.math3.distribution.FDistribution:120-solverAbsoluteAccuracy = inverseCumAccuracy;[CLS]org.apache.commons.math3.distribution.FDistribution:111-throw new NotStrictlyPositiveException(LocalizedFormats.DEGREES_OF_FREEDOM,	0
org.apache.commons.math3.distribution.FDistribution:120-solverAbsoluteAccuracy = inverseCumAccuracy;[CLS]org.apache.commons.math3.distribution.FDistribution:115-throw new NotStrictlyPositiveException(LocalizedFormats.DEGREES_OF_FREEDOM,	0
org.apache.commons.math3.distribution.FDistribution:120-solverAbsoluteAccuracy = inverseCumAccuracy;[CLS]org.apache.commons.math3.distribution.FDistribution:154-if (x <= 0) {	0
org.apache.commons.math3.distribution.FDistribution:120-solverAbsoluteAccuracy = inverseCumAccuracy;[CLS]org.apache.commons.math3.distribution.FDistribution:155-ret = 0;	0
org.apache.commons.math3.distribution.FDistribution:120-solverAbsoluteAccuracy = inverseCumAccuracy;[CLS]org.apache.commons.math3.distribution.FDistribution:157-double n = numeratorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.FDistribution:120-solverAbsoluteAccuracy = inverseCumAccuracy;[CLS]org.apache.commons.math3.distribution.FDistribution:158-double m = denominatorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.FDistribution:120-solverAbsoluteAccuracy = inverseCumAccuracy;[CLS]org.apache.commons.math3.distribution.FDistribution:160-ret = Beta.regularizedBeta((n * x) / (m + n * x),	0
org.apache.commons.math3.distribution.FDistribution:120-solverAbsoluteAccuracy = inverseCumAccuracy;[CLS]org.apache.commons.math3.distribution.FDistribution:164-return ret;	0
org.apache.commons.math3.distribution.FDistribution:120-solverAbsoluteAccuracy = inverseCumAccuracy;[CLS]org.apache.commons.math3.distribution.FDistribution:173-return numeratorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.FDistribution:120-solverAbsoluteAccuracy = inverseCumAccuracy;[CLS]org.apache.commons.math3.distribution.FDistribution:182-return denominatorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.FDistribution:120-solverAbsoluteAccuracy = inverseCumAccuracy;[CLS]org.apache.commons.math3.distribution.FDistribution:188-return solverAbsoluteAccuracy;	0
org.apache.commons.math3.distribution.FDistribution:120-solverAbsoluteAccuracy = inverseCumAccuracy;[CLS]org.apache.commons.math3.distribution.FDistribution:201-final double denominatorDF = getDenominatorDegreesOfFreedom();	0
org.apache.commons.math3.distribution.FDistribution:120-solverAbsoluteAccuracy = inverseCumAccuracy;[CLS]org.apache.commons.math3.distribution.FDistribution:203-if (denominatorDF > 2) {	0
org.apache.commons.math3.distribution.FDistribution:120-solverAbsoluteAccuracy = inverseCumAccuracy;[CLS]org.apache.commons.math3.distribution.FDistribution:204-return denominatorDF / (denominatorDF - 2);	0
org.apache.commons.math3.distribution.FDistribution:121-}[CLS]org.apache.commons.math3.distribution.FDistribution:111-throw new NotStrictlyPositiveException(LocalizedFormats.DEGREES_OF_FREEDOM,	0
org.apache.commons.math3.distribution.FDistribution:121-}[CLS]org.apache.commons.math3.distribution.FDistribution:115-throw new NotStrictlyPositiveException(LocalizedFormats.DEGREES_OF_FREEDOM,	0
org.apache.commons.math3.distribution.FDistribution:121-}[CLS]org.apache.commons.math3.distribution.FDistribution:154-if (x <= 0) {	0
org.apache.commons.math3.distribution.FDistribution:121-}[CLS]org.apache.commons.math3.distribution.FDistribution:155-ret = 0;	0
org.apache.commons.math3.distribution.FDistribution:121-}[CLS]org.apache.commons.math3.distribution.FDistribution:157-double n = numeratorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.FDistribution:121-}[CLS]org.apache.commons.math3.distribution.FDistribution:158-double m = denominatorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.FDistribution:121-}[CLS]org.apache.commons.math3.distribution.FDistribution:160-ret = Beta.regularizedBeta((n * x) / (m + n * x),	0
org.apache.commons.math3.distribution.FDistribution:121-}[CLS]org.apache.commons.math3.distribution.FDistribution:164-return ret;	0
org.apache.commons.math3.distribution.FDistribution:121-}[CLS]org.apache.commons.math3.distribution.FDistribution:173-return numeratorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.FDistribution:121-}[CLS]org.apache.commons.math3.distribution.FDistribution:182-return denominatorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.FDistribution:121-}[CLS]org.apache.commons.math3.distribution.FDistribution:188-return solverAbsoluteAccuracy;	0
org.apache.commons.math3.distribution.FDistribution:121-}[CLS]org.apache.commons.math3.distribution.FDistribution:201-final double denominatorDF = getDenominatorDegreesOfFreedom();	0
org.apache.commons.math3.distribution.FDistribution:121-}[CLS]org.apache.commons.math3.distribution.FDistribution:203-if (denominatorDF > 2) {	0
org.apache.commons.math3.distribution.FDistribution:121-}[CLS]org.apache.commons.math3.distribution.FDistribution:204-return denominatorDF / (denominatorDF - 2);	0
org.apache.commons.math3.distribution.FDistribution:111-throw new NotStrictlyPositiveException(LocalizedFormats.DEGREES_OF_FREEDOM,[CLS]org.apache.commons.math3.distribution.FDistribution:115-throw new NotStrictlyPositiveException(LocalizedFormats.DEGREES_OF_FREEDOM,	0
org.apache.commons.math3.distribution.FDistribution:111-throw new NotStrictlyPositiveException(LocalizedFormats.DEGREES_OF_FREEDOM,[CLS]org.apache.commons.math3.distribution.FDistribution:154-if (x <= 0) {	0
org.apache.commons.math3.distribution.FDistribution:111-throw new NotStrictlyPositiveException(LocalizedFormats.DEGREES_OF_FREEDOM,[CLS]org.apache.commons.math3.distribution.FDistribution:155-ret = 0;	0
org.apache.commons.math3.distribution.FDistribution:111-throw new NotStrictlyPositiveException(LocalizedFormats.DEGREES_OF_FREEDOM,[CLS]org.apache.commons.math3.distribution.FDistribution:157-double n = numeratorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.FDistribution:111-throw new NotStrictlyPositiveException(LocalizedFormats.DEGREES_OF_FREEDOM,[CLS]org.apache.commons.math3.distribution.FDistribution:158-double m = denominatorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.FDistribution:111-throw new NotStrictlyPositiveException(LocalizedFormats.DEGREES_OF_FREEDOM,[CLS]org.apache.commons.math3.distribution.FDistribution:160-ret = Beta.regularizedBeta((n * x) / (m + n * x),	0
org.apache.commons.math3.distribution.FDistribution:111-throw new NotStrictlyPositiveException(LocalizedFormats.DEGREES_OF_FREEDOM,[CLS]org.apache.commons.math3.distribution.FDistribution:164-return ret;	0
org.apache.commons.math3.distribution.FDistribution:111-throw new NotStrictlyPositiveException(LocalizedFormats.DEGREES_OF_FREEDOM,[CLS]org.apache.commons.math3.distribution.FDistribution:173-return numeratorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.FDistribution:111-throw new NotStrictlyPositiveException(LocalizedFormats.DEGREES_OF_FREEDOM,[CLS]org.apache.commons.math3.distribution.FDistribution:182-return denominatorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.FDistribution:111-throw new NotStrictlyPositiveException(LocalizedFormats.DEGREES_OF_FREEDOM,[CLS]org.apache.commons.math3.distribution.FDistribution:188-return solverAbsoluteAccuracy;	0
org.apache.commons.math3.distribution.FDistribution:111-throw new NotStrictlyPositiveException(LocalizedFormats.DEGREES_OF_FREEDOM,[CLS]org.apache.commons.math3.distribution.FDistribution:201-final double denominatorDF = getDenominatorDegreesOfFreedom();	0
org.apache.commons.math3.distribution.FDistribution:111-throw new NotStrictlyPositiveException(LocalizedFormats.DEGREES_OF_FREEDOM,[CLS]org.apache.commons.math3.distribution.FDistribution:203-if (denominatorDF > 2) {	0
org.apache.commons.math3.distribution.FDistribution:111-throw new NotStrictlyPositiveException(LocalizedFormats.DEGREES_OF_FREEDOM,[CLS]org.apache.commons.math3.distribution.FDistribution:204-return denominatorDF / (denominatorDF - 2);	0
org.apache.commons.math3.distribution.FDistribution:115-throw new NotStrictlyPositiveException(LocalizedFormats.DEGREES_OF_FREEDOM,[CLS]org.apache.commons.math3.distribution.FDistribution:154-if (x <= 0) {	0
org.apache.commons.math3.distribution.FDistribution:115-throw new NotStrictlyPositiveException(LocalizedFormats.DEGREES_OF_FREEDOM,[CLS]org.apache.commons.math3.distribution.FDistribution:155-ret = 0;	0
org.apache.commons.math3.distribution.FDistribution:115-throw new NotStrictlyPositiveException(LocalizedFormats.DEGREES_OF_FREEDOM,[CLS]org.apache.commons.math3.distribution.FDistribution:157-double n = numeratorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.FDistribution:115-throw new NotStrictlyPositiveException(LocalizedFormats.DEGREES_OF_FREEDOM,[CLS]org.apache.commons.math3.distribution.FDistribution:158-double m = denominatorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.FDistribution:115-throw new NotStrictlyPositiveException(LocalizedFormats.DEGREES_OF_FREEDOM,[CLS]org.apache.commons.math3.distribution.FDistribution:160-ret = Beta.regularizedBeta((n * x) / (m + n * x),	0
org.apache.commons.math3.distribution.FDistribution:115-throw new NotStrictlyPositiveException(LocalizedFormats.DEGREES_OF_FREEDOM,[CLS]org.apache.commons.math3.distribution.FDistribution:164-return ret;	0
org.apache.commons.math3.distribution.FDistribution:115-throw new NotStrictlyPositiveException(LocalizedFormats.DEGREES_OF_FREEDOM,[CLS]org.apache.commons.math3.distribution.FDistribution:173-return numeratorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.FDistribution:115-throw new NotStrictlyPositiveException(LocalizedFormats.DEGREES_OF_FREEDOM,[CLS]org.apache.commons.math3.distribution.FDistribution:182-return denominatorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.FDistribution:115-throw new NotStrictlyPositiveException(LocalizedFormats.DEGREES_OF_FREEDOM,[CLS]org.apache.commons.math3.distribution.FDistribution:188-return solverAbsoluteAccuracy;	0
org.apache.commons.math3.distribution.FDistribution:115-throw new NotStrictlyPositiveException(LocalizedFormats.DEGREES_OF_FREEDOM,[CLS]org.apache.commons.math3.distribution.FDistribution:201-final double denominatorDF = getDenominatorDegreesOfFreedom();	0
org.apache.commons.math3.distribution.FDistribution:115-throw new NotStrictlyPositiveException(LocalizedFormats.DEGREES_OF_FREEDOM,[CLS]org.apache.commons.math3.distribution.FDistribution:203-if (denominatorDF > 2) {	0
org.apache.commons.math3.distribution.FDistribution:115-throw new NotStrictlyPositiveException(LocalizedFormats.DEGREES_OF_FREEDOM,[CLS]org.apache.commons.math3.distribution.FDistribution:204-return denominatorDF / (denominatorDF - 2);	0
org.apache.commons.math3.distribution.FDistribution:154-if (x <= 0) {[CLS]org.apache.commons.math3.distribution.FDistribution:155-ret = 0;	0
org.apache.commons.math3.distribution.FDistribution:154-if (x <= 0) {[CLS]org.apache.commons.math3.distribution.FDistribution:157-double n = numeratorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.FDistribution:154-if (x <= 0) {[CLS]org.apache.commons.math3.distribution.FDistribution:158-double m = denominatorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.FDistribution:154-if (x <= 0) {[CLS]org.apache.commons.math3.distribution.FDistribution:160-ret = Beta.regularizedBeta((n * x) / (m + n * x),	0
org.apache.commons.math3.distribution.FDistribution:154-if (x <= 0) {[CLS]org.apache.commons.math3.distribution.FDistribution:164-return ret;	0
org.apache.commons.math3.distribution.FDistribution:154-if (x <= 0) {[CLS]org.apache.commons.math3.distribution.FDistribution:173-return numeratorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.FDistribution:154-if (x <= 0) {[CLS]org.apache.commons.math3.distribution.FDistribution:182-return denominatorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.FDistribution:154-if (x <= 0) {[CLS]org.apache.commons.math3.distribution.FDistribution:188-return solverAbsoluteAccuracy;	0
org.apache.commons.math3.distribution.FDistribution:154-if (x <= 0) {[CLS]org.apache.commons.math3.distribution.FDistribution:201-final double denominatorDF = getDenominatorDegreesOfFreedom();	0
org.apache.commons.math3.distribution.FDistribution:154-if (x <= 0) {[CLS]org.apache.commons.math3.distribution.FDistribution:203-if (denominatorDF > 2) {	0
org.apache.commons.math3.distribution.FDistribution:154-if (x <= 0) {[CLS]org.apache.commons.math3.distribution.FDistribution:204-return denominatorDF / (denominatorDF - 2);	0
org.apache.commons.math3.distribution.FDistribution:155-ret = 0;[CLS]org.apache.commons.math3.distribution.FDistribution:157-double n = numeratorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.FDistribution:155-ret = 0;[CLS]org.apache.commons.math3.distribution.FDistribution:158-double m = denominatorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.FDistribution:155-ret = 0;[CLS]org.apache.commons.math3.distribution.FDistribution:160-ret = Beta.regularizedBeta((n * x) / (m + n * x),	0
org.apache.commons.math3.distribution.FDistribution:155-ret = 0;[CLS]org.apache.commons.math3.distribution.FDistribution:164-return ret;	0
org.apache.commons.math3.distribution.FDistribution:155-ret = 0;[CLS]org.apache.commons.math3.distribution.FDistribution:173-return numeratorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.FDistribution:155-ret = 0;[CLS]org.apache.commons.math3.distribution.FDistribution:182-return denominatorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.FDistribution:155-ret = 0;[CLS]org.apache.commons.math3.distribution.FDistribution:188-return solverAbsoluteAccuracy;	0
org.apache.commons.math3.distribution.FDistribution:155-ret = 0;[CLS]org.apache.commons.math3.distribution.FDistribution:201-final double denominatorDF = getDenominatorDegreesOfFreedom();	0
org.apache.commons.math3.distribution.FDistribution:155-ret = 0;[CLS]org.apache.commons.math3.distribution.FDistribution:203-if (denominatorDF > 2) {	0
org.apache.commons.math3.distribution.FDistribution:155-ret = 0;[CLS]org.apache.commons.math3.distribution.FDistribution:204-return denominatorDF / (denominatorDF - 2);	0
org.apache.commons.math3.distribution.FDistribution:157-double n = numeratorDegreesOfFreedom;[CLS]org.apache.commons.math3.distribution.FDistribution:158-double m = denominatorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.FDistribution:157-double n = numeratorDegreesOfFreedom;[CLS]org.apache.commons.math3.distribution.FDistribution:160-ret = Beta.regularizedBeta((n * x) / (m + n * x),	0
org.apache.commons.math3.distribution.FDistribution:157-double n = numeratorDegreesOfFreedom;[CLS]org.apache.commons.math3.distribution.FDistribution:164-return ret;	0
org.apache.commons.math3.distribution.FDistribution:157-double n = numeratorDegreesOfFreedom;[CLS]org.apache.commons.math3.distribution.FDistribution:173-return numeratorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.FDistribution:157-double n = numeratorDegreesOfFreedom;[CLS]org.apache.commons.math3.distribution.FDistribution:182-return denominatorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.FDistribution:157-double n = numeratorDegreesOfFreedom;[CLS]org.apache.commons.math3.distribution.FDistribution:188-return solverAbsoluteAccuracy;	0
org.apache.commons.math3.distribution.FDistribution:157-double n = numeratorDegreesOfFreedom;[CLS]org.apache.commons.math3.distribution.FDistribution:201-final double denominatorDF = getDenominatorDegreesOfFreedom();	0
org.apache.commons.math3.distribution.FDistribution:157-double n = numeratorDegreesOfFreedom;[CLS]org.apache.commons.math3.distribution.FDistribution:203-if (denominatorDF > 2) {	0
org.apache.commons.math3.distribution.FDistribution:157-double n = numeratorDegreesOfFreedom;[CLS]org.apache.commons.math3.distribution.FDistribution:204-return denominatorDF / (denominatorDF - 2);	0
org.apache.commons.math3.distribution.FDistribution:158-double m = denominatorDegreesOfFreedom;[CLS]org.apache.commons.math3.distribution.FDistribution:160-ret = Beta.regularizedBeta((n * x) / (m + n * x),	0
org.apache.commons.math3.distribution.FDistribution:158-double m = denominatorDegreesOfFreedom;[CLS]org.apache.commons.math3.distribution.FDistribution:164-return ret;	0
org.apache.commons.math3.distribution.FDistribution:158-double m = denominatorDegreesOfFreedom;[CLS]org.apache.commons.math3.distribution.FDistribution:173-return numeratorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.FDistribution:158-double m = denominatorDegreesOfFreedom;[CLS]org.apache.commons.math3.distribution.FDistribution:182-return denominatorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.FDistribution:158-double m = denominatorDegreesOfFreedom;[CLS]org.apache.commons.math3.distribution.FDistribution:188-return solverAbsoluteAccuracy;	0
org.apache.commons.math3.distribution.FDistribution:158-double m = denominatorDegreesOfFreedom;[CLS]org.apache.commons.math3.distribution.FDistribution:201-final double denominatorDF = getDenominatorDegreesOfFreedom();	0
org.apache.commons.math3.distribution.FDistribution:158-double m = denominatorDegreesOfFreedom;[CLS]org.apache.commons.math3.distribution.FDistribution:203-if (denominatorDF > 2) {	0
org.apache.commons.math3.distribution.FDistribution:158-double m = denominatorDegreesOfFreedom;[CLS]org.apache.commons.math3.distribution.FDistribution:204-return denominatorDF / (denominatorDF - 2);	0
org.apache.commons.math3.distribution.FDistribution:160-ret = Beta.regularizedBeta((n * x) / (m + n * x),[CLS]org.apache.commons.math3.distribution.FDistribution:164-return ret;	0
org.apache.commons.math3.distribution.FDistribution:160-ret = Beta.regularizedBeta((n * x) / (m + n * x),[CLS]org.apache.commons.math3.distribution.FDistribution:173-return numeratorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.FDistribution:160-ret = Beta.regularizedBeta((n * x) / (m + n * x),[CLS]org.apache.commons.math3.distribution.FDistribution:182-return denominatorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.FDistribution:160-ret = Beta.regularizedBeta((n * x) / (m + n * x),[CLS]org.apache.commons.math3.distribution.FDistribution:188-return solverAbsoluteAccuracy;	0
org.apache.commons.math3.distribution.FDistribution:160-ret = Beta.regularizedBeta((n * x) / (m + n * x),[CLS]org.apache.commons.math3.distribution.FDistribution:201-final double denominatorDF = getDenominatorDegreesOfFreedom();	0
org.apache.commons.math3.distribution.FDistribution:160-ret = Beta.regularizedBeta((n * x) / (m + n * x),[CLS]org.apache.commons.math3.distribution.FDistribution:203-if (denominatorDF > 2) {	0
org.apache.commons.math3.distribution.FDistribution:160-ret = Beta.regularizedBeta((n * x) / (m + n * x),[CLS]org.apache.commons.math3.distribution.FDistribution:204-return denominatorDF / (denominatorDF - 2);	0
org.apache.commons.math3.distribution.FDistribution:164-return ret;[CLS]org.apache.commons.math3.distribution.FDistribution:173-return numeratorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.FDistribution:164-return ret;[CLS]org.apache.commons.math3.distribution.FDistribution:182-return denominatorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.FDistribution:164-return ret;[CLS]org.apache.commons.math3.distribution.FDistribution:188-return solverAbsoluteAccuracy;	0
org.apache.commons.math3.distribution.FDistribution:164-return ret;[CLS]org.apache.commons.math3.distribution.FDistribution:201-final double denominatorDF = getDenominatorDegreesOfFreedom();	0
org.apache.commons.math3.distribution.FDistribution:164-return ret;[CLS]org.apache.commons.math3.distribution.FDistribution:203-if (denominatorDF > 2) {	0
org.apache.commons.math3.distribution.FDistribution:164-return ret;[CLS]org.apache.commons.math3.distribution.FDistribution:204-return denominatorDF / (denominatorDF - 2);	0
org.apache.commons.math3.distribution.FDistribution:173-return numeratorDegreesOfFreedom;[CLS]org.apache.commons.math3.distribution.FDistribution:182-return denominatorDegreesOfFreedom;	0
org.apache.commons.math3.distribution.FDistribution:173-return numeratorDegreesOfFreedom;[CLS]org.apache.commons.math3.distribution.FDistribution:188-return solverAbsoluteAccuracy;	0
org.apache.commons.math3.distribution.FDistribution:173-return numeratorDegreesOfFreedom;[CLS]org.apache.commons.math3.distribution.FDistribution:201-final double denominatorDF = getDenominatorDegreesOfFreedom();	0
org.apache.commons.math3.distribution.FDistribution:173-return numeratorDegreesOfFreedom;[CLS]org.apache.commons.math3.distribution.FDistribution:203-if (denominatorDF > 2) {	0
org.apache.commons.math3.distribution.FDistribution:173-return numeratorDegreesOfFreedom;[CLS]org.apache.commons.math3.distribution.FDistribution:204-return denominatorDF / (denominatorDF - 2);	0
org.apache.commons.math3.distribution.FDistribution:182-return denominatorDegreesOfFreedom;[CLS]org.apache.commons.math3.distribution.FDistribution:188-return solverAbsoluteAccuracy;	0
org.apache.commons.math3.distribution.FDistribution:182-return denominatorDegreesOfFreedom;[CLS]org.apache.commons.math3.distribution.FDistribution:201-final double denominatorDF = getDenominatorDegreesOfFreedom();	0
org.apache.commons.math3.distribution.FDistribution:182-return denominatorDegreesOfFreedom;[CLS]org.apache.commons.math3.distribution.FDistribution:203-if (denominatorDF > 2) {	0
org.apache.commons.math3.distribution.FDistribution:182-return denominatorDegreesOfFreedom;[CLS]org.apache.commons.math3.distribution.FDistribution:204-return denominatorDF / (denominatorDF - 2);	0
org.apache.commons.math3.distribution.FDistribution:188-return solverAbsoluteAccuracy;[CLS]org.apache.commons.math3.distribution.FDistribution:201-final double denominatorDF = getDenominatorDegreesOfFreedom();	0
org.apache.commons.math3.distribution.FDistribution:188-return solverAbsoluteAccuracy;[CLS]org.apache.commons.math3.distribution.FDistribution:203-if (denominatorDF > 2) {	0
org.apache.commons.math3.distribution.FDistribution:188-return solverAbsoluteAccuracy;[CLS]org.apache.commons.math3.distribution.FDistribution:204-return denominatorDF / (denominatorDF - 2);	0
org.apache.commons.math3.distribution.FDistribution:201-final double denominatorDF = getDenominatorDegreesOfFreedom();[CLS]org.apache.commons.math3.distribution.FDistribution:203-if (denominatorDF > 2) {	0
org.apache.commons.math3.distribution.FDistribution:201-final double denominatorDF = getDenominatorDegreesOfFreedom();[CLS]org.apache.commons.math3.distribution.FDistribution:204-return denominatorDF / (denominatorDF - 2);	0
org.apache.commons.math3.distribution.FDistribution:203-if (denominatorDF > 2) {[CLS]org.apache.commons.math3.distribution.FDistribution:204-return denominatorDF / (denominatorDF - 2);	0
