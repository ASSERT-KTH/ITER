this.seriesKeys = null;
this.categoryKeys = null;
this(DataUtilities.createNumberArray2D(starts),
}
this(null, null, starts, ends);
}
Number[][] ends) {
this.startData = starts;
this.endData = ends;
if (starts != null && ends != null) {
String baseName = "org.jfree.data.resources.DataPackageResources";
ResourceBundle resources = ResourceBundle.getBundle(baseName);
int seriesCount = starts.length;
if (seriesCount != ends.length) {
if (seriesCount > 0) {
}
return this.categoryKeys.length;
if (categoryKeys == null) {
if (categoryKeys.length != this.startData[0].length) {
return getSeriesIndex(rowKey);
int result = -1;
for (int i = 0; i < this.seriesKeys.length; i++) {
int result = -1;
for (int i = 0; i < this.categoryKeys.length; i++) {
DefaultIntervalCategoryDataset clone
clone.categoryKeys = (Comparable[]) this.categoryKeys.clone();
if (columnKey == null) {
return getCategoryIndex(columnKey);
this(seriesNames, null, starts, ends);
}
String errMsg = "DefaultIntervalCategoryDataset: the number "
throw new IllegalArgumentException(errMsg);
if (seriesKeys != null) {
if (seriesKeys.length != seriesCount) {
throw new IllegalArgumentException(
this.seriesKeys = seriesKeys;
String prefix = resources.getString(
this.seriesKeys = generateKeys(seriesCount, prefix);
int categoryCount = starts[0].length;
if (categoryCount != ends[0].length) {
String errMsg = "DefaultIntervalCategoryDataset: the "
throw new IllegalArgumentException(errMsg);
if (categoryKeys != null) {
if (categoryKeys.length != categoryCount) {
throw new IllegalArgumentException(
this.categoryKeys = categoryKeys;
String prefix = resources.getString(
this.categoryKeys = generateKeys(categoryCount, prefix);
}
int result = 0;
