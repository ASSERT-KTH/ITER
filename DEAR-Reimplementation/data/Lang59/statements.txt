if (width > 0) {
ensureCapacity(size + width);
String str = (obj == null ? getNullText() : obj.toString());
int strLen = str.length();
if (strLen >= width) {
str.getChars(0, strLen, buffer, size);
super();
if (initialCapacity <= 0) {
buffer = new char[initialCapacity];
}
if (capacity > buffer.length) {
return this;
this(CAPACITY);
}
initialCapacity = CAPACITY;
super();
if (str == null) {
buffer = new char[CAPACITY];
buffer = new char[str.length() + CAPACITY];
append(str);
}
return newLine;
this.newLine = newLine;
return this;
return nullText;
if (nullText != null && nullText.length() == 0) {
nullText = null;
this.nullText = nullText;
return this;
return size;
if (length < 0) {
throw new StringIndexOutOfBoundsException(length);
if (length < size) {
size = length;
} else if (length > size) {
ensureCapacity(length);
int oldEnd = size;
int newEnd = length;
size = length;
for (int i = oldEnd; i < newEnd; i++) {
buffer[i] = '\0';
return this;
return buffer.length;
char[] old = buffer;
buffer = new char[capacity];
System.arraycopy(old, 0, buffer, 0, size);
if (buffer.length > length()) {
char[] old = buffer;
buffer = new char[length()];
System.arraycopy(old, 0, buffer, 0, size);
if (width > 0) {
ensureCapacity(size + width);
String str = (obj == null ? getNullText() : obj.toString());
int strLen = str.length();
if (strLen >= width) {
str.getChars(0, strLen, buffer, size);
super();
if (initialCapacity <= 0) {
buffer = new char[initialCapacity];
}
if (capacity > buffer.length) {
return this;
this(CAPACITY);
}
initialCapacity = CAPACITY;
super();
if (str == null) {
buffer = new char[CAPACITY];
buffer = new char[str.length() + CAPACITY];
append(str);
}
return newLine;
this.newLine = newLine;
return this;
return nullText;
if (nullText != null && nullText.length() == 0) {
nullText = null;
this.nullText = nullText;
return this;
return size;
if (length < 0) {
throw new StringIndexOutOfBoundsException(length);
if (length < size) {
size = length;
} else if (length > size) {
ensureCapacity(length);
int oldEnd = size;
int newEnd = length;
size = length;
for (int i = oldEnd; i < newEnd; i++) {
buffer[i] = '\0';
return this;
return buffer.length;
char[] old = buffer;
buffer = new char[capacity];
System.arraycopy(old, 0, buffer, 0, size);
if (buffer.length > length()) {
char[] old = buffer;
buffer = new char[length()];
System.arraycopy(old, 0, buffer, 0, size);
