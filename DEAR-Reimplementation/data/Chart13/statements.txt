else if (w == LengthConstraintType.FIXED) {
if (h == LengthConstraintType.NONE) {
contentSize = arrangeFN(container, g2, constraint.getWidth());
else if (h == LengthConstraintType.FIXED) {
contentSize = arrangeFF(container, g2, constraint);
double[] w = new double[5];
double[] h = new double[5];
RectangleConstraint c1 = new RectangleConstraint(width, null,
if (this.topBlock != null) {
if (this.bottomBlock != null) {
RectangleConstraint c2 = new RectangleConstraint(0.0,
if (this.leftBlock != null) {
Size2D size = this.leftBlock.arrange(g2, c2);
w[2] = size.width;
h[2] = size.height;
if (this.rightBlock != null) {
double maxW = Math.max(width - w[2], 0.0);
RectangleConstraint c3 = new RectangleConstraint(0.0,
Size2D size = this.rightBlock.arrange(g2, c3);
w[3] = size.width;
h[3] = size.height;
h[2] = Math.max(h[2], h[3]);
h[3] = h[2];
if (this.centerBlock != null) {
RectangleConstraint c4 = new RectangleConstraint(width - w[2]
Size2D size = this.centerBlock.arrange(g2, c4);
w[4] = size.width;
h[4] = size.height;
double height = h[0] + h[1] + Math.max(h[2], Math.max(h[3], h[4]));
return arrange(container, g2, new RectangleConstraint(width, height));
double[] w = new double[5];
double[] h = new double[5];
w[0] = constraint.getWidth();
if (this.topBlock != null) {
w[1] = w[0];
if (this.bottomBlock != null) {
h[2] = constraint.getHeight() - h[1] - h[0];
if (this.leftBlock != null) {
RectangleConstraint c3 = new RectangleConstraint(0.0,
Size2D size = this.leftBlock.arrange(g2, c3);
w[2] = size.width;
h[3] = h[2];
if (this.rightBlock != null) {
RectangleConstraint c4 = new RectangleConstraint(0.0,
Size2D size = this.rightBlock.arrange(g2, c4);
w[3] = size.width;
h[4] = h[2];
w[4] = constraint.getWidth() - w[3] - w[2];
RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
if (this.centerBlock != null) {
