return allowMissingColumnNames;
final Set<String> dupCheck = new HashSet<String>();
for (final String hdr : header) {
this.header = header.clone();
return new CSVFormat(delimiter, quoteCharacter, quoteMode, commentMarker, escapeCharacter,
return nullString;
return commentMarker;
return delimiter;
return escapeCharacter;
return header != null ? header.clone() : null;
return ignoreEmptyLines;
return ignoreSurroundingSpaces;
return quoteCharacter;
final boolean allowMissingColumnNames) {
if (isLineBreak(delimiter)) {
this.delimiter = delimiter;
this.quoteCharacter = quoteChar;
this.quoteMode = quoteMode;
this.commentMarker = commentStart;
this.escapeCharacter = escape;
this.ignoreSurroundingSpaces = ignoreSurroundingSpaces;
this.allowMissingColumnNames = allowMissingColumnNames;
this.ignoreEmptyLines = ignoreEmptyLines;
this.recordSeparator = recordSeparator;
this.nullString = nullString;
if (header == null) {
this.header = null;
this.skipHeaderRecord = skipHeaderRecord;
validate();
}
public static final CSVFormat DEFAULT = new CSVFormat(COMMA, DOUBLE_QUOTE_CHAR, null, null, null,
public static final CSVFormat RFC4180 = DEFAULT.withIgnoreEmptyLines(false);
public static final CSVFormat EXCEL = DEFAULT.withIgnoreEmptyLines(false);
public static final CSVFormat TDF =
public static final CSVFormat MYSQL =
return c == LF || c == CR;
return c != null && isLineBreak(c.charValue());
if (quoteCharacter != null && delimiter == quoteCharacter.charValue()) {
if (escapeCharacter != null && delimiter == escapeCharacter.charValue()) {
if (commentMarker != null && delimiter == commentMarker.charValue()) {
if (quoteCharacter != null && quoteCharacter.equals(commentMarker)) {
if (escapeCharacter != null && escapeCharacter.equals(commentMarker)) {
if (escapeCharacter == null && quoteMode == QuoteMode.NONE) {
}
if (isLineBreak(delimiter)) {
return new CSVFormat(delimiter, quoteCharacter, quoteMode, commentMarker, escapeCharacter,
return withEscape(Character.valueOf(escape));
if (isLineBreak(escape)) {
return new CSVFormat(delimiter, quoteCharacter, quoteMode, commentMarker, escape,
return new CSVFormat(delimiter, quoteCharacter, quoteMode, commentMarker, escapeCharacter,
