return replaceEach(text, searchList, replacementList, false, 0);
continue;
return result;
if (text == null || text.length() == 0 || searchList == null ||
return text;
if (timeToLive < 0) {
int searchLength = searchList.length;
int replacementLength = replacementList.length;
if (searchLength != replacementLength) {
boolean[] noMoreMatchesForReplIndex = new boolean[searchLength];
int textIndex = -1;
int replaceIndex = -1;
int tempIndex = -1;
for (int i = 0; i < searchLength; i++) {
if (noMoreMatchesForReplIndex[i] || searchList[i] == null ||
tempIndex = text.indexOf(searchList[i]);
if (tempIndex == -1) {
noMoreMatchesForReplIndex[i] = true;
if (textIndex == -1 || tempIndex < textIndex) {
textIndex = tempIndex;
replaceIndex = i;
if (textIndex == -1) {
return text;
int start = 0;
int increase = 0;
for (int i = 0; i < searchList.length; i++) {
int greater = replacementList[i].length() - searchList[i].length();
if (greater > 0) {
increase = Math.min(increase, text.length() / 5);
StringBuilder buf = new StringBuilder(text.length() + increase);
while (textIndex != -1) {
for (int i = start; i < textIndex; i++) {
buf.append(text.charAt(i));
buf.append(replacementList[replaceIndex]);
start = textIndex + searchList[replaceIndex].length();
textIndex = -1;
replaceIndex = -1;
tempIndex = -1;
for (int i = 0; i < searchLength; i++) {
if (noMoreMatchesForReplIndex[i] || searchList[i] == null ||
tempIndex = text.indexOf(searchList[i], start);
if (tempIndex == -1) {
noMoreMatchesForReplIndex[i] = true;
if (textIndex == -1 || tempIndex < textIndex) {
textIndex = tempIndex;
replaceIndex = i;
int textLength = text.length();
for (int i = start; i < textLength; i++) {
buf.append(text.charAt(i));
String result = buf.toString();
