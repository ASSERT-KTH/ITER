if (formatter == null) {
clearPrefix();
append0(formatter.getPrinter(), formatter.getParser());
return this;
appendField(SECONDS_OPTIONAL_MILLIS);
return this;
return appendSeparator(text, text, null, false, true);
return new Object[] {Literal.EMPTY, Literal.EMPTY};
appendField(MINUTES);
return this;
return appendSuffix(new SimpleAffix(text));
if (text == null || finalText == null) {
clearPrefix();
List<Object> pairs = iElementPairs;
if (pairs.size() == 0) {
Separator lastSeparator = null;
for (i=pairs.size(); --i>=0; ) {
if (pairs.get(i) instanceof Separator) {
i--;// element pairs
if (lastSeparator != null && pairs.size() == 0) {
Object[] comp = createComposite(pairs);
pairs.clear();
Separator separator = new Separator(
pairs.add(separator);
pairs.add(separator);
return this;
Separator sep = (Separator) elementPairs.get(0);
PeriodFormatter f = toFormatter(elementPairs.subList(2, size), notPrinter, notParser);
sep = sep.finish(f.getPrinter(), f.getParser());
return new PeriodFormatter(sep, sep);
if (text == null) {
originalPrinter = iElementPairs.get(iElementPairs.size() - 2);
originalParser = iElementPairs.get(iElementPairs.size() - 1);
clearPrefix();
FieldFormatter newField = new FieldFormatter((FieldFormatter) originalPrinter, suffix);
iElementPairs.set(iElementPairs.size() - 2, newField);
iElementPairs.set(iElementPairs.size() - 1, newField);
iFieldFormatters[newField.getFieldType()] = newField;
return this;
if (iElementPairs.size() > 0) {
if (originalPrinter == null || originalParser == null ||
appendField(DAYS);
return this;
appendField(HOURS);
return this;
appendField(MONTHS);
return this;
appendField(WEEKS);
return this;
if (text == null) {
