}
if (n > 0) {
checkEmpty();
this.geoMeanImpl = geoMeanImpl;
}
checkEmpty();
this.varianceImpl = varianceImpl;
}
public SummaryStatistics() {
protected long n = 0;
protected SecondMoment secondMoment = new SecondMoment();
protected Sum sum = new Sum();
protected SumOfSquares sumsq = new SumOfSquares();
protected Min min = new Min();
protected Max max = new Max();
protected SumOfLogs sumLog = new SumOfLogs();
protected GeometricMean geoMean = new GeometricMean(sumLog);
protected Mean mean = new Mean(secondMoment);
protected Variance variance = new Variance(secondMoment);
private StorelessUnivariateStatistic sumImpl = sum;
private StorelessUnivariateStatistic sumsqImpl = sumsq;
private StorelessUnivariateStatistic minImpl = min;
private StorelessUnivariateStatistic maxImpl = max;
private StorelessUnivariateStatistic sumLogImpl = sumLog;
private StorelessUnivariateStatistic geoMeanImpl = geoMean;
private StorelessUnivariateStatistic meanImpl = mean;
private StorelessUnivariateStatistic varianceImpl = variance;
}
sumImpl.increment(value);
sumsqImpl.increment(value);
minImpl.increment(value);
maxImpl.increment(value);
sumLogImpl.increment(value);
secondMoment.increment(value);
if (!(meanImpl instanceof Mean)) {
if (!(varianceImpl instanceof Variance)) {
if (!(geoMeanImpl instanceof GeometricMean)) {
n++;
}
checkEmpty();
return varianceImpl.getResult();
return geoMeanImpl.getResult();
return meanImpl.getResult();
public SummaryStatistics(SummaryStatistics original) {
protected long n = 0;
protected SecondMoment secondMoment = new SecondMoment();
protected Sum sum = new Sum();
protected SumOfSquares sumsq = new SumOfSquares();
protected Min min = new Min();
protected Max max = new Max();
