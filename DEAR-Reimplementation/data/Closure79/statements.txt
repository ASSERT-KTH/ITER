createSynthesizedExternVar(varName);
n.addSuppression("duplicate");
Node nameNode = Node.newString(Token.NAME, varName);
if (compiler.getCodingConvention().isConstant(varName)) {
getSynthesizedExternsRoot().addChildToBack(
varsToDeclareInExterns.remove(varName);
}
if (synthesizedExternsInput == null) {
synthesizedExternsInput =
return synthesizedExternsInput;
if (synthesizedExternsRoot == null) {
CompilerInput synthesizedExterns = getSynthesizedExternsInput();
synthesizedExternsRoot = synthesizedExterns.getAstRoot(compiler);
return synthesizedExternsRoot;
JSModule currModule = currInput.getModule();
JSModule varModule = varInput.getModule();
JSModuleGraph moduleGraph = compiler.getModuleGraph();
if (varModule != currModule && varModule != null && currModule != null) {
}
NodeTraversal.traverse(compiler, externs, new NameRefInExternsCheck());
CompilerInput currInput = t.getInput();
CompilerInput varInput = var.input;
if (currInput == varInput || currInput == null || varInput == null) {
return;
for (String varName : varsToDeclareInExterns) {
}
VarCheck(AbstractCompiler compiler, boolean sanityCheck) {
private CompilerInput synthesizedExternsInput = null;
private Node synthesizedExternsRoot = null;
private Set<String> varsToDeclareInExterns = Sets.newHashSet();
this.compiler = compiler;
this.strictExternCheck = compiler.getErrorLevel(
this.sanityCheck = sanityCheck;
}
if (!sanityCheck) {
NodeTraversal.traverseRoots(
if (n.getType() != Token.NAME) {
return;
String varName = n.getString();
if (varName.isEmpty()) {
if ((parent.getType() == Token.VAR ||
Scope scope = t.getScope();
Scope.Var var = scope.getVar(varName);
if (var == null) {
static final DiagnosticType UNDEFINED_VAR_ERROR = DiagnosticType.error(
static final DiagnosticType VIOLATED_MODULE_DEP_ERROR = DiagnosticType.error(
static final DiagnosticType MISSING_MODULE_DEP_ERROR = DiagnosticType.warning(
static final DiagnosticType STRICT_MODULE_DEP_ERROR = DiagnosticType.disabled(
static final DiagnosticType NAME_REFERENCE_IN_EXTERNS_ERROR =
static final DiagnosticType UNDEFINED_EXTERN_VAR_ERROR =
