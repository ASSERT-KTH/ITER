throw new IllegalArgumentException("Invalid locale format: " + str);
if (str == null) {
final int len = str.length();
if (len < 2) {
final char ch0 = str.charAt(0);
final char ch1 = str.charAt(1);
if (!Character.isLowerCase(ch0) || !Character.isLowerCase(ch1)) {
private static final ConcurrentMap<String, List<Locale>> cLanguagesByCountry =
private static final ConcurrentMap<String, List<Locale>> cCountriesByLanguage =
return SyncAvoid.AVAILABLE_LOCALE_LIST;
return availableLocaleList().contains(locale);
super();
}
return null;
throw new IllegalArgumentException("Invalid locale format: " + str);
if (len == 2) {
return new Locale(str);
if (len < 5) {
throw new IllegalArgumentException("Invalid locale format: " + str);
if (str.charAt(2) != '_') {
throw new IllegalArgumentException("Invalid locale format: " + str);
final char ch3 = str.charAt(3);
if (ch3 == '_') {
return new Locale(str.substring(0, 2), "", str.substring(4));
final char ch4 = str.charAt(4);
if (!Character.isUpperCase(ch3) || !Character.isUpperCase(ch4)) {
throw new IllegalArgumentException("Invalid locale format: " + str);
if (len == 5) {
return new Locale(str.substring(0, 2), str.substring(3, 5));
if (len < 7) {
throw new IllegalArgumentException("Invalid locale format: " + str);
if (str.charAt(5) != '_') {
throw new IllegalArgumentException("Invalid locale format: " + str);
return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(6));
return localeLookupList(locale, locale);
List<Locale> list = new ArrayList<Locale>(4);
if (locale != null) {
list.add(locale);
if (locale.getVariant().length() > 0) {
list.add(new Locale(locale.getLanguage(), locale.getCountry()));
if (locale.getCountry().length() > 0) {
list.add(new Locale(locale.getLanguage(), ""));
if (list.contains(defaultLocale) == false) {
list.add(defaultLocale);
return Collections.unmodifiableList(list);
return SyncAvoid.AVAILABLE_LOCALE_SET;
if (countryCode == null) {
return Collections.emptyList();
List<Locale> langs = cLanguagesByCountry.get(countryCode);
if (langs == null) {
