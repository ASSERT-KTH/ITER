this(source, LINE);
}
super(source);
Preconditions.checkNotNull(source);
this.excerpt = excerpt;
}
private static final ExcerptFormatter excerptFormatter =
return format(error, false);
SourceExcerptProvider source = getSource();
String sourceExcerpt = source == null ? null :
StringBuilder b = new StringBuilder();
if (error.sourceName != null) {
b.append(error.sourceName);
if (error.lineNumber > 0) {
b.append(':');
b.append(error.lineNumber);
b.append(": ");
b.append(getLevelName(warning ? CheckLevel.WARNING : CheckLevel.ERROR));
b.append(" - ");
b.append(error.description);
b.append('\n');
if (sourceExcerpt != null) {
b.append(sourceExcerpt);
b.append('\n');
int charno = error.getCharno();
if (excerpt.equals(LINE)
return b.toString();
super(null);
this.excerpt = LINE;
}
return new LightweightMessageFormatter();
return format(warning, true);
for (int i = 0; i < charno; i++) {
char c = sourceExcerpt.charAt(i);
if (Character.isWhitespace(c)) {
b.append(c);
b.append(' ');
b.append("^\n");
