if (valueToAdd == 0) {
if (DateTimeUtils.isContiguous(partial)) {
long instant = 0L;
for (int i = 0, isize = partial.size(); i < isize; i++) {
instant = partial.getFieldType(i).getField(iChronology).set(instant, values[i]);
return MIN;
return iMax;
super(DateTimeFieldType.monthOfYear(), chronology.getAverageMillisPerMonth());
iChronology = chronology;
iMax = iChronology.getMaxMonth();
iLeapMonth = leapMonth;
}
return iChronology.getMonthOfYear(instant);
FieldUtils.verifyValueBounds(this, month, MIN, iMax);
int thisYear = iChronology.getYear(instant);
int thisDom = iChronology.getDayOfMonth(instant, thisYear);
int maxDom = iChronology.getDaysInYearMonth(thisYear, month);
if (thisDom > maxDom) {
return iChronology.getYearMonthDayMillis(thisYear, month, thisDom) +
return iChronology.years();
return iChronology.days();
dayToUse = maxDay;
instant = add(instant, valueToAdd);
return iChronology.get(partial, instant);
yearToUse = thisYear + (monthToUse / iMax);
monthToUse = (monthToUse % iMax) + 1;
if (months == 0) {
long timePart = iChronology.getMillisOfDay(instant);
int thisYear = iChronology.getYear(instant);
int thisMonth = iChronology.getMonthOfYear(instant, thisYear);
int monthToUse = thisMonth - 1 + months;
if (monthToUse >= 0) {
int dayToUse = iChronology.getDayOfMonth(instant, thisYear, thisMonth);
int maxDay = iChronology.getDaysInYearMonth(yearToUse, monthToUse);
if (dayToUse > maxDay) {
long datePart =
return datePart + timePart;
return false;
return instant; // the easy case
yearToUse = thisYear + (monthToUse / iMax) - 1;
monthToUse = Math.abs(monthToUse);
int remMonthToUse = monthToUse % iMax;
if (remMonthToUse == 0) {
remMonthToUse = iMax;
monthToUse = iMax - remMonthToUse + 1;
if (monthToUse == 1) {
yearToUse += 1;
int i_months = (int)months;
if (i_months == months) {
return add(instant, i_months);
