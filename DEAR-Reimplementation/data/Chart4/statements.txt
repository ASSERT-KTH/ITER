result = Range.combine(result,
result = getRenderer();
return getRenderer(0);
dataset.addChangeListener(this);
XYItemRenderer r = getRendererForDataset(d);
if (isDomainAxis) {
if (r != null) {
if (r != null) {
XYItemRenderer result = null;
for (int i = 0; i < this.datasets.size(); i++) {
if (this.datasets.get(i) == dataset) {
result = (XYItemRenderer) this.renderers.get(i);
if (result == null) {
return result;
result = (XYItemRenderer) this.renderers.get(index);
XYItemRenderer result = null;
if (this.renderers.size() > index) {
return result;
domainAxis.setPlot(this);
axis.configure();
if (axisIndex == null) {
List result = new ArrayList();
for (int i = 0; i < this.datasets.size(); i++) {
List mappedAxes = (List) this.datasetToDomainAxesMap.get(
if (mappedAxes == null) {
if (mappedAxes.contains(axisIndex)) {
result.add(this.datasets.get(i));
return result;
int result = this.domainAxes.indexOf(axis);
if (result < 0) {
return result;
int result = this.rangeAxes.indexOf(axis);
if (result < 0) {
Plot parent = getParent();
if (parent instanceof XYPlot) {
return result;
Range result = null;
List mappedDatasets = new ArrayList();
List includedAnnotations = new ArrayList();
boolean isDomainAxis = true;
int domainIndex = getDomainAxisIndex(axis);
if (domainIndex >= 0) {
isDomainAxis = true;
mappedDatasets.addAll(getDatasetsMappedToDomainAxis(
if (domainIndex == 0) {
Iterator iterator = this.annotations.iterator();
while (iterator.hasNext()) {
int rangeIndex = getRangeAxisIndex(axis);
if (rangeIndex >= 0) {
Iterator iterator = mappedDatasets.iterator();
result = Range.combine(result,
result = getRenderer();
return getRenderer(0);
dataset.addChangeListener(this);
XYItemRenderer r = getRendererForDataset(d);
if (isDomainAxis) {
if (r != null) {
if (r != null) {
XYItemRenderer result = null;
for (int i = 0; i < this.datasets.size(); i++) {
if (this.datasets.get(i) == dataset) {
result = (XYItemRenderer) this.renderers.get(i);
if (result == null) {
return result;
result = (XYItemRenderer) this.renderers.get(index);
XYItemRenderer result = null;
if (this.renderers.size() > index) {
return result;
domainAxis.setPlot(this);
axis.configure();
if (axisIndex == null) {
List result = new ArrayList();
for (int i = 0; i < this.datasets.size(); i++) {
List mappedAxes = (List) this.datasetToDomainAxesMap.get(
if (mappedAxes == null) {
if (mappedAxes.contains(axisIndex)) {
result.add(this.datasets.get(i));
return result;
int result = this.domainAxes.indexOf(axis);
if (result < 0) {
return result;
int result = this.rangeAxes.indexOf(axis);
if (result < 0) {
Plot parent = getParent();
if (parent instanceof XYPlot) {
return result;
Range result = null;
List mappedDatasets = new ArrayList();
List includedAnnotations = new ArrayList();
boolean isDomainAxis = true;
int domainIndex = getDomainAxisIndex(axis);
if (domainIndex >= 0) {
isDomainAxis = true;
mappedDatasets.addAll(getDatasetsMappedToDomainAxis(
if (domainIndex == 0) {
Iterator iterator = this.annotations.iterator();
while (iterator.hasNext()) {
int rangeIndex = getRangeAxisIndex(axis);
if (rangeIndex >= 0) {
Iterator iterator = mappedDatasets.iterator();
result = Range.combine(result,
result = getRenderer();
return getRenderer(0);
dataset.addChangeListener(this);
XYItemRenderer r = getRendererForDataset(d);
if (isDomainAxis) {
if (r != null) {
if (r != null) {
XYItemRenderer result = null;
for (int i = 0; i < this.datasets.size(); i++) {
if (this.datasets.get(i) == dataset) {
result = (XYItemRenderer) this.renderers.get(i);
if (result == null) {
return result;
result = (XYItemRenderer) this.renderers.get(index);
XYItemRenderer result = null;
if (this.renderers.size() > index) {
return result;
domainAxis.setPlot(this);
axis.configure();
if (axisIndex == null) {
List result = new ArrayList();
for (int i = 0; i < this.datasets.size(); i++) {
List mappedAxes = (List) this.datasetToDomainAxesMap.get(
if (mappedAxes == null) {
if (mappedAxes.contains(axisIndex)) {
result.add(this.datasets.get(i));
return result;
int result = this.domainAxes.indexOf(axis);
if (result < 0) {
return result;
int result = this.rangeAxes.indexOf(axis);
if (result < 0) {
Plot parent = getParent();
if (parent instanceof XYPlot) {
return result;
Range result = null;
List mappedDatasets = new ArrayList();
List includedAnnotations = new ArrayList();
boolean isDomainAxis = true;
int domainIndex = getDomainAxisIndex(axis);
if (domainIndex >= 0) {
isDomainAxis = true;
mappedDatasets.addAll(getDatasetsMappedToDomainAxis(
if (domainIndex == 0) {
Iterator iterator = this.annotations.iterator();
while (iterator.hasNext()) {
int rangeIndex = getRangeAxisIndex(axis);
if (rangeIndex >= 0) {
Iterator iterator = mappedDatasets.iterator();
result = Range.combine(result,
result = getRenderer();
return getRenderer(0);
dataset.addChangeListener(this);
XYItemRenderer r = getRendererForDataset(d);
if (isDomainAxis) {
if (r != null) {
if (r != null) {
XYItemRenderer result = null;
for (int i = 0; i < this.datasets.size(); i++) {
if (this.datasets.get(i) == dataset) {
result = (XYItemRenderer) this.renderers.get(i);
if (result == null) {
return result;
result = (XYItemRenderer) this.renderers.get(index);
XYItemRenderer result = null;
if (this.renderers.size() > index) {
return result;
domainAxis.setPlot(this);
axis.configure();
if (axisIndex == null) {
List result = new ArrayList();
for (int i = 0; i < this.datasets.size(); i++) {
List mappedAxes = (List) this.datasetToDomainAxesMap.get(
if (mappedAxes == null) {
if (mappedAxes.contains(axisIndex)) {
result.add(this.datasets.get(i));
return result;
int result = this.domainAxes.indexOf(axis);
if (result < 0) {
return result;
int result = this.rangeAxes.indexOf(axis);
if (result < 0) {
Plot parent = getParent();
if (parent instanceof XYPlot) {
return result;
Range result = null;
List mappedDatasets = new ArrayList();
List includedAnnotations = new ArrayList();
boolean isDomainAxis = true;
int domainIndex = getDomainAxisIndex(axis);
if (domainIndex >= 0) {
isDomainAxis = true;
mappedDatasets.addAll(getDatasetsMappedToDomainAxis(
if (domainIndex == 0) {
Iterator iterator = this.annotations.iterator();
while (iterator.hasNext()) {
int rangeIndex = getRangeAxisIndex(axis);
if (rangeIndex >= 0) {
Iterator iterator = mappedDatasets.iterator();
