this(os, TarBuffer.DEFAULT_BLKSIZE, TarBuffer.DEFAULT_RCDSIZE);
}
public TarArchiveOutputStream(OutputStream os, int blockSize, int recordSize) {
private int longFileMode = LONGFILE_ERROR;
private boolean closed = false;
out = os;
this.buffer = new TarBuffer(os, blockSize, recordSize);
this.assemLen = 0;
this.assemBuf = new byte[recordSize];
this.recordBuf = new byte[recordSize];
}
writeEOFRecord();
writeEOFRecord();
}
TarArchiveEntry entry = (TarArchiveEntry) archiveEntry;
if (entry.getName().length() >= TarConstants.NAMELEN) {
entry.writeEntryHeader(recordBuf);
buffer.writeRecord(recordBuf);
currBytes = 0;
if (entry.isDirectory()) {
currSize = entry.getSize();
currName = entry.getName();
}
for (int i = 0; i < recordBuf.length; ++i) {
recordBuf[i] = 0;
buffer.writeRecord(recordBuf);
}
this(os, blockSize, TarBuffer.DEFAULT_RCDSIZE);
}
this.longFileMode = longFileMode;
}
if (!closed) {
finish();
buffer.close();
out.close();
closed = true;
}
return buffer.getRecordSize();
if (longFileMode == LONGFILE_GNU) {
TarArchiveEntry longLinkEntry = new TarArchiveEntry(TarConstants.GNU_LONGLINK,
final byte[] nameBytes = entry.getName().getBytes(); // TODO is it correct to use the default charset here?
longLinkEntry.setSize(nameBytes.length + 1); // +1 for NUL
putArchiveEntry(longLinkEntry);
write(nameBytes);
write(0); // NUL terminator
closeArchiveEntry();
} else if (longFileMode != LONGFILE_TRUNCATE) {
throw new RuntimeException("file name '" + entry.getName()
currSize = 0;
if (assemLen > 0) {
