ch = (char) (random.nextInt(gap) + start);
return random(count, start, end, letters, numbers, null, RANDOM);
if (start == 0 && end == 0) {
char[] buffer = new char[count];
int gap = end - start;
while (count-- != 0) {
if (chars == null) {
if (count == 0) {
} else if (count < 0) {
if (chars != null && chars.length == 0) {
private static final Random RANDOM = new Random();
super();
}
return random(count, false, false);
return random(count, 32, 127, false, false);
return random(count, true, false);
return random(count, true, true);
return random(count, false, true);
return random(count, 0, 0, letters, numbers);
return random(count, start, end, letters, numbers, chars, RANDOM);
return "";
throw new IllegalArgumentException("Requested random string length " + count + " is less than 0.");
throw new IllegalArgumentException("The chars array must not be empty");
if (chars != null) {
end = chars.length;
if (!letters && !numbers) {
end = Integer.MAX_VALUE;
end = 'z' + 1;
start = ' ';
ch = chars[random.nextInt(gap) + start];
if (letters && Character.isLetter(ch)
if(ch >= 56320 && ch <= 57343) {
if(count == 0) {
count++;
buffer[count] = ch;
count--;
buffer[count] = (char) (55296 + random.nextInt(128));
} else if(ch >= 55296 && ch <= 56191) {
if(count == 0) {
count++;
buffer[count] = (char) (56320 + random.nextInt(128));
count--;
buffer[count] = ch;
} else if(ch >= 56192 && ch <= 56319) {
count++;
buffer[count] = ch;
count++;
}
return new String(buffer);
if (chars == null) {
