this(in, BLOCK_SIZE, encoding);
}
this(is, TarConstants.DEFAULT_BLKSIZE, TarConstants.DEFAULT_RCDSIZE,
}
if (entryEncoding != null) {
return new ArjArchiveInputStream(in, entryEncoding);
return new ArjArchiveInputStream(in);
if (entryEncoding != null) {
return new ZipArchiveInputStream(in, entryEncoding);
return new ZipArchiveInputStream(in);
if (entryEncoding != null) {
return new TarArchiveInputStream(in, entryEncoding);
return new TarArchiveInputStream(in);
if (entryEncoding != null) {
return new JarArchiveInputStream(in, entryEncoding);
return new JarArchiveInputStream(in);
if (entryEncoding != null) {
return new CpioArchiveInputStream(in, entryEncoding);
return new CpioArchiveInputStream(in);
if (entryEncoding != null) {
return new DumpArchiveInputStream(in, entryEncoding);
return new DumpArchiveInputStream(in);
ZipArchiveOutputStream zip = new ZipArchiveOutputStream(out);
if (entryEncoding != null) {
zip.setEncoding(entryEncoding);
return zip;
if (entryEncoding != null) {
return new TarArchiveOutputStream(out, entryEncoding);
return new TarArchiveOutputStream(out);
return new JarArchiveOutputStream(out);
if (entryEncoding != null) {
return new CpioArchiveOutputStream(out, entryEncoding);
return new CpioArchiveOutputStream(out);
return new ZipArchiveInputStream(in, entryEncoding);
if (entryEncoding != null) {
return new CpioArchiveInputStream(in, entryEncoding);
return new CpioArchiveInputStream(in);
return new ArjArchiveInputStream(in);
return new DumpArchiveInputStream(in, entryEncoding);
return new TarArchiveInputStream(in, entryEncoding);
if (signature[1] != 0x37) {
if (signature[2] != 0x30) {
if (signature[3] != 0x37) {
if (signature[4] != 0x30) {
if (signature[5] == 0x31) {
if (signature[5] == 0x32) {
return true;
return true;
this(out, format, BLOCK_SIZE, CharsetNames.US_ASCII);
}
