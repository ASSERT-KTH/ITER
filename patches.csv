projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java replace 215 suspicious value: 0.5 
 -   p2    =(int)FastMath.floor(r1);    p1    =(int)FastMath.floor(r1);    
 + p2  =(int)FastMath.floor(r1);  q2  =(int)FastMath.abs(q2); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java replace 306 suspicious value: 0.7071067811865475 
 - throw  new  FractionConversionException(value,  p2,  q2);  
 +     

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java add 215 suspicious value: 0.5 
 -   p2    =    Math.round(p1);    q2    =    Math.round(q2);    
 + p2  =  Math.round(p0);  q2  =  Math.round(q1); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java replace 306 suspicious value: 0.7071067811865475 
 - throw  new  FractionConversionException(value,  p2,  q2);  
 +     

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java add 215 suspicious value: 0.5 
 -   p2    =    Math.round(p2);    q2    =    Math.round(q2);    
 + p2  =  Math.round(p1);  q2  =  Math.round(q1); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java replace 306 suspicious value: 0.7071067811865475 
 - throw  new  FractionConversionException(value,  p2,  q2);  
 +     

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java add 215 suspicious value: 0.5 
 -   p2    =    Math.round(a1);    q2    =    Math.round(q2);    a1    =    Math.round(a1);    q2    =    Math.round(q2);    
 + p2  =  Math.round(a1);  q2  =  Math.round(q1);  a1  =  Math.round(a1);  q2  =  Math.round(q2); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java replace 306 suspicious value: 0.7071067811865475 
 - throw  new  FractionConversionException(value,  p2,  q2);  
 +     

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java add 215 suspicious value: 0.5 
 -   p2    =    Math.round(a1);    q2    =    Math.round(q2);    a1    =    Math.round(a1);    q2    =    Math.round(q2);    
 + p2  =  Math.round(a1);  q2  =  Math.round(q0);  a1  =  Math.round(a1);  q2  =  Math.round(q2); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java replace 306 suspicious value: 0.7071067811865475 
 - throw  new  FractionConversionException(value,  p2,  q2);  
 +     

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java replace 215 suspicious value: 0.5 
 -   p2    =(int)FastMath.floor(r1);    p1    =(int)FastMath.floor(r1);    
 + p2  =(int)FastMath.floor(r1);  q2  =(int)FastMath.abs(q2); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java replace 306 suspicious value: 0.7071067811865475 
 -   p2    =    Math.round(q0);    q2    =    Math.round(q2);    p1    =    Math.round(p1);    q2    =    Math.round(q2);    
 +  p2  =  Math.round(p0);  p2  =  Math.round(q2); 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java add 215 suspicious value: 0.5 
 -   p2    =    Math.round(p1);    q2    =    Math.round(q2);    
 + p2  =  Math.round(p0);  q2  =  Math.round(q1); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java replace 306 suspicious value: 0.7071067811865475 
 -   p2    =    Math.round(q0);    q2    =    Math.round(q2);    p1    =    Math.round(p1);    q2    =    Math.round(q2);    
 +  p2  =  Math.round(p0);  p2  =  Math.round(q2); 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java add 215 suspicious value: 0.5 
 -   p2    =    Math.round(p2);    q2    =    Math.round(q2);    
 + p2  =  Math.round(p1);  q2  =  Math.round(q1); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java replace 306 suspicious value: 0.7071067811865475 
 -   p2    =    Math.round(q0);    q2    =    Math.round(q2);    p1    =    Math.round(p1);    q2    =    Math.round(q2);    
 +  p2  =  Math.round(p0);  p2  =  Math.round(q2); 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java add 215 suspicious value: 0.5 
 -   p2    =    Math.round(a1);    q2    =    Math.round(q2);    a1    =    Math.round(a1);    q2    =    Math.round(q2);    
 + p2  =  Math.round(a1);  q2  =  Math.round(q1);  a1  =  Math.round(a1);  q2  =  Math.round(q2); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java replace 306 suspicious value: 0.7071067811865475 
 -   p2    =    Math.round(q0);    q2    =    Math.round(q2);    p1    =    Math.round(p1);    q2    =    Math.round(q2);    
 +  p2  =  Math.round(p0);  p2  =  Math.round(q2); 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java add 215 suspicious value: 0.5 
 -   p2    =    Math.round(a1);    q2    =    Math.round(q2);    a1    =    Math.round(a1);    q2    =    Math.round(q2);    
 + p2  =  Math.round(a1);  q2  =  Math.round(q0);  a1  =  Math.round(a1);  q2  =  Math.round(q2); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java replace 306 suspicious value: 0.7071067811865475 
 -   p2    =    Math.round(q0);    q2    =    Math.round(q2);    p1    =    Math.round(p1);    q2    =    Math.round(q2);    
 +  p2  =  Math.round(p0);  p2  =  Math.round(q2); 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java replace 215 suspicious value: 0.5 
 -   p2    =(int)FastMath.floor(r1);    p1    =(int)FastMath.floor(r1);    
 + p2  =(int)FastMath.floor(r1);  q2  =(int)FastMath.abs(q2); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java add 306 suspicious value: 0.7071067811865475 
 -   p2    =    Math.round(q0);    q2    =    Math.round(q2);    p1    =    Math.round(p1);    q2    =    Math.round(q2);    
 +  p2  =  Math.round(p1);  p2  =  Math.round(q2); 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java add 215 suspicious value: 0.5 
 -   p2    =    Math.round(p1);    q2    =    Math.round(q2);    
 + p2  =  Math.round(p0);  q2  =  Math.round(q1); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java add 306 suspicious value: 0.7071067811865475 
 -   p2    =    Math.round(q0);    q2    =    Math.round(q2);    p1    =    Math.round(p1);    q2    =    Math.round(q2);    
 +  p2  =  Math.round(p1);  p2  =  Math.round(q2); 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java add 215 suspicious value: 0.5 
 -   p2    =    Math.round(p2);    q2    =    Math.round(q2);    
 + p2  =  Math.round(p1);  q2  =  Math.round(q1); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java add 306 suspicious value: 0.7071067811865475 
 -   p2    =    Math.round(q0);    q2    =    Math.round(q2);    p1    =    Math.round(p1);    q2    =    Math.round(q2);    
 +  p2  =  Math.round(p1);  p2  =  Math.round(q2); 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java add 215 suspicious value: 0.5 
 -   p2    =    Math.round(a1);    q2    =    Math.round(q2);    a1    =    Math.round(a1);    q2    =    Math.round(q2);    
 + p2  =  Math.round(a1);  q2  =  Math.round(q1);  a1  =  Math.round(a1);  q2  =  Math.round(q2); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java add 306 suspicious value: 0.7071067811865475 
 -   p2    =    Math.round(q0);    q2    =    Math.round(q2);    p1    =    Math.round(p1);    q2    =    Math.round(q2);    
 +  p2  =  Math.round(p1);  p2  =  Math.round(q2); 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java replace 215 suspicious value: 0.5 
 -   p2    =(int)FastMath.floor(r1);    p1    =(int)FastMath.floor(r1);    
 + p2  =(int)FastMath.floor(r1);  q2  =(int)FastMath.abs(q2); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java replace 306 suspicious value: 0.7071067811865475 
 -   p2    =    Math.round(q0);    q2    =    Math.round(q2);    p1    =    Math.round(p1);    q2    =    Math.round(q2);    
 +  p2  =  Math.round(p1);  p2  =  Math.round(p2); 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java add 215 suspicious value: 0.5 
 -   p2    =    Math.round(p1);    q2    =    Math.round(q2);    
 + p2  =  Math.round(p0);  q2  =  Math.round(q1); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java replace 306 suspicious value: 0.7071067811865475 
 -   p2    =    Math.round(q0);    q2    =    Math.round(q2);    p1    =    Math.round(p1);    q2    =    Math.round(q2);    
 +  p2  =  Math.round(p1);  p2  =  Math.round(p2); 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java add 215 suspicious value: 0.5 
 -   p2    =    Math.round(p2);    q2    =    Math.round(q2);    
 + p2  =  Math.round(p1);  q2  =  Math.round(q1); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java replace 306 suspicious value: 0.7071067811865475 
 -   p2    =    Math.round(q0);    q2    =    Math.round(q2);    p1    =    Math.round(p1);    q2    =    Math.round(q2);    
 +  p2  =  Math.round(p1);  p2  =  Math.round(p2); 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java add 215 suspicious value: 0.5 
 -   p2    =    Math.round(a1);    q2    =    Math.round(q2);    a1    =    Math.round(a1);    q2    =    Math.round(q2);    
 + p2  =  Math.round(a1);  q2  =  Math.round(q1);  a1  =  Math.round(a1);  q2  =  Math.round(q2); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java replace 306 suspicious value: 0.7071067811865475 
 -   p2    =    Math.round(q0);    q2    =    Math.round(q2);    p1    =    Math.round(p1);    q2    =    Math.round(q2);    
 +  p2  =  Math.round(p1);  p2  =  Math.round(p2); 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java add 215 suspicious value: 0.5 
 -   p2    =    Math.round(a1);    q2    =    Math.round(q2);    a1    =    Math.round(a1);    q2    =    Math.round(q2);    
 + p2  =  Math.round(a1);  q2  =  Math.round(q0);  a1  =  Math.round(a1);  q2  =  Math.round(q2); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java replace 306 suspicious value: 0.7071067811865475 
 -   p2    =    Math.round(q0);    q2    =    Math.round(q2);    p1    =    Math.round(p1);    q2    =    Math.round(q2);    
 +  p2  =  Math.round(p1);  p2  =  Math.round(p2); 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java replace 215 suspicious value: 0.5 
 -   p2    =(int)FastMath.floor(r1);    p1    =(int)FastMath.floor(r1);    
 + p2  =(int)FastMath.floor(r1);  q2  =(int)FastMath.abs(q2); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java add 306 suspicious value: 0.7071067811865475 
 -   p2    =    Math.round(q0);    q2    =    Math.round(q2);    p1    =    Math.round(p1);    q2    =    Math.round(q2);    
 +  p2  =  Math.round(p2);  p2  =  Math.round(q1); 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java add 215 suspicious value: 0.5 
 -   p2    =    Math.round(p1);    q2    =    Math.round(q2);    
 + p2  =  Math.round(p0);  q2  =  Math.round(q1); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java add 306 suspicious value: 0.7071067811865475 
 -   p2    =    Math.round(q0);    q2    =    Math.round(q2);    p1    =    Math.round(p1);    q2    =    Math.round(q2);    
 +  p2  =  Math.round(p2);  p2  =  Math.round(q1); 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java add 215 suspicious value: 0.5 
 -   p2    =    Math.round(p2);    q2    =    Math.round(q2);    
 + p2  =  Math.round(p1);  q2  =  Math.round(q1); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java add 306 suspicious value: 0.7071067811865475 
 -   p2    =    Math.round(q0);    q2    =    Math.round(q2);    p1    =    Math.round(p1);    q2    =    Math.round(q2);    
 +  p2  =  Math.round(p2);  p2  =  Math.round(q1); 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java add 215 suspicious value: 0.5 
 -   p2    =    Math.round(a1);    q2    =    Math.round(q2);    a1    =    Math.round(a1);    q2    =    Math.round(q2);    
 + p2  =  Math.round(a1);  q2  =  Math.round(q1);  a1  =  Math.round(a1);  q2  =  Math.round(q2); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java add 306 suspicious value: 0.7071067811865475 
 -   p2    =    Math.round(q0);    q2    =    Math.round(q2);    p1    =    Math.round(p1);    q2    =    Math.round(q2);    
 +  p2  =  Math.round(p2);  p2  =  Math.round(q1); 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java add 215 suspicious value: 0.5 
 -   p2    =    Math.round(a1);    q2    =    Math.round(q2);    a1    =    Math.round(a1);    q2    =    Math.round(q2);    
 + p2  =  Math.round(a1);  q2  =  Math.round(q0);  a1  =  Math.round(a1);  q2  =  Math.round(q2); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java add 306 suspicious value: 0.7071067811865475 
 -   p2    =    Math.round(q0);    q2    =    Math.round(q2);    p1    =    Math.round(p1);    q2    =    Math.round(q2);    
 +  p2  =  Math.round(p2);  p2  =  Math.round(q1); 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java replace 215 suspicious value: 0.5 
 -   p2    =(int)FastMath.floor(r1);    p1    =(int)FastMath.floor(r1);    
 + p2  =(int)FastMath.floor(r1);  q2  =(int)FastMath.abs(q2); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java replace 306 suspicious value: 0.7071067811865475 
 -   p2    =    Math.round(p0);    q2    =    Math.round(q2);    p2    =    Math.round(p0);    q2    =    Math.round(q2);    
 +  p2  =  Math.round(p1);  p2  =  Math.round(q2);  p2  =  Math.round(q2); 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java add 215 suspicious value: 0.5 
 -   p2    =    Math.round(p1);    q2    =    Math.round(q2);    
 + p2  =  Math.round(p0);  q2  =  Math.round(q1); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java replace 306 suspicious value: 0.7071067811865475 
 -   p2    =    Math.round(p0);    q2    =    Math.round(q2);    p2    =    Math.round(p0);    q2    =    Math.round(q2);    
 +  p2  =  Math.round(p1);  p2  =  Math.round(q2);  p2  =  Math.round(q2); 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java add 215 suspicious value: 0.5 
 -   p2    =    Math.round(p2);    q2    =    Math.round(q2);    
 + p2  =  Math.round(p1);  q2  =  Math.round(q1); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java replace 306 suspicious value: 0.7071067811865475 
 -   p2    =    Math.round(p0);    q2    =    Math.round(q2);    p2    =    Math.round(p0);    q2    =    Math.round(q2);    
 +  p2  =  Math.round(p1);  p2  =  Math.round(q2);  p2  =  Math.round(q2); 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java add 215 suspicious value: 0.5 
 -   p2    =    Math.round(a1);    q2    =    Math.round(q2);    a1    =    Math.round(a1);    q2    =    Math.round(q2);    
 + p2  =  Math.round(a1);  q2  =  Math.round(q1);  a1  =  Math.round(a1);  q2  =  Math.round(q2); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java replace 306 suspicious value: 0.7071067811865475 
 -   p2    =    Math.round(p0);    q2    =    Math.round(q2);    p2    =    Math.round(p0);    q2    =    Math.round(q2);    
 +  p2  =  Math.round(p1);  p2  =  Math.round(q2);  p2  =  Math.round(q2); 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java add 215 suspicious value: 0.5 
 -   p2    =    Math.round(a1);    q2    =    Math.round(q2);    a1    =    Math.round(a1);    q2    =    Math.round(q2);    
 + p2  =  Math.round(a1);  q2  =  Math.round(q0);  a1  =  Math.round(a1);  q2  =  Math.round(q2); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java replace 306 suspicious value: 0.7071067811865475 
 -   p2    =    Math.round(p0);    q2    =    Math.round(q2);    p2    =    Math.round(p0);    q2    =    Math.round(q2);    
 +  p2  =  Math.round(p1);  p2  =  Math.round(q2);  p2  =  Math.round(q2); 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java replace 215 suspicious value: 0.5 
 -   p2    =(int)FastMath.floor(r1);    p1    =(int)FastMath.floor(r1);    
 + p2  =(int)FastMath.floor(r1);  q2  =(int)FastMath.abs(q2); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java replace 306 suspicious value: 0.7071067811865475 
 -   p2    =    Math.round(p0);    q2    =    Math.round(q2);    p2    =    Math.round(p0);    q2    =    Math.round(q2);    
 +  p2  =  Math.round(p0);  p2  =  Math.round(q2);  p2  =  Math.round(p2);  q2  =  Math.round(q2); 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java add 215 suspicious value: 0.5 
 -   p2    =    Math.round(p1);    q2    =    Math.round(q2);    
 + p2  =  Math.round(p0);  q2  =  Math.round(q1); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java replace 306 suspicious value: 0.7071067811865475 
 -   p2    =    Math.round(p0);    q2    =    Math.round(q2);    p2    =    Math.round(p0);    q2    =    Math.round(q2);    
 +  p2  =  Math.round(p0);  p2  =  Math.round(q2);  p2  =  Math.round(p2);  q2  =  Math.round(q2); 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java add 215 suspicious value: 0.5 
 -   p2    =    Math.round(p2);    q2    =    Math.round(q2);    
 + p2  =  Math.round(p1);  q2  =  Math.round(q1); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java replace 306 suspicious value: 0.7071067811865475 
 -   p2    =    Math.round(p0);    q2    =    Math.round(q2);    p2    =    Math.round(p0);    q2    =    Math.round(q2);    
 +  p2  =  Math.round(p0);  p2  =  Math.round(q2);  p2  =  Math.round(p2);  q2  =  Math.round(q2); 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java add 215 suspicious value: 0.5 
 -   p2    =    Math.round(a1);    q2    =    Math.round(q2);    a1    =    Math.round(a1);    q2    =    Math.round(q2);    
 + p2  =  Math.round(a1);  q2  =  Math.round(q1);  a1  =  Math.round(a1);  q2  =  Math.round(q2); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java replace 306 suspicious value: 0.7071067811865475 
 -   p2    =    Math.round(p0);    q2    =    Math.round(q2);    p2    =    Math.round(p0);    q2    =    Math.round(q2);    
 +  p2  =  Math.round(p0);  p2  =  Math.round(q2);  p2  =  Math.round(p2);  q2  =  Math.round(q2); 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java add 215 suspicious value: 0.5 
 -   p2    =    Math.round(a1);    q2    =    Math.round(q2);    a1    =    Math.round(a1);    q2    =    Math.round(q2);    
 + p2  =  Math.round(a1);  q2  =  Math.round(q0);  a1  =  Math.round(a1);  q2  =  Math.round(q2); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java replace 306 suspicious value: 0.7071067811865475 
 -   p2    =    Math.round(p0);    q2    =    Math.round(q2);    p2    =    Math.round(p0);    q2    =    Math.round(q2);    
 +  p2  =  Math.round(p0);  p2  =  Math.round(q2);  p2  =  Math.round(p2);  q2  =  Math.round(q2); 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java replace 215 suspicious value: 0.5 
 -   p2    =(int)FastMath.floor(r1);    p1    =(int)FastMath.floor(r1);    
 + p2  =(int)FastMath.floor(r1);  q2  =(int)FastMath.abs(q2); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java add 306 suspicious value: 0.7071067811865475 
 -   p2    =    Math.round(p0);    q2    =    Math.round(q2);    p2    =    Math.round(p0);    q2    =    Math.round(q2);    
 +  p2  =  Math.round(p0);  q2  =  Math.round(q2);  p2  =  Math.round(p2);  q2  =  Math.round(q2); 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java add 215 suspicious value: 0.5 
 -   p2    =    Math.round(p1);    q2    =    Math.round(q2);    
 + p2  =  Math.round(p0);  q2  =  Math.round(q1); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java add 306 suspicious value: 0.7071067811865475 
 -   p2    =    Math.round(p0);    q2    =    Math.round(q2);    p2    =    Math.round(p0);    q2    =    Math.round(q2);    
 +  p2  =  Math.round(p0);  q2  =  Math.round(q2);  p2  =  Math.round(p2);  q2  =  Math.round(q2); 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java add 215 suspicious value: 0.5 
 -   p2    =    Math.round(p2);    q2    =    Math.round(q2);    
 + p2  =  Math.round(p1);  q2  =  Math.round(q1); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java add 306 suspicious value: 0.7071067811865475 
 -   p2    =    Math.round(p0);    q2    =    Math.round(q2);    p2    =    Math.round(p0);    q2    =    Math.round(q2);    
 +  p2  =  Math.round(p0);  q2  =  Math.round(q2);  p2  =  Math.round(p2);  q2  =  Math.round(q2); 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java add 215 suspicious value: 0.5 
 -   p2    =    Math.round(a1);    q2    =    Math.round(q2);    a1    =    Math.round(a1);    q2    =    Math.round(q2);    
 + p2  =  Math.round(a1);  q2  =  Math.round(q1);  a1  =  Math.round(a1);  q2  =  Math.round(q2); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java add 306 suspicious value: 0.7071067811865475 
 -   p2    =    Math.round(p0);    q2    =    Math.round(q2);    p2    =    Math.round(p0);    q2    =    Math.round(q2);    
 +  p2  =  Math.round(p0);  q2  =  Math.round(q2);  p2  =  Math.round(p2);  q2  =  Math.round(q2); 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java add 215 suspicious value: 0.5 
 -   p2    =    Math.round(a1);    q2    =    Math.round(q2);    a1    =    Math.round(a1);    q2    =    Math.round(q2);    
 + p2  =  Math.round(a1);  q2  =  Math.round(q0);  a1  =  Math.round(a1);  q2  =  Math.round(q2); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java add 306 suspicious value: 0.7071067811865475 
 -   p2    =    Math.round(p0);    q2    =    Math.round(q2);    p2    =    Math.round(p0);    q2    =    Math.round(q2);    
 +  p2  =  Math.round(p0);  q2  =  Math.round(q2);  p2  =  Math.round(p2);  q2  =  Math.round(q2); 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java replace 215 suspicious value: 0.5 
 -   p2    =(int)FastMath.floor(r1);    p1    =(int)FastMath.floor(r1);    
 + p2  =(int)FastMath.floor(r1);  q2  =(int)FastMath.abs(q2); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java add 306 suspicious value: 0.7071067811865475 
 -   p0    =    p1;    p2    =    p0;    q2    =    q1;    if(n    <    maxIterations)    {    p0    =    p1;    p2    =    p0;    q2    =    q1;    }    
 +  p0  =  p1;  p2  =  p0;  q2  =  q1;  if(n  >  maxIterations)  {  p0  =  p1;  p2  =  p0;  q2  =  q1;  } 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java add 215 suspicious value: 0.5 
 -   p2    =    Math.round(p1);    q2    =    Math.round(q2);    
 + p2  =  Math.round(p0);  q2  =  Math.round(q1); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java add 306 suspicious value: 0.7071067811865475 
 -   p0    =    p1;    p2    =    p0;    q2    =    q1;    if(n    <    maxIterations)    {    p0    =    p1;    p2    =    p0;    q2    =    q1;    }    
 +  p0  =  p1;  p2  =  p0;  q2  =  q1;  if(n  >  maxIterations)  {  p0  =  p1;  p2  =  p0;  q2  =  q1;  } 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java add 215 suspicious value: 0.5 
 -   p2    =    Math.round(p2);    q2    =    Math.round(q2);    
 + p2  =  Math.round(p1);  q2  =  Math.round(q1); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java add 306 suspicious value: 0.7071067811865475 
 -   p0    =    p1;    p2    =    p0;    q2    =    q1;    if(n    <    maxIterations)    {    p0    =    p1;    p2    =    p0;    q2    =    q1;    }    
 +  p0  =  p1;  p2  =  p0;  q2  =  q1;  if(n  >  maxIterations)  {  p0  =  p1;  p2  =  p0;  q2  =  q1;  } 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java add 215 suspicious value: 0.5 
 -   p2    =    Math.round(a1);    q2    =    Math.round(q2);    a1    =    Math.round(a1);    q2    =    Math.round(q2);    
 + p2  =  Math.round(a1);  q2  =  Math.round(q1);  a1  =  Math.round(a1);  q2  =  Math.round(q2); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java add 306 suspicious value: 0.7071067811865475 
 -   p0    =    p1;    p2    =    p0;    q2    =    q1;    if(n    <    maxIterations)    {    p0    =    p1;    p2    =    p0;    q2    =    q1;    }    
 +  p0  =  p1;  p2  =  p0;  q2  =  q1;  if(n  >  maxIterations)  {  p0  =  p1;  p2  =  p0;  q2  =  q1;  } 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java add 215 suspicious value: 0.5 
 -   p2    =    Math.round(a1);    q2    =    Math.round(q2);    a1    =    Math.round(a1);    q2    =    Math.round(q2);    
 + p2  =  Math.round(a1);  q2  =  Math.round(q0);  a1  =  Math.round(a1);  q2  =  Math.round(q2); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java add 306 suspicious value: 0.7071067811865475 
 -   p0    =    p1;    p2    =    p0;    q2    =    q1;    if(n    <    maxIterations)    {    p0    =    p1;    p2    =    p0;    q2    =    q1;    }    
 +  p0  =  p1;  p2  =  p0;  q2  =  q1;  if(n  >  maxIterations)  {  p0  =  p1;  p2  =  p0;  q2  =  q1;  } 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java replace 215 suspicious value: 0.5 
 -   p2    =(int)FastMath.floor(r1);    p1    =(int)FastMath.floor(r1);    
 + p2  =(int)FastMath.floor(r1);  q2  =(int)FastMath.abs(q2); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java replace 306 suspicious value: 0.7071067811865475 
 -   p2    =    Math.round(q0);    q2    =    Math.round(q2);    p2    =    Math.round(p1);    q2    =    Math.round(q2);    
 +  p2  =  Math.round(p1);  p2  =  Math.round(q2);  q2  =  Math.round(q2); 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java add 215 suspicious value: 0.5 
 -   p2    =    Math.round(p1);    q2    =    Math.round(q2);    
 + p2  =  Math.round(p0);  q2  =  Math.round(q1); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java replace 306 suspicious value: 0.7071067811865475 
 -   p2    =    Math.round(q0);    q2    =    Math.round(q2);    p2    =    Math.round(p1);    q2    =    Math.round(q2);    
 +  p2  =  Math.round(p1);  p2  =  Math.round(q2);  q2  =  Math.round(q2); 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java add 215 suspicious value: 0.5 
 -   p2    =    Math.round(p2);    q2    =    Math.round(q2);    
 + p2  =  Math.round(p1);  q2  =  Math.round(q1); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java replace 306 suspicious value: 0.7071067811865475 
 -   p2    =    Math.round(q0);    q2    =    Math.round(q2);    p2    =    Math.round(p1);    q2    =    Math.round(q2);    
 +  p2  =  Math.round(p1);  p2  =  Math.round(q2);  q2  =  Math.round(q2); 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java add 215 suspicious value: 0.5 
 -   p2    =    Math.round(a1);    q2    =    Math.round(q2);    a1    =    Math.round(a1);    q2    =    Math.round(q2);    
 + p2  =  Math.round(a1);  q2  =  Math.round(q1);  a1  =  Math.round(a1);  q2  =  Math.round(q2); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java replace 306 suspicious value: 0.7071067811865475 
 -   p2    =    Math.round(q0);    q2    =    Math.round(q2);    p2    =    Math.round(p1);    q2    =    Math.round(q2);    
 +  p2  =  Math.round(p1);  p2  =  Math.round(q2);  q2  =  Math.round(q2); 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java add 215 suspicious value: 0.5 
 -   p2    =    Math.round(a1);    q2    =    Math.round(q2);    a1    =    Math.round(a1);    q2    =    Math.round(q2);    
 + p2  =  Math.round(a1);  q2  =  Math.round(q0);  a1  =  Math.round(a1);  q2  =  Math.round(q2); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java replace 306 suspicious value: 0.7071067811865475 
 -   p2    =    Math.round(q0);    q2    =    Math.round(q2);    p2    =    Math.round(p1);    q2    =    Math.round(q2);    
 +  p2  =  Math.round(p1);  p2  =  Math.round(q2);  q2  =  Math.round(q2); 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java replace 215 suspicious value: 0.5 
 -   p2    =(int)FastMath.floor(r1);    p1    =(int)FastMath.floor(r1);    
 + p2  =(int)FastMath.floor(r1);  q2  =(int)FastMath.abs(q2); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java add 306 suspicious value: 0.7071067811865475 
 -   if(n    >=    maxIterations)    {    throw    new    FractionConversionException(n,    p2,    overflow);    }    
 +  if(n  >  maxIterations)  {  throw  new  FractionConversionException(n,  p2,  overflow);  } 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java add 215 suspicious value: 0.5 
 -   p2    =    Math.round(p1);    q2    =    Math.round(q2);    
 + p2  =  Math.round(p0);  q2  =  Math.round(q1); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java add 306 suspicious value: 0.7071067811865475 
 -   if(n    >=    maxIterations)    {    throw    new    FractionConversionException(n,    p2,    overflow);    }    
 +  if(n  >  maxIterations)  {  throw  new  FractionConversionException(n,  p2,  overflow);  } 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java add 215 suspicious value: 0.5 
 -   p2    =    Math.round(p2);    q2    =    Math.round(q2);    
 + p2  =  Math.round(p1);  q2  =  Math.round(q1); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java add 306 suspicious value: 0.7071067811865475 
 -   if(n    >=    maxIterations)    {    throw    new    FractionConversionException(n,    p2,    overflow);    }    
 +  if(n  >  maxIterations)  {  throw  new  FractionConversionException(n,  p2,  overflow);  } 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java add 215 suspicious value: 0.5 
 -   p2    =    Math.round(a1);    q2    =    Math.round(q2);    a1    =    Math.round(a1);    q2    =    Math.round(q2);    
 + p2  =  Math.round(a1);  q2  =  Math.round(q1);  a1  =  Math.round(a1);  q2  =  Math.round(q2); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java add 306 suspicious value: 0.7071067811865475 
 -   if(n    >=    maxIterations)    {    throw    new    FractionConversionException(n,    p2,    overflow);    }    
 +  if(n  >  maxIterations)  {  throw  new  FractionConversionException(n,  p2,  overflow);  } 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java add 215 suspicious value: 0.5 
 -   p2    =    Math.round(a1);    q2    =    Math.round(q2);    a1    =    Math.round(a1);    q2    =    Math.round(q2);    
 + p2  =  Math.round(a1);  q2  =  Math.round(q0);  a1  =  Math.round(a1);  q2  =  Math.round(q2); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java add 306 suspicious value: 0.7071067811865475 
 -   if(n    >=    maxIterations)    {    throw    new    FractionConversionException(n,    p2,    overflow);    }    
 +  if(n  >  maxIterations)  {  throw  new  FractionConversionException(n,  p2,  overflow);  } 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java replace 215 suspicious value: 0.5 
 -   p2    =(int)FastMath.floor(r1);    p1    =(int)FastMath.floor(r1);    
 + p2  =(int)FastMath.floor(r1);  q2  =(int)FastMath.abs(q2); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java replace 306 suspicious value: 0.7071067811865475 
 -   p0    =    p1;    p2    =    p0;    q2    =    q1;    if(p0    <    p1)    {    p0    =    p1;    p2    =    p0;    q2    =    q1;    }    
 +  p0  =  p1;  p2  =  p0;  p2  =  p1;  if(p0  >  p1)  {  p0  =  p1;  p2  =  p0;  q2  =  q1;  } 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java add 215 suspicious value: 0.5 
 -   p2    =    Math.round(p1);    q2    =    Math.round(q2);    
 + p2  =  Math.round(p0);  q2  =  Math.round(q1); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java replace 306 suspicious value: 0.7071067811865475 
 -   p0    =    p1;    p2    =    p0;    q2    =    q1;    if(p0    <    p1)    {    p0    =    p1;    p2    =    p0;    q2    =    q1;    }    
 +  p0  =  p1;  p2  =  p0;  p2  =  p1;  if(p0  >  p1)  {  p0  =  p1;  p2  =  p0;  q2  =  q1;  } 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java add 215 suspicious value: 0.5 
 -   p2    =    Math.round(p2);    q2    =    Math.round(q2);    
 + p2  =  Math.round(p1);  q2  =  Math.round(q1); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java replace 306 suspicious value: 0.7071067811865475 
 -   p0    =    p1;    p2    =    p0;    q2    =    q1;    if(p0    <    p1)    {    p0    =    p1;    p2    =    p0;    q2    =    q1;    }    
 +  p0  =  p1;  p2  =  p0;  p2  =  p1;  if(p0  >  p1)  {  p0  =  p1;  p2  =  p0;  q2  =  q1;  } 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java add 215 suspicious value: 0.5 
 -   p2    =    Math.round(a1);    q2    =    Math.round(q2);    a1    =    Math.round(a1);    q2    =    Math.round(q2);    
 + p2  =  Math.round(a1);  q2  =  Math.round(q1);  a1  =  Math.round(a1);  q2  =  Math.round(q2); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java replace 306 suspicious value: 0.7071067811865475 
 -   p0    =    p1;    p2    =    p0;    q2    =    q1;    if(p0    <    p1)    {    p0    =    p1;    p2    =    p0;    q2    =    q1;    }    
 +  p0  =  p1;  p2  =  p0;  p2  =  p1;  if(p0  >  p1)  {  p0  =  p1;  p2  =  p0;  q2  =  q1;  } 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java add 215 suspicious value: 0.5 
 -   p2    =    Math.round(a1);    q2    =    Math.round(q2);    a1    =    Math.round(a1);    q2    =    Math.round(q2);    
 + p2  =  Math.round(a1);  q2  =  Math.round(q0);  a1  =  Math.round(a1);  q2  =  Math.round(q2); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java replace 306 suspicious value: 0.7071067811865475 
 -   p0    =    p1;    p2    =    p0;    q2    =    q1;    if(p0    <    p1)    {    p0    =    p1;    p2    =    p0;    q2    =    q1;    }    
 +  p0  =  p1;  p2  =  p0;  p2  =  p1;  if(p0  >  p1)  {  p0  =  p1;  p2  =  p0;  q2  =  q1;  } 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java replace 215 suspicious value: 0.5 
 -   p2    =(int)FastMath.floor(r1);    p1    =(int)FastMath.floor(r1);    
 + p2  =(int)FastMath.floor(r1);  q2  =(int)FastMath.abs(q2); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java add 306 suspicious value: 0.7071067811865475 
 -   if(n    <    maxIterations)    {    throw    new    FractionConversionException(0.0,    a1,    p2);    }    
 +  if(n  >  maxIterations)  {  throw  new  FractionConversionException(0.0,  a1,  p2);  } 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java add 215 suspicious value: 0.5 
 -   p2    =    Math.round(p1);    q2    =    Math.round(q2);    
 + p2  =  Math.round(p0);  q2  =  Math.round(q1); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java add 306 suspicious value: 0.7071067811865475 
 -   if(n    <    maxIterations)    {    throw    new    FractionConversionException(0.0,    a1,    p2);    }    
 +  if(n  >  maxIterations)  {  throw  new  FractionConversionException(0.0,  a1,  p2);  } 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java add 215 suspicious value: 0.5 
 -   p2    =    Math.round(p2);    q2    =    Math.round(q2);    
 + p2  =  Math.round(p1);  q2  =  Math.round(q1); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java add 306 suspicious value: 0.7071067811865475 
 -   if(n    <    maxIterations)    {    throw    new    FractionConversionException(0.0,    a1,    p2);    }    
 +  if(n  >  maxIterations)  {  throw  new  FractionConversionException(0.0,  a1,  p2);  } 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java add 215 suspicious value: 0.5 
 -   p2    =    Math.round(a1);    q2    =    Math.round(q2);    a1    =    Math.round(a1);    q2    =    Math.round(q2);    
 + p2  =  Math.round(a1);  q2  =  Math.round(q1);  a1  =  Math.round(a1);  q2  =  Math.round(q2); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java add 306 suspicious value: 0.7071067811865475 
 -   if(n    <    maxIterations)    {    throw    new    FractionConversionException(0.0,    a1,    p2);    }    
 +  if(n  >  maxIterations)  {  throw  new  FractionConversionException(0.0,  a1,  p2);  } 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java add 215 suspicious value: 0.5 
 -   p2    =    Math.round(a1);    q2    =    Math.round(q2);    a1    =    Math.round(a1);    q2    =    Math.round(q2);    
 + p2  =  Math.round(a1);  q2  =  Math.round(q0);  a1  =  Math.round(a1);  q2  =  Math.round(q2); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java add 306 suspicious value: 0.7071067811865475 
 -   if(n    <    maxIterations)    {    throw    new    FractionConversionException(0.0,    a1,    p2);    }    
 +  if(n  >  maxIterations)  {  throw  new  FractionConversionException(0.0,  a1,  p2);  } 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java replace 215 suspicious value: 0.5 
 -   p2    =(int)FastMath.floor(r1);    p1    =(int)FastMath.floor(r1);    
 + p2  =(int)FastMath.floor(r1);  q2  =(int)FastMath.abs(q2); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java replace 306 suspicious value: 0.7071067811865475 
 -   p2    =    Math.round(p1);    q2    =    Math.round(q2);    p2    =    Math.round(p1);    q2    =    Math.round(q2);    
 +  p2  =  Math.round(p1);  q2  =  Math.round(q2);  p2  =  Math.round(q2); 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java add 215 suspicious value: 0.5 
 -   p2    =    Math.round(p1);    q2    =    Math.round(q2);    
 + p2  =  Math.round(p0);  q2  =  Math.round(q1); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java replace 306 suspicious value: 0.7071067811865475 
 -   p2    =    Math.round(p1);    q2    =    Math.round(q2);    p2    =    Math.round(p1);    q2    =    Math.round(q2);    
 +  p2  =  Math.round(p1);  q2  =  Math.round(q2);  p2  =  Math.round(q2); 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java add 215 suspicious value: 0.5 
 -   p2    =    Math.round(p2);    q2    =    Math.round(q2);    
 + p2  =  Math.round(p1);  q2  =  Math.round(q1); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java replace 306 suspicious value: 0.7071067811865475 
 -   p2    =    Math.round(p1);    q2    =    Math.round(q2);    p2    =    Math.round(p1);    q2    =    Math.round(q2);    
 +  p2  =  Math.round(p1);  q2  =  Math.round(q2);  p2  =  Math.round(q2); 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java add 215 suspicious value: 0.5 
 -   p2    =    Math.round(a1);    q2    =    Math.round(q2);    a1    =    Math.round(a1);    q2    =    Math.round(q2);    
 + p2  =  Math.round(a1);  q2  =  Math.round(q1);  a1  =  Math.round(a1);  q2  =  Math.round(q2); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java replace 306 suspicious value: 0.7071067811865475 
 -   p2    =    Math.round(p1);    q2    =    Math.round(q2);    p2    =    Math.round(p1);    q2    =    Math.round(q2);    
 +  p2  =  Math.round(p1);  q2  =  Math.round(q2);  p2  =  Math.round(q2); 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java add 215 suspicious value: 0.5 
 -   p2    =    Math.round(a1);    q2    =    Math.round(q2);    a1    =    Math.round(a1);    q2    =    Math.round(q2);    
 + p2  =  Math.round(a1);  q2  =  Math.round(q0);  a1  =  Math.round(a1);  q2  =  Math.round(q2); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java replace 306 suspicious value: 0.7071067811865475 
 -   p2    =    Math.round(p1);    q2    =    Math.round(q2);    p2    =    Math.round(p1);    q2    =    Math.round(q2);    
 +  p2  =  Math.round(p1);  q2  =  Math.round(q2);  p2  =  Math.round(q2); 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java replace 215 suspicious value: 0.5 
 -   p2    =(int)FastMath.floor(r1);    p1    =(int)FastMath.floor(r1);    
 + p2  =(int)FastMath.floor(r1);  q2  =(int)FastMath.abs(q2); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java replace 306 suspicious value: 0.7071067811865475 
 -   p2    =    Math.round(p1);    q2    =    Math.round(q2);    p1    =    Math.round(p1);    q2    =    Math.round(q2);    
 +  p2  =  Math.round(p1);  q2  =  Math.round(q2);  p1  =  Math.round(p2);  q2  =  Math.round(q2); 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java add 215 suspicious value: 0.5 
 -   p2    =    Math.round(p1);    q2    =    Math.round(q2);    
 + p2  =  Math.round(p0);  q2  =  Math.round(q1); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java replace 306 suspicious value: 0.7071067811865475 
 -   p2    =    Math.round(p1);    q2    =    Math.round(q2);    p1    =    Math.round(p1);    q2    =    Math.round(q2);    
 +  p2  =  Math.round(p1);  q2  =  Math.round(q2);  p1  =  Math.round(p2);  q2  =  Math.round(q2); 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java add 215 suspicious value: 0.5 
 -   p2    =    Math.round(p2);    q2    =    Math.round(q2);    
 + p2  =  Math.round(p1);  q2  =  Math.round(q1); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java replace 306 suspicious value: 0.7071067811865475 
 -   p2    =    Math.round(p1);    q2    =    Math.round(q2);    p1    =    Math.round(p1);    q2    =    Math.round(q2);    
 +  p2  =  Math.round(p1);  q2  =  Math.round(q2);  p1  =  Math.round(p2);  q2  =  Math.round(q2); 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java add 215 suspicious value: 0.5 
 -   p2    =    Math.round(a1);    q2    =    Math.round(q2);    a1    =    Math.round(a1);    q2    =    Math.round(q2);    
 + p2  =  Math.round(a1);  q2  =  Math.round(q1);  a1  =  Math.round(a1);  q2  =  Math.round(q2); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java replace 306 suspicious value: 0.7071067811865475 
 -   p2    =    Math.round(p1);    q2    =    Math.round(q2);    p1    =    Math.round(p1);    q2    =    Math.round(q2);    
 +  p2  =  Math.round(p1);  q2  =  Math.round(q2);  p1  =  Math.round(p2);  q2  =  Math.round(q2); 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java add 215 suspicious value: 0.5 
 -   p2    =    Math.round(a1);    q2    =    Math.round(q2);    a1    =    Math.round(a1);    q2    =    Math.round(q2);    
 + p2  =  Math.round(a1);  q2  =  Math.round(q0);  a1  =  Math.round(a1);  q2  =  Math.round(q2); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java replace 306 suspicious value: 0.7071067811865475 
 -   p2    =    Math.round(p1);    q2    =    Math.round(q2);    p1    =    Math.round(p1);    q2    =    Math.round(q2);    
 +  p2  =  Math.round(p1);  q2  =  Math.round(q2);  p1  =  Math.round(p2);  q2  =  Math.round(q2); 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java replace 215 suspicious value: 0.5 
 -   p2    =(int)FastMath.floor(r1);    p1    =(int)FastMath.floor(r1);    
 + p2  =(int)FastMath.floor(r1);  q2  =(int)FastMath.abs(q2); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java add 306 suspicious value: 0.7071067811865475 
 -   p2    =    Math.round(a1);    p2    =    Math.round(q2);    p0    =    Math.round(p0);    q1    =    Math.round(q1);    
 +  p2  =  Math.round(a1);  p2  =  Math.round(p0);  q1  =  Math.round(q1); 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java add 215 suspicious value: 0.5 
 -   p2    =    Math.round(p1);    q2    =    Math.round(q2);    
 + p2  =  Math.round(p0);  q2  =  Math.round(q1); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java add 306 suspicious value: 0.7071067811865475 
 -   p2    =    Math.round(a1);    p2    =    Math.round(q2);    p0    =    Math.round(p0);    q1    =    Math.round(q1);    
 +  p2  =  Math.round(a1);  p2  =  Math.round(p0);  q1  =  Math.round(q1); 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java add 215 suspicious value: 0.5 
 -   p2    =    Math.round(p2);    q2    =    Math.round(q2);    
 + p2  =  Math.round(p1);  q2  =  Math.round(q1); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java add 306 suspicious value: 0.7071067811865475 
 -   p2    =    Math.round(a1);    p2    =    Math.round(q2);    p0    =    Math.round(p0);    q1    =    Math.round(q1);    
 +  p2  =  Math.round(a1);  p2  =  Math.round(p0);  q1  =  Math.round(q1); 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java add 215 suspicious value: 0.5 
 -   p2    =    Math.round(a1);    q2    =    Math.round(q2);    a1    =    Math.round(a1);    q2    =    Math.round(q2);    
 + p2  =  Math.round(a1);  q2  =  Math.round(q1);  a1  =  Math.round(a1);  q2  =  Math.round(q2); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java add 306 suspicious value: 0.7071067811865475 
 -   p2    =    Math.round(a1);    p2    =    Math.round(q2);    p0    =    Math.round(p0);    q1    =    Math.round(q1);    
 +  p2  =  Math.round(a1);  p2  =  Math.round(p0);  q1  =  Math.round(q1); 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java add 215 suspicious value: 0.5 
 -   p2    =    Math.round(a1);    q2    =    Math.round(q2);    a1    =    Math.round(a1);    q2    =    Math.round(q2);    
 + p2  =  Math.round(a1);  q2  =  Math.round(q0);  a1  =  Math.round(a1);  q2  =  Math.round(q2); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java add 306 suspicious value: 0.7071067811865475 
 -   p2    =    Math.round(a1);    p2    =    Math.round(q2);    p0    =    Math.round(p0);    q1    =    Math.round(q1);    
 +  p2  =  Math.round(a1);  p2  =  Math.round(p0);  q1  =  Math.round(q1); 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java replace 215 suspicious value: 0.5 
 -   p2    =(int)FastMath.floor(r1);    p1    =(int)FastMath.floor(r1);    
 + p2  =(int)FastMath.floor(r1);  q2  =(int)FastMath.abs(q2); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java add 306 suspicious value: 0.7071067811865475 
 -   p2    =    Math.round(p1);    q2    =    Math.round(q2);    p2    =    Math.round(p2);    q1    =    Math.round(q1);    
 +  p2  =  Math.round(p2);  p2  =  Math.round(p2);  q1  =  Math.round(q1); 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java add 215 suspicious value: 0.5 
 -   p2    =    Math.round(p1);    q2    =    Math.round(q2);    
 + p2  =  Math.round(p0);  q2  =  Math.round(q1); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java add 306 suspicious value: 0.7071067811865475 
 -   p2    =    Math.round(p1);    q2    =    Math.round(q2);    p2    =    Math.round(p2);    q1    =    Math.round(q1);    
 +  p2  =  Math.round(p2);  p2  =  Math.round(p2);  q1  =  Math.round(q1); 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java add 215 suspicious value: 0.5 
 -   p2    =    Math.round(p2);    q2    =    Math.round(q2);    
 + p2  =  Math.round(p1);  q2  =  Math.round(q1); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java add 306 suspicious value: 0.7071067811865475 
 -   p2    =    Math.round(p1);    q2    =    Math.round(q2);    p2    =    Math.round(p2);    q1    =    Math.round(q1);    
 +  p2  =  Math.round(p2);  p2  =  Math.round(p2);  q1  =  Math.round(q1); 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java add 215 suspicious value: 0.5 
 -   p2    =    Math.round(a1);    q2    =    Math.round(q2);    a1    =    Math.round(a1);    q2    =    Math.round(q2);    
 + p2  =  Math.round(a1);  q2  =  Math.round(q1);  a1  =  Math.round(a1);  q2  =  Math.round(q2); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java add 306 suspicious value: 0.7071067811865475 
 -   p2    =    Math.round(p1);    q2    =    Math.round(q2);    p2    =    Math.round(p2);    q1    =    Math.round(q1);    
 +  p2  =  Math.round(p2);  p2  =  Math.round(p2);  q1  =  Math.round(q1); 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java add 215 suspicious value: 0.5 
 -   p2    =    Math.round(a1);    q2    =    Math.round(q2);    a1    =    Math.round(a1);    q2    =    Math.round(q2);    
 + p2  =  Math.round(a1);  q2  =  Math.round(q0);  a1  =  Math.round(a1);  q2  =  Math.round(q2); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java add 306 suspicious value: 0.7071067811865475 
 -   p2    =    Math.round(p1);    q2    =    Math.round(q2);    p2    =    Math.round(p2);    q1    =    Math.round(q1);    
 +  p2  =  Math.round(p2);  p2  =  Math.round(p2);  q1  =  Math.round(q1); 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java replace 215 suspicious value: 0.5 
 -   p2    =(int)FastMath.floor(r1);    p1    =(int)FastMath.floor(r1);    
 + p2  =(int)FastMath.floor(r1);  q2  =(int)FastMath.abs(q2); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java replace 306 suspicious value: 0.7071067811865475 
 -   p2    =    Math.round(p1);    q2    =    Math.round(q2);    p2    =    Math.round(p2);    q1    =    Math.round(q1);    
 +  p2  =  Math.round(p1);  p2  =  Math.round(p2);  q1  =  Math.round(q1); 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java add 215 suspicious value: 0.5 
 -   p2    =    Math.round(p1);    q2    =    Math.round(q2);    
 + p2  =  Math.round(p0);  q2  =  Math.round(q1); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java replace 306 suspicious value: 0.7071067811865475 
 -   p2    =    Math.round(p1);    q2    =    Math.round(q2);    p2    =    Math.round(p2);    q1    =    Math.round(q1);    
 +  p2  =  Math.round(p1);  p2  =  Math.round(p2);  q1  =  Math.round(q1); 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java add 215 suspicious value: 0.5 
 -   p2    =    Math.round(p2);    q2    =    Math.round(q2);    
 + p2  =  Math.round(p1);  q2  =  Math.round(q1); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java replace 306 suspicious value: 0.7071067811865475 
 -   p2    =    Math.round(p1);    q2    =    Math.round(q2);    p2    =    Math.round(p2);    q1    =    Math.round(q1);    
 +  p2  =  Math.round(p1);  p2  =  Math.round(p2);  q1  =  Math.round(q1); 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java add 215 suspicious value: 0.5 
 -   p2    =    Math.round(a1);    q2    =    Math.round(q2);    a1    =    Math.round(a1);    q2    =    Math.round(q2);    
 + p2  =  Math.round(a1);  q2  =  Math.round(q1);  a1  =  Math.round(a1);  q2  =  Math.round(q2); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java replace 306 suspicious value: 0.7071067811865475 
 -   p2    =    Math.round(p1);    q2    =    Math.round(q2);    p2    =    Math.round(p2);    q1    =    Math.round(q1);    
 +  p2  =  Math.round(p1);  p2  =  Math.round(p2);  q1  =  Math.round(q1); 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java add 215 suspicious value: 0.5 
 -   p2    =    Math.round(a1);    q2    =    Math.round(q2);    a1    =    Math.round(a1);    q2    =    Math.round(q2);    
 + p2  =  Math.round(a1);  q2  =  Math.round(q0);  a1  =  Math.round(a1);  q2  =  Math.round(q2); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java replace 306 suspicious value: 0.7071067811865475 
 -   p2    =    Math.round(p1);    q2    =    Math.round(q2);    p2    =    Math.round(p2);    q1    =    Math.round(q1);    
 +  p2  =  Math.round(p1);  p2  =  Math.round(p2);  q1  =  Math.round(q1); 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java replace 215 suspicious value: 0.5 
 -   p2    =(int)FastMath.floor(r1);    p1    =(int)FastMath.floor(r1);    
 + p2  =(int)FastMath.floor(r1);  q2  =(int)FastMath.abs(q2); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java add 306 suspicious value: 0.7071067811865475 
 -   p2    =    Math.round(p1);    q2    =    Math.round(q2);    p2    =    Math.round(p2);    q1    =    Math.round(q1);    
 +  p2  =  Math.round(p0);  p2  =  Math.round(p2);  q1  =  Math.round(q1); 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java add 215 suspicious value: 0.5 
 -   p2    =    Math.round(p1);    q2    =    Math.round(q2);    
 + p2  =  Math.round(p0);  q2  =  Math.round(q1); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java add 306 suspicious value: 0.7071067811865475 
 -   p2    =    Math.round(p1);    q2    =    Math.round(q2);    p2    =    Math.round(p2);    q1    =    Math.round(q1);    
 +  p2  =  Math.round(p0);  p2  =  Math.round(p2);  q1  =  Math.round(q1); 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java add 215 suspicious value: 0.5 
 -   p2    =    Math.round(p2);    q2    =    Math.round(q2);    
 + p2  =  Math.round(p1);  q2  =  Math.round(q1); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java add 306 suspicious value: 0.7071067811865475 
 -   p2    =    Math.round(p1);    q2    =    Math.round(q2);    p2    =    Math.round(p2);    q1    =    Math.round(q1);    
 +  p2  =  Math.round(p0);  p2  =  Math.round(p2);  q1  =  Math.round(q1); 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java add 215 suspicious value: 0.5 
 -   p2    =    Math.round(a1);    q2    =    Math.round(q2);    a1    =    Math.round(a1);    q2    =    Math.round(q2);    
 + p2  =  Math.round(a1);  q2  =  Math.round(q1);  a1  =  Math.round(a1);  q2  =  Math.round(q2); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java add 306 suspicious value: 0.7071067811865475 
 -   p2    =    Math.round(p1);    q2    =    Math.round(q2);    p2    =    Math.round(p2);    q1    =    Math.round(q1);    
 +  p2  =  Math.round(p0);  p2  =  Math.round(p2);  q1  =  Math.round(q1); 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java add 215 suspicious value: 0.5 
 -   p2    =    Math.round(a1);    q2    =    Math.round(q2);    a1    =    Math.round(a1);    q2    =    Math.round(q2);    
 + p2  =  Math.round(a1);  q2  =  Math.round(q0);  a1  =  Math.round(a1);  q2  =  Math.round(q2); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java add 306 suspicious value: 0.7071067811865475 
 -   p2    =    Math.round(p1);    q2    =    Math.round(q2);    p2    =    Math.round(p2);    q1    =    Math.round(q1);    
 +  p2  =  Math.round(p0);  p2  =  Math.round(p2);  q1  =  Math.round(q1); 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java replace 215 suspicious value: 0.5 
 -   p2    =(int)FastMath.floor(r1);    p1    =(int)FastMath.floor(r1);    
 + p2  =(int)FastMath.floor(r1);  q2  =(int)FastMath.abs(q2); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java add 306 suspicious value: 0.7071067811865475 
 -   p0    =    p1;    p2    =    p0;    q2    =    q1;    if(n    <    maxIterations)    {    p0    =    p1;    p2    =    p0;    q2    =    q1;    n++;    }    
 +  if(p1  >  epsilon)  {  p1  =  p1;  p2  =  p1;  q2  =  q1;  } 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java add 215 suspicious value: 0.5 
 -   p2    =    Math.round(p1);    q2    =    Math.round(q2);    
 + p2  =  Math.round(p0);  q2  =  Math.round(q1); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java add 306 suspicious value: 0.7071067811865475 
 -   p0    =    p1;    p2    =    p0;    q2    =    q1;    if(n    <    maxIterations)    {    p0    =    p1;    p2    =    p0;    q2    =    q1;    n++;    }    
 +  if(p1  >  epsilon)  {  p1  =  p1;  p2  =  p1;  q2  =  q1;  } 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java add 215 suspicious value: 0.5 
 -   p2    =    Math.round(p2);    q2    =    Math.round(q2);    
 + p2  =  Math.round(p1);  q2  =  Math.round(q1); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java add 306 suspicious value: 0.7071067811865475 
 -   p0    =    p1;    p2    =    p0;    q2    =    q1;    if(n    <    maxIterations)    {    p0    =    p1;    p2    =    p0;    q2    =    q1;    n++;    }    
 +  if(p1  >  epsilon)  {  p1  =  p1;  p2  =  p1;  q2  =  q1;  } 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java add 215 suspicious value: 0.5 
 -   p2    =    Math.round(a1);    q2    =    Math.round(q2);    a1    =    Math.round(a1);    q2    =    Math.round(q2);    
 + p2  =  Math.round(a1);  q2  =  Math.round(q1);  a1  =  Math.round(a1);  q2  =  Math.round(q2); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java add 306 suspicious value: 0.7071067811865475 
 -   p0    =    p1;    p2    =    p0;    q2    =    q1;    if(n    <    maxIterations)    {    p0    =    p1;    p2    =    p0;    q2    =    q1;    n++;    }    
 +  if(p1  >  epsilon)  {  p1  =  p1;  p2  =  p1;  q2  =  q1;  } 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java add 215 suspicious value: 0.5 
 -   p2    =    Math.round(a1);    q2    =    Math.round(q2);    a1    =    Math.round(a1);    q2    =    Math.round(q2);    
 + p2  =  Math.round(a1);  q2  =  Math.round(q0);  a1  =  Math.round(a1);  q2  =  Math.round(q2); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java add 306 suspicious value: 0.7071067811865475 
 -   p0    =    p1;    p2    =    p0;    q2    =    q1;    if(n    <    maxIterations)    {    p0    =    p1;    p2    =    p0;    q2    =    q1;    n++;    }    
 +  if(p1  >  epsilon)  {  p1  =  p1;  p2  =  p1;  q2  =  q1;  } 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java replace 215 suspicious value: 0.5 
 -   p2    =(int)FastMath.floor(r1);    p1    =(int)FastMath.floor(r1);    
 + p2  =(int)FastMath.floor(r1);  q2  =(int)FastMath.abs(q2); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java replace 306 suspicious value: 0.7071067811865475 
 -   p2    =    Math.round(a1);    q2    =    Math.round(q2);    
 +  p2  =  Math.round(q0);  q2  =  Math.round(q2); 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java add 215 suspicious value: 0.5 
 -   p2    =    Math.round(p1);    q2    =    Math.round(q2);    
 + p2  =  Math.round(p0);  q2  =  Math.round(q1); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java replace 306 suspicious value: 0.7071067811865475 
 -   p2    =    Math.round(a1);    q2    =    Math.round(q2);    
 +  p2  =  Math.round(q0);  q2  =  Math.round(q2); 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java add 215 suspicious value: 0.5 
 -   p2    =    Math.round(p2);    q2    =    Math.round(q2);    
 + p2  =  Math.round(p1);  q2  =  Math.round(q1); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java replace 306 suspicious value: 0.7071067811865475 
 -   p2    =    Math.round(a1);    q2    =    Math.round(q2);    
 +  p2  =  Math.round(q0);  q2  =  Math.round(q2); 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java add 215 suspicious value: 0.5 
 -   p2    =    Math.round(a1);    q2    =    Math.round(q2);    a1    =    Math.round(a1);    q2    =    Math.round(q2);    
 + p2  =  Math.round(a1);  q2  =  Math.round(q1);  a1  =  Math.round(a1);  q2  =  Math.round(q2); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java replace 306 suspicious value: 0.7071067811865475 
 -   p2    =    Math.round(a1);    q2    =    Math.round(q2);    
 +  p2  =  Math.round(q0);  q2  =  Math.round(q2); 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java add 215 suspicious value: 0.5 
 -   p2    =    Math.round(a1);    q2    =    Math.round(q2);    a1    =    Math.round(a1);    q2    =    Math.round(q2);    
 + p2  =  Math.round(a1);  q2  =  Math.round(q0);  a1  =  Math.round(a1);  q2  =  Math.round(q2); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java replace 306 suspicious value: 0.7071067811865475 
 -   p2    =    Math.round(a1);    q2    =    Math.round(q2);    
 +  p2  =  Math.round(q0);  q2  =  Math.round(q2); 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java replace 215 suspicious value: 0.5 
 -   p2    =(int)FastMath.floor(r1);    p1    =(int)FastMath.floor(r1);    
 + p2  =(int)FastMath.floor(r1);  q2  =(int)FastMath.abs(q2); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java add 306 suspicious value: 0.7071067811865475 
 -   throw    new    FractionConversionException(value,    p0,    q2);    p0    =    Math.floor(a1);    
 +  p0  =  p1; 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java add 215 suspicious value: 0.5 
 -   p2    =    Math.round(p1);    q2    =    Math.round(q2);    
 + p2  =  Math.round(p0);  q2  =  Math.round(q1); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java add 306 suspicious value: 0.7071067811865475 
 -   throw    new    FractionConversionException(value,    p0,    q2);    p0    =    Math.floor(a1);    
 +  p0  =  p1; 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java add 215 suspicious value: 0.5 
 -   p2    =    Math.round(p2);    q2    =    Math.round(q2);    
 + p2  =  Math.round(p1);  q2  =  Math.round(q1); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java add 306 suspicious value: 0.7071067811865475 
 -   throw    new    FractionConversionException(value,    p0,    q2);    p0    =    Math.floor(a1);    
 +  p0  =  p1; 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java add 215 suspicious value: 0.5 
 -   p2    =    Math.round(a1);    q2    =    Math.round(q2);    a1    =    Math.round(a1);    q2    =    Math.round(q2);    
 + p2  =  Math.round(a1);  q2  =  Math.round(q1);  a1  =  Math.round(a1);  q2  =  Math.round(q2); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java add 306 suspicious value: 0.7071067811865475 
 -   throw    new    FractionConversionException(value,    p0,    q2);    p0    =    Math.floor(a1);    
 +  p0  =  p1; 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java add 215 suspicious value: 0.5 
 -   p2    =    Math.round(a1);    q2    =    Math.round(q2);    a1    =    Math.round(a1);    q2    =    Math.round(q2);    
 + p2  =  Math.round(a1);  q2  =  Math.round(q0);  a1  =  Math.round(a1);  q2  =  Math.round(q2); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java add 306 suspicious value: 0.7071067811865475 
 -   throw    new    FractionConversionException(value,    p0,    q2);    p0    =    Math.floor(a1);    
 +  p0  =  p1; 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java replace 215 suspicious value: 0.5 
 -   p2    =(int)FastMath.floor(r1);    p1    =(int)FastMath.floor(r1);    
 + p2  =(int)FastMath.floor(r1);  q2  =(int)FastMath.abs(q2); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java add 306 suspicious value: 0.7071067811865475 
 -   p0    =    p1,    q1;    p2    =    p2;    
 +  p0  =  p1;  p2  =  p2; 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java add 215 suspicious value: 0.5 
 -   p2    =    Math.round(p1);    q2    =    Math.round(q2);    
 + p2  =  Math.round(p0);  q2  =  Math.round(q1); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java add 306 suspicious value: 0.7071067811865475 
 -   p0    =    p1,    q1;    p2    =    p2;    
 +  p0  =  p1;  p2  =  p2; 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java add 215 suspicious value: 0.5 
 -   p2    =    Math.round(p2);    q2    =    Math.round(q2);    
 + p2  =  Math.round(p1);  q2  =  Math.round(q1); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java add 306 suspicious value: 0.7071067811865475 
 -   p0    =    p1,    q1;    p2    =    p2;    
 +  p0  =  p1;  p2  =  p2; 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java add 215 suspicious value: 0.5 
 -   p2    =    Math.round(a1);    q2    =    Math.round(q2);    a1    =    Math.round(a1);    q2    =    Math.round(q2);    
 + p2  =  Math.round(a1);  q2  =  Math.round(q1);  a1  =  Math.round(a1);  q2  =  Math.round(q2); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java add 306 suspicious value: 0.7071067811865475 
 -   p0    =    p1,    q1;    p2    =    p2;    
 +  p0  =  p1;  p2  =  p2; 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java add 215 suspicious value: 0.5 
 -   p2    =    Math.round(a1);    q2    =    Math.round(q2);    a1    =    Math.round(a1);    q2    =    Math.round(q2);    
 + p2  =  Math.round(a1);  q2  =  Math.round(q0);  a1  =  Math.round(a1);  q2  =  Math.round(q2); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java add 306 suspicious value: 0.7071067811865475 
 -   p0    =    p1,    q1;    p2    =    p2;    
 +  p0  =  p1;  p2  =  p2; 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java replace 215 suspicious value: 0.5 
 -   p2    =(int)FastMath.floor(r1);    p1    =(int)FastMath.floor(r1);    
 + p2  =(int)FastMath.floor(r1);  q2  =(int)FastMath.abs(q2); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java add 306 suspicious value: 0.7071067811865475 
 -   p0    =    p1,    q1;    p2    =    p2;    
 +  p1  =  p1;  p2  =  p2; 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java add 215 suspicious value: 0.5 
 -   p2    =    Math.round(p1);    q2    =    Math.round(q2);    
 + p2  =  Math.round(p0);  q2  =  Math.round(q1); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java add 306 suspicious value: 0.7071067811865475 
 -   p0    =    p1,    q1;    p2    =    p2;    
 +  p1  =  p1;  p2  =  p2; 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java add 215 suspicious value: 0.5 
 -   p2    =    Math.round(p2);    q2    =    Math.round(q2);    
 + p2  =  Math.round(p1);  q2  =  Math.round(q1); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java add 306 suspicious value: 0.7071067811865475 
 -   p0    =    p1,    q1;    p2    =    p2;    
 +  p1  =  p1;  p2  =  p2; 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java add 215 suspicious value: 0.5 
 -   p2    =    Math.round(a1);    q2    =    Math.round(q2);    a1    =    Math.round(a1);    q2    =    Math.round(q2);    
 + p2  =  Math.round(a1);  q2  =  Math.round(q1);  a1  =  Math.round(a1);  q2  =  Math.round(q2); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java add 306 suspicious value: 0.7071067811865475 
 -   p0    =    p1,    q1;    p2    =    p2;    
 +  p1  =  p1;  p2  =  p2; 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java add 215 suspicious value: 0.5 
 -   p2    =    Math.round(a1);    q2    =    Math.round(q2);    a1    =    Math.round(a1);    q2    =    Math.round(q2);    
 + p2  =  Math.round(a1);  q2  =  Math.round(q0);  a1  =  Math.round(a1);  q2  =  Math.round(q2); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java add 306 suspicious value: 0.7071067811865475 
 -   p0    =    p1,    q1;    p2    =    p2;    
 +  p1  =  p1;  p2  =  p2; 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java replace 215 suspicious value: 0.5 
 -   p2    =(int)FastMath.floor(r1);    p1    =(int)FastMath.floor(r1);    
 + p2  =(int)FastMath.floor(r1);  q2  =(int)FastMath.abs(q2); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java replace 306 suspicious value: 0.7071067811865475 
 -   p2    =    Math.round(a1);    q2    =    Math.round(q2);    
 +  p2  =  Math.round(p0);  q2  =  Math.round(q2); 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java add 215 suspicious value: 0.5 
 -   p2    =    Math.round(p1);    q2    =    Math.round(q2);    
 + p2  =  Math.round(p0);  q2  =  Math.round(q1); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java replace 306 suspicious value: 0.7071067811865475 
 -   p2    =    Math.round(a1);    q2    =    Math.round(q2);    
 +  p2  =  Math.round(p0);  q2  =  Math.round(q2); 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java add 215 suspicious value: 0.5 
 -   p2    =    Math.round(p2);    q2    =    Math.round(q2);    
 + p2  =  Math.round(p1);  q2  =  Math.round(q1); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java replace 306 suspicious value: 0.7071067811865475 
 -   p2    =    Math.round(a1);    q2    =    Math.round(q2);    
 +  p2  =  Math.round(p0);  q2  =  Math.round(q2); 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java add 215 suspicious value: 0.5 
 -   p2    =    Math.round(a1);    q2    =    Math.round(q2);    a1    =    Math.round(a1);    q2    =    Math.round(q2);    
 + p2  =  Math.round(a1);  q2  =  Math.round(q1);  a1  =  Math.round(a1);  q2  =  Math.round(q2); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java replace 306 suspicious value: 0.7071067811865475 
 -   p2    =    Math.round(a1);    q2    =    Math.round(q2);    
 +  p2  =  Math.round(p0);  q2  =  Math.round(q2); 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java add 215 suspicious value: 0.5 
 -   p2    =    Math.round(a1);    q2    =    Math.round(q2);    a1    =    Math.round(a1);    q2    =    Math.round(q2);    
 + p2  =  Math.round(a1);  q2  =  Math.round(q0);  a1  =  Math.round(a1);  q2  =  Math.round(q2); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java replace 306 suspicious value: 0.7071067811865475 
 -   p2    =    Math.round(a1);    q2    =    Math.round(q2);    
 +  p2  =  Math.round(p0);  q2  =  Math.round(q2); 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java replace 215 suspicious value: 0.5 
 -   p2    =(int)FastMath.floor(r1);    p1    =(int)FastMath.floor(r1);    
 + p2  =(int)FastMath.floor(r1);  q2  =(int)FastMath.abs(q2); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java replace 306 suspicious value: 0.7071067811865475 
 -   p2    =    Math.round(a1);    q2    =    Math.round(q2);    
 +  p2  =  Math.round(p1);  q2  =  Math.round(q2); 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java add 215 suspicious value: 0.5 
 -   p2    =    Math.round(p1);    q2    =    Math.round(q2);    
 + p2  =  Math.round(p0);  q2  =  Math.round(q1); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java replace 306 suspicious value: 0.7071067811865475 
 -   p2    =    Math.round(a1);    q2    =    Math.round(q2);    
 +  p2  =  Math.round(p1);  q2  =  Math.round(q2); 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java add 215 suspicious value: 0.5 
 -   p2    =    Math.round(p2);    q2    =    Math.round(q2);    
 + p2  =  Math.round(p1);  q2  =  Math.round(q1); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java replace 306 suspicious value: 0.7071067811865475 
 -   p2    =    Math.round(a1);    q2    =    Math.round(q2);    
 +  p2  =  Math.round(p1);  q2  =  Math.round(q2); 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java add 215 suspicious value: 0.5 
 -   p2    =    Math.round(a1);    q2    =    Math.round(q2);    a1    =    Math.round(a1);    q2    =    Math.round(q2);    
 + p2  =  Math.round(a1);  q2  =  Math.round(q1);  a1  =  Math.round(a1);  q2  =  Math.round(q2); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java replace 306 suspicious value: 0.7071067811865475 
 -   p2    =    Math.round(a1);    q2    =    Math.round(q2);    
 +  p2  =  Math.round(p1);  q2  =  Math.round(q2); 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java add 215 suspicious value: 0.5 
 -   p2    =    Math.round(a1);    q2    =    Math.round(q2);    a1    =    Math.round(a1);    q2    =    Math.round(q2);    
 + p2  =  Math.round(a1);  q2  =  Math.round(q0);  a1  =  Math.round(a1);  q2  =  Math.round(q2); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java replace 306 suspicious value: 0.7071067811865475 
 -   p2    =    Math.round(a1);    q2    =    Math.round(q2);    
 +  p2  =  Math.round(p1);  q2  =  Math.round(q2); 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java replace 215 suspicious value: 0.5 
 -   p2    =(int)FastMath.floor(r1);    p1    =(int)FastMath.floor(r1);    
 + p2  =(int)FastMath.floor(r1);  q2  =(int)FastMath.abs(q2); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java add 306 suspicious value: 0.7071067811865475 
 -   p2    =    Math.round(a1);    q2    =    Math.round(q2);    
 +  p2  =  Math.round(p2);  q2  =  Math.round(q2); 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java add 215 suspicious value: 0.5 
 -   p2    =    Math.round(p1);    q2    =    Math.round(q2);    
 + p2  =  Math.round(p0);  q2  =  Math.round(q1); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java add 306 suspicious value: 0.7071067811865475 
 -   p2    =    Math.round(a1);    q2    =    Math.round(q2);    
 +  p2  =  Math.round(p2);  q2  =  Math.round(q2); 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java add 215 suspicious value: 0.5 
 -   p2    =    Math.round(p2);    q2    =    Math.round(q2);    
 + p2  =  Math.round(p1);  q2  =  Math.round(q1); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java add 306 suspicious value: 0.7071067811865475 
 -   p2    =    Math.round(a1);    q2    =    Math.round(q2);    
 +  p2  =  Math.round(p2);  q2  =  Math.round(q2); 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java add 215 suspicious value: 0.5 
 -   p2    =    Math.round(a1);    q2    =    Math.round(q2);    a1    =    Math.round(a1);    q2    =    Math.round(q2);    
 + p2  =  Math.round(a1);  q2  =  Math.round(q1);  a1  =  Math.round(a1);  q2  =  Math.round(q2); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java add 306 suspicious value: 0.7071067811865475 
 -   p2    =    Math.round(a1);    q2    =    Math.round(q2);    
 +  p2  =  Math.round(p2);  q2  =  Math.round(q2); 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java add 215 suspicious value: 0.5 
 -   p2    =    Math.round(a1);    q2    =    Math.round(q2);    a1    =    Math.round(a1);    q2    =    Math.round(q2);    
 + p2  =  Math.round(a1);  q2  =  Math.round(q0);  a1  =  Math.round(a1);  q2  =  Math.round(q2); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java add 306 suspicious value: 0.7071067811865475 
 -   p2    =    Math.round(a1);    q2    =    Math.round(q2);    
 +  p2  =  Math.round(p2);  q2  =  Math.round(q2); 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java replace 215 suspicious value: 0.5 
 -   p2    =(int)FastMath.floor(r1);    p1    =(int)FastMath.floor(r1);    
 + p2  =(int)FastMath.floor(r1);  q2  =(int)FastMath.abs(q2); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java add 306 suspicious value: 0.7071067811865475 
 -   throw    new    FractionConversionException(p0,    q1,    q2);    
 +  p0  =  p1;  p2  =  p0;  q2  =  q1; 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java add 215 suspicious value: 0.5 
 -   p2    =    Math.round(p1);    q2    =    Math.round(q2);    
 + p2  =  Math.round(p0);  q2  =  Math.round(q1); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java add 306 suspicious value: 0.7071067811865475 
 -   throw    new    FractionConversionException(p0,    q1,    q2);    
 +  p0  =  p1;  p2  =  p0;  q2  =  q1; 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java add 215 suspicious value: 0.5 
 -   p2    =    Math.round(p2);    q2    =    Math.round(q2);    
 + p2  =  Math.round(p1);  q2  =  Math.round(q1); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java add 306 suspicious value: 0.7071067811865475 
 -   throw    new    FractionConversionException(p0,    q1,    q2);    
 +  p0  =  p1;  p2  =  p0;  q2  =  q1; 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java add 215 suspicious value: 0.5 
 -   p2    =    Math.round(a1);    q2    =    Math.round(q2);    a1    =    Math.round(a1);    q2    =    Math.round(q2);    
 + p2  =  Math.round(a1);  q2  =  Math.round(q1);  a1  =  Math.round(a1);  q2  =  Math.round(q2); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java add 306 suspicious value: 0.7071067811865475 
 -   throw    new    FractionConversionException(p0,    q1,    q2);    
 +  p0  =  p1;  p2  =  p0;  q2  =  q1; 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java add 215 suspicious value: 0.5 
 -   p2    =    Math.round(a1);    q2    =    Math.round(q2);    a1    =    Math.round(a1);    q2    =    Math.round(q2);    
 + p2  =  Math.round(a1);  q2  =  Math.round(q0);  a1  =  Math.round(a1);  q2  =  Math.round(q2); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java add 306 suspicious value: 0.7071067811865475 
 -   throw    new    FractionConversionException(p0,    q1,    q2);    
 +  p0  =  p1;  p2  =  p0;  q2  =  q1; 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java replace 215 suspicious value: 0.5 
 -   p2    =(int)FastMath.floor(r1);    p1    =(int)FastMath.floor(r1);    
 + p2  =(int)FastMath.floor(r1);  q2  =(int)FastMath.abs(q2); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java replace 306 suspicious value: 0.7071067811865475 
 -   throw    new    FractionConversionException(p0,    q1,    q2);    
 +  p0  =  p1;  p2  =  q1; 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java add 215 suspicious value: 0.5 
 -   p2    =    Math.round(p1);    q2    =    Math.round(q2);    
 + p2  =  Math.round(p0);  q2  =  Math.round(q1); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java replace 306 suspicious value: 0.7071067811865475 
 -   throw    new    FractionConversionException(p0,    q1,    q2);    
 +  p0  =  p1;  p2  =  q1; 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java add 215 suspicious value: 0.5 
 -   p2    =    Math.round(p2);    q2    =    Math.round(q2);    
 + p2  =  Math.round(p1);  q2  =  Math.round(q1); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java replace 306 suspicious value: 0.7071067811865475 
 -   throw    new    FractionConversionException(p0,    q1,    q2);    
 +  p0  =  p1;  p2  =  q1; 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java add 215 suspicious value: 0.5 
 -   p2    =    Math.round(a1);    q2    =    Math.round(q2);    a1    =    Math.round(a1);    q2    =    Math.round(q2);    
 + p2  =  Math.round(a1);  q2  =  Math.round(q1);  a1  =  Math.round(a1);  q2  =  Math.round(q2); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java replace 306 suspicious value: 0.7071067811865475 
 -   throw    new    FractionConversionException(p0,    q1,    q2);    
 +  p0  =  p1;  p2  =  q1; 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java add 215 suspicious value: 0.5 
 -   p2    =    Math.round(a1);    q2    =    Math.round(q2);    a1    =    Math.round(a1);    q2    =    Math.round(q2);    
 + p2  =  Math.round(a1);  q2  =  Math.round(q0);  a1  =  Math.round(a1);  q2  =  Math.round(q2); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java replace 306 suspicious value: 0.7071067811865475 
 -   throw    new    FractionConversionException(p0,    q1,    q2);    
 +  p0  =  p1;  p2  =  q1; 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java replace 215 suspicious value: 0.5 
 -   p2    =(int)FastMath.floor(r1);    p1    =(int)FastMath.floor(r1);    
 + p2  =(int)FastMath.floor(r1);  q2  =(int)FastMath.abs(q2); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java replace 306 suspicious value: 0.7071067811865475 
 -   p0    =    p1,    q1;    p2    =    p2;    
 +  p0  =  p1;  p2  =  q2; 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java add 215 suspicious value: 0.5 
 -   p2    =    Math.round(p1);    q2    =    Math.round(q2);    
 + p2  =  Math.round(p0);  q2  =  Math.round(q1); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java replace 306 suspicious value: 0.7071067811865475 
 -   p0    =    p1,    q1;    p2    =    p2;    
 +  p0  =  p1;  p2  =  q2; 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java add 215 suspicious value: 0.5 
 -   p2    =    Math.round(p2);    q2    =    Math.round(q2);    
 + p2  =  Math.round(p1);  q2  =  Math.round(q1); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java replace 306 suspicious value: 0.7071067811865475 
 -   p0    =    p1,    q1;    p2    =    p2;    
 +  p0  =  p1;  p2  =  q2; 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java add 215 suspicious value: 0.5 
 -   p2    =    Math.round(a1);    q2    =    Math.round(q2);    a1    =    Math.round(a1);    q2    =    Math.round(q2);    
 + p2  =  Math.round(a1);  q2  =  Math.round(q1);  a1  =  Math.round(a1);  q2  =  Math.round(q2); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java replace 306 suspicious value: 0.7071067811865475 
 -   p0    =    p1,    q1;    p2    =    p2;    
 +  p0  =  p1;  p2  =  q2; 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java add 215 suspicious value: 0.5 
 -   p2    =    Math.round(a1);    q2    =    Math.round(q2);    a1    =    Math.round(a1);    q2    =    Math.round(q2);    
 + p2  =  Math.round(a1);  q2  =  Math.round(q0);  a1  =  Math.round(a1);  q2  =  Math.round(q2); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java replace 306 suspicious value: 0.7071067811865475 
 -   p0    =    p1,    q1;    p2    =    p2;    
 +  p0  =  p1;  p2  =  q2; 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java replace 215 suspicious value: 0.5 
 -   p2    =(int)FastMath.floor(r1);    p1    =(int)FastMath.floor(r1);    
 + p2  =(int)FastMath.floor(r1);  q2  =(int)FastMath.abs(q2); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java add 306 suspicious value: 0.7071067811865475 
 -   p2    =    Math.round(a1);    q2    =    Math.round(q2);    
 +  p2  =  Math.round(r1);  q2  =  Math.round(q2); 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java add 215 suspicious value: 0.5 
 -   p2    =    Math.round(p1);    q2    =    Math.round(q2);    
 + p2  =  Math.round(p0);  q2  =  Math.round(q1); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java add 306 suspicious value: 0.7071067811865475 
 -   p2    =    Math.round(a1);    q2    =    Math.round(q2);    
 +  p2  =  Math.round(r1);  q2  =  Math.round(q2); 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java add 215 suspicious value: 0.5 
 -   p2    =    Math.round(p2);    q2    =    Math.round(q2);    
 + p2  =  Math.round(p1);  q2  =  Math.round(q1); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java add 306 suspicious value: 0.7071067811865475 
 -   p2    =    Math.round(a1);    q2    =    Math.round(q2);    
 +  p2  =  Math.round(r1);  q2  =  Math.round(q2); 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java add 215 suspicious value: 0.5 
 -   p2    =    Math.round(a1);    q2    =    Math.round(q2);    a1    =    Math.round(a1);    q2    =    Math.round(q2);    
 + p2  =  Math.round(a1);  q2  =  Math.round(q1);  a1  =  Math.round(a1);  q2  =  Math.round(q2); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java add 306 suspicious value: 0.7071067811865475 
 -   p2    =    Math.round(a1);    q2    =    Math.round(q2);    
 +  p2  =  Math.round(r1);  q2  =  Math.round(q2); 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java add 215 suspicious value: 0.5 
 -   p2    =    Math.round(a1);    q2    =    Math.round(q2);    a1    =    Math.round(a1);    q2    =    Math.round(q2);    
 + p2  =  Math.round(a1);  q2  =  Math.round(q0);  a1  =  Math.round(a1);  q2  =  Math.round(q2); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java add 306 suspicious value: 0.7071067811865475 
 -   p2    =    Math.round(a1);    q2    =    Math.round(q2);    
 +  p2  =  Math.round(r1);  q2  =  Math.round(q2); 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java replace 215 suspicious value: 0.5 
 -   p2    =(int)FastMath.floor(r1);    p1    =(int)FastMath.floor(r1);    
 + p2  =(int)FastMath.floor(r1);  q2  =(int)FastMath.abs(q2); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java add 306 suspicious value: 0.7071067811865475 
 -   throw    new    FractionConversionException(0.0,    p2,    q1);    
 +  if(p1  <  0.0)  {  throw  new  FractionConversionException(1.0,  p2,  q2);  } 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java add 215 suspicious value: 0.5 
 -   p2    =    Math.round(p1);    q2    =    Math.round(q2);    
 + p2  =  Math.round(p0);  q2  =  Math.round(q1); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java add 306 suspicious value: 0.7071067811865475 
 -   throw    new    FractionConversionException(0.0,    p2,    q1);    
 +  if(p1  <  0.0)  {  throw  new  FractionConversionException(1.0,  p2,  q2);  } 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java add 215 suspicious value: 0.5 
 -   p2    =    Math.round(p2);    q2    =    Math.round(q2);    
 + p2  =  Math.round(p1);  q2  =  Math.round(q1); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java add 306 suspicious value: 0.7071067811865475 
 -   throw    new    FractionConversionException(0.0,    p2,    q1);    
 +  if(p1  <  0.0)  {  throw  new  FractionConversionException(1.0,  p2,  q2);  } 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java add 215 suspicious value: 0.5 
 -   p2    =    Math.round(a1);    q2    =    Math.round(q2);    a1    =    Math.round(a1);    q2    =    Math.round(q2);    
 + p2  =  Math.round(a1);  q2  =  Math.round(q1);  a1  =  Math.round(a1);  q2  =  Math.round(q2); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java add 306 suspicious value: 0.7071067811865475 
 -   throw    new    FractionConversionException(0.0,    p2,    q1);    
 +  if(p1  <  0.0)  {  throw  new  FractionConversionException(1.0,  p2,  q2);  } 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java add 215 suspicious value: 0.5 
 -   p2    =    Math.round(a1);    q2    =    Math.round(q2);    a1    =    Math.round(a1);    q2    =    Math.round(q2);    
 + p2  =  Math.round(a1);  q2  =  Math.round(q0);  a1  =  Math.round(a1);  q2  =  Math.round(q2); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java add 306 suspicious value: 0.7071067811865475 
 -   throw    new    FractionConversionException(0.0,    p2,    q1);    
 +  if(p1  <  0.0)  {  throw  new  FractionConversionException(1.0,  p2,  q2);  } 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java replace 215 suspicious value: 0.5 
 -   p2    =(int)FastMath.floor(r1);    p1    =(int)FastMath.floor(r1);    
 + p2  =(int)FastMath.floor(r1);  q2  =(int)FastMath.abs(q2); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java add 306 suspicious value: 0.7071067811865475 
 -   p2    =    Math.round(q0);    q2    =    Math.round(q2);    
 +  p2  =  Math.round(p0);  q2  =  Math.round(q1); 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java add 215 suspicious value: 0.5 
 -   p2    =    Math.round(p1);    q2    =    Math.round(q2);    
 + p2  =  Math.round(p0);  q2  =  Math.round(q1); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java add 306 suspicious value: 0.7071067811865475 
 -   p2    =    Math.round(q0);    q2    =    Math.round(q2);    
 +  p2  =  Math.round(p0);  q2  =  Math.round(q1); 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java add 215 suspicious value: 0.5 
 -   p2    =    Math.round(p2);    q2    =    Math.round(q2);    
 + p2  =  Math.round(p1);  q2  =  Math.round(q1); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java add 306 suspicious value: 0.7071067811865475 
 -   p2    =    Math.round(q0);    q2    =    Math.round(q2);    
 +  p2  =  Math.round(p0);  q2  =  Math.round(q1); 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java add 215 suspicious value: 0.5 
 -   p2    =    Math.round(a1);    q2    =    Math.round(q2);    a1    =    Math.round(a1);    q2    =    Math.round(q2);    
 + p2  =  Math.round(a1);  q2  =  Math.round(q1);  a1  =  Math.round(a1);  q2  =  Math.round(q2); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java add 306 suspicious value: 0.7071067811865475 
 -   p2    =    Math.round(q0);    q2    =    Math.round(q2);    
 +  p2  =  Math.round(p0);  q2  =  Math.round(q1); 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java add 215 suspicious value: 0.5 
 -   p2    =    Math.round(a1);    q2    =    Math.round(q2);    a1    =    Math.round(a1);    q2    =    Math.round(q2);    
 + p2  =  Math.round(a1);  q2  =  Math.round(q0);  a1  =  Math.round(a1);  q2  =  Math.round(q2); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java add 306 suspicious value: 0.7071067811865475 
 -   p2    =    Math.round(q0);    q2    =    Math.round(q2);    
 +  p2  =  Math.round(p0);  q2  =  Math.round(q1); 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java replace 215 suspicious value: 0.5 
 -   p2    =(int)FastMath.floor(r1);    p1    =(int)FastMath.floor(r1);    
 + p2  =(int)FastMath.floor(r1);  q2  =(int)FastMath.abs(q2); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java add 306 suspicious value: 0.7071067811865475 
 -   p0    =    p1;    
 +  p0  =  p2; 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java add 215 suspicious value: 0.5 
 -   p2    =    Math.round(p1);    q2    =    Math.round(q2);    
 + p2  =  Math.round(p0);  q2  =  Math.round(q1); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java add 306 suspicious value: 0.7071067811865475 
 -   p0    =    p1;    
 +  p0  =  p2; 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java add 215 suspicious value: 0.5 
 -   p2    =    Math.round(p2);    q2    =    Math.round(q2);    
 + p2  =  Math.round(p1);  q2  =  Math.round(q1); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java add 306 suspicious value: 0.7071067811865475 
 -   p0    =    p1;    
 +  p0  =  p2; 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java add 215 suspicious value: 0.5 
 -   p2    =    Math.round(a1);    q2    =    Math.round(q2);    a1    =    Math.round(a1);    q2    =    Math.round(q2);    
 + p2  =  Math.round(a1);  q2  =  Math.round(q1);  a1  =  Math.round(a1);  q2  =  Math.round(q2); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java add 306 suspicious value: 0.7071067811865475 
 -   p0    =    p1;    
 +  p0  =  p2; 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java add 215 suspicious value: 0.5 
 -   p2    =    Math.round(a1);    q2    =    Math.round(q2);    a1    =    Math.round(a1);    q2    =    Math.round(q2);    
 + p2  =  Math.round(a1);  q2  =  Math.round(q0);  a1  =  Math.round(a1);  q2  =  Math.round(q2); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java add 306 suspicious value: 0.7071067811865475 
 -   p0    =    p1;    
 +  p0  =  p2; 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java replace 215 suspicious value: 0.5 
 -   p2    =(int)FastMath.floor(r1);    p1    =(int)FastMath.floor(r1);    
 + p2  =(int)FastMath.floor(r1);  q2  =(int)FastMath.abs(q2); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java replace 306 suspicious value: 0.7071067811865475 
 -   p0    =    p1;    
 +  p0  =  q1; 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java add 215 suspicious value: 0.5 
 -   p2    =    Math.round(p1);    q2    =    Math.round(q2);    
 + p2  =  Math.round(p0);  q2  =  Math.round(q1); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java replace 306 suspicious value: 0.7071067811865475 
 -   p0    =    p1;    
 +  p0  =  q1; 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java add 215 suspicious value: 0.5 
 -   p2    =    Math.round(p2);    q2    =    Math.round(q2);    
 + p2  =  Math.round(p1);  q2  =  Math.round(q1); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java replace 306 suspicious value: 0.7071067811865475 
 -   p0    =    p1;    
 +  p0  =  q1; 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java add 215 suspicious value: 0.5 
 -   p2    =    Math.round(a1);    q2    =    Math.round(q2);    a1    =    Math.round(a1);    q2    =    Math.round(q2);    
 + p2  =  Math.round(a1);  q2  =  Math.round(q1);  a1  =  Math.round(a1);  q2  =  Math.round(q2); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java replace 306 suspicious value: 0.7071067811865475 
 -   p0    =    p1;    
 +  p0  =  q1; 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java add 215 suspicious value: 0.5 
 -   p2    =    Math.round(a1);    q2    =    Math.round(q2);    a1    =    Math.round(a1);    q2    =    Math.round(q2);    
 + p2  =  Math.round(a1);  q2  =  Math.round(q0);  a1  =  Math.round(a1);  q2  =  Math.round(q2); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java replace 306 suspicious value: 0.7071067811865475 
 -   p0    =    p1;    
 +  p0  =  q1; 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java replace 215 suspicious value: 0.5 
 -   p2    =(int)FastMath.floor(r1);    p1    =(int)FastMath.floor(r1);    
 + p2  =(int)FastMath.floor(r1);  q2  =(int)FastMath.abs(q2); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java add 306 suspicious value: 0.7071067811865475 
 -   p0    =    p1;    
 +  p0  =  q2; 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java add 215 suspicious value: 0.5 
 -   p2    =    Math.round(p1);    q2    =    Math.round(q2);    
 + p2  =  Math.round(p0);  q2  =  Math.round(q1); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java add 306 suspicious value: 0.7071067811865475 
 -   p0    =    p1;    
 +  p0  =  q2; 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java add 215 suspicious value: 0.5 
 -   p2    =    Math.round(p2);    q2    =    Math.round(q2);    
 + p2  =  Math.round(p1);  q2  =  Math.round(q1); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java add 306 suspicious value: 0.7071067811865475 
 -   p0    =    p1;    
 +  p0  =  q2; 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java add 215 suspicious value: 0.5 
 -   p2    =    Math.round(a1);    q2    =    Math.round(q2);    a1    =    Math.round(a1);    q2    =    Math.round(q2);    
 + p2  =  Math.round(a1);  q2  =  Math.round(q1);  a1  =  Math.round(a1);  q2  =  Math.round(q2); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java add 306 suspicious value: 0.7071067811865475 
 -   p0    =    p1;    
 +  p0  =  q2; 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java add 215 suspicious value: 0.5 
 -   p2    =    Math.round(a1);    q2    =    Math.round(q2);    a1    =    Math.round(a1);    q2    =    Math.round(q2);    
 + p2  =  Math.round(a1);  q2  =  Math.round(q0);  a1  =  Math.round(a1);  q2  =  Math.round(q2); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java add 306 suspicious value: 0.7071067811865475 
 -   p0    =    p1;    
 +  p0  =  q2; 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java replace 215 suspicious value: 0.5 
 -   p2    =(int)FastMath.floor(r1);    p1    =(int)FastMath.floor(r1);    
 + p2  =(int)FastMath.floor(r1);  q2  =(int)FastMath.abs(q2); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java replace 306 suspicious value: 0.7071067811865475 
 -   p0    =    p1;    p2    =    q1;    
 +  p0  =  p2;  p2  =  q1; 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java add 215 suspicious value: 0.5 
 -   p2    =    Math.round(p1);    q2    =    Math.round(q2);    
 + p2  =  Math.round(p0);  q2  =  Math.round(q1); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java replace 306 suspicious value: 0.7071067811865475 
 -   p0    =    p1;    p2    =    q1;    
 +  p0  =  p2;  p2  =  q1; 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java add 215 suspicious value: 0.5 
 -   p2    =    Math.round(p2);    q2    =    Math.round(q2);    
 + p2  =  Math.round(p1);  q2  =  Math.round(q1); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java replace 306 suspicious value: 0.7071067811865475 
 -   p0    =    p1;    p2    =    q1;    
 +  p0  =  p2;  p2  =  q1; 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java add 215 suspicious value: 0.5 
 -   p2    =    Math.round(a1);    q2    =    Math.round(q2);    a1    =    Math.round(a1);    q2    =    Math.round(q2);    
 + p2  =  Math.round(a1);  q2  =  Math.round(q1);  a1  =  Math.round(a1);  q2  =  Math.round(q2); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java replace 306 suspicious value: 0.7071067811865475 
 -   p0    =    p1;    p2    =    q1;    
 +  p0  =  p2;  p2  =  q1; 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java add 215 suspicious value: 0.5 
 -   p2    =    Math.round(a1);    q2    =    Math.round(q2);    a1    =    Math.round(a1);    q2    =    Math.round(q2);    
 + p2  =  Math.round(a1);  q2  =  Math.round(q0);  a1  =  Math.round(a1);  q2  =  Math.round(q2); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java replace 306 suspicious value: 0.7071067811865475 
 -   p0    =    p1;    p2    =    q1;    
 +  p0  =  p2;  p2  =  q1; 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java replace 215 suspicious value: 0.5 
 -   p2    =(int)FastMath.floor(r1);    p1    =(int)FastMath.floor(r1);    
 + p2  =(int)FastMath.floor(r1);  q2  =(int)FastMath.abs(q2); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java replace 306 suspicious value: 0.7071067811865475 
 -   if(p1    <    0.0)    {    throw    new    FractionConversionException(1.0,    p2,    q2);    }    
 +  if(p1  <=  0.0)  {  throw  new  FractionConversionException(1.0,  p2,  q2);  } 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java add 215 suspicious value: 0.5 
 -   p2    =    Math.round(p1);    q2    =    Math.round(q2);    
 + p2  =  Math.round(p0);  q2  =  Math.round(q1); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java replace 306 suspicious value: 0.7071067811865475 
 -   if(p1    <    0.0)    {    throw    new    FractionConversionException(1.0,    p2,    q2);    }    
 +  if(p1  <=  0.0)  {  throw  new  FractionConversionException(1.0,  p2,  q2);  } 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java add 215 suspicious value: 0.5 
 -   p2    =    Math.round(p2);    q2    =    Math.round(q2);    
 + p2  =  Math.round(p1);  q2  =  Math.round(q1); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java replace 306 suspicious value: 0.7071067811865475 
 -   if(p1    <    0.0)    {    throw    new    FractionConversionException(1.0,    p2,    q2);    }    
 +  if(p1  <=  0.0)  {  throw  new  FractionConversionException(1.0,  p2,  q2);  } 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java add 215 suspicious value: 0.5 
 -   p2    =    Math.round(a1);    q2    =    Math.round(q2);    a1    =    Math.round(a1);    q2    =    Math.round(q2);    
 + p2  =  Math.round(a1);  q2  =  Math.round(q1);  a1  =  Math.round(a1);  q2  =  Math.round(q2); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java replace 306 suspicious value: 0.7071067811865475 
 -   if(p1    <    0.0)    {    throw    new    FractionConversionException(1.0,    p2,    q2);    }    
 +  if(p1  <=  0.0)  {  throw  new  FractionConversionException(1.0,  p2,  q2);  } 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java add 215 suspicious value: 0.5 
 -   p2    =    Math.round(a1);    q2    =    Math.round(q2);    a1    =    Math.round(a1);    q2    =    Math.round(q2);    
 + p2  =  Math.round(a1);  q2  =  Math.round(q0);  a1  =  Math.round(a1);  q2  =  Math.round(q2); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java replace 306 suspicious value: 0.7071067811865475 
 -   if(p1    <    0.0)    {    throw    new    FractionConversionException(1.0,    p2,    q2);    }    
 +  if(p1  <=  0.0)  {  throw  new  FractionConversionException(1.0,  p2,  q2);  } 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java replace 215 suspicious value: 0.5 
 -   p2    =(int)FastMath.floor(r1);    p1    =(int)FastMath.floor(r1);    
 + p2  =(int)FastMath.floor(r1);  q2  =(int)FastMath.abs(q2); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java add 306 suspicious value: 0.7071067811865475 
 -   if(p1    <    0.0)    {    throw    new    FractionConversionException(1.0,    p2,    q2);    }    
 +  if(p2  <  0.0)  {  throw  new  FractionConversionException(1.0,  p2,  q2);  } 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java add 215 suspicious value: 0.5 
 -   p2    =    Math.round(p1);    q2    =    Math.round(q2);    
 + p2  =  Math.round(p0);  q2  =  Math.round(q1); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java add 306 suspicious value: 0.7071067811865475 
 -   if(p1    <    0.0)    {    throw    new    FractionConversionException(1.0,    p2,    q2);    }    
 +  if(p2  <  0.0)  {  throw  new  FractionConversionException(1.0,  p2,  q2);  } 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java add 215 suspicious value: 0.5 
 -   p2    =    Math.round(p2);    q2    =    Math.round(q2);    
 + p2  =  Math.round(p1);  q2  =  Math.round(q1); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java add 306 suspicious value: 0.7071067811865475 
 -   if(p1    <    0.0)    {    throw    new    FractionConversionException(1.0,    p2,    q2);    }    
 +  if(p2  <  0.0)  {  throw  new  FractionConversionException(1.0,  p2,  q2);  } 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java add 215 suspicious value: 0.5 
 -   p2    =    Math.round(a1);    q2    =    Math.round(q2);    a1    =    Math.round(a1);    q2    =    Math.round(q2);    
 + p2  =  Math.round(a1);  q2  =  Math.round(q1);  a1  =  Math.round(a1);  q2  =  Math.round(q2); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java add 306 suspicious value: 0.7071067811865475 
 -   if(p1    <    0.0)    {    throw    new    FractionConversionException(1.0,    p2,    q2);    }    
 +  if(p2  <  0.0)  {  throw  new  FractionConversionException(1.0,  p2,  q2);  } 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java add 215 suspicious value: 0.5 
 -   p2    =    Math.round(a1);    q2    =    Math.round(q2);    a1    =    Math.round(a1);    q2    =    Math.round(q2);    
 + p2  =  Math.round(a1);  q2  =  Math.round(q0);  a1  =  Math.round(a1);  q2  =  Math.round(q2); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java add 306 suspicious value: 0.7071067811865475 
 -   if(p1    <    0.0)    {    throw    new    FractionConversionException(1.0,    p2,    q2);    }    
 +  if(p2  <  0.0)  {  throw  new  FractionConversionException(1.0,  p2,  q2);  } 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java replace 215 suspicious value: 0.5 
 -   p2    =(int)FastMath.floor(r1);    p1    =(int)FastMath.floor(r1);    
 + p2  =(int)FastMath.floor(r1);  q2  =(int)FastMath.abs(q2); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java replace 306 suspicious value: 0.7071067811865475 
 -   if(n    <    maxIterations)    {    throw    new    FractionConversionException(n,    p2,    overflow);    }    
 +  if(n  >=  maxIterations)  {  throw  new  FractionConversionException(n,  p2,  overflow);  } 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java add 215 suspicious value: 0.5 
 -   p2    =    Math.round(p1);    q2    =    Math.round(q2);    
 + p2  =  Math.round(p0);  q2  =  Math.round(q1); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java replace 306 suspicious value: 0.7071067811865475 
 -   if(n    <    maxIterations)    {    throw    new    FractionConversionException(n,    p2,    overflow);    }    
 +  if(n  >=  maxIterations)  {  throw  new  FractionConversionException(n,  p2,  overflow);  } 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java add 215 suspicious value: 0.5 
 -   p2    =    Math.round(p2);    q2    =    Math.round(q2);    
 + p2  =  Math.round(p1);  q2  =  Math.round(q1); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java replace 306 suspicious value: 0.7071067811865475 
 -   if(n    <    maxIterations)    {    throw    new    FractionConversionException(n,    p2,    overflow);    }    
 +  if(n  >=  maxIterations)  {  throw  new  FractionConversionException(n,  p2,  overflow);  } 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java add 215 suspicious value: 0.5 
 -   p2    =    Math.round(a1);    q2    =    Math.round(q2);    a1    =    Math.round(a1);    q2    =    Math.round(q2);    
 + p2  =  Math.round(a1);  q2  =  Math.round(q1);  a1  =  Math.round(a1);  q2  =  Math.round(q2); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java replace 306 suspicious value: 0.7071067811865475 
 -   if(n    <    maxIterations)    {    throw    new    FractionConversionException(n,    p2,    overflow);    }    
 +  if(n  >=  maxIterations)  {  throw  new  FractionConversionException(n,  p2,  overflow);  } 

--------------------------------------------------
projects/Math1/src/main/java/org/apache/commons/math3/fraction/Fraction.java add 215 suspicious value: 0.5 
 -   p2    =    Math.round(a1);    q2    =    Math.round(q2);    a1    =    Math.round(a1);    q2    =    Math.round(q2);    
 + p2  =  Math.round(a1);  q2  =  Math.round(q0);  a1  =  Math.round(a1);  q2  =  Math.round(q2); 
projects/Math1/src/main/java/org/apache/commons/math3/fraction/BigFraction.java replace 306 suspicious value: 0.7071067811865475 
 -   if(n    <    maxIterations)    {    throw    new    FractionConversionException(n,    p2,    overflow);    }    
 +  if(n  >=  maxIterations)  {  throw  new  FractionConversionException(n,  p2,  overflow);  } 

--------------------------------------------------
projects/Math22/src/main/java/org/apache/commons/math3/distribution/FDistribution.java replace 275 suspicious value: 0.7071067811865475 
 - return  true;  
 + return  false; 
projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java replace 184 suspicious value: 0.7071067811865475 
 - return  false;  
 +  return  true; 

--------------------------------------------------
repair_iteration/Cli38/iteration_0/plausible.csv replace 340 suspicious value: 0.7071067811865475 
 - return  false;  
 + return  true; 
 --------------------------------------------------
repair_iteration/Cli38/iteration_0/plausible.csv replace 329 suspicious value: 0.7071067811865475 
 - if  (!options.getMatchingOptions(t).isEmpty())  {  
 + if(options.getMatchingOptions(t).isEmpty())  { 
 --------------------------------------------------
repair_iteration/Chart11/iteration_0/plausible.csv replace 274 suspicious value: 0.7071067811865475 
 - PathIterator  iterator1  =  p1.getPathIterator(null);  
 + PathIterator  iterator1  =  p2.getPathIterator(null); 
 --------------------------------------------------
repair_iteration/Chart11/iteration_0/plausible.csv replace 275 suspicious value: 0.7071067811865475 
 - PathIterator  iterator2  =  p1.getPathIterator(null);  
 + PathIterator  iterator2  =  p2.getPathIterator(null); 
 --------------------------------------------------
repair_iteration/Cli1/iteration_4/patches.csv
None
repair_iteration/Cli1/iteration_4/patches.csv
None
repair_iteration/Math18/iteration_0/plausible.csv replace 246 suspicious value: 0.5773502691896258 
 - this(0);  
 +    
 --------------------------------------------------
repair_iteration/Lang6/iteration_0/plausible.csv replace 95 suspicious value: 1.0 
 - pos  +=  Character.charCount(Character.codePointAt(input,  pos));  
 + pos  +=  Character.charCount(Character.codePointAt(input,  pt)); 
 --------------------------------------------------
repair_iteration/Lang6/iteration_1/patches.csv
iteration_0 replace 94 suspicious value: 1.0 
 - for (int pt = 0; pt < consumed; pt++) { 
 + for(int pt = 0; pt < len; pt++) { 
replace 94 suspicious value: 1.0 
 -  for(int  pt  =  0;  pt  <  len;  pt++)  {  
 + for(int pt = 1; pt < len; pt++) { 
 --------------------------------------------------
repair_iteration/Chart7/iteration_1/patches.csv
iteration_0 replace 288 suspicious value: 0.31622776601683794 
 - long e = getDataItem(this.minMiddleIndex).getPeriod().getEnd() .getTime(); 
 + long e = getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime(); 
replace 288 suspicious value: 0.31622776601683794 
 -  long  e  =  getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();  
 + long e = getDataItem(this.maxMiddleIndex).getPeriod().getEnd().getTime(); 
 --------------------------------------------------
repair_iteration/Cli7/iteration_2/patches.csv
None
repair_iteration/Math3/iteration_0/plausible.csv replace 823 suspicious value: 0.5 
 - final  double[]  prodHigh  =  new  double[len];  
 + final  double[]  prodHigh  =  new  double[len  +  1]; 
 --------------------------------------------------
repair_iteration/Cli35/iteration_0/plausible.csv add 245 suspicious value: 0.22941573387056174 
 - 
 +     matchingOpts.remove(opt); 
 --------------------------------------------------
repair_iteration/Math12/iteration_0/plausible.csv replace 108 suspicious value: 0.7071067811865476 
 - nextGaussian  =  r  *  FastMath.sin(alpha);  
 +    
 --------------------------------------------------
repair_iteration/Math5/iteration_0/plausible.csv replace 305 suspicious value: 1.0 
 - return  NaN;  
 + return  INF; 
 --------------------------------------------------
repair_iteration/Cli2/iteration_0/plausible.csv replace 51 suspicious value: 1.0 
 - eatTheRest  =  false;  
 + eatTheRest  =  true; 
 --------------------------------------------------
repair_iteration/Math50/iteration_0/plausible.csv replace 189 suspicious value: 1.0 
 - f0  =  computeObjectiveValue(x0);  
 + f0  =  computeObjectiveValue(x1); 
 --------------------------------------------------
repair_iteration/Math50/iteration_0/plausible.csv replace 188 suspicious value: 1.0 
 - x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  
 + x0  =  0.5  *(x1  +  x1  -  FastMath.max(atol  *  FastMath.abs(x1),  atol)); 
 --------------------------------------------------
repair_iteration/Chart13/iteration_0/plausible.csv replace 450 suspicious value: 1.0 
 - w[2]  =  size.width;  
 + w[3]  =  size.width; 
 --------------------------------------------------
repair_iteration/Cli27/iteration_0/plausible.csv replace 100 suspicious value: 0.7071067811865476 
 - selected  =  option.getOpt();  
 + selected  =  option.getKey(); 
 --------------------------------------------------
repair_iteration/Math28/iteration_0/plausible.csv replace 145 suspicious value: 0.5 
 - minIndex  =  i;  
 + minIndex  =  i  -  1; 
 --------------------------------------------------
repair_iteration/Math28/iteration_0/plausible.csv replace 145 suspicious value: 0.5 
 - minIndex  =  i;  
 + minIndex  -=  i; 
 --------------------------------------------------
repair_iteration/Math28/iteration_0/plausible.csv replace 145 suspicious value: 0.5 
 - minIndex  =  i;  
 + minIndex  =  0; 
 --------------------------------------------------
repair_iteration/Math28/iteration_0/plausible.csv replace 144 suspicious value: 0.5 
 - if  (i  <  minIndex)  {  
 + if(i  +  1  <  minIndex)  { 
 --------------------------------------------------
repair_iteration/Math28/iteration_0/plausible.csv replace 143 suspicious value: 0.5 
 - if  (row  ==  tableau.getBasicRow(i))  {  
 + if(i!=  row)  { 
 --------------------------------------------------
repair_iteration/Math28/iteration_0/plausible.csv replace 145 suspicious value: 0.5 
 - minIndex  =  i;  
 + minIndex  =  i  -  2; 
 --------------------------------------------------
repair_iteration/Math28/iteration_0/plausible.csv replace 143 suspicious value: 0.5 
 - if  (row  ==  tableau.getBasicRow(i))  {  
 + if(i  ==  tableau.getNumObjectiveFunctions())  { 
 --------------------------------------------------
repair_iteration/Math28/iteration_0/plausible.csv replace 144 suspicious value: 0.5 
 - if  (i  <  minIndex)  {  
 + if(i  >  0)  { 
 --------------------------------------------------
repair_iteration/Math28/iteration_0/plausible.csv replace 138 suspicious value: 0.5 
 - Integer  minRow  =  null;  
 + Integer  minRow  =  col; 
 --------------------------------------------------
repair_iteration/Cli32/iteration_0/plausible.csv replace 938 suspicious value: 1.0 
 - &&  (c  !=  '\n')  &&  (c  !=  '\r'))  {  
 + &&(c  ==  'n')&&(c!=  'r'))  { 
 --------------------------------------------------
repair_iteration/Cli32/iteration_0/plausible.csv replace 938 suspicious value: 1.0 
 - &&  (c  !=  '\n')  &&  (c  !=  '\r'))  {  
 + &&(c  ==  'n'  ||  c  ==  'r'))  { 
 --------------------------------------------------
repair_iteration/Cli32/iteration_0/plausible.csv replace 938 suspicious value: 1.0 
 - &&  (c  !=  '\n')  &&  (c  !=  '\r'))  {  
 + &&(c  ==  'n')&&(c  ==  'r'))  { 
 --------------------------------------------------
repair_iteration/Cli32/iteration_0/plausible.csv replace 938 suspicious value: 1.0 
 - &&  (c  !=  '\n')  &&  (c  !=  '\r'))  {  
 + &&(c  ==  'n'  ||  c  ==  'r')&&(c  ==  'n'  ||  c  ==  't'))  { 
 --------------------------------------------------
repair_iteration/Chart20/iteration_0/plausible.csv replace 95 suspicious value: 1.0 
 - super(paint,  stroke,  paint,  stroke,  alpha);  
 + super(paint,  stroke,  outlinePaint,  outlineStroke,  alpha); 
 --------------------------------------------------
repair_iteration/Cli37/iteration_0/plausible.csv replace 573 suspicious value: 1.0 
 - String  opt  =  null;  
 + String  opt  =  token; 
 --------------------------------------------------
repair_iteration/Cli37/iteration_0/plausible.csv replace 573 suspicious value: 1.0 
 - String  opt  =  null;  
 + String  opt  =  t; 
 --------------------------------------------------
repair_iteration/Cli37/iteration_0/plausible.csv replace 577 suspicious value: 1.0 
 - if  (options.hasLongOption(prefix))  {  
 + if(!options.hasLongOption(prefix))  { 
 --------------------------------------------------
repair_iteration/Cli37/iteration_0/plausible.csv add 576 suspicious value: 1.0 
 - 
 +     opt  =  t.substring(i  +  1); 
 --------------------------------------------------
repair_iteration/Cli37/iteration_0/plausible.csv replace 333 suspicious value: 1.0 
 - return  false;  
 + return  true; 
 --------------------------------------------------
repair_iteration/Cli37/iteration_0/plausible.csv replace 333 suspicious value: 1.0 
 - return  false;  
 + return  currentOption!=  null  &&  currentOption.hasArg()  &&  currentOption.hasArg(); 
 --------------------------------------------------
repair_iteration/Cli37/iteration_0/plausible.csv replace 577 suspicious value: 1.0 
 - if  (options.hasLongOption(prefix))  {  
 + if(prefix!=  null)  { 
 --------------------------------------------------
repair_iteration/Cli37/iteration_0/plausible.csv add 576 suspicious value: 1.0 
 - 
 +     opt  =  t.substring(i  +  1,  t.length()); 
 --------------------------------------------------
repair_iteration/Cli37/iteration_0/plausible.csv add 576 suspicious value: 1.0 
 - 
 +     opt  =  Util.stripLeadingHyphens(t.substring(i  +  1)); 
 --------------------------------------------------
repair_iteration/Cli37/iteration_0/plausible.csv add 576 suspicious value: 1.0 
 - 
 +     opt  =  Util.stripLeadingHyphens(token); 
 --------------------------------------------------
repair_iteration/Chart12/iteration_0/plausible.csv add 146 suspicious value: 0.5 
 - 
 + setDataset(dataset); 
 --------------------------------------------------
repair_iteration/Chart12/iteration_0/plausible.csv add 145 suspicious value: 0.5 
 - 
 + setDataset(dataset); 
 --------------------------------------------------
repair_iteration/Chart1/iteration_0/plausible.csv replace 1797 suspicious value: 1.0 
 - if  (dataset  !=  null)  {  
 + if(dataset  ==  null)  { 
 --------------------------------------------------
repair_iteration/Chart1/iteration_0/plausible.csv replace 1798 suspicious value: 1.0 
 - return  result;  
 +    
 --------------------------------------------------
repair_iteration/Chart1/iteration_4/patches.csv
None
repair_iteration/Time2/iteration_0/plausible.csv replace 224 suspicious value: 1.0 
 - throw  new  IllegalArgumentException( "Types  array  must  not  contain  duplicate:   "  +      types[i  -  1].getName()  +   "  and   "  +  loopType.getName());  
 +    
 --------------------------------------------------
repair_iteration/Time2/iteration_2/patches.csv
None
repair_iteration/Time2/iteration_1/patches.csv
iteration_0 replace 156 suspicious value: 0.2886751345948129 
 - 
 +   chronology = DateTimeUtils.getChronology(chronology).withUTC(); 
iteration_0 add 224 suspicious value: 1.0 
 - 
 +   if(loopType.getRangeDurationType().getField(iChronology)!= null) { throw new IllegalArgumentException( " "); } 
iteration_0 replace 224 suspicious value: 1.0 
 - 
 +   if(loopType.getRangeDurationType().getField(iChronology) == null) { throw new IllegalArgumentException( " "); } 
replace 224 suspicious value: 1.0 
 -    if(loopType.getRangeDurationType().getField(iChronology)  ==  null)  {  throw  new  IllegalArgumentException(  "  ");  }  
 + chronology = DateTimeUtils.getChronology(chronology).withUTC(); 
 --------------------------------------------------
repair_iteration/Time2/iteration_1/patches.csv
iteration_0 replace 223 suspicious value: 0.4472135954999579 
 - if (loopType.getRangeDurationType() == null) { 
 + if(loopType.getRangeDurationType() == null ||(compare!= 0 && loopUnitField.isSupported() == false)) { 
replace 223 suspicious value: 0.4472135954999579 
 -  if(loopType.getRangeDurationType()  ==  null  ||(compare!=  0  &&  loopUnitField.isSupported()  ==  false))  {  
 + if(compare < 0 ||(compare!= 0 && loopUnitField.isSupported() == false)) { 
 --------------------------------------------------
repair_iteration/Time2/iteration_1/patches.csv
iteration_0 add 223 suspicious value: 0.4472135954999579 
 - if (loopType.getRangeDurationType() == null) { 
 + if(loopType.getRangeDurationType() == null ||(compare!= 0 && loopUnitField.isSupported() == false)) { 
iteration_0 replace 223 suspicious value: 0.4472135954999579 
 - if (loopType.getRangeDurationType() == null) { 
 + if(loopType.getRangeDurationType() == null ||(compare == 0 && loopUnitField.isSupported() == false)) { 
replace 223 suspicious value: 0.4472135954999579 
 -  if(loopType.getRangeDurationType()  ==  null  ||(compare  ==  0  &&  loopUnitField.isSupported()  ==  false))  {  
 + if(compare < 0 && loopUnitField.isSupported() == false) { 
 --------------------------------------------------
repair_iteration/Cli13/iteration_0/plausible.csv replace 146 suspicious value: 1.0 
 - while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  
 + while(arguments.hasNext()  &&(argumentCount  >  1))  { 
 --------------------------------------------------
repair_iteration/Cli13/iteration_0/plausible.csv replace 146 suspicious value: 1.0 
 - while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  
 + while(arguments.hasNext()  &&(argumentCount  >  maximum))  { 
 --------------------------------------------------
repair_iteration/Cli13/iteration_0/plausible.csv replace 146 suspicious value: 1.0 
 - while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  
 + while(arguments.hasNext()  &&(argumentCount  >  2))  { 
 --------------------------------------------------
repair_iteration/Math78/iteration_0/plausible.csv replace 98 suspicious value: 1.0 
 - this.convergence  =  Math.abs(convergence);  
 + this.convergence  =  Math.sqrt(convergence); 
 --------------------------------------------------
repair_iteration/Math75/iteration_0/plausible.csv replace 303 suspicious value: 1.0 
 - return  getCumPct((Comparable<?>)  v);  
 + return  getPct((  Comparable  <?>)v); 
 --------------------------------------------------
repair_iteration/Math95/iteration_0/plausible.csv add 148 suspicious value: 0.5773502691896258 
 - 
 +     ret  =  getNumeratorDegreesOfFreedom(); 
 --------------------------------------------------
repair_iteration/Math95/iteration_0/plausible.csv add 148 suspicious value: 0.5773502691896258 
 - 
 +     ret  =  getNumeratorDegreesOfFreedom()  *  p; 
 --------------------------------------------------
repair_iteration/Math95/iteration_0/plausible.csv add 148 suspicious value: 0.5773502691896258 
 - 
 +     ret  =  getNumeratorDegreesOfFreedom()  *  Math.pow(10,  p); 
 --------------------------------------------------
repair_iteration/Math95/iteration_0/plausible.csv replace 148 suspicious value: 0.5773502691896258 
 - return  ret;  
 + return  p; 
 --------------------------------------------------
Math82 -  FL is ranked in the 31
iteration_2 replace buggy code at line 85 Diagnostic: 
 -  minRatio  =  i;  if(minRatio  <  epsilon)  {  minRatio  =  i;  }  
 + minRatio = ratio; if(minRatio < epsilon) { minRatio = i; } 
 ----------------------------------------------------------------------------------------------------
Math82 -  FL is ranked in the 31
iteration_2 replace buggy code at line 85 Diagnostic: 
 -  minRatio  =  i;  if(minRatio  <  0)  {  minRatio  =  i;  }  
 + minRatio = ratio; if(minRatio < 0) { minRatio = i; } 
 ----------------------------------------------------------------------------------------------------
Math82 -  FL is ranked in the 31
iteration_1 replace buggy code at line 85 Diagnostic: 
 -  minRatio  =  i;  
 + minRatio = rhs; 
 ----------------------------------------------------------------------------------------------------
Math82 -  FL is ranked in the 28
iteration_2 replace buggy code at line 82 Diagnostic: 
 -  if  (MathUtils.compareTo(rhs,  0,  entry)  >=  0)  {  if  (MathUtils.compareTo(rhs,  0,  entry)  >>  0)  {  
 + if(entry >= DEFAULT_EPSILON) { 
 ----------------------------------------------------------------------------------------------------
Math82 -  FL is ranked in the 28
iteration_2 replace buggy code at line 82 Diagnostic: 
 -  if  (MathUtils.compareTo(rhs,  0,  entry)  >=  0)  {  if  (MathUtils.compareTo(rhs,  0,  entry)  >>  0)  {  
 + if(entry >= 0) { 
 ----------------------------------------------------------------------------------------------------
repair_iteration/Math82/28/iteration_0/plausible.csv
Cli23 -  FL is ranked in the 3
iteration_1 replace buggy code at line 88 Diagnostic: 
 -    DefaultDescPad  =  defaultDescPad;  
 + DefaultDescPad = DEFAULT_DEC_PAD; 
 ----------------------------------------------------------------------------------------------------
Cli23 -  FL is ranked in the 3
iteration_1 replace buggy code at line 88 Diagnostic: 
 -  public  int  defaultDescPad  =  0;  
 + public int defaultDescPad = 0L; 
 ----------------------------------------------------------------------------------------------------
Math3 -  FL is ranked in the 3
iteration_2 replace buggy code at line 823 Diagnostic: 
 -  final  double[]  prodHigh  =  new  double[len  *  1];  
 + final double[] prodHigh = new double[len * 2]; 
 ----------------------------------------------------------------------------------------------------
Math3 -  FL is ranked in the 3
iteration_2 replace buggy code at line 823 Diagnostic: 
 -  final  double[]  prodHigh  =  new  double[len  *  1];  
 + final double[] prodHigh = new double[len * 4]; 
 ----------------------------------------------------------------------------------------------------
Math3 -  FL is ranked in the 3
iteration_1 replace buggy code at line 823 Diagnostic: 
 -    final  double[]  prodHigh  =  new  double[len];  
 + final double[] prodHigh = new double[len + len]; 
 ----------------------------------------------------------------------------------------------------
repair_iteration/Math3/3/iteration_0/plausible.csv
JacksonCore9 -  FL is ranked in the 1
iteration_1 replace buggy code at line 397 Diagnostic: 
 -  if(_currToken  ==  JsonToken.VALUE_STRING  ||  _currToken  ==  JsonToken.VALUE_FIELD_NAME)  {  
 + if(_currToken == JsonToken.FIELD_NAME || _currToken == JsonToken.VALUE_STRING) { 
 ----------------------------------------------------------------------------------------------------
JacksonCore9 -  FL is ranked in the 1
iteration_1 replace buggy code at line 397 Diagnostic: 
 -  if(_currToken  ==  JsonToken.VALUE_STRING  ||  _currToken  ==  JsonToken.VALUE_FIELD_NAME)  {  
 + if(_currToken == JsonToken.VALUE_STRING || _currToken == JsonToken.FIELD_NAME) { 
 ----------------------------------------------------------------------------------------------------
Math59 -  FL is ranked in the 2
iteration_1 replace buggy code at line 3482 Diagnostic: 
 -    
 + return Math.max(a, b); 
 ----------------------------------------------------------------------------------------------------
Math40 -  FL is ranked in the 23
iteration_2 add buggy code at line 236 Diagnostic: 
 -  
 + if(agingA  >  MAXIMAL_AGING)  {  targetY  =  -REDUCTION_FACTOR  *  xB;  }  else  {  targetY  =  -REDUCTION_FACTOR  *  yA;  }  if(agingA > MAXIMAL_AGING) { targetY = -REDUCTION_FACTOR * xB; } else { targetY = -REDUCTION_FACTOR * yB; } 
 ----------------------------------------------------------------------------------------------------
Math40 -  FL is ranked in the 23
iteration_2 add buggy code at line 236 Diagnostic: 
 -  
 + if(agingA  >  MAXIMAL_AGING)  {  targetY  =  -REDUCTION_FACTOR  *  yA;  }  else  {  targetY  =  -REDUCTION_FACTOR  *  xB;  }  if(agingA > MAXIMAL_AGING) { targetY = -REDUCTION_FACTOR * xB; } else { targetY = -REDUCTION_FACTOR * yB; } 
 ----------------------------------------------------------------------------------------------------
repair_iteration/Closure86/2/iteration_0/plausible.csv
repair_iteration/Closure86/2/iteration_0/plausible.csv
repair_iteration/Closure86/2/iteration_0/plausible.csv
Gson12 -  FL is ranked in the 20
iteration_2 add buggy code at line 261 Diagnostic: 
 -  
 + if(stackSize  >  0)  {  popStack();  }  else  {  JsonToken  START_OBJECT  =  null;  nextName();  pathNames[stackSize  -  1]  =  null;  }  if(stackSize > 0) { popStack(); } else { JsonToken START_OBJECT = null; return; } 
 ----------------------------------------------------------------------------------------------------
Math12 -  FL is ranked in the 10
iteration_2 replace buggy code at line 108 Diagnostic: 
 -  nextGaussian  =  random  *  FastMath.sin(alpha);  double  nextGaussian  =  random  *  FastMath.sin(alpha);  
 + double nextGaussian = random * FastMath.sin(alpha); 
 ----------------------------------------------------------------------------------------------------
Math12 -  FL is ranked in the 10
iteration_2 replace buggy code at line 108 Diagnostic: 
 -  nextGaussian  =  random  *  FastMath.sin(alpha);  double  nextGaussian  =  random  *  FastMath.sin(alpha);  
 + double nextGaussian = random * FastMath.sin(r); 
 ----------------------------------------------------------------------------------------------------
Math12 -  FL is ranked in the 10
iteration_2 replace buggy code at line 108 Diagnostic: 
 -  nextGaussian  =  x  *  FastMath.sin(alpha);  
 + nextGaussian = x * FastMath.sin(nextGaussian); 
 ----------------------------------------------------------------------------------------------------
repair_iteration/Math12/10/iteration_0/plausible.csv
repair_iteration/Math12/10/iteration_0/plausible.csv
repair_iteration/Math12/10/iteration_0/plausible.csv
Codec4 -  FL is ranked in the 1
iteration_1 replace buggy code at line 931 Diagnostic: 
 -    byte[]  pArray  =  getEncodeBase64(pArray,  0,  pArray.length);  
 + byte[] pArray = getEncodeBase64(pArray, 0, pArray.length - 2); 
 ----------------------------------------------------------------------------------------------------
Closure113 -  FL is ranked in the 2
iteration_2 replace buggy code at line 329 Diagnostic: 
 -  if(right!=  null  ||  left.getType()  ==  Token.NAME)  {  
 + if(n!= null || left.getType() == Token.NAME) { 
 ----------------------------------------------------------------------------------------------------
Closure113 -  FL is ranked in the 2
iteration_2 replace buggy code at line 329 Diagnostic: 
 -  if(left!=  null  &&  left.getType()  ==  Token.NAME  &&  NodeUtil.isFunctionDeclaration(parent))  {  
 + if(left!= null || left.getType() == Token.NAME && NodeUtil.isFunctionDeclaration(parent)) { 
 ----------------------------------------------------------------------------------------------------
Closure113 -  FL is ranked in the 2
iteration_2 replace buggy code at line 329 Diagnostic: 
 -  if(right  ==  null  ||  left.getType()  ==  Token.STRING)  {  
 + if(left == null || left.getType()!= Token.STRING) { 
 ----------------------------------------------------------------------------------------------------
Closure113 -  FL is ranked in the 2
iteration_2 replace buggy code at line 329 Diagnostic: 
 -  if(parent!=  null  &&  parent.getType()  ==  Token.NAME  ||  parent.getType()  ==  Token.VAR)  {  
 + if(parent!= null || parent.getType() == Token.NAME || parent.getType() == Token.VAR) { 
 ----------------------------------------------------------------------------------------------------
Closure113 -  FL is ranked in the 2
iteration_2 replace buggy code at line 329 Diagnostic: 
 -  if(child!=  null  ||  parent.getType()  ==  Token.FUNCTION)  {  
 + if(n!= null || parent.getType() == Token.FUNCTION) { 
 ----------------------------------------------------------------------------------------------------
Closure113 -  FL is ranked in the 2
iteration_2 replace buggy code at line 329 Diagnostic: 
 -  if(child!=  null  ||  parent.getType()  ==  Token.FUNCTION)  {  
 + if(left!= null || parent.getType() == Token.FUNCTION) { 
 ----------------------------------------------------------------------------------------------------
Closure113 -  FL is ranked in the 2
iteration_2 replace buggy code at line 329 Diagnostic: 
 -  if(left!=  null  &&  left.getType()  ==  Token.NAME  &&  parent.getString().equals(  "require  "))  {  
 + if(left!= null || left.getType() == Token.NAME && parent.getString().equals( "require ")) { 
 ----------------------------------------------------------------------------------------------------
Closure113 -  FL is ranked in the 2
iteration_2 replace buggy code at line 329 Diagnostic: 
 -  if(child  ==  null  ||  parent.getType()  ==  Token.NAME)  {  
 + if(parent == null || parent.getType()!= Token.NAME) { 
 ----------------------------------------------------------------------------------------------------
Closure113 -  FL is ranked in the 2
iteration_2 replace buggy code at line 329 Diagnostic: 
 -  if(child  ==  null  ||  parent.getType()  ==  Token.NAME)  {  
 + if(n!= null || parent.getType() == Token.NAME) { 
 ----------------------------------------------------------------------------------------------------
Closure113 -  FL is ranked in the 2
iteration_2 replace buggy code at line 329 Diagnostic: 
 -  if(left  ==  null  ||  left.getType()  ==  Token.FUNCTION)  {  
 + if(left == null || left.getType()!= Token.FUNCTION) { 
 ----------------------------------------------------------------------------------------------------
Closure113 -  FL is ranked in the 2
iteration_2 replace buggy code at line 329 Diagnostic: 
 -  if(parent!=  null  &&  parent.getType()  ==  Token.FOR)  {  
 + if(parent!= null || parent.getType() == Token.FOR) { 
 ----------------------------------------------------------------------------------------------------
Closure113 -  FL is ranked in the 2
iteration_2 replace buggy code at line 329 Diagnostic: 
 -  if(parent  ==  null  &&  parent.getType()  ==  Token.NAME)  {  
 + if(parent!= null && parent.getType() == Token.NAME || parent.getType() == Token.EXPR_RESULT) { 
 ----------------------------------------------------------------------------------------------------
Closure113 -  FL is ranked in the 2
iteration_2 replace buggy code at line 329 Diagnostic: 
 -  if(child  ==  null  ||  parent.getType()  ==  Token.GETPROP)  {  
 + if(parent == null || left.getType() == Token.GETPROP) { 
 ----------------------------------------------------------------------------------------------------
Closure113 -  FL is ranked in the 2
iteration_2 replace buggy code at line 329 Diagnostic: 
 -  if(child  ==  null  ||  parent.getType()  ==  Token.GETPROP)  {  
 + if(parent == null || parent.getType()!= Token.GETPROP) { 
 ----------------------------------------------------------------------------------------------------
Closure113 -  FL is ranked in the 2
iteration_2 replace buggy code at line 329 Diagnostic: 
 -  if(child  ==  null  ||  parent.getType()  ==  Token.GETPROP)  {  
 + if(n!= null || parent.getType() == Token.GETPROP) { 
 ----------------------------------------------------------------------------------------------------
Closure113 -  FL is ranked in the 2
iteration_2 replace buggy code at line 329 Diagnostic: 
 -  if(child  ==  null  ||  parent.getType()  ==  Token.GETPROP)  {  
 + if(left == null || left.getType() == Token.GETPROP) { 
 ----------------------------------------------------------------------------------------------------
Closure113 -  FL is ranked in the 2
iteration_2 replace buggy code at line 329 Diagnostic: 
 -  if(left!=  null  &&  left.getType()  ==  Token.NAME  ||  parent.equals(n.getString()))  {  
 + if(left!= null || left.getType() == Token.NAME || parent.equals(n.getString())) { 
 ----------------------------------------------------------------------------------------------------
Closure113 -  FL is ranked in the 2
iteration_2 replace buggy code at line 329 Diagnostic: 
 -  if(left!=  null  &&  left.getType()  ==  Token.NAME  ||  parent.equals(n.getString()))  {  
 + if(parent!= null || left.getType() == Token.NAME || parent.equals(n.getString())) { 
 ----------------------------------------------------------------------------------------------------
Closure113 -  FL is ranked in the 2
iteration_2 replace buggy code at line 329 Diagnostic: 
 -  if(left!=  null  ||  right.getType()  ==  Token.STRING)  {  
 + if(n!= null || left.getType() == Token.STRING) { 
 ----------------------------------------------------------------------------------------------------
Closure113 -  FL is ranked in the 2
iteration_2 replace buggy code at line 329 Diagnostic: 
 -  if(left!=  null  ||  right.getType()  ==  Token.STRING)  {  
 + if(n!= null || parent.getType() == Token.STRING) { 
 ----------------------------------------------------------------------------------------------------
Closure113 -  FL is ranked in the 2
iteration_2 replace buggy code at line 329 Diagnostic: 
 -  if(left!=  null  &&  left.getType()  ==  Token.FUNCTION  ||  left.getType()  ==  Token.VAR)  {  
 + if(left!= null || left.getType() == Token.FUNCTION || left.getType() == Token.VAR) { 
 ----------------------------------------------------------------------------------------------------
Closure113 -  FL is ranked in the 2
iteration_2 replace buggy code at line 329 Diagnostic: 
 -  if(left!=  null  &&  parent.getType()  ==  Token.GETPROP)  {  
 + if(parent!= null && left.getType() == Token.GETPROP) { 
 ----------------------------------------------------------------------------------------------------
Closure113 -  FL is ranked in the 2
iteration_2 replace buggy code at line 329 Diagnostic: 
 -  if(provided!=  null  &&  parent.getType()  ==  Token.NAME  &&  NodeUtil.isAssignmentOp(parent))  {  
 + if(parent!= null || parent.getType() == Token.NAME && NodeUtil.isAssignmentOp(parent)) { 
 ----------------------------------------------------------------------------------------------------
Closure113 -  FL is ranked in the 2
iteration_2 replace buggy code at line 329 Diagnostic: 
 -  if(left!=  null  &&  left.getType()  ==  Token.FUNCTION)  {  if(left!=  null  &&  left.getType()  ==  Token.FUNCTION)  {  }  parent.detachFromParent();  compiler.reportCodeChange();  }  
 + if(parent!= null) { if(left!= null && left.getType() == Token.FUNCTION) { parent.detachFromParent(); compiler.reportCodeChange(); } 
 ----------------------------------------------------------------------------------------------------
Closure113 -  FL is ranked in the 2
iteration_2 replace buggy code at line 329 Diagnostic: 
 -  if(left!=  null  &&  left.getType()  ==  Token.FUNCTION)  {  if(left!=  null  &&  left.getType()  ==  Token.FUNCTION)  {  }  parent.detachFromParent();  compiler.reportCodeChange();  }  
 + if(parent!= null) { if(left!= null && left.getType() == Token.FUNCTION) { parent.detachFromParent(); } 
 ----------------------------------------------------------------------------------------------------
Closure113 -  FL is ranked in the 2
iteration_2 replace buggy code at line 329 Diagnostic: 
 -  if(left!=  null  &&  left.getType()  ==  Token.NAME)  {  Node  left  =  left.getFirstChild();  if(left!=  null  &&  left.getType()  ==  Token.NAME)  {  
 + Node right = left.getFirstChild(); if(right!= null && right.getType() == Token.NAME) { 
 ----------------------------------------------------------------------------------------------------
Closure113 -  FL is ranked in the 2
iteration_2 replace buggy code at line 329 Diagnostic: 
 -  if(left!=  null  &&  left.getType()  ==  Token.NAME  &&  parent.getString().endsWith(  "__  "))  {  
 + if(left!= null || left.getType() == Token.NAME && parent.getString().endsWith( "__ ")) { 
 ----------------------------------------------------------------------------------------------------
Closure113 -  FL is ranked in the 2
iteration_1 replace buggy code at line 329 Diagnostic: 
 -  if(provided!=  null  &&  left.getType()  ==  Token.NAME)  {  
 + if(left!= null || left.getType() == Token.NAME) { 
 ----------------------------------------------------------------------------------------------------
Closure113 -  FL is ranked in the 2
iteration_1 replace buggy code at line 329 Diagnostic: 
 -  if(provided!=  null  &&  left.getType()  ==  Token.VAR)  {  
 + if(left!= null || left.getType() == Token.VAR) { 
 ----------------------------------------------------------------------------------------------------
Closure113 -  FL is ranked in the 2
iteration_1 replace buggy code at line 329 Diagnostic: 
 -  if(provided!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  
 + if(parent!= null && parent.getType() == Token.EXPR_RESULT) { 
 ----------------------------------------------------------------------------------------------------
Closure113 -  FL is ranked in the 2
iteration_1 replace buggy code at line 329 Diagnostic: 
 -  if(provided!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  
 + if(parent!= null || parent.getType() == Token.FUNCTION) { 
 ----------------------------------------------------------------------------------------------------
Closure113 -  FL is ranked in the 2
iteration_1 replace buggy code at line 329 Diagnostic: 
 -  if(left!=  null  &&  left.getType()  ==  Token.FUNCTION)  {  
 + if(left!= null || left.getType() == Token.FUNCTION) { 
 ----------------------------------------------------------------------------------------------------
Closure113 -  FL is ranked in the 2
iteration_1 replace buggy code at line 329 Diagnostic: 
 -  if(left!=  null  &&  left.getType()  ==  Token.FUNCTION)  {  
 + if(left!= null && left.getType() == Token.GETPROP) { 
 ----------------------------------------------------------------------------------------------------
Closure113 -  FL is ranked in the 2
iteration_1 replace buggy code at line 329 Diagnostic: 
 -  if(provided!=  null  &&  parent!=  null)  {  
 + if(parent!= null && parent!= null) { 
 ----------------------------------------------------------------------------------------------------
Closure113 -  FL is ranked in the 2
iteration_1 replace buggy code at line 329 Diagnostic: 
 -  if(provided!=  null  &&  parent!=  null)  {  
 + if(provided!= null || parent!= null) { 
 ----------------------------------------------------------------------------------------------------
Closure113 -  FL is ranked in the 2
iteration_1 replace buggy code at line 329 Diagnostic: 
 -  if(provided!=  null  &&  parent!=  null)  {  
 + if(parent!= null && provided == null) { 
 ----------------------------------------------------------------------------------------------------
Closure113 -  FL is ranked in the 2
iteration_1 replace buggy code at line 329 Diagnostic: 
 -  if(provided!=  null  &&  parent!=  null)  {  
 + if(parent!= null && left!= null) { 
 ----------------------------------------------------------------------------------------------------
Closure113 -  FL is ranked in the 2
iteration_1 replace buggy code at line 329 Diagnostic: 
 -  if(provided!=  null  &&  parent!=  null)  {  
 + if(provided == null || parent!= null) { 
 ----------------------------------------------------------------------------------------------------
Closure113 -  FL is ranked in the 2
iteration_1 replace buggy code at line 329 Diagnostic: 
 -  if(provided!=  null  ||  parent.getType()  ==  Token.GETPROP)  {  
 + if(parent!= null || parent.getType() == Token.GETPROP) { 
 ----------------------------------------------------------------------------------------------------
Closure113 -  FL is ranked in the 2
iteration_1 replace buggy code at line 329 Diagnostic: 
 -  if(provided!=  null  ||  parent.getType()  ==  Token.GETPROP)  {  
 + if(provided == null || parent.getType() == Token.GETPROP) { 
 ----------------------------------------------------------------------------------------------------
Closure113 -  FL is ranked in the 2
iteration_1 replace buggy code at line 329 Diagnostic: 
 -  if(provided!=  null  ||  parent.getType()  ==  Token.GETPROP)  {  
 + if(parent!= null || left.getType() == Token.GETPROP) { 
 ----------------------------------------------------------------------------------------------------
Closure113 -  FL is ranked in the 2
iteration_1 replace buggy code at line 329 Diagnostic: 
 -  if(provided!=  null  ||  parent.getType()  ==  Token.GETPROP)  {  
 + if(left!= null || left.getType() == Token.GETPROP) { 
 ----------------------------------------------------------------------------------------------------
Closure113 -  FL is ranked in the 2
iteration_1 replace buggy code at line 329 Diagnostic: 
 -  if(provided!=  null  ||  parent.getType()  ==  Token.GETPROP)  {  
 + if(left!= null || parent.getType() == Token.GETPROP) { 
 ----------------------------------------------------------------------------------------------------
Closure113 -  FL is ranked in the 2
iteration_1 replace buggy code at line 329 Diagnostic: 
 -  if(provided  ==  null  ||  parent.getType()  ==  Token.REQUIRE)  {  
 + if(parent == null || parent.getType() == Token.EXPR_RESULT) { 
 ----------------------------------------------------------------------------------------------------
Closure113 -  FL is ranked in the 2
iteration_1 replace buggy code at line 329 Diagnostic: 
 -  if(provided  ==  null  ||  parent.getType()  ==  Token.REQUIRE)  {  
 + if(provided == null || parent.getType() == Token.STRING) { 
 ----------------------------------------------------------------------------------------------------
Closure113 -  FL is ranked in the 2
iteration_1 replace buggy code at line 329 Diagnostic: 
 -  if(provided!=  null  &&  parent.getType()  ==  Token.VAR)  {  
 + if(parent!= null || parent.getType() == Token.VAR) { 
 ----------------------------------------------------------------------------------------------------
Closure113 -  FL is ranked in the 2
iteration_1 replace buggy code at line 329 Diagnostic: 
 -  if(provided!=  null  ||  left.getType()  ==  Token.NAME)  {  
 + if(parent!= null || left.getType() == Token.NAME) { 
 ----------------------------------------------------------------------------------------------------
Closure113 -  FL is ranked in the 2
iteration_1 replace buggy code at line 329 Diagnostic: 
 -  if(provided!=  null  ||  left.getType()  ==  Token.NAME)  {  
 + if(provided == null || left.getType() == Token.NAME) { 
 ----------------------------------------------------------------------------------------------------
Closure113 -  FL is ranked in the 2
iteration_1 replace buggy code at line 329 Diagnostic: 
 -  if(provided!=  null  ||  left.getType()  ==  Token.NAME)  {  
 + if(left!= null || parent.getType() == Token.NAME) { 
 ----------------------------------------------------------------------------------------------------
Closure113 -  FL is ranked in the 2
iteration_1 replace buggy code at line 329 Diagnostic: 
 -  if(provided!=  null  ||  parent.getType()  ==  Token.FUNCTION)  {  
 + if(parent!= null || parent.getType() == Token.NAME) { 
 ----------------------------------------------------------------------------------------------------
Closure113 -  FL is ranked in the 2
iteration_1 replace buggy code at line 329 Diagnostic: 
 -  if(provided!=  null  ||  parent.getType()  ==  Token.FUNCTION)  {  
 + if(parent!= null || parent.getType() == Token.EXPR_RESULT) { 
 ----------------------------------------------------------------------------------------------------
Closure113 -  FL is ranked in the 2
iteration_1 replace buggy code at line 329 Diagnostic: 
 -  if(provided!=  null  ||  parent.getType()  ==  Token.FUNCTION)  {  
 + if(provided == null || parent.getType() == Token.FUNCTION) { 
 ----------------------------------------------------------------------------------------------------
Closure113 -  FL is ranked in the 2
iteration_1 replace buggy code at line 329 Diagnostic: 
 -  if(provided!=  null  ||  parent.getType()  ==  Token.FUNCTION)  {  
 + if(parent!= null || parent.getType() == Token.EMPTY) { 
 ----------------------------------------------------------------------------------------------------
Closure113 -  FL is ranked in the 2
iteration_1 replace buggy code at line 329 Diagnostic: 
 -  if(provided!=  null  ||  parent.getType()  ==  Token.FUNCTION)  {  
 + if(parent!= null || parent.getType() == Token.STRING) { 
 ----------------------------------------------------------------------------------------------------
Closure113 -  FL is ranked in the 2
iteration_1 replace buggy code at line 329 Diagnostic: 
 -  if(provided!=  null  ||  parent.getType()  ==  Token.FUNCTION)  {  
 + if(parent!= null || left.getType() == Token.FUNCTION) { 
 ----------------------------------------------------------------------------------------------------
Closure113 -  FL is ranked in the 2
iteration_1 replace buggy code at line 329 Diagnostic: 
 -  if(provided!=  null  &&  left.getType()  ==  Token.STRING)  {  
 + if(left!= null || left.getType() == Token.STRING) { 
 ----------------------------------------------------------------------------------------------------
Closure113 -  FL is ranked in the 2
iteration_1 replace buggy code at line 329 Diagnostic: 
 -  if(provided!=  null  ||  parent.getType()  ==  Token.REQUIRE)  {  
 + if(parent!= null || parent.getType() == Token.ASSIGN) { 
 ----------------------------------------------------------------------------------------------------
Closure113 -  FL is ranked in the 2
iteration_1 replace buggy code at line 329 Diagnostic: 
 -  if(provided!=  null  ||  parent.getType()  ==  Token.REQUIRE)  {  
 + if(parent!= null || parent.getType() == Token.CALL) { 
 ----------------------------------------------------------------------------------------------------
Closure113 -  FL is ranked in the 2
iteration_1 replace buggy code at line 329 Diagnostic: 
 -  if(provided!=  null  ||  left.getType()  ==  Token.FUNCTION)  {  
 + if(left!= null || left.getType() == Token.EXPR_RESULT) { 
 ----------------------------------------------------------------------------------------------------
Closure113 -  FL is ranked in the 2
iteration_1 replace buggy code at line 329 Diagnostic: 
 -  if(provided!=  null  ||  left.getType()  ==  Token.FUNCTION)  {  
 + if(provided == null || left.getType() == Token.FUNCTION) { 
 ----------------------------------------------------------------------------------------------------
Closure113 -  FL is ranked in the 2
iteration_1 replace buggy code at line 329 Diagnostic: 
 -  if(provided!=  null  ||  left.getType()  ==  Token.FUNCTION)  {  
 + if(left!= null || left.getType() == Token.EMPTY) { 
 ----------------------------------------------------------------------------------------------------
Closure113 -  FL is ranked in the 2
iteration_1 replace buggy code at line 329 Diagnostic: 
 -  if(provided!=  null  ||  left.getType()  ==  Token.STRING)  {  
 + if(parent!= null || left.getType() == Token.STRING) { 
 ----------------------------------------------------------------------------------------------------
Closure113 -  FL is ranked in the 2
iteration_1 replace buggy code at line 329 Diagnostic: 
 -  if(provided!=  null  ||  left.getType()  ==  Token.STRING)  {  
 + if(provided == null || left.getType() == Token.STRING) { 
 ----------------------------------------------------------------------------------------------------
Closure113 -  FL is ranked in the 2
iteration_1 replace buggy code at line 329 Diagnostic: 
 -  if(provided!=  null  ||  left.getType()  ==  Token.STRING)  {  
 + if(left!= null || parent.getType() == Token.STRING) { 
 ----------------------------------------------------------------------------------------------------
Closure113 -  FL is ranked in the 2
iteration_1 replace buggy code at line 329 Diagnostic: 
 -  if(left!=  null  &&  left.getType()  ==  Token.NAME)  {  
 + if(left!= null && left.getType() == Token.NAME || parent.hasChildren()) { 
 ----------------------------------------------------------------------------------------------------
Closure113 -  FL is ranked in the 2
iteration_1 replace buggy code at line 329 Diagnostic: 
 -  if(provided!=  null  ||  parent.getType()  ==  Token.REQUIRE)  {  
 + if(parent!= null || parent.getType() == Token.OBJECTLIT) { 
 ----------------------------------------------------------------------------------------------------
Closure113 -  FL is ranked in the 2
iteration_1 replace buggy code at line 329 Diagnostic: 
 -  if(provided!=  null  ||  left.getType()  ==  Token.FUNCTION)  {  
 + if(left!= null || left.getType() == Token.NEW) { 
 ----------------------------------------------------------------------------------------------------
Closure113 -  FL is ranked in the 2
iteration_1 replace buggy code at line 329 Diagnostic: 
 -  if(provided  ==  null  ||  parent.getType()  ==  Token.REQUIRE)  {  
 + if(provided == null || parent.getType() == Token.ASSIGN) { 
 ----------------------------------------------------------------------------------------------------
Closure113 -  FL is ranked in the 2
iteration_1 replace buggy code at line 329 Diagnostic: 
 -  if(provided!=  null  ||  left.getType()  ==  Token.NAME)  {  
 + if(provided == null || left.getType()!= Token.NAME) { 
 ----------------------------------------------------------------------------------------------------
Closure113 -  FL is ranked in the 2
iteration_1 replace buggy code at line 329 Diagnostic: 
 -  if(provided!=  null  ||  parent.getType()  ==  Token.NAME)  {  
 + if(provided == null || parent.getType()!= Token.NAME) { 
 ----------------------------------------------------------------------------------------------------
Closure113 -  FL is ranked in the 2
iteration_1 replace buggy code at line 329 Diagnostic: 
 -  if(provided!=  null  ||  parent.getType()  ==  Token.GETPROP)  {  
 + if(parent!= null || parent.getType() == Token.GETELEM) { 
 ----------------------------------------------------------------------------------------------------
Closure113 -  FL is ranked in the 2
iteration_1 replace buggy code at line 329 Diagnostic: 
 -  if(provided!=  null  &&  parent!=  null)  {  
 + if(provided == null && parent!= null) { 
 ----------------------------------------------------------------------------------------------------
Closure113 -  FL is ranked in the 2
iteration_1 replace buggy code at line 329 Diagnostic: 
 -  if(provided!=  null  &&  parent!=  null)  {  
 + if(left!= null && parent!= null) { 
 ----------------------------------------------------------------------------------------------------
Closure113 -  FL is ranked in the 2
iteration_1 replace buggy code at line 329 Diagnostic: 
 -  if(provided  ==  null  ||  parent.getType()  ==  Token.REQUIRE)  {  
 + if(provided == null || parent.getType() == Token.VAR) { 
 ----------------------------------------------------------------------------------------------------
Closure113 -  FL is ranked in the 2
iteration_1 replace buggy code at line 329 Diagnostic: 
 -  if(provided  ==  null  ||  parent.getType()  ==  Token.REQUIRE)  {  
 + if(provided == null || parent.getType() == Token.SCRIPT) { 
 ----------------------------------------------------------------------------------------------------
Closure113 -  FL is ranked in the 2
iteration_1 replace buggy code at line 329 Diagnostic: 
 -  if(provided  ==  null  ||  parent.getType()  ==  Token.REQUIRE)  {  
 + if(provided == null || parent.getType() == Token.CALL) { 
 ----------------------------------------------------------------------------------------------------
Closure113 -  FL is ranked in the 2
iteration_1 replace buggy code at line 329 Diagnostic: 
 -  if(provided!=  null  &&  left.getType()  ==  Token.VAR)  {  
 + if(provided == null || left.getType() == Token.VAR) { 
 ----------------------------------------------------------------------------------------------------
repair_iteration/Closure113/2/iteration_0/plausible.csv
repair_iteration/Closure113/2/iteration_0/plausible.csv
repair_iteration/Closure113/2/iteration_0/plausible.csv
repair_iteration/Closure113/2/iteration_0/plausible.csv
repair_iteration/Closure113/2/iteration_0/plausible.csv
repair_iteration/Closure113/2/iteration_0/plausible.csv
Time19 -  FL is ranked in the 1
iteration_2 replace buggy code at line 900 Diagnostic: 
 -  }  else  if(offsetLocal!=  0)  {  }  else  if(nextLocal  >=  0)  {  
 + } else if(instantLocal >= 0) { 
 ----------------------------------------------------------------------------------------------------
Time19 -  FL is ranked in the 1
iteration_2 replace buggy code at line 900 Diagnostic: 
 -  }  else  if(offsetLocal!=  0)  {  }  else  if(nextLocal  >=  0)  {  
 + } else if(instantLocal!= 0) { 
 ----------------------------------------------------------------------------------------------------
Time19 -  FL is ranked in the 1
iteration_2 replace buggy code at line 900 Diagnostic: 
 -  }  else  if(offsetLocal  <  =  1)  {  
 + } else if(offsetLocal!= 1) { 
 ----------------------------------------------------------------------------------------------------
Time19 -  FL is ranked in the 1
iteration_2 replace buggy code at line 900 Diagnostic: 
 -  }  else  if(instantLocal  <  offsetLocal)  {  
 + } else if(instantLocal >= offsetLocal) { 
 ----------------------------------------------------------------------------------------------------
Time19 -  FL is ranked in the 1
iteration_2 replace buggy code at line 900 Diagnostic: 
 -  }  else  if(instantLocal  <  offsetLocal)  {  
 + } else if(instantLocal > offsetLocal) { 
 ----------------------------------------------------------------------------------------------------
Time19 -  FL is ranked in the 1
iteration_2 replace buggy code at line 900 Diagnostic: 
 -  }  else  if(offsetLocal  <  nextLocal)  {  
 + } else if(offsetLocal < instantLocal) { 
 ----------------------------------------------------------------------------------------------------
Time19 -  FL is ranked in the 1
iteration_2 replace buggy code at line 900 Diagnostic: 
 -  }  else  if(!instantAdjusted  ||  offsetLocal  >  0)  {  
 + } else if(instantLocal > 0 || offsetLocal > 0) { 
 ----------------------------------------------------------------------------------------------------
Time19 -  FL is ranked in the 1
iteration_2 replace buggy code at line 900 Diagnostic: 
 -  }  else  if(offsetLocal  ==  0)  {  }  else  if(OffsetLocal  <  =  0)  {  
 + } else if(offsetLocal == offsetAdjusted) { 
 ----------------------------------------------------------------------------------------------------
Time19 -  FL is ranked in the 1
iteration_2 replace buggy code at line 900 Diagnostic: 
 -  }  else  if(offsetLocal  <  0)  {  }  else  if(offsetLocal  <  0  ||  instantLocal  >  nextLocal)  {  
 + } else if(offsetLocal < 0 || instantLocal > offsetLocal) { 
 ----------------------------------------------------------------------------------------------------
Time19 -  FL is ranked in the 1
iteration_2 replace buggy code at line 900 Diagnostic: 
 -  }  else  if(offsetLocal  <  0)  {  }  else  if(offsetLocal  <  0  ||  instantLocal  >  nextLocal)  {  
 + } else if(offsetLocal < 0 || instantLocal > offsetAdjusted) { 
 ----------------------------------------------------------------------------------------------------
Time19 -  FL is ranked in the 1
iteration_2 replace buggy code at line 900 Diagnostic: 
 -  }  else  if(offsetLocal  <  0)  {  }  else  if(offsetLocal  <  0  ||  instantAdjusted  >  nextLocal)  {  
 + } else if(offsetLocal < 0 || instantAdjusted > offsetLocal) { 
 ----------------------------------------------------------------------------------------------------
Time19 -  FL is ranked in the 1
iteration_2 replace buggy code at line 900 Diagnostic: 
 -  }  else  if(offsetLocal  <  0)  {  }  else  if(offsetLocal  <  0  ||  offsetPrev  >  getOffset(instantLocal))  {  
 + } else if(instantLocal < 0 || instantLocal > getOffset(instantLocal)) { 
 ----------------------------------------------------------------------------------------------------
Time19 -  FL is ranked in the 1
iteration_2 replace buggy code at line 900 Diagnostic: 
 -  }  else  if(offsetLocal  <  0)  {  }  else  if(offsetLocal  <  0  ||  offsetPrev  >  getOffset(instantLocal))  {  
 + } else if(offsetLocal < 0 || instantLocal > getOffset(instantLocal)) { 
 ----------------------------------------------------------------------------------------------------
Time19 -  FL is ranked in the 1
iteration_2 replace buggy code at line 900 Diagnostic: 
 -  }  else  if(offsetLocal  <  0)  {  }  else  if(offsetLocal  <  0  ||  instantAdjusted  >  getOffset(instantLocal))  {  
 + } else if(instantLocal >= offsetAdjusted) { 
 ----------------------------------------------------------------------------------------------------
Time19 -  FL is ranked in the 1
iteration_2 replace buggy code at line 900 Diagnostic: 
 -  }  else  if(offsetLocal  <  0)  {  }  else  if(offsetLocal  <  0  ||  instantAdjusted  >  getOffset(instantLocal))  {  
 + } else if(instantLocal!= offsetAdjusted) { 
 ----------------------------------------------------------------------------------------------------
Time19 -  FL is ranked in the 1
iteration_2 replace buggy code at line 900 Diagnostic: 
 -  }  else  if(nextLocal!=  offsetLocal)  {  
 + } else if(instantLocal!= offsetLocal) { 
 ----------------------------------------------------------------------------------------------------
Time19 -  FL is ranked in the 1
iteration_2 replace buggy code at line 900 Diagnostic: 
 -  }  else  if(offsetLocal!=  0)  {  }  else  if(nextLocal  >=  0)  {  
 + } else if(offsetAdjusted >= 0) { 
 ----------------------------------------------------------------------------------------------------
Time19 -  FL is ranked in the 1
iteration_2 replace buggy code at line 900 Diagnostic: 
 -  }  else  if(offsetLocal  <  0)  {  }  else  if(offsetLocal  <  0  ||  instantLocal  >  getOffset(instantLocal))  {  
 + } else if(instantLocal > getOffset(instantLocal)) { 
 ----------------------------------------------------------------------------------------------------
Time19 -  FL is ranked in the 1
iteration_2 replace buggy code at line 900 Diagnostic: 
 -  }  else  if(offsetLocal  <  0)  {  }  else  if(offsetLocal  <  0  ||  instantLocal  >  getOffset(instantLocal))  {  
 + } else if(instantLocal >= getOffset(instantLocal)) { 
 ----------------------------------------------------------------------------------------------------
Time19 -  FL is ranked in the 1
iteration_2 replace buggy code at line 900 Diagnostic: 
 -  }  else  if(offsetLocal!=  0)  {  }  else  if(nextLocal!=  0)  {  
 + } else if(instantAdjusted!= 0) { 
 ----------------------------------------------------------------------------------------------------
Time19 -  FL is ranked in the 1
iteration_2 replace buggy code at line 900 Diagnostic: 
 -  }  else  if(offsetLocal  <  nextLocal)  {  
 + } else if(offsetLocal < instantAdjusted) { 
 ----------------------------------------------------------------------------------------------------
Time19 -  FL is ranked in the 1
iteration_2 replace buggy code at line 900 Diagnostic: 
 -  }  else  if(offsetLocal  <  0)  {  }  else  if(offsetLocal  <  0  ||  instantAdjusted  >  getOffset(instantLocal))  {  
 + } else if(instantAdjusted > getOffset(instantLocal)) { 
 ----------------------------------------------------------------------------------------------------
Time19 -  FL is ranked in the 1
iteration_2 replace buggy code at line 900 Diagnostic: 
 -  }  else  if(offsetLocal  <  0)  {  }  else  if(offsetLocal  <  0  ||  instantAdjusted  >  getOffset(instantLocal))  {  
 + } else if(instantLocal!= getOffset(instantLocal)) { 
 ----------------------------------------------------------------------------------------------------
Time19 -  FL is ranked in the 1
iteration_1 replace buggy code at line 900 Diagnostic: 
 -  }  else  if(offsetPrev  >  0)  {  
 + } else if(instantLocal > 0) { 
 ----------------------------------------------------------------------------------------------------
repair_iteration/Time19/1/iteration_0/plausible.csv
Csv6 -  FL is ranked in the 1
iteration_1 add buggy code at line 212 Diagnostic: 
 -  
 + return  putIn(new  HashMap  <  String,  String>(values.length  +  1));  ArrayList < String> values = new ArrayList < String>(values.length + 1); 
 ----------------------------------------------------------------------------------------------------
Csv6 -  FL is ranked in the 1
iteration_1 add buggy code at line 212 Diagnostic: 
 -  
 + return  putIn(new  HashMap  <  String,  String>(values.length  +  1));  ArrayList < String> values = new ArrayList < String>(values.length + 1); putIn(new HashMap < String, String>(values.length + 1)); 
 ----------------------------------------------------------------------------------------------------
Csv6 -  FL is ranked in the 1
iteration_1 add buggy code at line 212 Diagnostic: 
 -  
 + return  putIn(new  HashMap  <  String,  String>(values.length  +  1));  ArrayList < String> values = Lists.newArrayList(); 
 ----------------------------------------------------------------------------------------------------
Csv6 -  FL is ranked in the 1
iteration_1 add buggy code at line 212 Diagnostic: 
 -  
 + return  putIn(new  HashMap  <  String,  String>(values.length  +  1));  Map.Entry < String, String> entry =(Map.Entry < String, String>)this.values.entrySet(); 
 ----------------------------------------------------------------------------------------------------
Csv6 -  FL is ranked in the 1
iteration_1 add buggy code at line 212 Diagnostic: 
 -  
 + return  putIn(new  HashMap  <  String,  String>(values.length  +  1));  Map.Entry < String, String> entry =(Map.Entry < String, String>)this.values.get(0); 
 ----------------------------------------------------------------------------------------------------
repair_iteration/Cli27/2/iteration_0/plausible.csv
Math49 -  FL is ranked in the 10
iteration_2 replace buggy code at line 77 Diagnostic: 
 -  this.epsilon  =  epsilon  +  DEFAULT_ZERO_TOLERANCE;  epsilon  =  virtualSize  +  DEFAULT_ZERO_TOLERANCE;  
 + this.epsilon = dimension + DEFAULT_ZERO_TOLERANCE; epsilon = virtualSize + DEFAULT_ZERO_TOLERANCE; 
 ----------------------------------------------------------------------------------------------------
Math49 -  FL is ranked in the 10
iteration_2 replace buggy code at line 77 Diagnostic: 
 -  this.epsilon  =  epsilon  +  DEFAULT_ZERO_TOLERANCE;  epsilon  =  epsilon  +  DEFAULT_ZERO_TOLERANCE;  
 + this.epsilon = dimension + DEFAULT_ZERO_TOLERANCE; epsilon = dimension + DEFAULT_ZERO_TOLERANCE; 
 ----------------------------------------------------------------------------------------------------
Math49 -  FL is ranked in the 10
iteration_2 replace buggy code at line 77 Diagnostic: 
 -  this.epsilon  =  DEFAULT_ZERO_TOLERANCE  +  epsilon;  Iterator  iter  =  entries.iterator();  
 + this.epsilon = dimension + DEFAULT_ZERO_TOLERANCE; Iterator iter = entries.iterator(); 
 ----------------------------------------------------------------------------------------------------
Math49 -  FL is ranked in the 10
iteration_2 replace buggy code at line 77 Diagnostic: 
 -  this.epsilon  =  DEFAULT_ZERO_TOLERANCE  +  epsilon;  Iterator  iter  =  entries.iterator();  
 + this.epsilon = DEFAULT_ZERO_TOLERANCE + dimension; Iterator iter = entries.iterator(); 
 ----------------------------------------------------------------------------------------------------
Math49 -  FL is ranked in the 10
iteration_1 replace buggy code at line 77 Diagnostic: 
 -  this.epsilon  =  epsilon  +  DEFAULT_ZERO_TOLERANCE;  
 + this.epsilon = dimension + DEFAULT_ZERO_TOLERANCE; 
 ----------------------------------------------------------------------------------------------------
Math49 -  FL is ranked in the 10
iteration_1 replace buggy code at line 77 Diagnostic: 
 -  this.epsilon  =  epsilon  +  DEFAULT_ZERO_TOLERANCE;  
 + this.epsilon = virtualSize + DEFAULT_ZERO_TOLERANCE; 
 ----------------------------------------------------------------------------------------------------
Math49 -  FL is ranked in the 10
iteration_1 replace buggy code at line 77 Diagnostic: 
 -  this.epsilon  =  DEFAULT_ZERO_TOLERANCE  +  epsilon;  
 + this.epsilon = DEFAULT_ZERO_TOLERANCE + dimension; 
 ----------------------------------------------------------------------------------------------------
Math49 -  FL is ranked in the 10
iteration_1 replace buggy code at line 77 Diagnostic: 
 -  this.epsilon  =  DEFAULT_ZERO_TOLERANCE  +  epsilon;  
 + this.epsilon = dimension + epsilon; 
 ----------------------------------------------------------------------------------------------------
Math49 -  FL is ranked in the 10
iteration_1 replace buggy code at line 77 Diagnostic: 
 -  this.epsilon  =  epsilon  *  DEFAULT_ZERO_TOLERANCE;  
 + this.epsilon = epsilon / DEFAULT_ZERO_TOLERANCE; 
 ----------------------------------------------------------------------------------------------------
repair_iteration/Math49/10/iteration_0/plausible.csv
repair_iteration/Chart1/9/iteration_0/plausible.csv
repair_iteration/Math41/23/iteration_0/plausible.csv
Math104 -  FL is ranked in the 1
iteration_2 replace buggy code at line 162 Diagnostic: 
 -  }  else  if  (a  >=  1.0  &&  x  <  a)  {  else  if  (a  >=  1.0  &&  x  <  a)  {  
 + } else if(x >= 1.0) { 
 ----------------------------------------------------------------------------------------------------
Math104 -  FL is ranked in the 1
iteration_2 replace buggy code at line 162 Diagnostic: 
 -  }  else  if  (a  >=  1.0  &&  x  <  a)  {  else  if  (a  >=  1.0  &&  x  <  a)  {  
 + } else if(x!= 0.0) { 
 ----------------------------------------------------------------------------------------------------
Math104 -  FL is ranked in the 1
iteration_2 replace buggy code at line 162 Diagnostic: 
 -  }  else  if  (x  >=  1.0  &&  a  >  a)  {  }  else  if  (x!=  1.0  &&  a  >  a)  {  
 + } else if(x >= 1.0 && a > epsilon) { 
 ----------------------------------------------------------------------------------------------------
Math104 -  FL is ranked in the 1
iteration_2 replace buggy code at line 162 Diagnostic: 
 -  }  else  if  (x  >=  1.0  &&  a  >  a)  {  }  else  if  (x!=  1.0  &&  a  >  a)  {  
 + } else if(x == 1.0 && a > epsilon) { 
 ----------------------------------------------------------------------------------------------------
Math104 -  FL is ranked in the 1
iteration_1 replace buggy code at line 162 Diagnostic: 
 -  }  else  if  (a  >=  1.0  &&  x  <  a)  {  
 + } else if(x >= 0.0) { 
 ----------------------------------------------------------------------------------------------------
repair_iteration/Math104/1/iteration_0/plausible.csv
Codec15 -  FL is ranked in the 1
iteration_2 replace buggy code at line 193 Diagnostic: 
 -      if(firstCode  ==  mappedChar  ||  'H'  ==  preHWChar  ||  'W'  ==  preHWChar)  {  return  0;  }  if(firstCode  ==  mappedChar  ||  'h'  ==  preHWChar  ||  'W'  ==  preHWChar)  {  return  0;  }  
 + if(firstCode == mappedChar || 'h' == preHWChar || 'W' == preHWChar) { return 0; } 
 ----------------------------------------------------------------------------------------------------
Codec15 -  FL is ranked in the 1
iteration_2 replace buggy code at line 193 Diagnostic: 
 -  if(firstCode  ==  'H'  ||  firstCode  ==  preHWChar  ||  'W'  ==  preHWChar)  {  return  0;  }  
 + if(firstCode == mappedChar || firstCode == preHWChar || 'W' == preHWChar) { return 0; } 
 ----------------------------------------------------------------------------------------------------
repair_iteration/Closure38/6/iteration_0/plausible.csv
Lang63 -  FL is ranked in the 7
iteration_2 replace buggy code at line 439 Diagnostic: 
 -  return  startValue  -  endValue;  
 + return startValue - newdiff; 
 ----------------------------------------------------------------------------------------------------
Lang63 -  FL is ranked in the 7
iteration_2 replace buggy code at line 439 Diagnostic: 
 -  return  newdiff  -  1  +  1;  
 + return endValue - 1 + 1; 
 ----------------------------------------------------------------------------------------------------
Lang63 -  FL is ranked in the 7
iteration_2 add buggy code at line 439 Diagnostic: 
 -  
 +         newdiff    =    Math.max(newdiff,    endValue);    newdiff  =  Math.max(newdiff,  endValue);  newdiff = Math.min(newdiff, endValue); newdiff = Math.max(newdiff, endValue); 
 ----------------------------------------------------------------------------------------------------
Lang63 -  FL is ranked in the 7
iteration_2 add buggy code at line 439 Diagnostic: 
 -  
 +         newdiff    =    Math.max(newdiff,    endValue);    newdiff  =  Math.max(newdiff,  endValue);  newdiff = Math.max(newdiff, endValue); newdiff = Math.min(newdiff, endValue); 
 ----------------------------------------------------------------------------------------------------
Lang63 -  FL is ranked in the 7
iteration_2 add buggy code at line 439 Diagnostic: 
 -  
 +         newdiff    =    Math.max(newdiff,    endValue);    newdiff  =  Math.max(newdiff,  endValue  -  difference);  newdiff = Math.min(newdiff, endValue); newdiff = Math.max(newdiff, endValue - difference); 
 ----------------------------------------------------------------------------------------------------
Lang63 -  FL is ranked in the 7
iteration_2 add buggy code at line 439 Diagnostic: 
 -  
 +         newdiff    =    Math.max(newdiff,    endValue);    newdiff  =  Math.max(newdiff,  endValue  -  startValue);  newdiff = Math.min(newdiff, endValue); newdiff = Math.max(newdiff, endValue - startValue); 
 ----------------------------------------------------------------------------------------------------
Lang63 -  FL is ranked in the 7
iteration_1 replace buggy code at line 439 Diagnostic: 
 -  return  startValue;  
 + return 0; 
 ----------------------------------------------------------------------------------------------------
Lang63 -  FL is ranked in the 7
iteration_1 add buggy code at line 439 Diagnostic: 
 -  
 +     newdiff  =  Math.max(newdiff,  endValue);  newdiff = Math.min(newdiff, endValue); 
 ----------------------------------------------------------------------------------------------------
Lang63 -  FL is ranked in the 7
iteration_1 replace buggy code at line 439 Diagnostic: 
 -  return  newdiff  -  endValue;  
 + return newdiff * endValue; 
 ----------------------------------------------------------------------------------------------------
repair_iteration/Lang63/7/iteration_0/plausible.csv
repair_iteration/Lang63/7/iteration_0/plausible.csv
repair_iteration/Lang63/7/iteration_0/plausible.csv
Lang63 -  FL is ranked in the 6
iteration_2 add buggy code at line 438 Diagnostic: 
 -  
 + end.add(field,  newdiff  +  1  *  difference  -  1);  start.add(field, newdiff + 1 * difference - 1); 
 ----------------------------------------------------------------------------------------------------
Lang63 -  FL is ranked in the 6
iteration_2 replace buggy code at line 438 Diagnostic: 
 -  int  milliseconds  =  Math.min(milliseconds,  startValue  -  endValue);  
 + int milliseconds = Math.min(newdiff, startValue - endValue); 
 ----------------------------------------------------------------------------------------------------
Lang63 -  FL is ranked in the 6
iteration_2 replace buggy code at line 438 Diagnostic: 
 -      int  days  =  startValue  -  startValue;  int  days  =  startValue  +  startValue;  
 + int days = startValue + endValue; 
 ----------------------------------------------------------------------------------------------------
Lang63 -  FL is ranked in the 6
iteration_2 replace buggy code at line 438 Diagnostic: 
 -      int  days  =  startValue  -  startValue;  int  days  =  startValue  +  startValue;  
 + int days = endValue + startValue; 
 ----------------------------------------------------------------------------------------------------
Lang63 -  FL is ranked in the 6
iteration_2 replace buggy code at line 438 Diagnostic: 
 -      int  seconds  =  startValue  -  startValue;  int  minutes  =  startValue  -  startValue;  
 + int seconds = endValue - startValue; int minutes = endValue - startValue; 
 ----------------------------------------------------------------------------------------------------
Lang63 -  FL is ranked in the 6
iteration_2 replace buggy code at line 438 Diagnostic: 
 -      int  seconds  =  startValue  -  startValue;  int  minutes  =  startValue  -  startValue;  
 + int seconds = startValue - endValue; int minutes = startValue - startValue; 
 ----------------------------------------------------------------------------------------------------
Lang63 -  FL is ranked in the 6
iteration_2 replace buggy code at line 438 Diagnostic: 
 -      int  seconds  =  startValue  -  startValue;  int  minutes  =  startValue  -  startValue;  
 + int seconds = endValue - startValue; int minutes = startValue - startValue; 
 ----------------------------------------------------------------------------------------------------
Lang63 -  FL is ranked in the 6
iteration_2 replace buggy code at line 438 Diagnostic: 
 -  end.add(field,  newdiff  /  1);  
 + end.add(field, newdiff / 2); 
 ----------------------------------------------------------------------------------------------------
Lang63 -  FL is ranked in the 6
iteration_2 replace buggy code at line 438 Diagnostic: 
 -  end.add(field,  newdiff  /  1);  
 + end.add(newdiff, field / 1); 
 ----------------------------------------------------------------------------------------------------
Lang63 -  FL is ranked in the 6
iteration_2 replace buggy code at line 438 Diagnostic: 
 -  end.add(field,  newdiff  *  1);  
 + end.add(newdiff, field * 1); 
 ----------------------------------------------------------------------------------------------------
Lang63 -  FL is ranked in the 6
iteration_2 add buggy code at line 438 Diagnostic: 
 -  
 + end.add(field,  newdiff  +  2);  start.add(field, newdiff + 2); 
 ----------------------------------------------------------------------------------------------------
Lang63 -  FL is ranked in the 6
iteration_2 replace buggy code at line 438 Diagnostic: 
 -  end.add(field,  newdiff  +  1);  end.add(field,  newdiff  +  1);  
 + if(startValue == endValue) { end.add(field, newdiff + 1); } 
 ----------------------------------------------------------------------------------------------------
Lang63 -  FL is ranked in the 6
iteration_2 replace buggy code at line 438 Diagnostic: 
 -      int  days  =  startValue  -  startValue;  int  days  =  endValue  -  startValue;  
 + long days = startValue - startValue; 
 ----------------------------------------------------------------------------------------------------
Lang63 -  FL is ranked in the 6
iteration_2 replace buggy code at line 438 Diagnostic: 
 -  end.add(newdiff,  newdiff  -  startValue);  
 + end.add(newdiff, startValue - newdiff); 
 ----------------------------------------------------------------------------------------------------
Lang63 -  FL is ranked in the 6
iteration_2 replace buggy code at line 438 Diagnostic: 
 -  end.add(newdiff,  newdiff  -  startValue);  
 + end.add(newdiff, newdiff - 1); 
 ----------------------------------------------------------------------------------------------------
Lang63 -  FL is ranked in the 6
iteration_2 replace buggy code at line 438 Diagnostic: 
 -  end.add(field,  newdiff  +  1  *  difference  );  int  end.add(field,  newdiff  +  1  *  difference  );  
 + if(newdiff == 0) { end.add(field, newdiff + 1 * difference ); } 
 ----------------------------------------------------------------------------------------------------
Lang63 -  FL is ranked in the 6
iteration_2 add buggy code at line 438 Diagnostic: 
 -  
 + end.add(field,    newdiff    +    1);    end.add(field,  newdiff  +  1);  start.add(field, newdiff + 1); end.add(field, newdiff + 1); 
 ----------------------------------------------------------------------------------------------------
Lang63 -  FL is ranked in the 6
iteration_2 replace buggy code at line 438 Diagnostic: 
 -  end.add(newdiff,  field  -  startValue);  
 + end.add(newdiff, startValue - field); 
 ----------------------------------------------------------------------------------------------------
Lang63 -  FL is ranked in the 6
iteration_2 replace buggy code at line 438 Diagnostic: 
 -  end.add(field,  newdiff  +  1  *  difference  -  1);  
 + end.add(newdiff, newdiff + 1 * difference - 1); 
 ----------------------------------------------------------------------------------------------------
Lang63 -  FL is ranked in the 6
iteration_2 replace buggy code at line 438 Diagnostic: 
 -      int  milliseconds  =  Math.min(endValue,  difference  -  startValue);  int  milliseconds  =  Math.max(endValue,  difference  -  startValue);  
 + int milliseconds = Math.max(newdiff, endValue - startValue); 
 ----------------------------------------------------------------------------------------------------
Lang63 -  FL is ranked in the 6
iteration_2 add buggy code at line 438 Diagnostic: 
 -  
 + end.add(field,  newdiff  /  1);  start.add(field, newdiff / 1); 
 ----------------------------------------------------------------------------------------------------
Lang63 -  FL is ranked in the 6
iteration_2 add buggy code at line 438 Diagnostic: 
 -  
 + end.add(field,  newdiff  *  1);  start.add(field, newdiff * 1); 
 ----------------------------------------------------------------------------------------------------
Lang63 -  FL is ranked in the 6
iteration_2 add buggy code at line 438 Diagnostic: 
 -  
 + end.add(field,    newdiff    +    1    *    difference    );    end.add(field,  newdiff  +  1  *  difference  );  start.add(field, newdiff + 1 * difference ); end.add(field, newdiff + 1 * difference ); 
 ----------------------------------------------------------------------------------------------------
Lang63 -  FL is ranked in the 6
iteration_2 replace buggy code at line 438 Diagnostic: 
 -  end.add(field,  newdiff  +  2);  
 + end.add(newdiff, newdiff + 1); 
 ----------------------------------------------------------------------------------------------------
Lang63 -  FL is ranked in the 6
iteration_2 replace buggy code at line 438 Diagnostic: 
 -      int  milliseconds  =  Math.min(endValue,  difference  -  startValue);  int  milliseconds  =  Math.min(startValue,  difference  -  startValue);  
 + int milliseconds = Math.min(startValue, endValue - startValue); 
 ----------------------------------------------------------------------------------------------------
Lang63 -  FL is ranked in the 6
iteration_2 replace buggy code at line 438 Diagnostic: 
 -  end.add(startValue,  newdiff  +  1);  
 + end.add(newdiff, startValue + 1); 
 ----------------------------------------------------------------------------------------------------
Lang63 -  FL is ranked in the 6
iteration_2 replace buggy code at line 438 Diagnostic: 
 -  end.add(startValue,  newdiff  +  1);  
 + end.add(startValue, newdiff - 1); 
 ----------------------------------------------------------------------------------------------------
Lang63 -  FL is ranked in the 6
iteration_2 replace buggy code at line 438 Diagnostic: 
 -  int  milliseconds  =  Math.min(milliseconds,  endValue  -  newdiff);  
 + int milliseconds = Math.min(newdiff, endValue - newdiff); 
 ----------------------------------------------------------------------------------------------------
Lang63 -  FL is ranked in the 6
iteration_2 replace buggy code at line 438 Diagnostic: 
 -  int  milliseconds  =  Math.min(milliseconds,  endValue  -  newdiff);  
 + int milliseconds = Math.min(newdiff, endValue - difference); 
 ----------------------------------------------------------------------------------------------------
Lang63 -  FL is ranked in the 6
iteration_2 replace buggy code at line 438 Diagnostic: 
 -      int  seconds  =  startValue  -  startValue;  int  seconds  =  startValue  +  startValue;  
 + int seconds = startValue + endValue; 
 ----------------------------------------------------------------------------------------------------
Lang63 -  FL is ranked in the 6
iteration_2 replace buggy code at line 438 Diagnostic: 
 -      int  milliseconds  =  Math.min(endValue,  difference  -  startValue);  int  milliseconds  =  Math.max(endValue,  difference  -  startValue);  
 + int milliseconds = Math.min(startValue, difference - startValue); 
 ----------------------------------------------------------------------------------------------------
Lang63 -  FL is ranked in the 6
iteration_2 replace buggy code at line 438 Diagnostic: 
 -      int  seconds  =  startValue  -  startValue;  int  seconds  =  startValue  +  startValue;  
 + int seconds = endValue + startValue; 
 ----------------------------------------------------------------------------------------------------
Lang63 -  FL is ranked in the 6
iteration_2 replace buggy code at line 438 Diagnostic: 
 -      int  milliseconds  =  Math.min(endValue,  difference  -  startValue);  int  milliseconds  =  Math.min(startValue,  difference  -  startValue);  
 + int milliseconds = Math.min(endValue, difference - 1); 
 ----------------------------------------------------------------------------------------------------
Lang63 -  FL is ranked in the 6
iteration_2 replace buggy code at line 438 Diagnostic: 
 -      int  days  =  startValue  -  startValue;  int  days  =  startValue  -  startValue);  
 + int days = endValue * startValue; 
 ----------------------------------------------------------------------------------------------------
Lang63 -  FL is ranked in the 6
iteration_2 replace buggy code at line 438 Diagnostic: 
 -      int  milliseconds  =  Math.min(endValue,  difference  -  startValue);  int  milliseconds  =  Math.min(endValue,  difference  -  startValue);  
 + int milliseconds = Math.min(startValue, difference - endValue); 
 ----------------------------------------------------------------------------------------------------
Lang63 -  FL is ranked in the 6
iteration_2 replace buggy code at line 438 Diagnostic: 
 -      int  seconds  =  startValue  -  startValue;  int  seconds  =  startValue  -  startValue;  
 + int seconds =(endValue - startValue)/ 2; 
 ----------------------------------------------------------------------------------------------------
Lang63 -  FL is ranked in the 6
iteration_2 replace buggy code at line 438 Diagnostic: 
 -  end.add(field,  newdiff  /  1);  
 + end.add(field, newdiff / difference); 
 ----------------------------------------------------------------------------------------------------
Lang63 -  FL is ranked in the 6
iteration_2 replace buggy code at line 438 Diagnostic: 
 -  end.add(field,  newdiff  +  1  *  difference  -  1);  
 + end.add(field, newdiff - 1 * difference - 1); 
 ----------------------------------------------------------------------------------------------------
Lang63 -  FL is ranked in the 6
iteration_2 replace buggy code at line 438 Diagnostic: 
 -  end.add(field,  newdiff  +  1  *  difference  -  1);  
 + end.add(field, newdiff + 1 / difference - 1); 
 ----------------------------------------------------------------------------------------------------
Lang63 -  FL is ranked in the 6
iteration_2 replace buggy code at line 438 Diagnostic: 
 -      int  milliseconds  =  Math.min(endValue,  difference  -  startValue);  int  milliseconds  =  Math.max(endValue,  difference  -  startValue);  
 + int milliseconds = Math.max(endValue, newdiff - startValue); 
 ----------------------------------------------------------------------------------------------------
Lang63 -  FL is ranked in the 6
iteration_2 replace buggy code at line 438 Diagnostic: 
 -      int  seconds  =  startValue  -  startValue;  int  seconds  =  startValue  -  startValue;  
 + int seconds = field - startValue; 
 ----------------------------------------------------------------------------------------------------
Lang63 -  FL is ranked in the 6
iteration_2 replace buggy code at line 438 Diagnostic: 
 -  end.add(newdiff,  field  -  startValue);  
 + end.add(newdiff, field - newdiff); 
 ----------------------------------------------------------------------------------------------------
Lang63 -  FL is ranked in the 6
iteration_2 replace buggy code at line 438 Diagnostic: 
 -  end.add(newdiff,  field  -  startValue);  
 + end.add(newdiff, field - 1); 
 ----------------------------------------------------------------------------------------------------
Lang63 -  FL is ranked in the 6
iteration_2 replace buggy code at line 438 Diagnostic: 
 -      int  milliseconds  =  Math.min(endValue,  difference  -  startValue);  int  milliseconds  =  Math.min(startValue,  difference  -  startValue);  
 + int milliseconds = Math.min(endValue, endValue - startValue); 
 ----------------------------------------------------------------------------------------------------
Lang63 -  FL is ranked in the 6
iteration_2 replace buggy code at line 438 Diagnostic: 
 -      int  days  =  startValue  -  startValue;  int  days  =  endValue  -  startValue;  
 + int days = endValue - startValue + 1; 
 ----------------------------------------------------------------------------------------------------
Lang63 -  FL is ranked in the 6
iteration_2 replace buggy code at line 438 Diagnostic: 
 -      int  seconds  =  startValue  -  startValue;  int  minutes  =  startValue  -  startValue;  
 + int seconds = endValue - startValue; int minutes = startValue - endValue; 
 ----------------------------------------------------------------------------------------------------
Lang63 -  FL is ranked in the 6
iteration_1 replace buggy code at line 438 Diagnostic: 
 -  end.add(field,  newdiff  +  1  *  difference  );  
 + end.add(field, newdiff + 1 - difference ); 
 ----------------------------------------------------------------------------------------------------
Lang63 -  FL is ranked in the 6
iteration_1 replace buggy code at line 438 Diagnostic: 
 -    int  days  =  startValue  -  startValue;  
 + int days = endValue - startValue; 
 ----------------------------------------------------------------------------------------------------
Lang63 -  FL is ranked in the 6
iteration_1 replace buggy code at line 438 Diagnostic: 
 -    int  days  =  startValue  -  startValue;  
 + int days = startValue - endValue; 
 ----------------------------------------------------------------------------------------------------
Lang63 -  FL is ranked in the 6
iteration_1 replace buggy code at line 438 Diagnostic: 
 -    int  days  =  startValue  -  startValue;  
 + int days = startValue - newdiff; 
 ----------------------------------------------------------------------------------------------------
Lang63 -  FL is ranked in the 6
iteration_1 replace buggy code at line 438 Diagnostic: 
 -    int  days  =  startValue  -  startValue;  
 + int days = newdiff - startValue; 
 ----------------------------------------------------------------------------------------------------
Lang63 -  FL is ranked in the 6
iteration_1 replace buggy code at line 438 Diagnostic: 
 -    int  seconds  =  startValue  -  startValue;  
 + int seconds = endValue - startValue; 
 ----------------------------------------------------------------------------------------------------
Lang63 -  FL is ranked in the 6
iteration_1 replace buggy code at line 438 Diagnostic: 
 -    int  seconds  =  startValue  -  startValue;  
 + int seconds = newdiff - startValue; 
 ----------------------------------------------------------------------------------------------------
Lang63 -  FL is ranked in the 6
iteration_1 replace buggy code at line 438 Diagnostic: 
 -    int  seconds  =  startValue  -  startValue;  
 + int seconds = startValue - newdiff; 
 ----------------------------------------------------------------------------------------------------
Lang63 -  FL is ranked in the 6
iteration_1 replace buggy code at line 438 Diagnostic: 
 -    int  seconds  =  startValue  -  startValue;  
 + int seconds = startValue - endValue; 
 ----------------------------------------------------------------------------------------------------
Lang63 -  FL is ranked in the 6
iteration_1 replace buggy code at line 438 Diagnostic: 
 -  end.add(field,  newdiff  +  1);  
 + end.add(newdiff, field + 1); 
 ----------------------------------------------------------------------------------------------------
Lang63 -  FL is ranked in the 6
iteration_1 add buggy code at line 438 Diagnostic: 
 -  
 + end.add(field,  newdiff  +  1);  start.add(field, newdiff + 1); 
 ----------------------------------------------------------------------------------------------------
Lang63 -  FL is ranked in the 6
iteration_1 replace buggy code at line 438 Diagnostic: 
 -    int  milliseconds  =  Math.min(endValue,  difference  -  startValue);  
 + int milliseconds = Math.min(newdiff, endValue - startValue); 
 ----------------------------------------------------------------------------------------------------
Lang63 -  FL is ranked in the 6
iteration_1 replace buggy code at line 438 Diagnostic: 
 -    int  milliseconds  =  Math.min(endValue,  difference  -  startValue);  
 + int milliseconds = Math.min(newdiff, difference - startValue); 
 ----------------------------------------------------------------------------------------------------
Lang63 -  FL is ranked in the 6
iteration_1 add buggy code at line 438 Diagnostic: 
 -  
 + end.add(field,  newdiff  +  1  *  difference  );  start.add(field, newdiff + 1 * difference ); 
 ----------------------------------------------------------------------------------------------------
Lang63 -  FL is ranked in the 6
iteration_1 add buggy code at line 438 Diagnostic: 
 -  
 + end.add(field,  newdiff  -  startValue);  start.add(field, newdiff - startValue); 
 ----------------------------------------------------------------------------------------------------
Lang63 -  FL is ranked in the 6
iteration_1 replace buggy code at line 438 Diagnostic: 
 -  end.add(field,  newdiff  +  1  *  difference  );  
 + end.add(field, newdiff + 1 * difference - startValue); 
 ----------------------------------------------------------------------------------------------------
Lang63 -  FL is ranked in the 6
iteration_1 replace buggy code at line 438 Diagnostic: 
 -  end.add(field,  newdiff  +  1  *  difference  );  
 + end.add(field, newdiff - 1 * difference ); 
 ----------------------------------------------------------------------------------------------------
Lang63 -  FL is ranked in the 6
iteration_1 replace buggy code at line 438 Diagnostic: 
 -    int  milliseconds  =  Math.min(endValue,  difference  -  startValue);  
 + int milliseconds = Math.min(endValue, newdiff - startValue); 
 ----------------------------------------------------------------------------------------------------
Lang63 -  FL is ranked in the 6
iteration_1 replace buggy code at line 438 Diagnostic: 
 -    int  seconds  =  startValue  -  startValue;  
 + int seconds = difference - startValue; 
 ----------------------------------------------------------------------------------------------------
Lang63 -  FL is ranked in the 6
iteration_1 replace buggy code at line 438 Diagnostic: 
 -    int  days  =  startValue  -  startValue;  
 + int days = startValue / startValue; 
 ----------------------------------------------------------------------------------------------------
Lang63 -  FL is ranked in the 6
iteration_1 replace buggy code at line 438 Diagnostic: 
 -  end.add(field,  newdiff  -  startValue);  
 + end.add(field, newdiff - startValue + 1); 
 ----------------------------------------------------------------------------------------------------
Lang63 -  FL is ranked in the 6
iteration_1 replace buggy code at line 438 Diagnostic: 
 -    int  days  =  startValue  -  startValue;  
 + int days = difference - startValue; 
 ----------------------------------------------------------------------------------------------------
Lang63 -  FL is ranked in the 6
iteration_1 replace buggy code at line 438 Diagnostic: 
 -  end.add(field,  newdiff  -  startValue);  
 + end.add(field, newdiff - 2); 
 ----------------------------------------------------------------------------------------------------
repair_iteration/Lang63/6/iteration_0/plausible.csv
repair_iteration/Lang63/6/iteration_0/plausible.csv
repair_iteration/Lang63/6/iteration_0/plausible.csv
repair_iteration/Lang63/6/iteration_0/plausible.csv
Lang63 -  FL is ranked in the 5
iteration_2 replace buggy code at line 437 Diagnostic: 
 -  int  newdiff  =  startValue  -  endValue  /  1;  
 + int newdiff = endValue - startValue / 1; 
 ----------------------------------------------------------------------------------------------------
Lang63 -  FL is ranked in the 5
iteration_2 replace buggy code at line 437 Diagnostic: 
 -  int  newdiff  =  startValue  -  endValue  /  1;  
 + int newdiff = difference - endValue / 1; 
 ----------------------------------------------------------------------------------------------------
Lang63 -  FL is ranked in the 5
iteration_2 replace buggy code at line 437 Diagnostic: 
 -  int  newdiff  =  startValue  /  difference;  
 + int newdiff = endValue / difference; 
 ----------------------------------------------------------------------------------------------------
Lang63 -  FL is ranked in the 5
iteration_2 replace buggy code at line 437 Diagnostic: 
 -  int  newdiff  =  startValue  /  difference;  
 + int newdiff = difference / startValue; 
 ----------------------------------------------------------------------------------------------------
Lang63 -  FL is ranked in the 5
iteration_2 replace buggy code at line 437 Diagnostic: 
 -  int  newdiff  =  startValue  -  endValue  /  1;  
 + int newdiff = difference - startValue / 1; 
 ----------------------------------------------------------------------------------------------------
Lang63 -  FL is ranked in the 5
iteration_2 replace buggy code at line 437 Diagnostic: 
 -  int  newdiff  =  startValue  *  endValue;  
 + int newdiff = 0 * endValue; 
 ----------------------------------------------------------------------------------------------------
Lang63 -  FL is ranked in the 5
iteration_1 replace buggy code at line 437 Diagnostic: 
 -  int  newdiff  =  startValue  /  endValue;  
 + int newdiff = endValue / startValue; 
 ----------------------------------------------------------------------------------------------------
Lang63 -  FL is ranked in the 5
iteration_1 replace buggy code at line 437 Diagnostic: 
 -  int  newdiff  =  startValue  /  endValue;  
 + int newdiff = difference / endValue; 
 ----------------------------------------------------------------------------------------------------
Lang63 -  FL is ranked in the 5
iteration_1 replace buggy code at line 437 Diagnostic: 
 -    
 + int newdiff = end.get(field); 
 ----------------------------------------------------------------------------------------------------
Lang63 -  FL is ranked in the 5
iteration_1 replace buggy code at line 437 Diagnostic: 
 -  int  newdiff  =  startValue  -  endValue  +  1;  
 + int newdiff = endValue - startValue + 1; 
 ----------------------------------------------------------------------------------------------------
Lang63 -  FL is ranked in the 5
iteration_1 replace buggy code at line 437 Diagnostic: 
 -  int  newdiff  =  startValue  -  endValue  +  1;  
 + int newdiff = difference - endValue + 1; 
 ----------------------------------------------------------------------------------------------------
Lang63 -  FL is ranked in the 5
iteration_1 replace buggy code at line 437 Diagnostic: 
 -    
 + int newdiff = startValue - startValue; 
 ----------------------------------------------------------------------------------------------------
Lang63 -  FL is ranked in the 5
iteration_1 replace buggy code at line 437 Diagnostic: 
 -  int  newdiff  =  startValue  -  endValue  +  1;  
 + int newdiff = difference - startValue + 1; 
 ----------------------------------------------------------------------------------------------------
repair_iteration/Lang63/5/iteration_0/plausible.csv
repair_iteration/Lang63/5/iteration_0/plausible.csv
repair_iteration/Lang63/5/iteration_0/plausible.csv
repair_iteration/Lang63/5/iteration_0/plausible.csv
repair_iteration/Lang63/5/iteration_0/plausible.csv
Math81 -  FL is ranked in the 13
iteration_2 replace buggy code at line 1481 Diagnostic: 
 -  a2  =  Math.min(tType,  gam);  
 + a2 = Math.min(tType, dN); 
 ----------------------------------------------------------------------------------------------------
Math81 -  FL is ranked in the 13
iteration_2 replace buggy code at line 1481 Diagnostic: 
 -  a2  =  Math.max(tType,  gam);  
 + a2 = Math.max(tType, dN); 
 ----------------------------------------------------------------------------------------------------
Time15 -  FL is ranked in the 2
iteration_2 add buggy code at line 138 Diagnostic: 
 -  
 + while(val2  >=  val1)  {  throw  new  ArithmeticException(  "  ");  }  while(val2 >= val1) { throw new ArithmeticException( "  "); } 
 ----------------------------------------------------------------------------------------------------
Time15 -  FL is ranked in the 2
iteration_2 add buggy code at line 138 Diagnostic: 
 -  
 + while(val2  >=  val1)  {  throw  new  ArithmeticException(  "  ");  }  while(val2 == val1) { throw new ArithmeticException( "  "); } 
 ----------------------------------------------------------------------------------------------------
Time15 -  FL is ranked in the 2
iteration_2 add buggy code at line 138 Diagnostic: 
 -  
 + while(val2  >=  val1)  {  throw  new  ArithmeticException(  "  ");  }  while(val2 >= val1) { throw new ArithmeticException( ".  "); } 
 ----------------------------------------------------------------------------------------------------
Time15 -  FL is ranked in the 2
iteration_1 replace buggy code at line 138 Diagnostic: 
 -  if(val1  <  val2)  {  return  -val2;  }  else  {  safeMultiply(val1,  val2);  }  
 + if(val2 < val1) { return -val1; } else { safeMultiply(val2, val1); } 
 ----------------------------------------------------------------------------------------------------
Closure19 -  FL is ranked in the 1
iteration_2 replace buggy code at line 175 Diagnostic: 
 -  throw  new  IllegalArgumentException(  "Node  cannot  be  refined.  Node  defined  with  node.toStringTree()  "  +  node.toStringTree());  
 + if(type == null) { throw new IllegalArgumentException( "Node cannot be refined. Node defined with node.toStringTree() " + node.toStringTree()); } 
 ----------------------------------------------------------------------------------------------------
Closure19 -  FL is ranked in the 1
iteration_2 replace buggy code at line 175 Diagnostic: 
 -  throw  new  IllegalArgumentException(    "Node  cannot  be  refined.  n    "  +  node.getString());  new  IllegalArgumentException(    "Node  cannot  be  refined.  n    "  +  node.getString());  
 + new IllegalArgumentException( "Node cannot be refined. Node cannot be refined. " + node.getClass()); 
 ----------------------------------------------------------------------------------------------------
Closure19 -  FL is ranked in the 1
iteration_2 replace buggy code at line 175 Diagnostic: 
 -  throw  new  IllegalArgumentException(  "Node  cannot  be  refined.  Node  defined  with  node.toStringTree(),  "  +  node.toStringTree());  
 + if(node.getType() == Token.NAME) { throw new IllegalArgumentException( "Node cannot be refined. Node defined with node.toStringTree(), " + node.toStringTree()); } 
 ----------------------------------------------------------------------------------------------------
Closure19 -  FL is ranked in the 1
iteration_2 replace buggy code at line 175 Diagnostic: 
 -  throw  new  IllegalArgumentException(  "Node  cannot  be  refined.  Node  defined  with  node.toStringTree(),  "  +  node.toStringTree());  
 + if(type == null) { throw new IllegalArgumentException( "Node cannot be refined. Node defined with node.toStringTree(), " + node.toStringTree()); } 
 ----------------------------------------------------------------------------------------------------
Closure19 -  FL is ranked in the 1
iteration_2 replace buggy code at line 175 Diagnostic: 
 -  throw  new  IllegalArgumentException(  "Node  cannot  be  refined.  Node  defined  with  node.toStringTree(),  "  +  node.toStringTree());  
 + new IllegalArgumentException( "Node cannot be refined. Node defined with node.toStringTree(), " + node.toStringTree()); 
 ----------------------------------------------------------------------------------------------------
Closure19 -  FL is ranked in the 1
iteration_2 replace buggy code at line 175 Diagnostic: 
 -  throw  new  IllegalArgumentException(  "Node  cannot  be  refined.  Node  has  been  refined.  "  +  node.getQualifiedName());  
 + if(type == null) { throw new IllegalArgumentException( "Node cannot be refined. Node has been refined. " + node.getQualifiedName()); } 
 ----------------------------------------------------------------------------------------------------
Closure19 -  FL is ranked in the 1
iteration_2 replace buggy code at line 175 Diagnostic: 
 -  throw  new  IllegalArgumentException(    "Node  cannot  be  refined.  n    "  +  node.getQualifiedName());  new  IllegalArgumentException(    "Node  cannot  be  refined.  n    "  +  node.getQualifiedName());  
 + new IllegalArgumentException( "Node cannot be refined. Node cannot be refined. " + node.getQualifiedName()); 
 ----------------------------------------------------------------------------------------------------
Closure19 -  FL is ranked in the 1
iteration_2 replace buggy code at line 175 Diagnostic: 
 -  throw  new  IllegalArgumentException(    "Node  cannot  be  refined.  n    "  +  node.getQualifiedName());  new  IllegalArgumentException(    "Node  cannot  be  refined.  n    "  +  node.getQualifiedName());  
 + new IllegalArgumentException( "Node cannot be refined. n " + node.getQualifiedName()); 
 ----------------------------------------------------------------------------------------------------
Closure19 -  FL is ranked in the 1
iteration_2 replace buggy code at line 175 Diagnostic: 
 -  throw  new  IllegalArgumentException(    "Node  cannot  be  refined.  n    "  +  node.getQualifiedName());  new  IllegalArgumentException(    "Node  cannot  be  refined.  n    "  +  node.getQualifiedName());  
 + new IllegalArgumentException( "Node cannot be refined. can be refined. " + node.getQualifiedName()); 
 ----------------------------------------------------------------------------------------------------
Closure19 -  FL is ranked in the 1
iteration_2 replace buggy code at line 175 Diagnostic: 
 -  throw  new  IllegalArgumentException(    "Node  cannot  be  refined.  n    "  +  node.getQualifiedName());  new  IllegalArgumentException(    "Node  cannot  be  refined.  n    "  +  node.getQualifiedName());  
 + new IllegalArgumentException( "Node cannot be refined. node  " + node.getQualifiedName()); 
 ----------------------------------------------------------------------------------------------------
Closure19 -  FL is ranked in the 1
iteration_2 replace buggy code at line 175 Diagnostic: 
 -  throw  new  IllegalArgumentException(    "Node  cannot  be  refined.  n    "  +  node.getQualifiedName());  new  IllegalArgumentException(    "Node  cannot  be  refined.  n    "  +  node.getQualifiedName());  
 + new IllegalArgumentException( "Node cannot be refined. node. " + node.getQualifiedName()); 
 ----------------------------------------------------------------------------------------------------
Closure19 -  FL is ranked in the 1
iteration_2 replace buggy code at line 175 Diagnostic: 
 -  throw  new  IllegalArgumentException(    "Node  cannot  be  refined.  n    "  +  node.toStringTree());  new  IllegalArgumentException(    "Node  cannot  be  refined.  n    "  +  node.toStringTree());  
 + new IllegalArgumentException( "Node cannot be refined. Node cannot be refined. " + node.toStringTree()); 
 ----------------------------------------------------------------------------------------------------
Closure19 -  FL is ranked in the 1
iteration_2 replace buggy code at line 175 Diagnostic: 
 -  throw  new  IllegalArgumentException(    "Node  cannot  be  refined.  n    "  +  node.toStringTree());  new  IllegalArgumentException(    "Node  cannot  be  refined.  n    "  +  node.toStringTree());  
 + new IllegalArgumentException( "Node cannot be refined. can be refined. " + node.toStringTree()); 
 ----------------------------------------------------------------------------------------------------
Closure19 -  FL is ranked in the 1
iteration_2 replace buggy code at line 175 Diagnostic: 
 -  throw  new  IllegalArgumentException(    "Node  cannot  be  refined.  n    "  +  node.toStringTree());  new  IllegalArgumentException(    "Node  cannot  be  refined.  n    "  +  node.toStringTree());  
 + new IllegalArgumentException( "Node cannot be refined. node  " + node.toStringTree()); 
 ----------------------------------------------------------------------------------------------------
Closure19 -  FL is ranked in the 1
iteration_2 replace buggy code at line 175 Diagnostic: 
 -  throw  new  IllegalArgumentException(  "Node  cannot  be  refined.  Node  named:  "  +  node.getName());  
 + new IllegalArgumentException( "Node cannot be refined. Node named: " + node.getQualifiedName()); 
 ----------------------------------------------------------------------------------------------------
Closure19 -  FL is ranked in the 1
iteration_2 replace buggy code at line 175 Diagnostic: 
 -      Preconditions.checkNotNull(type);  Preconditions.checkNotNull(type);  
 + Preconditions.checkState(type!= null); Preconditions.checkNotNull(type); 
 ----------------------------------------------------------------------------------------------------
Closure19 -  FL is ranked in the 1
iteration_2 replace buggy code at line 175 Diagnostic: 
 -  throw  new  IllegalArgumentException(  "Node  cannot  be  refined.  Node  defined  with  type    "  +  node.getLineno());  
 + if(type == null) { throw new IllegalArgumentException( "Node cannot be refined. Node defined with type " + node.getLineno()); } 
 ----------------------------------------------------------------------------------------------------
Closure19 -  FL is ranked in the 1
iteration_2 replace buggy code at line 175 Diagnostic: 
 -  if(node.getType()  ==  Token.NAME)  {  throw  new  IllegalArgumentException(  "Node  cannot  be  refined.    "  +  node.getString());  }  else  {  scope.inferQualifiedSlot(node,  qualifiedName,  origType,  type);  }  
 + if(node.getType() == Token.NAME && node.getString().length() > 0) { throw new IllegalArgumentException( "Node cannot be refined. " + node.getString()); } 
 ----------------------------------------------------------------------------------------------------
Closure19 -  FL is ranked in the 1
iteration_2 replace buggy code at line 175 Diagnostic: 
 -  if(node.getType()  ==  Token.NAME)  {  throw  new  IllegalArgumentException(  "Node  cannot  be  refined.    "  +  node.getString());  }  else  {  scope.inferQualifiedSlot(node,  qualifiedName,  origType,  type);  }  
 + if(node.getType() == Token.NAME && node.getString().equals( "name ")) { throw new IllegalArgumentException( "Node cannot be refined. " + node.getString()); } 
 ----------------------------------------------------------------------------------------------------
Closure19 -  FL is ranked in the 1
iteration_2 replace buggy code at line 175 Diagnostic: 
 -  Preconditions.checkState(node.getType()  ==  Token.FUNCTION);  
 + Preconditions.checkState(node.getType()!= Token.FUNCTION); 
 ----------------------------------------------------------------------------------------------------
Closure19 -  FL is ranked in the 1
iteration_2 replace buggy code at line 175 Diagnostic: 
 -  Preconditions.checkState(node.getType()  ==  Token.FUNCTION);  
 + Preconditions.checkState(node.getType() == Token.FUNCTION || node.getJSType()!= type); 
 ----------------------------------------------------------------------------------------------------
Closure19 -  FL is ranked in the 1
iteration_2 replace buggy code at line 175 Diagnostic: 
 -  if(node.getType()  ==  Token.NAME)  {  throw  new  IllegalArgumentException(  "Node  cannot  be  refined.    "  +  node.toStringTree());  }  else  {  scope.inferQualifiedSlot(node,  qualifiedName,  origType,  type);  }  
 + if(node.getType() == Token.NAME || node.getType() == Token.FUNCTION) { throw new IllegalArgumentException( "Node cannot be refined. " + node.toStringTree()); } 
 ----------------------------------------------------------------------------------------------------
Closure19 -  FL is ranked in the 1
iteration_2 replace buggy code at line 175 Diagnostic: 
 -  if(node.getType()  ==  Token.NAME)  {  throw  new  IllegalArgumentException(  "Node  cannot  be  refined.    "  +  node.toStringTree());  }  else  {  scope.inferQualifiedSlot(node,  qualifiedName,  origType,  type);  }  
 + if(node.getType() == Token.FUNCTION) { throw new IllegalArgumentException( "Node cannot be refined. " + node.toStringTree()); } 
 ----------------------------------------------------------------------------------------------------
Closure19 -  FL is ranked in the 1
iteration_2 replace buggy code at line 175 Diagnostic: 
 -  if(node.getType()  ==  Token.NAME)  {  throw  new  IllegalArgumentException(  "Node  cannot  be  refined.    "  +  node.toStringTree());  }  else  {  scope.inferQualifiedSlot(node,  qualifiedName,  origType,  type);  }  
 + if(node.getType() == Token.NAME || node.getType() == Token.GETPROP) { throw new IllegalArgumentException( "Node cannot be refined. " + node.toStringTree()); } 
 ----------------------------------------------------------------------------------------------------
Closure19 -  FL is ranked in the 1
iteration_2 replace buggy code at line 175 Diagnostic: 
 -  if(node!=  null)  {  throw  new  IllegalArgumentException(  "Node  cannot  be  refined.  Node  can  be  refined.  "  +  node.toStringTree());  }  
 + if(node == null) { throw new IllegalArgumentException( "Node cannot be refined. Node can be refined. " + node.toStringTree()); } 
 ----------------------------------------------------------------------------------------------------
Closure19 -  FL is ranked in the 1
iteration_2 replace buggy code at line 175 Diagnostic: 
 -  Preconditions.checkArgument(type!=  null  &&  type.isUnknownType());  
 + Preconditions.checkArgument(type!= null || type.isUnknownType()); 
 ----------------------------------------------------------------------------------------------------
Closure19 -  FL is ranked in the 1
iteration_2 replace buggy code at line 175 Diagnostic: 
 -  throw  new  IllegalArgumentException(    "Node  cannot  be  refined.  n    "  +  node.getString());  Node  node  =  node.getFirstChild();  
 + node = node.getFirstChild(); 
 ----------------------------------------------------------------------------------------------------
Closure19 -  FL is ranked in the 1
iteration_2 replace buggy code at line 175 Diagnostic: 
 -  if(type!=  null)  {  throw  new  IllegalArgumentException(  "Node  cannot  be  refined.  can  be  refined.  "  +  node.toStringTree());  }  
 + if(type == null) { throw new IllegalArgumentException( "Node cannot be refined. can be refined. " + node.toStringTree()); } 
 ----------------------------------------------------------------------------------------------------
Closure19 -  FL is ranked in the 1
iteration_2 replace buggy code at line 175 Diagnostic: 
 -  throw  new  IllegalArgumentException(  "Node  cannot  be  refined.  Node  type  must  be  in  the  range  [  "  +  node.getString());  
 + if(type == null) { throw new IllegalArgumentException( "Node cannot be refined. Node type must be in the range [ " + node.getString()); } 
 ----------------------------------------------------------------------------------------------------
Closure19 -  FL is ranked in the 1
iteration_2 replace buggy code at line 175 Diagnostic: 
 -  throw  new  IllegalArgumentException(    "Node  cannot  be  refined.  n    "  +  node.getQualifiedName());  if(Node  cannot  be  refined.  n    "  +  node.getQualifiedName())  {  throw  new  IllegalArgumentException(  "Node  cannot  be  refined.  n    "  +  node.getQualifiedName());  }  
 + if(type == null) { throw new IllegalArgumentException( "Node cannot be refined. n " + node.getQualifiedName()); } 
 ----------------------------------------------------------------------------------------------------
Closure19 -  FL is ranked in the 1
iteration_2 replace buggy code at line 175 Diagnostic: 
 -  if(type!=  null)  {  throw  new  IllegalArgumentException(  "Node  cannot  be  refined.  node:  "  +  node.toStringTree());  }  
 + if(type == null) { throw new IllegalArgumentException( "Node cannot be refined. node: " + node.toStringTree()); } 
 ----------------------------------------------------------------------------------------------------
Closure19 -  FL is ranked in the 1
iteration_2 replace buggy code at line 175 Diagnostic: 
 -  if(type!=  null)  {  throw  new  IllegalArgumentException(  "Node  cannot  be  refined.  node:  "  +  node.toStringTree());  }  
 + if(type == null) { throw new IllegalArgumentException( "Node cannot be refined, node: " + node.toStringTree()); } 
 ----------------------------------------------------------------------------------------------------
Closure19 -  FL is ranked in the 1
iteration_2 replace buggy code at line 175 Diagnostic: 
 -  throw  new  IllegalArgumentException(  "Node  cannot  be  refined.  Node  named  with  qualified  name  '  "  +  node.getName());  
 + new IllegalArgumentException( "Node cannot be refined. Node named with qualified name ' " + node.getQualifiedName()); 
 ----------------------------------------------------------------------------------------------------
Closure19 -  FL is ranked in the 1
iteration_2 replace buggy code at line 175 Diagnostic: 
 -  throw  new  IllegalArgumentException(  "Node  cannot  be  refined.  Node  defined  with  qualified  name    "  +  node.getQualifiedName());  
 + if(type == null) { throw new IllegalArgumentException( "Node cannot be refined. Node defined with qualified name " + node.getQualifiedName()); } 
 ----------------------------------------------------------------------------------------------------
Closure19 -  FL is ranked in the 1
iteration_2 replace buggy code at line 175 Diagnostic: 
 -  throw  new  IllegalArgumentException(  "Node  cannot  be  refined.  Node  must  be  in  the  range  [  "  +  node.getQualifiedName());  
 + new IllegalArgumentException( "Node cannot be refined. Node must be in the range [ " + node.getQualifiedName() + "] "); 
 ----------------------------------------------------------------------------------------------------
Closure19 -  FL is ranked in the 1
iteration_2 replace buggy code at line 175 Diagnostic: 
 -  throw  new  IllegalArgumentException(    "Node  cannot  be  refined.  n    "  +  node.getLineno());  Node  cannot  be  refined.  n    "  +  node.getLineno());  scope.inferQualifiedSlot(node,  qualifiedName,  origType,  type);  
 + if(type == null) { throw new IllegalArgumentException( "Node cannot be refined.  " + node.getLineno()); } 
 ----------------------------------------------------------------------------------------------------
Closure19 -  FL is ranked in the 1
iteration_2 replace buggy code at line 175 Diagnostic: 
 -  throw  new  IllegalArgumentException(  "Node  cannot  be  refined.  Node  defined  with  qualified  name  '  "  +  node.getQualifiedName());  
 + if(type == null) { throw new IllegalArgumentException( "Node cannot be refined. Node defined with qualified name ' " + node.getQualifiedName()); } 
 ----------------------------------------------------------------------------------------------------
Closure19 -  FL is ranked in the 1
iteration_2 replace buggy code at line 175 Diagnostic: 
 -  throw  new  IllegalArgumentException(  "Node  cannot  be  refined.  Node  defined  with  qualified  name  '  "  +  node.getQualifiedName());  
 + new IllegalArgumentException( "Node cannot be refined. Node defined with qualified name ' " + node.getQualifiedName() + "' "); 
 ----------------------------------------------------------------------------------------------------
Closure19 -  FL is ranked in the 1
iteration_2 replace buggy code at line 175 Diagnostic: 
 -  Preconditions.checkState(node.getType()  ==  Token.NAME);  
 + Preconditions.checkState(node.getType()!= Token.NAME); 
 ----------------------------------------------------------------------------------------------------
Closure19 -  FL is ranked in the 1
iteration_2 replace buggy code at line 175 Diagnostic: 
 -  throw  new  IllegalArgumentException(    "Node  cannot  be  refined.  n    "  +  node.getLineno());  new  IllegalArgumentException(    "Node  cannot  be  refined.  n    "  +  node.getLineno());  
 + new IllegalArgumentException( "Node cannot be refined. Node cannot be refined. " + node.getLineno()); 
 ----------------------------------------------------------------------------------------------------
Closure19 -  FL is ranked in the 1
iteration_2 replace buggy code at line 175 Diagnostic: 
 -  throw  new  IllegalArgumentException(    "Node  cannot  be  refined.  n    "  +  node.getLineno());  new  IllegalArgumentException(    "Node  cannot  be  refined.  n    "  +  node.getLineno());  
 + new IllegalArgumentException( "Node cannot be refined. n " + node.getLineno()); 
 ----------------------------------------------------------------------------------------------------
Closure19 -  FL is ranked in the 1
iteration_2 replace buggy code at line 175 Diagnostic: 
 -  throw  new  IllegalArgumentException(    "Node  cannot  be  refined.  n    "  +  node.getLineno());  new  IllegalArgumentException(    "Node  cannot  be  refined.  n    "  +  node.getLineno());  
 + new IllegalArgumentException( "Node cannot be refined. can be refined. " + node.getLineno()); 
 ----------------------------------------------------------------------------------------------------
Closure19 -  FL is ranked in the 1
iteration_2 replace buggy code at line 175 Diagnostic: 
 -  throw  new  IllegalArgumentException(    "Node  cannot  be  refined.  n    "  +  node.getLineno());  new  IllegalArgumentException(    "Node  cannot  be  refined.  n    "  +  node.getLineno());  
 + new IllegalArgumentException( "Node cannot be refined. node  " + node.getLineno()); 
 ----------------------------------------------------------------------------------------------------
Closure19 -  FL is ranked in the 1
iteration_2 replace buggy code at line 175 Diagnostic: 
 -  throw  new  IllegalArgumentException(    "Node  cannot  be  refined.  n    "  +  node.getLineno());  new  IllegalArgumentException(    "Node  cannot  be  refined.  n    "  +  node.getLineno());  
 + new IllegalArgumentException( "Node cannot be refined. node. " + node.getLineno()); 
 ----------------------------------------------------------------------------------------------------
Closure19 -  FL is ranked in the 1
iteration_2 replace buggy code at line 175 Diagnostic: 
 -  new  IllegalArgumentException(  "Node  cannot  be  refined.    "  +  node.getMessage());  
 + new IllegalArgumentException( "Node cannot be refined.  " + node.getClass()); 
 ----------------------------------------------------------------------------------------------------
Closure19 -  FL is ranked in the 1
iteration_2 replace buggy code at line 175 Diagnostic: 
 -  throw  new  IllegalArgumentException(  "Node  cannot  be  refined.    "  +  node.getLineno());  
 + if(node.getType() == Token.NAME) { throw new IllegalArgumentException( "Node cannot be refined.  " + node.getLineno()); } 
 ----------------------------------------------------------------------------------------------------
Closure19 -  FL is ranked in the 1
iteration_2 replace buggy code at line 175 Diagnostic: 
 -  throw  new  IllegalArgumentException(  "Node  cannot  be  refined.  Node  defined  with  node.getLineno(),  "  +  node.getLineno());  
 + if(type == null) { throw new IllegalArgumentException( "Node cannot be refined. Node defined with node.getLineno(), " + node.getLineno()); } 
 ----------------------------------------------------------------------------------------------------
Closure19 -  FL is ranked in the 1
iteration_2 replace buggy code at line 175 Diagnostic: 
 -  throw  new  IllegalArgumentException(  "Node  cannot  be  refined.  Node  defined  with  node.getLineno(),  "  +  node.getLineno());  
 + if(node.getType() == Token.NAME) { throw new IllegalArgumentException( "Node cannot be refined. Node defined with node.getLineno(), " + node.getLineno()); } 
 ----------------------------------------------------------------------------------------------------
Closure19 -  FL is ranked in the 1
iteration_2 replace buggy code at line 175 Diagnostic: 
 -  if(node.getType()  ==  Token.NAME)  {  throw  new  IllegalArgumentException(  "Node  cannot  be  refined.    "  +  node.getString());  }  else  {  scope.inferQualifiedSlot(node,  qualifiedName,  origType);  }  
 + if(node.getType() == Token.NAME && node.getString().endsWith( "__ ")) { throw new IllegalArgumentException( "Node cannot be refined.  " + node.getString()); } 
 ----------------------------------------------------------------------------------------------------
Closure19 -  FL is ranked in the 1
iteration_2 replace buggy code at line 175 Diagnostic: 
 -  throw  new  IllegalArgumentException(  "Node  cannot  be  refined.  Node  defined  with  node.toStringTree().  "  +  node.toStringTree());  
 + if(node.getType() == Token.NAME) { throw new IllegalArgumentException( "Node cannot be refined. Node defined with node.toStringTree(). " + node.toStringTree()); } 
 ----------------------------------------------------------------------------------------------------
Closure19 -  FL is ranked in the 1
iteration_2 replace buggy code at line 175 Diagnostic: 
 -  throw  new  IllegalArgumentException(  "Node  cannot  be  refined.  Node  defined  with  node.toStringTree().  "  +  node.toStringTree());  
 + new IllegalArgumentException( "Node cannot be refined. Node defined with node.toStringTree(). " + node.toStringTree()); 
 ----------------------------------------------------------------------------------------------------
Closure19 -  FL is ranked in the 1
iteration_2 replace buggy code at line 175 Diagnostic: 
 -  Preconditions.checkNotNull(value);  
 + Preconditions.checkNotNull(scope); 
 ----------------------------------------------------------------------------------------------------
Closure19 -  FL is ranked in the 1
iteration_2 replace buggy code at line 175 Diagnostic: 
 -  Preconditions.checkNotNull(value);  
 + Preconditions.checkNotNull(node); 
 ----------------------------------------------------------------------------------------------------
Closure19 -  FL is ranked in the 1
iteration_2 replace buggy code at line 175 Diagnostic: 
 -  if(type!=  null)  {  throw  new  IllegalArgumentException(  "Node  cannot  be  refined.  Node  cannot  be  refined.  "  +  node.toStringTree());  }  
 + if(type == null) { throw new IllegalArgumentException( "Node cannot be refined. Node cannot be refined. " + node.toStringTree()); } 
 ----------------------------------------------------------------------------------------------------
Closure19 -  FL is ranked in the 1
iteration_2 replace buggy code at line 175 Diagnostic: 
 -  throw  new  IllegalArgumentException(  "Node  cannot  be  refined.  Node  defined  with  node.getQualifiedName(),  "  +  node.getQualifiedName());  
 + if(type == null) { throw new IllegalArgumentException( "Node cannot be refined. Node defined with node.getQualifiedName(), " + node.getQualifiedName()); } 
 ----------------------------------------------------------------------------------------------------
Closure19 -  FL is ranked in the 1
iteration_2 replace buggy code at line 175 Diagnostic: 
 -  throw  new  IllegalArgumentException(    "Node  cannot  be  refined.  n    "  +  node.toStringTree());  if(Node  cannot  be  refined.  n    "  +  node.toStringTree())  throw  new  IllegalArgumentException(  "Node  cannot  be  refined.  n    "  +  node.toStringTree());  
 + if(node.getType() == Token.FUNCTION) { throw new IllegalArgumentException( "Node cannot be refined. n " + node.toStringTree()); } 
 ----------------------------------------------------------------------------------------------------
Closure19 -  FL is ranked in the 1
iteration_2 replace buggy code at line 175 Diagnostic: 
 -  throw  new  IllegalArgumentException(  "Node  cannot  be  refined.  Node  defined  with  node.getLineno(),  "  +  node.getCharno());  
 + if(type == null) { throw new IllegalArgumentException( "Node cannot be refined. Node defined with node.getLineno(), " + node.getCharno()); } 
 ----------------------------------------------------------------------------------------------------
Closure19 -  FL is ranked in the 1
iteration_2 replace buggy code at line 175 Diagnostic: 
 -  throw  new  IllegalArgumentException(  "Node  cannot  be  refined.  Node  defined  with  node.getLineno(),  "  +  node.getCharno());  
 + if(node.getType() == Token.NAME) { throw new IllegalArgumentException( "Node cannot be refined. Node defined with node.getLineno(), " + node.getCharno()); } 
 ----------------------------------------------------------------------------------------------------
Closure19 -  FL is ranked in the 1
iteration_2 replace buggy code at line 175 Diagnostic: 
 -  throw  new  IllegalArgumentException(  "Node  cannot  be  refined.  Node  defined  with  node.getLineno(),  "  +  node.getCharno());  
 + new IllegalArgumentException( "Node cannot be refined. Node defined with node.getLineno(), " + node.getCharno()); 
 ----------------------------------------------------------------------------------------------------
Closure19 -  FL is ranked in the 1
iteration_2 replace buggy code at line 175 Diagnostic: 
 -  if(type!=  null)  {  throw  new  IllegalArgumentException(    "Node  cannot  be  refined.  n    "  +  node.toStringTree());  }  if(type!=  null)  {  throw  new  IllegalArgumentException(  "Node  cannot  be  refined.  n'    "  +  node.toStringTree());  }  
 + if(type == null) { throw new IllegalArgumentException( "Node cannot be refined. n' " + node.toStringTree()); } 
 ----------------------------------------------------------------------------------------------------
Closure19 -  FL is ranked in the 1
iteration_2 replace buggy code at line 175 Diagnostic: 
 -  throw  new  IllegalArgumentException(  "Node  cannot  be  refined.  Node  defined  with  qualified  name  =  "  +  node.getQualifiedName());  
 + if(type == null) { throw new IllegalArgumentException( "Node cannot be refined. Node defined with qualified name =  " + node.getQualifiedName()); } 
 ----------------------------------------------------------------------------------------------------
Closure19 -  FL is ranked in the 1
iteration_2 replace buggy code at line 175 Diagnostic: 
 -  throw  new  IllegalArgumentException(    "Node  cannot  be  refined.  n    "  +  node.toStringTree());  new  IllegalArgumentException(    "Node  cannot  be  refined.  n    "  +  node.toStringTree());  
 + new IllegalArgumentException( "Node cannot be refined. node. " + node.toStringTree()); 
 ----------------------------------------------------------------------------------------------------
Closure19 -  FL is ranked in the 1
iteration_2 replace buggy code at line 175 Diagnostic: 
 -  throw  new  IllegalArgumentException(  "Node  cannot  be  refined.  Node  does  not  exist:  "  +  node.toStringTree());  
 + if(node == null) { throw new IllegalArgumentException( "Node cannot be refined. Node does not exist: " + node.toStringTree()); } 
 ----------------------------------------------------------------------------------------------------
Closure19 -  FL is ranked in the 1
iteration_2 replace buggy code at line 175 Diagnostic: 
 -  throw  new  IllegalArgumentException(  "Node  cannot  be  refined.  Node  does  not  exist:  "  +  node.toStringTree());  
 + new IllegalArgumentException( "Node cannot be refined. Node does not exist: " + node.toStringTree()); 
 ----------------------------------------------------------------------------------------------------
Closure19 -  FL is ranked in the 1
iteration_2 replace buggy code at line 175 Diagnostic: 
 -  throw  new  IllegalArgumentException(  "Node  cannot  be  refined.  Node  type  is  defined.  "  +  type.toStringTree());  
 + new IllegalArgumentException( "Node cannot be refined. Node type is defined. " + node.toStringTree()); 
 ----------------------------------------------------------------------------------------------------
Closure19 -  FL is ranked in the 1
iteration_2 replace buggy code at line 175 Diagnostic: 
 -  throw  new  IllegalArgumentException(    "Node  cannot  be  refined.  n    "  +  node.getLineno());  Node  cannot  be  refined.  n    "  +  node.getLineno());  }  else  {  scope.inferQualifiedSlot(node,  qualifiedName,  origType,  type);  
 + Preconditions.checkState(node.getLineno() == node.getLineno()); 
 ----------------------------------------------------------------------------------------------------
Closure19 -  FL is ranked in the 1
iteration_2 replace buggy code at line 175 Diagnostic: 
 -  throw  new  IllegalArgumentException(    "Node  cannot  be  refined.  n    "  +  node.getLineno());  n    "  +  node.getLineno());  
 + node.setLineno(node.getLineno()); 
 ----------------------------------------------------------------------------------------------------
Closure19 -  FL is ranked in the 1
iteration_2 replace buggy code at line 175 Diagnostic: 
 -  throw  new  IllegalArgumentException(  "Node  cannot  be  refined.  Node  type  must  be  in  the  range  [  "  +  node.getString());  
 + new IllegalArgumentException( "Node cannot be refined. Node type must be in the range [ " + node.toStringTree()); 
 ----------------------------------------------------------------------------------------------------
Closure19 -  FL is ranked in the 1
iteration_2 replace buggy code at line 175 Diagnostic: 
 -  throw  new  IllegalArgumentException(  "Node  cannot  be  refined.  Node  named:  "  +  node.getMessage());  
 + new IllegalArgumentException( "Node cannot be refined. Node named: " + node.toStringTree()); 
 ----------------------------------------------------------------------------------------------------
Closure19 -  FL is ranked in the 1
iteration_2 replace buggy code at line 175 Diagnostic: 
 -  throw  new  IllegalArgumentException(  "Node  cannot  be  refined.  Node  must  be  in  the  same  type.    "  +  node.getMessage());  
 + new IllegalArgumentException( "Node cannot be refined. Node must be in the same type.  " + node.toStringTree()); 
 ----------------------------------------------------------------------------------------------------
Closure19 -  FL is ranked in the 1
iteration_2 replace buggy code at line 175 Diagnostic: 
 -  throw  new  IllegalArgumentException(  "Node  cannot  be  refined.  Node  defined  with  node.getString(),  "  +  node.getString());  
 + new IllegalArgumentException( "Node cannot be refined. Node defined with node.getString(), " + node.toStringTree()); 
 ----------------------------------------------------------------------------------------------------
Closure19 -  FL is ranked in the 1
iteration_2 replace buggy code at line 175 Diagnostic: 
 -  throw  new  IllegalArgumentException(  "Node  cannot  be  refined.  node:  "  +  node.getName());  
 + new IllegalArgumentException( "Node cannot be refined. node: " + node.toStringTree()); 
 ----------------------------------------------------------------------------------------------------
Closure19 -  FL is ranked in the 1
iteration_2 replace buggy code at line 175 Diagnostic: 
 -  throw  new  IllegalArgumentException(    "Node  cannot  be  refined.  n    "  +  node.getString());  JSType  node  =  scope.inferQualifiedSlot(node,  qualifiedName,  origType);  
 + if(type == null) { throw new IllegalArgumentException( "Node cannot be refined.  " + node.getString()); } 
 ----------------------------------------------------------------------------------------------------
Closure19 -  FL is ranked in the 1
iteration_2 replace buggy code at line 175 Diagnostic: 
 -  throw  new  IllegalArgumentException(  "Node  cannot  be  refined.  Node  has  been  refined.  "  +  node.getQualifiedName());  
 + new IllegalArgumentException( "Node cannot be refined. Node has been refined. " + node.toStringTree()); 
 ----------------------------------------------------------------------------------------------------
Closure19 -  FL is ranked in the 1
iteration_2 replace buggy code at line 175 Diagnostic: 
 -  throw  new  IllegalArgumentException(  "Node  cannot  be  refined.  Node  has  been  refined.  "  +  node.getQualifiedName());  
 + new IllegalArgumentException( "Node cannot be refined. Node has been refined. " + node.getQualifiedName()); 
 ----------------------------------------------------------------------------------------------------
Closure19 -  FL is ranked in the 1
iteration_2 replace buggy code at line 175 Diagnostic: 
 -      Preconditions.checkNotNull(type);  Preconditions.checkState(type!=  null);  
 + Preconditions.checkState(node!= null); 
 ----------------------------------------------------------------------------------------------------
Closure19 -  FL is ranked in the 1
iteration_2 replace buggy code at line 175 Diagnostic: 
 -  throw  new  IllegalArgumentException(  "Node  cannot  be  refined.  Node  defined  with  node.toStringTree().  "  +  node.toStringTree());  
 + if(node == null) { throw new IllegalArgumentException( "Node cannot be refined. Node defined with node.toStringTree(). " + node.toStringTree()); } 
 ----------------------------------------------------------------------------------------------------
Closure19 -  FL is ranked in the 1
iteration_2 replace buggy code at line 175 Diagnostic: 
 -  throw  new  IllegalArgumentException(  "Node  cannot  be  refined.  Node  defined  with  type    "  +  node.toStringTree());  
 + if(type == null) { throw new IllegalArgumentException( "Node cannot be refined. Node defined with type " + node.toStringTree()); } 
 ----------------------------------------------------------------------------------------------------
Closure19 -  FL is ranked in the 1
iteration_1 replace buggy code at line 175 Diagnostic: 
 -  if(type!=  null)  {  throw  new  IllegalArgumentException(  "Node  cannot  be  refined.  n  "  +  node.toStringTree());  }  
 + if(type == null) { throw new IllegalArgumentException( "Node cannot be refined. " + node.toStringTree()); } 
 ----------------------------------------------------------------------------------------------------
Closure19 -  FL is ranked in the 1
iteration_1 replace buggy code at line 175 Diagnostic: 
 -  throw  new  IllegalArgumentException(  "Node  cannot  be  refined.  n  "  +  type.toStringTree());  
 + new IllegalArgumentException( "Node cannot be refined.  " + node.toStringTree()); 
 ----------------------------------------------------------------------------------------------------
Closure19 -  FL is ranked in the 1
iteration_1 replace buggy code at line 175 Diagnostic: 
 -  throw  new  IllegalArgumentException(  "Node  cannot  be  refined.  n  "  +  node.getString());  
 + if(node.getType() == Token.NAME) { throw new IllegalArgumentException( "Node cannot be refined.  " + node.getString()); } 
 ----------------------------------------------------------------------------------------------------
Closure19 -  FL is ranked in the 1
iteration_1 replace buggy code at line 175 Diagnostic: 
 -  throw  new  IllegalArgumentException(  "Node  cannot  be  refined.  n  "  +  node.toStringTree());  
 + if(node.getType() == Token.NAME) { throw new IllegalArgumentException( "Node cannot be refined.  " + node.toStringTree()); } 
 ----------------------------------------------------------------------------------------------------
Closure19 -  FL is ranked in the 1
iteration_1 replace buggy code at line 175 Diagnostic: 
 -  throw  new  IllegalArgumentException(  "Node  cannot  be  refined.  n  "  +  node.getQualifiedName());  
 + new IllegalArgumentException( "Node cannot be refined.  " + node.getQualifiedName()); 
 ----------------------------------------------------------------------------------------------------
Closure19 -  FL is ranked in the 1
iteration_1 replace buggy code at line 175 Diagnostic: 
 -  if(node!=  null)  {  throw  new  IllegalArgumentException(  "Node  cannot  be  refined.  n  "  +  node.toStringTree());  }  
 + if(node == null) { throw new IllegalArgumentException( "Node cannot be refined. " + node.toStringTree()); } 
 ----------------------------------------------------------------------------------------------------
Closure19 -  FL is ranked in the 1
iteration_1 replace buggy code at line 175 Diagnostic: 
 -  if(node!=  null)  {  throw  new  IllegalArgumentException(  "Node  cannot  be  refined.  n  "  +  node.toStringTree());  }  
 + if(node == null) { throw new IllegalArgumentException( "Node cannot be refined. Node cannot be refined. " + node.toStringTree()); } 
 ----------------------------------------------------------------------------------------------------
Closure19 -  FL is ranked in the 1
iteration_1 replace buggy code at line 175 Diagnostic: 
 -    Preconditions.checkNotNull(type);  
 + Preconditions.checkState(type!= null); 
 ----------------------------------------------------------------------------------------------------
Closure19 -  FL is ranked in the 1
iteration_1 replace buggy code at line 175 Diagnostic: 
 -    Preconditions.checkNotNull(type);  
 + Preconditions.checkArgument(type!= null); 
 ----------------------------------------------------------------------------------------------------
Closure19 -  FL is ranked in the 1
iteration_1 replace buggy code at line 175 Diagnostic: 
 -    Preconditions.checkNotNull(type);  
 + Preconditions.checkState(!type.isUnknownType()); 
 ----------------------------------------------------------------------------------------------------
Closure19 -  FL is ranked in the 1
iteration_1 replace buggy code at line 175 Diagnostic: 
 -  throw  new  IllegalArgumentException(  "Node  cannot  be  refined.  n  "  +  node.getLineno());  
 + new IllegalArgumentException( "Node cannot be refined.  " + node.getLineno()); 
 ----------------------------------------------------------------------------------------------------
Closure19 -  FL is ranked in the 1
iteration_1 replace buggy code at line 175 Diagnostic: 
 -  throw  new  IllegalArgumentException(  "Node  cannot  be  refined.  n  "  +  node.getString());  
 + if(node == null) { throw new IllegalArgumentException( "Node cannot be refined.  " + node.getString()); } 
 ----------------------------------------------------------------------------------------------------
Closure19 -  FL is ranked in the 1
iteration_1 replace buggy code at line 175 Diagnostic: 
 -  throw  new  IllegalArgumentException(  "Node  cannot  be  refined.  n  "  +  node.getQualifiedName());  
 + if(type == null) { throw new IllegalArgumentException( "Node cannot be refined.  " + node.getQualifiedName()); } 
 ----------------------------------------------------------------------------------------------------
Closure19 -  FL is ranked in the 1
iteration_1 replace buggy code at line 175 Diagnostic: 
 -    Preconditions.checkNotNull(type);  
 + Preconditions.checkArgument(!type.isUnknownType()); 
 ----------------------------------------------------------------------------------------------------
repair_iteration/Closure19/1/iteration_0/plausible.csv
repair_iteration/Closure19/1/iteration_0/plausible.csv
repair_iteration/Closure19/1/iteration_0/plausible.csv
repair_iteration/Closure19/1/iteration_0/plausible.csv
repair_iteration/Closure107/1/iteration_0/plausible.csv
Chart12 -  FL is ranked in the 10
iteration_2 add buggy code at line 149 Diagnostic: 
 -  
 +         this.pieChart.setBackgroundPaint(null);    this.pieChart.setBackgroundPaint(null);  if(this.dataset!=  null)  {  this.pieChart  =  new  JFreeChart(piePlot);  }  else  {  this.pieChart.setBackgroundPaint(null);  }  this.pieChart.setBackgroundPaint(null); this.pieChart.setBackgroundPaint(null); if(this.dataset!= null) { this.dataset.addChangeListener(this); } 
 ----------------------------------------------------------------------------------------------------
repair_iteration/Closure123/16/iteration_0/plausible.csv
Lang15 -  FL is ranked in the 49
iteration_2 replace buggy code at line 675 Diagnostic: 
 -  if  (toClass.getTypeParameters().length  >  0  ||  toClass.equals(cls))  {  if  (toClass.getTypeParameters().length  ==  0  ||  toClass.equals(cls))  {  
 + if(typeVarAssigns.size() > 0 || toClass.getTypeParameters().length == 0 || toClass.equals(cls)) { 
 ----------------------------------------------------------------------------------------------------
repair_iteration/Math7/46/iteration_0/plausible.csv
Math7 -  FL is ranked in the 44
iteration_1 replace buggy code at line 304 Diagnostic: 
 -  if(!currentT)  {  
 + if(previousT!= currentT) { 
 ----------------------------------------------------------------------------------------------------
repair_iteration/Math7/44/iteration_0/plausible.csv
repair_iteration/Math7/44/iteration_0/plausible.csv
repair_iteration/Math80/14/iteration_0/plausible.csv
repair_iteration/Closure126/1/iteration_0/plausible.csv
Closure126 -  FL is ranked in the 2
iteration_2 replace buggy code at line 143 Diagnostic: 
 -      Node  elseBlock  =  finallyBlock.getFirstChild();  Node  elseBlock  =  finallyBlock.getFirstChild();  
 + Node elseBlock = finallyBlock == null? finallyBlock.getFirstChild() : null; 
 ----------------------------------------------------------------------------------------------------
Closure126 -  FL is ranked in the 2
iteration_2 replace buggy code at line 143 Diagnostic: 
 -      Node  elseBlock  =  n.getFirstChild();  Node  thenBlock  =  n.getFirstChild();  
 + Node elseBlock = allCatchNodes.getFirstChild(); Node thenBlock = n.getFirstChild(); 
 ----------------------------------------------------------------------------------------------------
Closure126 -  FL is ranked in the 2
iteration_2 replace buggy code at line 143 Diagnostic: 
 -      Node  elseBlock  =  n.getFirstChild();  Node  thenBlock  =  n.getFirstChild();  
 + Node elseBlock = n.getFirstChild(); Node thenBlock = n.getLastChild(); 
 ----------------------------------------------------------------------------------------------------
Closure126 -  FL is ranked in the 2
iteration_2 replace buggy code at line 143 Diagnostic: 
 -      Node  elseBlock  =  allCatchNodes.getFirstChild();  Node  elseBlock  =  allCatchNodes.getLastChild();  
 + Node elseBlock = allCatchNodes.getLastChild(); 
 ----------------------------------------------------------------------------------------------------
Closure126 -  FL is ranked in the 2
iteration_2 replace buggy code at line 143 Diagnostic: 
 -  Node  elseBlock  =  finallyBlock!=  null?  falseBlock  :  finallyBlock.getNext();  
 + Node elseBlock = finallyBlock!= null? tryBlock : finallyBlock.getNext(); 
 ----------------------------------------------------------------------------------------------------
Closure126 -  FL is ranked in the 2
iteration_2 replace buggy code at line 143 Diagnostic: 
 -  While(finallyBlock!=  null  &&  finallyBlock.isLabel())  {  tryMinimizeExits(finallyBlock,  exitType,  labelName);  }  
 + while(finallyBlock!= null && finallyBlock.isLabel()) { tryMinimizeExits(finallyBlock, exitType, labelName); } 
 ----------------------------------------------------------------------------------------------------
Closure126 -  FL is ranked in the 2
iteration_2 replace buggy code at line 143 Diagnostic: 
 -      Node  elseBlock  =  n.getFirstChild();  Node  otherBlock  =  n.getFirstChild();  
 + Node elseBlock = allCatchNodes.getFirstChild(); Node otherBlock = n.getFirstChild(); 
 ----------------------------------------------------------------------------------------------------
Closure126 -  FL is ranked in the 2
iteration_2 replace buggy code at line 143 Diagnostic: 
 -      Node  elseBlock  =  n.getFirstChild();  Node  otherBlock  =  n.getFirstChild();  
 + Node elseBlock = finallyBlock.getFirstChild(); Node otherBlock = n.getFirstChild(); 
 ----------------------------------------------------------------------------------------------------
Closure126 -  FL is ranked in the 2
iteration_2 replace buggy code at line 143 Diagnostic: 
 -      Node  elseBlock  =  n.getFirstChild();  Node  otherBlock  =  n.getFirstChild();  
 + Node elseBlock = n.getLastChild(); Node otherBlock = n.getFirstChild(); 
 ----------------------------------------------------------------------------------------------------
Closure126 -  FL is ranked in the 2
iteration_2 replace buggy code at line 143 Diagnostic: 
 -      Node  elseBlock  =  n.getFirstChild();  Node  otherBlock  =  n.getFirstChild();  
 + Node elseBlock = n.getFirstChild(); Node otherBlock = n.getLastChild(); 
 ----------------------------------------------------------------------------------------------------
Closure126 -  FL is ranked in the 2
iteration_2 replace buggy code at line 143 Diagnostic: 
 -      Node  elseBlock  =  finallyBlock.getFirstChild();  Node  elseBlock  =  finallyBlock.getLastChild();  
 + Node elseBlock = finallyBlock!= null? finallyBlock.getLastChild() : n.getLastChild(); 
 ----------------------------------------------------------------------------------------------------
Closure126 -  FL is ranked in the 2
iteration_2 replace buggy code at line 143 Diagnostic: 
 -      Node  elseBlock  =  allCatchNodes.getFirstChild();  Node  elseBlock  =  finallyBlock.getFirstChild();  
 + Node elseBlock = finallyBlock!= null? null : finallyBlock.getFirstChild(); 
 ----------------------------------------------------------------------------------------------------
Closure126 -  FL is ranked in the 2
iteration_2 replace buggy code at line 143 Diagnostic: 
 -  Node  elseBlock  =  finallyBlock!=  null?  falseBlock  :  finallyBlock.getFirstChild();  
 + Node elseBlock = finallyBlock!= null? tryBlock : finallyBlock.getFirstChild(); 
 ----------------------------------------------------------------------------------------------------
Closure126 -  FL is ranked in the 2
iteration_2 replace buggy code at line 143 Diagnostic: 
 -  tryMinimizeExits(n,  exitType,  labelName);  tryMinimizeExits(n,  exitType,  labelName);  
 + if(finallyBlock.isLabel()) { tryMinimizeExits(n, exitType, labelName); } 
 ----------------------------------------------------------------------------------------------------
Closure126 -  FL is ranked in the 2
iteration_2 replace buggy code at line 143 Diagnostic: 
 -  Node  elseBlock  =  finallyBlock  ==  null?  falseBlock  :  finallyBlock.getNext();  
 + Node elseBlock = finallyBlock == null? tryBlock : finallyBlock.getNext(); 
 ----------------------------------------------------------------------------------------------------
Closure126 -  FL is ranked in the 2
iteration_2 replace buggy code at line 143 Diagnostic: 
 -      Node  elseBlock  =  finallyBlock.getNext();  Node  thenBlock  =  finallyBlock.getNext();  
 + Node elseBlock = finallyBlock.getFirstChild(); Node thenBlock = finallyBlock.getNext(); 
 ----------------------------------------------------------------------------------------------------
Closure126 -  FL is ranked in the 2
iteration_2 replace buggy code at line 143 Diagnostic: 
 -      Node  elseBlock  =  finallyBlock.getNext();  Node  thenBlock  =  finallyBlock.getNext();  
 + Node elseBlock = finallyBlock.getParent(); Node thenBlock = finallyBlock.getNext(); 
 ----------------------------------------------------------------------------------------------------
Closure126 -  FL is ranked in the 2
iteration_2 replace buggy code at line 143 Diagnostic: 
 -      Node  elseBlock  =  finallyBlock.getNext();  Node  thenBlock  =  finallyBlock.getNext();  
 + Node elseBlock = finallyBlock.getNext(); Node thenBlock = finallyBlock.getParent(); 
 ----------------------------------------------------------------------------------------------------
Closure126 -  FL is ranked in the 2
iteration_2 replace buggy code at line 143 Diagnostic: 
 -  Node  elseBlock  =  finalBlock.getFirstChild();  
 + Node nextBlock = finallyBlock.getFirstChild(); 
 ----------------------------------------------------------------------------------------------------
Closure126 -  FL is ranked in the 2
iteration_2 replace buggy code at line 143 Diagnostic: 
 -      Node  elseBlock  =  finallyBlock.getFirstChild();  Node  elseBlock  =  finalementBlock.getFirstChild();  
 + Node elseBlock = finallyBlock!= null? finallyBlock.getFirstChild() : finallyBlock.getFirstChild(); 
 ----------------------------------------------------------------------------------------------------
Closure126 -  FL is ranked in the 2
iteration_2 replace buggy code at line 143 Diagnostic: 
 -      Node  elseBlock  =  finallyBlock.getLastChild();  Node  thenBlock  =  finallyBlock.getLastChild();  
 + Node elseBlock = finallyBlock.getFirstChild(); Node thenBlock = finallyBlock.getLastChild(); 
 ----------------------------------------------------------------------------------------------------
Closure126 -  FL is ranked in the 2
iteration_2 replace buggy code at line 143 Diagnostic: 
 -      Node  elseBlock  =  finallyBlock.getLastChild();  Node  thenBlock  =  finallyBlock.getLastChild();  
 + Node elseBlock = finallyBlock.getLastChild(); Node thenBlock = finallyBlock.getFirstChild(); 
 ----------------------------------------------------------------------------------------------------
Closure126 -  FL is ranked in the 2
iteration_2 replace buggy code at line 143 Diagnostic: 
 -      Node  elseBlock  =  finallyBlock.getLastChild();  Node  thenBlock  =  finallyBlock.getLastChild();  
 + Node elseBlock = finallyBlock.getNext(); Node thenBlock = finallyBlock.getLastChild(); 
 ----------------------------------------------------------------------------------------------------
Closure126 -  FL is ranked in the 2
iteration_2 replace buggy code at line 143 Diagnostic: 
 -      Node  elseBlock  =  finallyBlock.getFirstChild();  Node  elseBlock  =  finalementBlock.getFirstChild();  
 + Node elseBlock = finallyBlock == null? finallyBlock.getFirstChild() : finallyBlock.getFirstChild(); 
 ----------------------------------------------------------------------------------------------------
Closure126 -  FL is ranked in the 2
iteration_2 replace buggy code at line 143 Diagnostic: 
 -      Node  elseBlock  =  finallyBlock.getFirstChild();  Node  elseBlock  =  finallyBlock.getLastChild();  
 + Node elseBlock = finallyBlock!= null? finallyBlock.getFirstChild() : finallyBlock.getLastChild(); 
 ----------------------------------------------------------------------------------------------------
Closure126 -  FL is ranked in the 2
iteration_2 replace buggy code at line 143 Diagnostic: 
 -      Node  elseBlock  =  finallyBlock.getFirstChild();  Node  elseBlock  =  finallyBlock.getFirstChild();  
 + Node elseBlock = finallyBlock!= null? tryBlock.getFirstChild() : finallyBlock.getFirstChild(); 
 ----------------------------------------------------------------------------------------------------
Closure126 -  FL is ranked in the 2
iteration_2 replace buggy code at line 143 Diagnostic: 
 -      if(finallyBlock!=  null)  {  tryMinimizeExits(finallyBlock,  exitType,  labelName);  }  if(finallyBlock!=  null)  {  tryMinimizeExits(finallyBlock,  exitType,  labelName);  }  
 + Preconditions.checkState(finallyBlock!= null); 
 ----------------------------------------------------------------------------------------------------
Closure126 -  FL is ranked in the 2
iteration_2 replace buggy code at line 143 Diagnostic: 
 -      Node  elseBlock  =  n.getFirstChild();  Node  thenBlock  =  n.getFirstChild();  
 + Node elseBlock = finallyBlock.getFirstChild(); Node thenBlock = n.getFirstChild(); 
 ----------------------------------------------------------------------------------------------------
Closure126 -  FL is ranked in the 2
iteration_2 replace buggy code at line 143 Diagnostic: 
 -  tryMinimizeExits(n,  exitType,  labelName);  tryMinimizeExits(n,  exitType,  labelName);  }  
 + if(finallyBlock == null) { tryMinimizeExits(n, exitType, labelName); } 
 ----------------------------------------------------------------------------------------------------
Closure126 -  FL is ranked in the 2
iteration_2 replace buggy code at line 143 Diagnostic: 
 -  Node  elseBlock  =  finallyBlock!=  null?  falseBlock  :  finallyBlock.getFirstChild();  
 + Node elseBlock = finallyBlock!= null? finallyBlock : finallyBlock.getFirstChild(); 
 ----------------------------------------------------------------------------------------------------
Closure126 -  FL is ranked in the 2
iteration_2 replace buggy code at line 143 Diagnostic: 
 -      Node  elseBlock  =  finallyBlock.getLastChild();  Node  elseBlock  =  finalementBlock.getLastChild();  
 + Node elseBlock = finallyBlock!= null? finallyBlock.getLastChild() : finallyBlock.getLastChild(); 
 ----------------------------------------------------------------------------------------------------
Closure126 -  FL is ranked in the 2
iteration_2 replace buggy code at line 143 Diagnostic: 
 -  Node  elseBlock  =  finalBlock.getFirstChild();  
 + Node otherBlock = finallyBlock.getFirstChild(); 
 ----------------------------------------------------------------------------------------------------
Closure126 -  FL is ranked in the 2
iteration_2 replace buggy code at line 143 Diagnostic: 
 -      Node  elseBlock  =  finallyBlock.getFirstChild();  Node  elseBlock  =  finallyBlock.getLastChild();  
 + Node elseBlock = finallyBlock!= null? finallyBlock.getLastChild() : null; 
 ----------------------------------------------------------------------------------------------------
Closure126 -  FL is ranked in the 2
iteration_2 replace buggy code at line 143 Diagnostic: 
 -  Node  elseBlock  =  finallyBlock!=  null?  falseBlock  :  finallyBlock.getNext();  
 + Node elseBlock = finallyBlock!= null? finallyBlock : finallyBlock.getNext(); 
 ----------------------------------------------------------------------------------------------------
Closure126 -  FL is ranked in the 2
iteration_2 replace buggy code at line 143 Diagnostic: 
 -  triesMinimizeExits(finallyBlock,  exitType,  labelName);  
 + if(finallyBlock == null) { tryMinimizeExits(finallyBlock, exitType, labelName); } 
 ----------------------------------------------------------------------------------------------------
Closure126 -  FL is ranked in the 2
iteration_2 replace buggy code at line 143 Diagnostic: 
 -      Node  elseBlock  =  n.getFirstChild();  Node  thenBlock  =  n.getFirstChild();  
 + Node elseBlock = n.getFirstChild(); Node thenBlock = finallyBlock.getFirstChild(); 
 ----------------------------------------------------------------------------------------------------
Closure126 -  FL is ranked in the 2
iteration_1 replace buggy code at line 143 Diagnostic: 
 -    Node  elseBlock  =  allCatchNodes.getFirstChild();  
 + Node elseBlock = finallyBlock!= null? finallyBlock.getFirstChild() : allCatchNodes.getFirstChild(); 
 ----------------------------------------------------------------------------------------------------
Closure126 -  FL is ranked in the 2
iteration_1 replace buggy code at line 143 Diagnostic: 
 -    Node  elseBlock  =  allCatchNodes.getFirstChild();  
 + Node elseBlock = finallyBlock!= null? finallyBlock.getLastChild() : allCatchNodes.getFirstChild(); 
 ----------------------------------------------------------------------------------------------------
Closure126 -  FL is ranked in the 2
iteration_1 replace buggy code at line 143 Diagnostic: 
 -    Node  elseBlock  =  allCatchNodes.getFirstChild();  
 + Node elseBlock = finallyBlock!= null? allCatchNodes.getFirstChild() : finallyBlock; 
 ----------------------------------------------------------------------------------------------------
Closure126 -  FL is ranked in the 2
iteration_1 replace buggy code at line 143 Diagnostic: 
 -    Node  elseBlock  =  finallyBlock.getLastChild();  
 + Node elseBlock = n.getLastChild(); 
 ----------------------------------------------------------------------------------------------------
Closure126 -  FL is ranked in the 2
iteration_1 replace buggy code at line 143 Diagnostic: 
 -    Node  elseBlock  =  finallyBlock.getLastChild();  
 + Node elseBlock = finallyBlock.getParent(); 
 ----------------------------------------------------------------------------------------------------
Closure126 -  FL is ranked in the 2
iteration_1 replace buggy code at line 143 Diagnostic: 
 -    Node  elseBlock  =  allCatchNodes.getFirstChild();  
 + Node elseBlock = finallyBlock!= null? finallyBlock : allCatchNodes.getFirstChild(); 
 ----------------------------------------------------------------------------------------------------
Closure126 -  FL is ranked in the 2
iteration_1 replace buggy code at line 143 Diagnostic: 
 -    Node  elseBlock  =  finallyBlock.getNext();  
 + Node elseBlock = finallyBlock!= null? finallyBlock.getNext() : null; 
 ----------------------------------------------------------------------------------------------------
Closure126 -  FL is ranked in the 2
iteration_1 replace buggy code at line 143 Diagnostic: 
 -    Node  elseBlock  =  finallyBlock.getFirstChild();  
 + Node elseBlock = finallyBlock!= null? finallyBlock.getLastChild() : finallyBlock.getFirstChild(); 
 ----------------------------------------------------------------------------------------------------
Closure126 -  FL is ranked in the 2
iteration_1 replace buggy code at line 143 Diagnostic: 
 -    Node  elseBlock  =  finallyBlock.getFirstChild();  
 + Node elseBlock = finallyBlock!= null? finallyBlock.getFirstChild() : null; 
 ----------------------------------------------------------------------------------------------------
Closure126 -  FL is ranked in the 2
iteration_1 replace buggy code at line 143 Diagnostic: 
 -    Node  elseBlock  =  allCatchNodes.getFirstChild();  
 + Node elseBlock = finallyBlock == null? finallyBlock.getFirstChild() : allCatchNodes.getFirstChild(); 
 ----------------------------------------------------------------------------------------------------
Closure126 -  FL is ranked in the 2
iteration_1 replace buggy code at line 143 Diagnostic: 
 -    Node  elseBlock  =  finallyBlock.getLastChild();  
 + Node elseBlock = finallyBlock.cloneTree(); 
 ----------------------------------------------------------------------------------------------------
Closure126 -  FL is ranked in the 2
iteration_1 replace buggy code at line 143 Diagnostic: 
 -    Node  elseBlock  =  finallyBlock.getNext();  
 + Node elseBlock = finallyBlock == null? finallyBlock.getNext() : null; 
 ----------------------------------------------------------------------------------------------------
Chart26 -  FL is ranked in the 40
iteration_1 replace buggy code at line 1192 Diagnostic: 
 -  EntityCollection  entities  =  owner!=  null?  null  :  owner.getEntityCollection();  
 + EntityCollection entities = owner == null? null : owner.getEntityCollection(); 
 ----------------------------------------------------------------------------------------------------
Chart26 -  FL is ranked in the 29
iteration_2 replace buggy code at line 1101 Diagnostic: 
 -  if(label  ==  null  ||  label.equals(    "    "))  {  if(label  ==  null  ||  label.equals(    "    "))  {  
 + if(label!= null) { 
 ----------------------------------------------------------------------------------------------------
repair_iteration/Chart26/29/iteration_0/plausible.csv
Chart26 -  FL is ranked in the 1
iteration_2 replace buggy code at line 314 Diagnostic: 
 -  return  this.visible  <  =  false;  
 + return this.visible == false; 
 ----------------------------------------------------------------------------------------------------
Chart26 -  FL is ranked in the 1
iteration_1 replace buggy code at line 314 Diagnostic: 
 -  return  this.visible  <  =  true;  
 + return this.visible!= true; 
 ----------------------------------------------------------------------------------------------------
Chart26 -  FL is ranked in the 2
iteration_2 replace buggy code at line 342 Diagnostic: 
 -  return(label  ==  null)?  null  :  label.toString();  
 + return(label!= null)? null : label.toString(); 
 ----------------------------------------------------------------------------------------------------
Chart26 -  FL is ranked in the 2
iteration_2 replace buggy code at line 342 Diagnostic: 
 -  return(label  ==  null)?  null  :  label;  return(label  ==  null)?  null  :  label;  
 + return(label!= null)? null : label; 
 ----------------------------------------------------------------------------------------------------
Cli13 -  FL is ranked in the 11
iteration_2 add buggy code at line 193 Diagnostic: 
 -  
 +         if(commandLine    ==    null    ||    commandLine.equals(arg))    {    return    false;    }    if(commandLine  ==  null  ||  commandLine.equals(arg))  {  return  false;  }  if(commandLine == null || commandLine.equals(arg)) { return false; } if(commandLine!= null || commandLine.equals(arg)) { return false; } 
 ----------------------------------------------------------------------------------------------------
Cli13 -  FL is ranked in the 11
iteration_2 add buggy code at line 193 Diagnostic: 
 -  
 +         if(commandLine    ==    null    ||    commandLine.equals(arg))    {    return    false;    }    if(commandLine  ==  null  ||  commandLine.equals(arg))  {  return  false;  }  if(commandLine!= null || commandLine.equals(arg)) { return false; } if(commandLine == null || commandLine.equals(arg)) { return false; } 
 ----------------------------------------------------------------------------------------------------
Cli13 -  FL is ranked in the 11
iteration_2 add buggy code at line 193 Diagnostic: 
 -  
 +         if(commandLine    ==    null    ||    commandLine.equals(arg))    {    return    false;    }    if(commandLine  ==  null  ||  commandLine.equals(arg))  {  return  false;  }  if(commandLine == null || commandLine.equals(arg)) { return false; } if(commandLine == null || commandLine.equals(arg)) { return false; } if(commandLine!= null || commandLine.equals(arg)) { return false; } 
 ----------------------------------------------------------------------------------------------------
Cli13 -  FL is ranked in the 11
iteration_1 add buggy code at line 193 Diagnostic: 
 -  
 +     if(commandLine  ==  null  ||  commandLine.equals(arg))  {  return  false;  }  if(commandLine!= null || commandLine.equals(arg)) { return false; } 
 ----------------------------------------------------------------------------------------------------
repair_iteration/Cli13/11/iteration_0/plausible.csv
repair_iteration/Cli13/11/iteration_0/plausible.csv
repair_iteration/Cli13/11/iteration_0/plausible.csv
Cli13 -  FL is ranked in the 12
iteration_2 replace buggy code at line 203 Diagnostic: 
 -  processValues(commandLine,  args,  null);  WriteableCommandLine  commandLine  =  getWriteableCommandLine();  
 + if(args == null) { processValues(commandLine, args, null); } 
 ----------------------------------------------------------------------------------------------------
repair_iteration/Cli13/12/iteration_0/plausible.csv
Cli13 -  FL is ranked in the 6
iteration_2 replace buggy code at line 158 Diagnostic: 
 -  else  if(commandLine!=  null  &&  commandLine.looksLikeOption(allValuesQuoted))  {  if(commandLine!=  null  &&  commandLine.looksLikeOption(allValuesQuoted))  {  
 + if(arguments.hasNext()) { 
 ----------------------------------------------------------------------------------------------------
Cli13 -  FL is ranked in the 6
iteration_2 replace buggy code at line 158 Diagnostic: 
 -  else  if(commandLine.looksLikeOption(allValuesQuoted)&&  arguments.hasNext())  {  if(commandLine.looksLikeOption(allValuesQuoted)&&  arguments.hasNext())  {  
 + if(!commandLine.looksLikeOption(allValuesQuoted)&& arguments.hasNext()) { 
 ----------------------------------------------------------------------------------------------------
Cli13 -  FL is ranked in the 6
iteration_2 replace buggy code at line 158 Diagnostic: 
 -  else  if(commandLine.looksLikeOption(allValuesQuoted)&&  arguments.hasNext())  {  if(commandLine.looksLikeOption(allValuesQuoted)&&  arguments.hasNext())  {  
 + if(commandLine.looksLikeOption(allValuesQuoted)|| arguments.hasNext()) { 
 ----------------------------------------------------------------------------------------------------
Cli13 -  FL is ranked in the 6
iteration_2 replace buggy code at line 158 Diagnostic: 
 -  else  if(commandLine!=  null  &&  commandLine.looksLikeOption(allValuesQuoted)&&  arguments.hasNext())  {  
 + else if(commandLine!= null || commandLine.looksLikeOption(allValuesQuoted)&& arguments.hasNext()) { 
 ----------------------------------------------------------------------------------------------------
Cli13 -  FL is ranked in the 6
iteration_2 replace buggy code at line 158 Diagnostic: 
 -  else  if(commandLine.looksLikeOption(consumeRemaining)&&  arguments.hasNext())  {  
 + else if(commandLine.hasOption(option)&& arguments.hasNext()) { 
 ----------------------------------------------------------------------------------------------------
Cli13 -  FL is ranked in the 6
iteration_2 replace buggy code at line 158 Diagnostic: 
 -      if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  if(commandLine.looksLikeOption(defaultValues))  {  arguments.previous();  break;  }  
 + if(commandLine!= null) { if(commandLine.looksLikeOption(allValuesQuoted)) { arguments.previous(); break; } 
 ----------------------------------------------------------------------------------------------------
Cli13 -  FL is ranked in the 6
iteration_2 replace buggy code at line 158 Diagnostic: 
 -      if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  if(commandLine.looksLikeOption(defaultValues))  {  arguments.previous();  break;  }  
 + if(commandLine!= null) { if(commandLine.looksLikeOption(allValues)) { arguments.previous(); break; } 
 ----------------------------------------------------------------------------------------------------
Cli13 -  FL is ranked in the 6
iteration_2 replace buggy code at line 158 Diagnostic: 
 -  else  if(commandLine!=  null  &&  commandLine.looksLikeOption(allValuesQuoted))  {  if(commandLine!=  null  &&  commandLine.looksLikeOption(allValuesQuoted))  {  
 + if(commandLine!= null) { 
 ----------------------------------------------------------------------------------------------------
Cli13 -  FL is ranked in the 6
iteration_2 replace buggy code at line 158 Diagnostic: 
 -  else  if(commandLine!=  null  &&  commandLine.looksLikeOption(allValuesQuoted))  {  if(commandLine!=  null  &&  commandLine.looksLikeOption(allValuesQuoted))  {  
 + if(commandLine!= null || commandLine.looksLikeOption(allValuesQuoted)) { 
 ----------------------------------------------------------------------------------------------------
Cli13 -  FL is ranked in the 6
iteration_2 replace buggy code at line 158 Diagnostic: 
 -  else  if(commandLine!=  null  &&  commandLine.looksLikeOption(allValuesQuoted))  {  else  if(commandLine!=  null  &&  commandLine.looksLikeOption(option))  {  
 + else if(commandLine!= null && commandLine.hasOption(option)) { 
 ----------------------------------------------------------------------------------------------------
Cli13 -  FL is ranked in the 6
iteration_2 replace buggy code at line 158 Diagnostic: 
 -  else  if(commandLine!=  null  &&  commandLine.looksLikeOption(allValuesQuoted))  {  if(commandLine!=  null  &&  commandLine.looksLikeOption(defaultValuesQuoted))  {  
 + if(!allValues.isEmpty()) { 
 ----------------------------------------------------------------------------------------------------
Cli13 -  FL is ranked in the 6
iteration_2 replace buggy code at line 158 Diagnostic: 
 -  else  if(commandLine!=  null  &&  commandLine.looksLikeOption(allValuesQuoted))  {  if(commandLine!=  null  &&  commandLine.looksLikeOption(allValuesQuoted))  {  
 + if(arguments!= null) { 
 ----------------------------------------------------------------------------------------------------
Cli13 -  FL is ranked in the 6
iteration_2 replace buggy code at line 158 Diagnostic: 
 -  else  if(commandLine!=  null  &&  commandLine.looksLikeOption(allValuesQuoted))  {  else  if(commandLine!=  null  &&  commandLine.looksLikeOption(alwaysQuoted))  {  
 + else if(commandLine!= null && arguments.hasNext()) { 
 ----------------------------------------------------------------------------------------------------
Cli13 -  FL is ranked in the 6
iteration_2 replace buggy code at line 158 Diagnostic: 
 -      if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  List  <  ComparisonFailure>  arguments  =  stripBoundaryQuotes(allValuesQuoted);  
 + if(arguments.hasNext()) { if(commandLine.looksLikeOption(allValuesQuoted)) { arguments.previous(); break; } 
 ----------------------------------------------------------------------------------------------------
Cli13 -  FL is ranked in the 6
iteration_1 replace buggy code at line 158 Diagnostic: 
 -  else  if(commandLine!=  null  &&  commandLine.looksLikeOption(allValuesQuoted))  {  
 + else if(commandLine!= null || commandLine.looksLikeOption(allValuesQuoted)) { 
 ----------------------------------------------------------------------------------------------------
Cli13 -  FL is ranked in the 6
iteration_1 replace buggy code at line 158 Diagnostic: 
 -  else  if(commandLine.looksLikeOption(allValuesQuoted)&&  arguments.hasNext())  {  
 + else if(commandLine.looksLikeOption(allValuesQuoted)|| arguments.hasNext()) { 
 ----------------------------------------------------------------------------------------------------
repair_iteration/Cli13/6/iteration_0/plausible.csv
Cli13 -  FL is ranked in the 1
iteration_1 replace buggy code at line 144 Diagnostic: 
 -  int  argumentCount  =  1;  
 + int argumentCount = 2; 
 ----------------------------------------------------------------------------------------------------
Cli13 -  FL is ranked in the 2
iteration_2 replace buggy code at line 146 Diagnostic: 
 -  while(arguments.hasNext()  &&(argumentCount  <  maximal))  {  
 + while(arguments.hasNext() &&(argumentCount < argumentCount)) { 
 ----------------------------------------------------------------------------------------------------
Cli13 -  FL is ranked in the 2
iteration_2 replace buggy code at line 146 Diagnostic: 
 -  while(arguments.hasNext()  ||(argumentCount  >  maximum))  {  
 + while(arguments.hasNext() &&(argumentCount > maximum)) { 
 ----------------------------------------------------------------------------------------------------
Cli13 -  FL is ranked in the 2
iteration_1 replace buggy code at line 146 Diagnostic: 
 -  while(arguments.hasNext())  {  
 + while(arguments.hasNext() && argumentCount > maximum) { 
 ----------------------------------------------------------------------------------------------------
Cli13 -  FL is ranked in the 2
iteration_1 replace buggy code at line 146 Diagnostic: 
 -  while(arguments.hasNext())  {  
 + while(arguments.hasNext() && argumentCount >= maximum) { 
 ----------------------------------------------------------------------------------------------------
Cli13 -  FL is ranked in the 2
iteration_1 replace buggy code at line 146 Diagnostic: 
 -  while(arguments.hasNext())  {  
 + while(arguments.hasNext() && argumentCount > 1) { 
 ----------------------------------------------------------------------------------------------------
Cli13 -  FL is ranked in the 2
iteration_1 replace buggy code at line 146 Diagnostic: 
 -  while(arguments.hasNext())  {  
 + while(arguments.hasNext() && argumentCount == maximum) { 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the Lang55_plausible -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -      this.runningState  =  STATE_UNSTARTED;  if(this.runningState!=  STATE_UNSTARTED)  {  this.runningState  =  STATE_UNSTARTED;  }  else  {  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_UNSTARTED;  }  
 + if(this.runningState!= STATE_RUNNING) { this.runningState = STATE_UNSTARTED; } else { stopTime = System.currentTimeMillis(); this.runningState = STATE_STOPPED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the Lang55_plausible -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -      this.runningState  =  STATE_UNSTARTED;  if(this.runningState!=  STATE_UNSTARTED)  {  this.runningState  =  STATE_UNSTARTED;  }  else  {  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_UNSTARTED;  }  
 + if(this.runningState!= STATE_RUNNING) { this.runningState = STATE_UNSTARTED; } else { stopTime = System.currentTimeMillis(); this.runningState = STATE_SUSPENDED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the Lang55_plausible -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -      this.runningState  =  STATE_UNSTARTED;  if(this.runningState!=  STATE_UNSTARTED)  {  this.runningState  =  STATE_UNSTARTED;  }  else  {  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_STOPPED;  }  
 + if(this.runningState!= STATE_RUNNING) { this.runningState = STATE_SUSPENDED; } else { stopTime = System.currentTimeMillis(); this.runningState = STATE_STOPPED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the Lang55_plausible -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -      stopTime  =  System.currentTimeMillis();  System.currentTimeMillis();  
 + if(this.runningState == STATE_RUNNING) { stopTime = System.currentTimeMillis(); System.currentTimeMillis(); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the Lang55_plausible -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -      this.runningState  =  STATE_UNSTARTED;  this.runningState  =  STATE_UNSTARTED;  
 + if(this.runningState!= STATE_RUNNING) { this.runningState = STATE_UNSTARTED; this.runningState = STATE_UNSTARTED; } else { stopTime = System.currentTimeMillis(); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the Lang55_plausible -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  stopTime  =  System.currentTimeMillis()  +  1;  stopTime  =  System.currentTimeMillis()  +  1;  
 + if(this.runningState!= STATE_SUSPENDED) { stopTime = System.currentTimeMillis(); stopTime = System.currentTimeMillis(); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the Lang55_plausible -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -      stopTime  =  System.currentTimeMillis();  System.currentTimeMillis();  
 + if(this.runningState!= STATE_SUSPENDED) { stopTime = System.currentTimeMillis(); System.currentTimeMillis(); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the Lang55_plausible -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -      this.runningState  =  STATE_UNSTARTED;  if(this.runningState!=  STATE_UNSTARTED)  {  this.runningState  =  STATE_UNSTARTED;  }  else  {  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  
 + if(this.runningState!= STATE_RUNNING) { this.runningState = STATE_SUSPENDED; } else { stopTime = System.currentTimeMillis(); this.runningState = STATE_SUSPENDED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the Lang55_plausible -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -      this.runningState  =  STATE_UNSTARTED;  if(this.runningState!=  STATE_UNSTARTED)  {  this.runningState  =  STATE_UNSTARTED;  }  else  {  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  
 + if(this.runningState!= STATE_RUNNING) { this.runningState = STATE_STOPPED; } else { stopTime = System.currentTimeMillis(); this.runningState = STATE_SUSPENDED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the Lang55_plausible -  FL is ranked in the 1
iteration_2 add buggy code at line 179 Diagnostic: 
 -  
 + Thread.currentThread().interrupt();  Thread.currentThread().interrupt(); 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the Lang55_plausible -  FL is ranked in the 1
iteration_2 add buggy code at line 179 Diagnostic: 
 -  
 + Thread.currentThread().interrupt();  if(this.runningState!= STATE_RUNNING) { Thread.currentThread().interrupt(); } else { stopTime = System.currentTimeMillis(); this.runningState = STATE_SUSPENDED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the Lang55_plausible -  FL is ranked in the 1
iteration_2 add buggy code at line 179 Diagnostic: 
 -  
 + Thread.currentThread().interrupt();  if(this.runningState!= STATE_RUNNING) { Thread.currentThread().interrupt(); } else { stopTime = System.currentTimeMillis(); this.runningState = STATE_STOPPED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the Lang55_plausible -  FL is ranked in the 1
iteration_2 add buggy code at line 179 Diagnostic: 
 -  
 + Thread.currentThread().interrupt();  if(this.runningState!= STATE_RUNNING) { Thread.currentThread().interrupt(); } else { stopTime = System.currentTimeMillis(); this.runningState = STATE_UNSTARTED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the Lang55_plausible -  FL is ranked in the 1
iteration_2 add buggy code at line 179 Diagnostic: 
 -  
 + Thread.currentThread().interrupt();  if(this.runningState!= STATE_RUNNING) { Thread.currentThread().interrupt(); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the Lang55_plausible -  FL is ranked in the 1
iteration_2 add buggy code at line 179 Diagnostic: 
 -  
 + Thread.currentThread().interrupt();  Thread.currentThread().interrupt(); this.runningState = STATE_STOPPED; 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the Lang55_plausible -  FL is ranked in the 1
iteration_2 add buggy code at line 179 Diagnostic: 
 -  
 + Thread.currentThread().interrupt();  Thread.currentThread().interrupt(); this.runningState = STATE_SUSPENDED; 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the Lang55_plausible -  FL is ranked in the 1
iteration_2 add buggy code at line 179 Diagnostic: 
 -  
 + Thread.currentThread().interrupt();  Thread.currentThread().interrupt(); this.runningState = STATE_UNSTARTED; 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the Lang55_plausible -  FL is ranked in the 1
iteration_2 add buggy code at line 179 Diagnostic: 
 -  
 + Thread.currentThread().interrupt();  Thread.currentThread().interrupt(); this.runningState = STATE_RUNNING; 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState  ==  STATE_RUNNING  ||  this.runningState!=  STATE_SUSPENDED)  {  stopTime  =  System.currentTimeMillis();  }  else  {  startTime  =  System.currentTimeMillis();  }  if(this.runningState  ==  STATE_RUNNING  ||  this.runningState!=  STATE_SUSPENDED)  {  stopTime  =  System.currentTimeMillis();  }  else  {  this.runningState  =  STATE_UNSTARTED;  }  
 + if(this.runningState == STATE_STOPPED || this.runningState!= STATE_SUSPENDED) { stopTime = System.currentTimeMillis(); } else { this.runningState = STATE_UNSTARTED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState  ==  STATE_RUNNING  ||  this.runningState!=  STATE_SUSPENDED)  {  stopTime  =  System.currentTimeMillis();  }  else  {  startTime  =  System.currentTimeMillis();  }  if(this.runningState  ==  STATE_RUNNING  ||  this.runningState!=  STATE_SUSPENDED)  {  stopTime  =  System.currentTimeMillis();  }  else  {  this.runningState  =  STATE_UNSTARTED;  }  
 + if(this.runningState == STATE_UNSTARTED || this.runningState!= STATE_SUSPENDED) { stopTime = System.currentTimeMillis(); } else { this.runningState = STATE_UNSTARTED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState  ==  STATE_RUNNING  ||  this.runningState!=  STATE_SUSPENDED)  {  stopTime  =  System.currentTimeMillis();  }  else  {  startTime  =  System.currentTimeMillis();  }  if(this.runningState  ==  STATE_RUNNING  ||  this.runningState!=  STATE_SUSPENDED)  {  stopTime  =  System.currentTimeMillis();  }  else  {  this.runningState  =  STATE_UNSTARTED;  }  
 + if(this.runningState == STATE_STOPPED || this.runningState!= STATE_SUSPENDED) { stopTime = System.currentTimeMillis(); } else { this.runningState = STATE_STOPPED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.stopTime!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  {  stopTime  =  System.currentTimeMillis();  this.splitState  =  STATE_UNSTARTED;  }  if(this.stopTime!=  STATE_SUSPENDED)  {  this.stopTime  =  System.currentTimeMillis();  this.splitState  =  STATE_UNSTARTED;  }  
 + if(this.runningState!= STATE_RUNNING) { System.currentTimeMillis(); } else { stopTime = System.currentTimeMillis(); this.splitState = STATE_UNSTARTED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.stopTime!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  else  {  stopTime  =  System.currentTimeMillis();  }  if(this.stopTime!=  STATE_RONNING)  {  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  else  {  stopTime  =  System.currentTimeMillis();  }  
 + if(this.runningState!= STATE_SUSPENDED) { stopTime = System.currentTimeMillis(); this.runningState = STATE_SUSPENDED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.stopTime!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  else  {  stopTime  =  System.currentTimeMillis();  }  if(this.stopTime!=  STATE_RONNING)  {  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  else  {  stopTime  =  System.currentTimeMillis();  }  
 + if(this.runningState!= STATE_SUSPENDED) { this.stopTime = System.currentTimeMillis(); this.runningState = STATE_SUSPENDED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.stopTime!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  {  this.stopTime  =  System.currentTimeMillis();  }  if(this.stopTime!=  STATE_RUNNING)  {  StopTime  =  System.currentTimeMillis();  }  else  {  this.stopTime  =  System.currentTimeMillis();  }  
 + if(this.runningState!= STATE_RUNNING) { this.runningState = STATE_UNSTARTED; } else { this.stopTime = System.currentTimeMillis(); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.stopTime!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  {  this.stopTime  =  System.currentTimeMillis();  }  if(this.stopTime!=  STATE_RUNNING)  {  StopTime  =  System.currentTimeMillis();  }  else  {  this.stopTime  =  System.currentTimeMillis();  }  
 + if(this.runningState!= STATE_RUNNING) { this.runningState = STATE_STOPPED; } else { this.stopTime = System.currentTimeMillis(); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.stopTime!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  {  this.stopTime  =  System.currentTimeMillis();  }  if(this.stopTime!=  STATE_RUNNING)  {  StopTime  =  System.currentTimeMillis();  }  else  {  this.stopTime  =  System.currentTimeMillis();  }  
 + if(this.runningState!= STATE_RUNNING) { this.runningState = STATE_SPLIT; } else { this.stopTime = System.currentTimeMillis(); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.stopTime!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  {  this.stopTime  =  System.currentTimeMillis();  }  if(this.stopTime!=  STATE_RUNNING)  {  StopTime  =  System.currentTimeMillis();  }  else  {  this.stopTime  =  System.currentTimeMillis();  }  
 + if(this.runningState!= STATE_RUNNING) { this.runningState = STATE_SUSPENDED; } else { this.stopTime = System.currentTimeMillis(); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState  ==  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  {  stopTime  =  System.currentTimeMillis();  }  when(this.runningState  ==  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  {  this.runningState  =  STATE_STOPPED;  }  
 + if(this.runningState!= STATE_SUSPENDED) { if(this.runningState == STATE_RUNNING) { stopTime = System.currentTimeMillis(); } else { this.runningState = STATE_STOPPED; } } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState  ==  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  {  stopTime  =  System.currentTimeMillis();  }  when(this.runningState  ==  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  {  this.runningState  =  STATE_STOPPED;  }  
 + if(this.runningState!= STATE_UNSTARTED) { if(this.runningState == STATE_RUNNING) { stopTime = System.currentTimeMillis(); } else { this.runningState = STATE_STOPPED; } } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState  ==  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  {  stopTime  =  System.currentTimeMillis();  }  when(this.runningState  ==  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  {  this.runningState  =  STATE_STOPPED;  }  
 + if(this.splitState!= STATE_SUSPENDED) { if(this.runningState == STATE_RUNNING) { stopTime = System.currentTimeMillis(); } else { this.runningState = STATE_STOPPED; } } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  {  startTime  =  System.currentTimeMillis();  this.splitState  =  STATE_UNSTARTED;  }  if(this.runningState!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  {  this.splitState  =  STATE_UnSTARTED;  }  
 + if(this.runningState!= STATE_SUSPENDED) { stopTime = System.currentTimeMillis(); } else { this.splitState = STATE_SUSPENDED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  {  startTime  =  System.currentTimeMillis();  this.splitState  =  STATE_UNSTARTED;  }  if(this.runningState!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  {  this.splitState  =  STATE_UnSTARTED;  }  
 + if(this.runningState!= STATE_SUSPENDED) { stopTime = System.currentTimeMillis(); } else { this.splitState = STATE_STOPPED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  stopTime  =  System.currentTimeMillis()  -  1;  if(this.runningState!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis()  -  1;  }  else  {  stopTime  =  System.currentTimeMillis()  -  1;  }  
 + if(this.runningState!= STATE_SUSPENDED) { stopTime = System.currentTimeMillis() - 1; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  stopTime  =  System.currentTimeMillis()  -  1;  if(this.runningState!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis()  -  1;  }  else  {  stopTime  =  System.currentTimeMillis()  -  1;  }  
 + if(this.runningState!= STATE_RUNNING) { this.runningState = STATE_SUSPENDED; } else { stopTime = System.currentTimeMillis() - 1; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  stopTime  =  System.currentTimeMillis()  -  1;  if(this.runningState!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis()  -  1;  }  else  {  stopTime  =  System.currentTimeMillis()  -  1;  }  
 + if(this.runningState!= STATE_RUNNING) { this.runningState = STATE_UNSTARTED; } else { stopTime = System.currentTimeMillis() - 1; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.stopTime  >=  STATE_STOPPED)  {  this.stopTime  =  System.currentTimeMillis();  }  else  {  try  {  this.runningState  =  STATE_SUSPENDED;  }  
 + if(this.runningState == STATE_RUNNING && this.runningState!= STATE_SUSPENDED) { this.stopTime = System.currentTimeMillis(); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState!=  STATE_RUNNING  &&  this.runningState!=  STATE_SUSPENDED)  {  stopTime  =  System.currentTimeMillis();  }  if(this.runningState!=  STATE_STATE_RUNNING  &&  this.runningState!=  STATE_SUSPENDED)  {  stopTime  =  System.currentTimeMillis();  }  
 + if(this.runningState!= STATE_SPLIT && this.runningState!= STATE_SUSPENDED) { stopTime = System.currentTimeMillis(); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.stopTime!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  {  startTime  =  System.currentTimeMillis();  }  when(this.stopTime!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  {  startTime  =  System.currentTimeMillis();  }  
 + if(this.runningState!= STATE_SUSPENDED) { if(this.stopTime!= STATE_RUNNING) { stopTime = System.currentTimeMillis(); } else { startTime = System.currentTimeMillis(); } } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState!=  STATE_RUNNING)  {  this.stopTime  =  System.currentTimeMillis();  }  else  {  try  {  this.runningState  =  STATE_UNSTARTED;  }  catch(IOException  ioe)  {  throw  new  RuntimeException  
 + if(this.runningState!= STATE_SUSPENDED) { this.stopTime = System.currentTimeMillis(); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState!=  STATE_RUNNING)  {  this.stopTime  =  System.currentTimeMillis();  }  else  {  try  {  this.runningState  =  STATE_UNSTARTED;  }  catch(IOException  ioe)  {  throw  new  RuntimeException  
 + if(this.runningState == STATE_RUNNING || this.runningState!= STATE_SUSPENDED) { this.stopTime = System.currentTimeMillis(); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.stopTime!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  {  stopTime  =  System.currentTimeMillis();  }  If(this.stopTime!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  {  stopTime  =  System.currentTimeMillis();  }  
 + if(this.runningState!= STATE_SUSPENDED) { if(this.stopTime!= STATE_RUNNING) { stopTime = System.currentTimeMillis(); } else { stopTime = System.currentTimeMillis(); } } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState!=  STATE_RUNNING  ||  this.runningState!=  STATE_SUSPENDED)  {  stopTime  =  System.currentTimeMillis();  }  if(this.runningState!=  STATE_RUNNING  ||  this.runningState!=  STATE_SUSPENDED)  {  stoppedTime  =  System.currentTimeMillis();  }  
 + if(this.runningState == STATE_SPLIT || this.runningState!= STATE_SUSPENDED) { stopTime = System.currentTimeMillis(); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState  ==  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  {  stopTime  =  System.currentTimeMillis();  }  if(this.runningState  ==  STATE_STRING)  {  stopTime  =  System.currentTimeMillis();  }  else  {  stopTime  =  System.currentTimeMillis();  }  
 + if(this.runningState == STATE_SUSPENDED) { this.runningState = STATE_UNSTARTED; } else { stopTime = System.currentTimeMillis(); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.splitState!=  STATE_UNSTARTED)  {  stopTime  =  System.currentTimeMillis();  }  else  {  startTime  =  System.currentTimeMillis();  }  if(this.splitState!=  STATE_UNSTARTED)  {  startTime  =  System.currentTimeMillis();  }  else  {  this.runningState  =  STATE_SPLIT;  }  
 + if(this.runningState == STATE_RUNNING) { stopTime = System.currentTimeMillis(); } else { this.runningState = STATE_SPLIT; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.splitState!=  STATE_UNSTARTED)  {  stopTime  =  System.currentTimeMillis();  }  else  {  startTime  =  System.currentTimeMillis();  }  if(this.splitState!=  STATE_UNSTARTED)  {  startTime  =  System.currentTimeMillis();  }  else  {  this.runningState  =  STATE_SPLIT;  }  
 + if(this.runningState!= STATE_SUSPENDED) { stopTime = System.currentTimeMillis(); } else { this.runningState = STATE_SPLIT; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.splitState!=  STATE_UNSTARTED)  {  stopTime  =  System.currentTimeMillis();  }  else  {  startTime  =  System.currentTimeMillis();  }  if(this.splitState!=  STATE_UNSTARTED)  {  startTime  =  System.currentTimeMillis();  }  else  {  this.runningState  =  STATE_SPLIT;  }  
 + if(this.runningState == STATE_RUNNING || this.runningState!= STATE_SUSPENDED) { stopTime = System.currentTimeMillis(); } else { this.runningState = STATE_SPLIT; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.stopTime  ==  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  {  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_UNSTARTED;  }  
 + if(this.runningState!= STATE_RUNNING) { System.currentTimeMillis(); } else { stopTime = System.currentTimeMillis(); this.runningState = STATE_UNSTARTED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.stopTime  ==  STATE_RUNNING)  {  this.stopTime  =  System.currentTimeMillis();  }  else  {  this.runningState  =  STATE_SUSPENDED;  }  
 + if(this.stopTime!= STATE_RUNNING && this.runningState!= STATE_SUSPENDED) { this.stopTime = System.currentTimeMillis(); } else { this.runningState = STATE_SUSPENDED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.stopTime  ==  STATE_RUNNING)  {  this.stopTime  =  System.currentTimeMillis();  }  else  {  this.runningState  =  STATE_SUSPENDED;  }  
 + if(this.stopTime == STATE_RUNNING || this.runningState!= STATE_SUSPENDED) { this.stopTime = System.currentTimeMillis(); } else { this.runningState = STATE_SUSPENDED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.stopTime  ==  STATE_RUNNING)  {  this.stopTime  =  System.currentTimeMillis();  }  else  {  this.runningState  =  STATE_SUSPENDED;  }  
 + if(this.runningState == STATE_RUNNING) { this.stopTime = System.currentTimeMillis(); } else { this.runningState = STATE_SUSPENDED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.stopTime!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  {  stopTime  =  System.currentTimeMillis();  this.splitState  =  STATE_SPLIT;  }  if(this.stopTime!=  STATE_UNSTARTED)  {  this.splitState  =  STATE_SPLIT;  }  else  {  this.splitState  =  STATE_SPLIT;  }  
 + if(this.runningState!= STATE_RUNNING) { this.splitState = STATE_SPLIT; } else { stopTime = System.currentTimeMillis(); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.stopTime!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  {  stopTime  =  System.currentTimeMillis();  this.splitState  =  STATE_SPLIT;  }  if(this.stopTime!=  STATE_UNSTARTED)  {  this.splitState  =  STATE_SPLIT;  }  else  {  this.splitState  =  STATE_SPLIT;  }  
 + if(this.runningState!= STATE_RUNNING) { this.splitState = STATE_STOPPED; } else { stopTime = System.currentTimeMillis(); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.stopTime!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  {  stopTime  =  System.currentTimeMillis();  this.splitState  =  STATE_SPLIT;  }  if(this.stopTime!=  STATE_UNSTARTED)  {  this.splitState  =  STATE_SPLIT;  }  else  {  this.splitState  =  STATE_SPLIT;  }  
 + if(this.runningState!= STATE_RUNNING) { System.currentTimeMillis(); } else { stopTime = System.currentTimeMillis(); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.splitState!=  STATE_STOPPED  ||  this.splitState  ==  STATE_UNSTARTED)  {  stopTime  =  System.currentTimeMillis();  }  
 + if(this.runningState!= STATE_SUSPENDED || this.splitState == STATE_UNSTARTED) { stopTime = System.currentTimeMillis(); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState!=  STATE_SPLIT)  {  this.stopTime  =  System.currentTimeMillis();  }  else  {  this.splitState  =  STATE_UNSTARTED;  }  
 + if(this.runningState == STATE_RUNNING) { this.stopTime = System.currentTimeMillis(); } else { this.splitState = STATE_UNSTARTED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState!=  STATE_SPLIT)  {  this.stopTime  =  System.currentTimeMillis();  }  else  {  this.splitState  =  STATE_UNSTARTED;  }  
 + if(this.runningState == STATE_RUNNING || this.runningState!= STATE_SUSPENDED) { this.stopTime = System.currentTimeMillis(); } else { this.splitState = STATE_UNSTARTED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.stopTime!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  {  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_UNSTARTED;  }  if(this.stopTime!=  STATE_RUNNING)  {  this.runningState  =  STATE_SUSPENDED;  }  else  {  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_UNSTARTED;  }  
 + if(this.runningState!= STATE_RUNNING) { this.runningState = STATE_SUSPENDED; } else { stopTime = System.currentTimeMillis(); this.runningState = STATE_UNSTARTED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  stopTime  =  System.currentTimeMillis();  if(this.runningState  ==  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  
 + long startTime = System.currentTimeMillis(); if(this.runningState == STATE_RUNNING) { stopTime = System.currentTimeMillis(); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  stopTime  =  System.currentTimeMillis();  if(this.runningState  ==  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  
 + long startTime = System.currentTimeMillis(); if(this.runningState == STATE_RUNNING || this.runningState!= STATE_SUSPENDED) { stopTime = System.currentTimeMillis(); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  stopTime  =  System.currentTimeMillis();  if(this.runningState  ==  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  
 + long splitState = System.currentTimeMillis(); if(this.runningState == STATE_RUNNING) { stopTime = System.currentTimeMillis(); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  stopTime  =  System.currentTimeMillis();  if(this.runningState  ==  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  
 + long splitState = System.currentTimeMillis(); if(this.runningState == STATE_RUNNING || this.runningState!= STATE_SUSPENDED) { stopTime = System.currentTimeMillis(); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  stopTime  =  System.currentTimeMillis();  if(this.runningState  ==  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  
 + long startTime = System.currentTimeMillis(); if(this.runningState == STATE_RUNNING && this.runningState!= STATE_SUSPENDED) { stopTime = System.currentTimeMillis(); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  stopTime  =  System.currentTimeMillis();  if(this.runningState  ==  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  
 + long startTime = System.currentTimeMillis(); if(this.runningState!= STATE_SUSPENDED) { stopTime = System.currentTimeMillis(); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  stopTime  =  System.currentTimeMillis();  if(this.runningState  ==  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  
 + long splitState = System.currentTimeMillis(); if(this.runningState!= STATE_SUSPENDED) { stopTime = System.currentTimeMillis(); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.splitState!=  STATE_STOPPED)  {  stopTime  =  System.currentTimeMillis();  }  else  {  stopTime  =  System.currentTimeMillis();  this.splitState  =  STATE_UNSTARTED;  }  
 + if(this.runningState!= STATE_RUNNING) { this.splitState = STATE_SUSPENDED; } else { stopTime = System.currentTimeMillis(); this.splitState = STATE_UNSTARTED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.splitState!=  STATE_STOPPED)  {  stopTime  =  System.currentTimeMillis();  }  else  {  stopTime  =  System.currentTimeMillis();  this.splitState  =  STATE_UNSTARTED;  }  
 + if(this.runningState!= STATE_RUNNING) { this.splitState = STATE_UNSTARTED; } else { stopTime = System.currentTimeMillis(); this.splitState = STATE_UNSTARTED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.splitState  ==  STATE_SPLIT)  {  this.stopTime  =  System.currentTimeMillis();  }  else  {  this.runningState  =  STATE_SUSPENDED;  }  
 + if(this.runningState == STATE_RUNNING || this.runningState!= STATE_SUSPENDED) { this.stopTime = System.currentTimeMillis(); } else { this.runningState = STATE_SUSPENDED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  stopTime  =  System.currentTimeMillis()  /  2;  long  splitState  =  System.currentTimeMillis()  /  2;  
 + if(this.runningState == STATE_RUNNING) { stopTime = System.currentTimeMillis(); long splitState = System.currentTimeMillis(); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.startTime!=  STATE_UNSTARTED)  {  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_STOPPED;  }  else  {  stopTime  =  System.currentTimeMillis();  }  
 + if(this.runningState!= STATE_RUNNING) { System.currentTimeMillis(); this.runningState = STATE_STOPPED; } else { stopTime = System.currentTimeMillis(); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  {  System.err.println(    "Stopwatch  is  not  running:    "  +  this.runningState);  }  if(this.runningState!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  {  System.err.println(  "Stopwatch  is  not  working:    "  +  this.runningState);  }  
 + if(this.runningState!= STATE_SUSPENDED) { stopTime = System.currentTimeMillis(); } else { System.err.println( "Stopwatch is not working: " + this.runningState); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  stopTime  =  System.currentTimeMillis();  if(this.runningState!=  STATE_SUSPENDED)  {  this.runningState  =  STATE_UNSTARTED;  }  else  {  stopTime  =  System.currentTimeMillis();  }  
 + long splitState = System.currentTimeMillis(); if(this.runningState!= STATE_RUNNING) { this.runningState = STATE_UNSTARTED; } else { stopTime = System.currentTimeMillis(); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  stopTime  =  System.currentTimeMillis();  if(this.runningState!=  STATE_SUSPENDED)  {  this.runningState  =  STATE_UNSTARTED;  }  else  {  stopTime  =  System.currentTimeMillis();  }  
 + long startTime = System.currentTimeMillis(); if(this.runningState!= STATE_RUNNING) { this.runningState = STATE_UNSTARTED; } else { stopTime = System.currentTimeMillis(); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  stopTime  =  System.currentTimeMillis();  if(this.runningState!=  STATE_SUSPENDED)  {  this.runningState  =  STATE_UNSTARTED;  }  else  {  stopTime  =  System.currentTimeMillis();  }  
 + long splitState = System.currentTimeMillis(); if(this.runningState!= STATE_RUNNING) { this.runningState = STATE_SUSPENDED; } else { stopTime = System.currentTimeMillis(); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.stopTime!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  {  startTime  =  System.currentTimeMillis();  this.runningState  =  STATE_STOPPED;  }  if(this.stopTime  >>  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  {  startTime  =  System.currentTimeMillis();  this.runningState  =  STATE_STOPPED;  }  
 + if(this.runningState!= STATE_SUSPENDED) { if(this.stopTime!= STATE_RUNNING) { stopTime = System.currentTimeMillis(); } else { startTime = System.currentTimeMillis(); } this.runningState = STATE_STOPPED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.stopTime!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  {  stopTime  =  System.currentTimeMillis()  +  1;  }  if(this.stopTime!=  STATE_STOPPED)  {  stopTime  =  System.currentTimeMillis()  +  1;  }  else  {  this.runningState  =  STATE_SUSPENDED;  }  
 + if(this.runningState!= STATE_RUNNING) { this.runningState = STATE_UNSTARTED; } else { stopTime = System.currentTimeMillis() + 1; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.stopTime!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  {  stopTime  =  System.currentTimeMillis()  +  1;  }  if(this.stopTime!=  STATE_STOPPED)  {  stopTime  =  System.currentTimeMillis()  +  1;  }  else  {  this.runningState  =  STATE_SUSPENDED;  }  
 + if(this.runningState!= STATE_RUNNING) { this.runningState = STATE_SUSPENDED; } else { stopTime = System.currentTimeMillis() + 1; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  {  stopTime  =  System.currentTimeMillis();  }  when(this.runningState!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  {  this.runningState  =  STATE_STOPPED;  }  
 + if(this.runningState!= STATE_UNSTARTED) { if(this.runningState!= STATE_SUSPENDED) { stopTime = System.currentTimeMillis(); } else { this.runningState = STATE_STOPPED; } } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  {  stopTime  =  System.currentTimeMillis();  }  when(this.runningState!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  {  this.runningState  =  STATE_STOPPED;  }  
 + if(this.runningState!= STATE_SPLIT) { if(this.runningState!= STATE_SUSPENDED) { stopTime = System.currentTimeMillis(); } else { this.runningState = STATE_STOPPED; } } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.stopTime!=  STATE_STOPPED)  {  stopTime  =  System.currentTimeMillis();  }  else  {  stopTime  =  System.currentTimeMillis();  this.splitState  =  STATE_SPLIT;  }  
 + if(this.runningState!= STATE_RUNNING) { System.currentTimeMillis(); } else { stopTime = System.currentTimeMillis(); this.splitState = STATE_SPLIT; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  stopTime  =  System.currentTimeMillis();  this.splitState  =  STATE_UNSTARTED;  
 + if(this.runningState == STATE_RUNNING) { stopTime = System.currentTimeMillis(); this.splitState = STATE_UNSTARTED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.stopTime!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  {  this.stopTime  =  System.currentTimeMillis();  }  If(this.stopTime!=  STATE_RUNNING)  {  this.stopTime  =  System.currentTimeMillis();  }  else  {  this.stopTime  =  System.currentTimeMillis();  }  
 + if(this.runningState!= STATE_SUSPENDED) { if(this.stopTime!= STATE_RUNNING) { this.stopTime = System.currentTimeMillis(); } else { this.stopTime = System.currentTimeMillis(); } } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.stopTime!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  {  this.stopTime  =  System.currentTimeMillis();  }  If(this.stopTime!=  STATE_RUNNING)  {  this.stopTime  =  System.currentTimeMillis();  }  else  {  this.stopTime  =  System.currentTimeMillis();  }  
 + if(this.runningState!= STATE_SUSPENDED) { if(this.stopTime!= STATE_RUNNING) { stopTime = System.currentTimeMillis(); } else { this.stopTime = System.currentTimeMillis(); } } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.stopTime!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  {  startTime  =  System.currentTimeMillis();  this.splitState  =  STATE_SPLIT;  }  if(this.stopTime!=  STATE_SUSPENDED)  {  startTime  =  System.currentTimeMillis();  }  else  {  this.splitState  =  STATE_SPLIT;  }  
 + if(this.runningState!= STATE_SUSPENDED) { this.stopTime = System.currentTimeMillis(); } else { this.splitState = STATE_SPLIT; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.stopTime!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  {  startTime  =  System.currentTimeMillis();  this.splitState  =  STATE_SPLIT;  }  if(this.stopTime!=  STATE_SUSPENDED)  {  startTime  =  System.currentTimeMillis();  }  else  {  this.splitState  =  STATE_SPLIT;  }  
 + if(this.runningState!= STATE_SUSPENDED) { stopTime = System.currentTimeMillis(); } else { this.splitState = STATE_SPLIT; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.stopTime  ==  STATE_SUSPENDED)  {  this.stopTime  =  System.currentTimeMillis();  }  else  {  this.splitState  =  STATE_UNSTARTED;  }  
 + if(this.stopTime == STATE_RUNNING || this.runningState!= STATE_SUSPENDED) { this.stopTime = System.currentTimeMillis(); } else { this.splitState = STATE_UNSTARTED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.stopTime!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  {  stopTime  =  System.currentTimeMillis()  +  1;  }  if(this.stopTime  >>  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis()  +  1;  }  else  {  this.runningState  =  STATE_STOPPED;  }  
 + if(this.runningState!= STATE_SUSPENDED) { this.stopTime = System.currentTimeMillis() + 1; } else { this.runningState = STATE_STOPPED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.stopTime!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  {  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_UNSTARTED;  }  if(this.stopTime!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  {  this.startTime  =  System.currentTimeMillis();  this.runningState  =  STATE_UNSTARTED;  }  
 + if(this.runningState!= STATE_SUSPENDED) { if(this.stopTime!= STATE_RUNNING) { stopTime = System.currentTimeMillis(); } else { stopTime = System.currentTimeMillis(); } this.runningState = STATE_UNSTARTED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.stopTime!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  {  stopTime  =  System.currentTimeMillis()  +  1;  }  If(this.stopTime!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis()  +  1;  }  
 + if(this.runningState!= STATE_SUSPENDED) { if(this.stopTime!= STATE_RUNNING) { stopTime = System.currentTimeMillis(); } else { stopTime = System.currentTimeMillis() + 1; } } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState!=  STATE_STOPPED)  {  stopTime  =  System.currentTimeMillis();  }  else  {  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  
 + if(this.runningState!= STATE_RUNNING) { this.runningState = STATE_SUSPENDED; } else { stopTime = System.currentTimeMillis(); this.runningState = STATE_SUSPENDED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.splitState!=  STATE_SPLIT)  {  stopTime  =  System.currentTimeMillis();  }  else  {  stopTime  =  System.currentTimeMillis();  this.splitState  =  STATE_SUSPENDED;  }  
 + if(this.runningState!= STATE_RUNNING) { this.splitState = STATE_SPLIT; } else { stopTime = System.currentTimeMillis(); this.splitState = STATE_SUSPENDED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.splitState!=  STATE_SPLIT)  {  stopTime  =  System.currentTimeMillis();  }  else  {  stopTime  =  System.currentTimeMillis();  this.splitState  =  STATE_SUSPENDED;  }  
 + if(this.runningState!= STATE_RUNNING) { this.splitState = STATE_SUSPENDED; } else { stopTime = System.currentTimeMillis(); this.splitState = STATE_SUSPENDED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.splitState!=  STATE_SPLIT)  {  stopTime  =  System.currentTimeMillis();  }  else  {  stopTime  =  System.currentTimeMillis();  this.splitState  =  STATE_SUSPENDED;  }  
 + if(this.runningState!= STATE_RUNNING) { this.splitState = STATE_UNSTARTED; } else { stopTime = System.currentTimeMillis(); this.splitState = STATE_SUSPENDED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.splitState!=  STATE_SPLIT)  {  stopTime  =  System.currentTimeMillis();  }  else  {  stopTime  =  System.currentTimeMillis();  this.splitState  =  STATE_SUSPENDED;  }  
 + if(this.runningState!= STATE_RUNNING) { this.runningState = STATE_UNSTARTED; } else { stopTime = System.currentTimeMillis(); this.splitState = STATE_SUSPENDED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.splitState!=  STATE_SPLIT)  {  stopTime  =  System.currentTimeMillis();  }  else  {  stopTime  =  System.currentTimeMillis();  this.splitState  =  STATE_SUSPENDED;  }  
 + if(this.runningState!= STATE_RUNNING) { this.splitState = STATE_STOPPED; } else { stopTime = System.currentTimeMillis(); this.splitState = STATE_SUSPENDED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  {  stopTime  =  System.currentTimeMillis();  }  if(this.runningState  ==  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  {  stopTime  =  System.currentTimeMillis();  }  
 + if(this.runningState == STATE_SUSPENDED) { this.runningState = STATE_STOPPED; } else { stopTime = System.currentTimeMillis(); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  stopTime  =  System.currentTimeMillis()  +  1;  if(this.runningState  ==  STATE_RUNNING)  {  System.currentTimeMillis()  +  1;  }  else  {  stopTime  =  System.currentTimeMillis()  +  1;  }  
 + if(this.runningState == STATE_RUNNING) { stopTime = System.currentTimeMillis() + 1; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  stopTime  =  System.currentTimeMillis()  +  1;  if(this.runningState  ==  STATE_RUNNING)  {  System.currentTimeMillis()  +  1;  }  else  {  stopTime  =  System.currentTimeMillis()  +  1;  }  
 + if(this.runningState == STATE_RUNNING || this.runningState!= STATE_SUSPENDED) { stopTime = System.currentTimeMillis() + 1; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  stopTime  =  System.currentTimeMillis()  +  1;  if(this.runningState  ==  STATE_RUNNING)  {  System.currentTimeMillis()  +  1;  }  else  {  stopTime  =  System.currentTimeMillis()  +  1;  }  
 + if(this.runningState == STATE_RUNNING) { stopTime = System.currentTimeMillis() + 1; } else { this.runningState = STATE_SUSPENDED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  stopTime  =  System.currentTimeMillis()  +  1;  if(this.runningState  ==  STATE_RUNNING)  {  System.currentTimeMillis()  +  1;  }  else  {  stopTime  =  System.currentTimeMillis()  +  1;  }  
 + if(this.runningState!= STATE_SUSPENDED) { stopTime = System.currentTimeMillis() + 1; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  this.stopTime  =  System.currentTimeMillis();  if(this.runningState!=  STATE_RUNNING  &&  this.runningState!=  STATE_SUSPENDED)  {  this.stopTime  =  System.currentTimeMillis();  }  
 + long splitState = System.currentTimeMillis(); if(this.runningState!= STATE_SUSPENDED && this.runningState!= STATE_SUSPENDED) { this.stopTime = System.currentTimeMillis(); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.stopTime!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  {  this.splitState  =  STATE_UNSTARTED;  }  int  this.splitState  =  System.currentTimeMillis();  
 + if(this.stopTime!= STATE_RUNNING && this.runningState!= STATE_SUSPENDED) { this.stopTime = System.currentTimeMillis(); } else { this.splitState = STATE_UNSTARTED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState!=  STATE_STOPPED)  {  this.runningState  =  STATE_UNSTARTED;  stopTime  =  System.currentTimeMillis();  }  else  {  endTime  =  System.currentTimeMillis();  }  
 + while(this.runningState!= STATE_UNSTARTED && this.runningState!= STATE_SUSPENDED) { this.runningState = STATE_UNSTARTED; stopTime = System.currentTimeMillis(); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState!=  STATE_STOPPED)  {  this.runningState  =  STATE_UNSTARTED;  stopTime  =  System.currentTimeMillis();  }  else  {  endTime  =  System.currentTimeMillis();  }  
 + if(this.runningState!= STATE_SUSPENDED) { this.runningState = STATE_UNSTARTED; stopTime = System.currentTimeMillis(); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState!=  STATE_STOPPED)  {  stopTime  =  System.currentTimeMillis();  }  else  {  long  runState  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  
 + if(this.runningState == STATE_RUNNING) { stopTime = System.currentTimeMillis(); } else { long runState = System.currentTimeMillis(); this.runningState = STATE_SUSPENDED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState!=  STATE_STOPPED)  {  stopTime  =  System.currentTimeMillis();  }  else  {  long  runState  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  
 + if(this.runningState!= STATE_SUSPENDED) { stopTime = System.currentTimeMillis(); } else { long runState = System.currentTimeMillis(); this.runningState = STATE_SUSPENDED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.stopTime!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  {  stopTime  =  System.currentTimeMillis();  this.splitState  =  STATE_SPLIT;  }  If(this.stopTime!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  {  this.splitState  =  STATE_SPLIT;  }  
 + if(this.runningState!= STATE_SUSPENDED) { if(this.stopTime!= STATE_RUNNING) { stopTime = System.currentTimeMillis(); } else { this.splitState = STATE_SPLIT; } } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.stopTime!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  if(this.stoptime!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  
 + if(this.runningState!= STATE_RUNNING) { this.runningState = STATE_STOPPED; } else if(this.runningState!= STATE_SUSPENDED) { stopTime = System.currentTimeMillis(); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState!=  STATE_RUNNING  &&  this.runningState!=  STATE_SUSPENDED)  {  stopTime  =  System.currentTimeMillis();  }  if(this.runningState!=  STATE_RUNNING  &&  this.runningState!=  STATE_SUSPENDED)  {  stoptime  =  System.currentTimeMillis();  }  
 + if(this.splitState!= STATE_RUNNING && this.runningState!= STATE_SUSPENDED) { stopTime = System.currentTimeMillis(); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState!=  STATE_RUNNING  ||  this.splitState!=  STATE_SUSPENDED)  {  stopTime  =  System.currentTimeMillis();  }  else  {  this.splitState  =  System.currentTimeMillis();  startTime  =  System.currentTimeM  
 + if(this.runningState == STATE_RUNNING && this.splitState!= STATE_SUSPENDED) { stopTime = System.currentTimeMillis(); } else { this.runningState = STATE_STOPPED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState!=  STATE_RUNNING  ||  this.splitState!=  STATE_SUSPENDED)  {  stopTime  =  System.currentTimeMillis();  }  else  {  this.splitState  =  System.currentTimeMillis();  startTime  =  System.currentTimeM  
 + if(this.runningState == STATE_RUNNING && this.splitState!= STATE_SUSPENDED) { stopTime = System.currentTimeMillis(); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState!=  STATE_RUNNING  ||  this.splitState!=  STATE_SUSPENDED)  {  stopTime  =  System.currentTimeMillis();  }  else  {  this.splitState  =  System.currentTimeMillis();  startTime  =  System.currentTimeM  
 + if(this.runningState == STATE_RUNNING && this.splitState!= STATE_SUSPENDED) { stopTime = System.currentTimeMillis(); } else { this.runningState = STATE_UNSTARTED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState!=  STATE_RUNNING  ||  this.splitState!=  STATE_SUSPENDED)  {  stopTime  =  System.currentTimeMillis();  }  else  {  this.splitState  =  System.currentTimeMillis();  startTime  =  System.currentTimeM  
 + if(this.runningState == STATE_RUNNING && this.splitState!= STATE_SUSPENDED) { stopTime = System.currentTimeMillis(); } else { this.runningState = STATE_SUSPENDED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.stopTime!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  this.splitState  =  STATE_UNSTARTED;  }  else  {  stopTime  =  System.currentTimeMillis();  }  if(this.stopTime!=  STATE_STOPPED)  {  stopTime  =  System.currentTimeMillis();  this.splitState  =  STATE_SUSPENDED;  }  else  {  stopTime  =  System.currentTimeMillis();  }  
 + if(this.runningState!= STATE_RUNNING) { System.currentTimeMillis(); this.splitState = STATE_SUSPENDED; } else { stopTime = System.currentTimeMillis(); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState!=  STATE_STOPPED)  {  this.runningState  =  STATE_SUSPENDED;  }  else  {  this.runningState  =  STATE_SUSPENDED;  startTime  =  System.currentTimeMillis();  }  
 + if(this.runningState!= STATE_RUNNING) { this.runningState = STATE_SUSPENDED; } else { this.runningState = STATE_SUSPENDED; stopTime = System.currentTimeMillis(); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState!=  STATE_STOPPED)  {  this.stopTime  =  System.currentTimeMillis();  }  else  {  try  {  this.runningState  =  STATE_UNSTARTED;  }  catch(IOException  ioe)  {  throw  new  Runtime  
 + if(this.runningState == STATE_RUNNING) { this.stopTime = System.currentTimeMillis(); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState!=  STATE_RUNNING  ||  this.runningState!=  STATE_SUSPENDED)  {  stopTime  =  System.currentTimeMillis();  }  else  {  int  startTime  =  System.currentTimeMillis();  this.runningState  =  STATE_UNSTARTED;  }  
 + if(this.runningState == STATE_RUNNING && this.runningState!= STATE_SUSPENDED) { stopTime = System.currentTimeMillis(); } else { this.runningState = STATE_UNSTARTED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.splitState!=  STATE_UNSTARTED)  {  stopTime  =  System.currentTimeMillis();  }  else  {  startTime  =  System.currentTimeMillis();  }  if(this.splitState  ==  STATE_UNSTARTED)  {  stopTime  =  System.currentTimeMillis();  }  else  {  this.splitState  =  STATE_STOPPED;  }  
 + if(this.runningState == STATE_RUNNING) { stopTime = System.currentTimeMillis(); } else { this.splitState = STATE_STOPPED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.splitState!=  STATE_UNSTARTED)  {  stopTime  =  System.currentTimeMillis();  }  else  {  startTime  =  System.currentTimeMillis();  }  if(this.splitState  ==  STATE_UNSTARTED)  {  stopTime  =  System.currentTimeMillis();  }  else  {  this.splitState  =  STATE_STOPPED;  }  
 + if(this.runningState == STATE_RUNNING || this.runningState!= STATE_SUSPENDED) { stopTime = System.currentTimeMillis(); } else { this.splitState = STATE_STOPPED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.splitState!=  STATE_UNSTARTED)  {  stopTime  =  System.currentTimeMillis();  }  else  {  startTime  =  System.currentTimeMillis();  }  if(this.splitState  ==  STATE_UNSTARTED)  {  stopTime  =  System.currentTimeMillis();  }  else  {  this.splitState  =  STATE_STOPPED;  }  
 + if(this.runningState == STATE_RUNNING) { stopTime = System.currentTimeMillis(); } else { this.splitState = STATE_SUSPENDED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  while(this.runningState!=  STATE_STOPPED  &&  this.stopTime!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  else  {  stopTime  =  System.currentTimeMill  
 + while(this.runningState!= STATE_SUSPENDED && this.stopTime!= STATE_RUNNING) { stopTime = System.currentTimeMillis(); this.runningState = STATE_SUSPENDED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  {  startTime  =  System.currentTimeMillis();  this.splitState  =  STATE_UNSTARTED;  }  if(this.runningState!=  STATE_UNSTARTED)  {  stopTime  =  System.currentTimeMillis();  }  else  {  this.splitState  =  STATE_UNSTARTED;  }  
 + if(this.runningState == STATE_RUNNING) { stopTime = System.currentTimeMillis(); } else { this.splitState = STATE_UNSTARTED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState!=  STATE_RUNNING  ||  this.runningState!=  STATE_SUSPENDED)  {  stopTime  =  System.currentTimeMillis();  }  else  {  startTime  =  System.currentTimeMillis();  }  if(this.runningState!=  STATE_RUNNING  ||  this.runningState!=  STATE_SUSPENDED)  {  stopTime  =  System.currentTimeMillis();  }  else  {  this.runningState  =  STATE_SPLIT;  }  
 + if(this.runningState!= STATE_SUSPENDED || this.runningState!= STATE_SUSPENDED) { stopTime = System.currentTimeMillis(); } else { this.runningState = STATE_SPLIT; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState!=  STATE_RUNNING  ||  this.runningState!=  STATE_SUSPENDED)  {  stopTime  =  System.currentTimeMillis();  }  else  {  startTime  =  System.currentTimeMillis();  }  if(this.runningState!=  STATE_RUNNING  ||  this.runningState!=  STATE_SUSPENDED)  {  stopTime  =  System.currentTimeMillis();  }  else  {  this.runningState  =  STATE_SPLIT;  }  
 + if(this.runningState == STATE_UNSTARTED || this.runningState!= STATE_SUSPENDED) { stopTime = System.currentTimeMillis(); } else { this.runningState = STATE_SPLIT; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState!=  STATE_STOPPED)  {  this.stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  
 + if(this.runningState == STATE_RUNNING) { this.stopTime = System.currentTimeMillis(); this.runningState = STATE_SUSPENDED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState!=  STATE_STOPPED)  {  this.stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  
 + while(this.runningState!= STATE_SUSPENDED) { this.stopTime = System.currentTimeMillis(); this.runningState = STATE_SUSPENDED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  stopTime  =  System.currentTimeMillis()  /  2;  if(this.runningState!=  STATE_RUNNING  ||  this.runningState  ==  STATE_SUSPENDED)  {  System.currentTimeMillis()  /  2;  }  else  {  stopTime  =  System.currentTimeMillis()  /  2;  }  
 + long startTime = System.currentTimeMillis(); if(this.runningState!= STATE_RUNNING || this.runningState == STATE_SUSPENDED) { System.currentTimeMillis(); } else { stopTime = System.currentTimeMillis(); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  stopTime  =  System.currentTimeMillis()  /  2;  if(this.runningState!=  STATE_RUNNING  ||  this.runningState  ==  STATE_SUSPENDED)  {  System.currentTimeMillis()  /  2;  }  else  {  stopTime  =  System.currentTimeMillis()  /  2;  }  
 + if(this.runningState!= STATE_RUNNING || this.runningState == STATE_SUSPENDED) { System.currentTimeMillis(); } else { stopTime = System.currentTimeMillis(); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState!=  STATE_RUNNING  ||  this.runningState!=  STATE_SUSPENDED)  {  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_STOPPED;  }  else  {  stopTime  =  System.currentTimeM  
 + if(this.runningState == STATE_RUNNING && this.runningState!= STATE_SUSPENDED) { stopTime = System.currentTimeMillis(); this.runningState = STATE_STOPPED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState!=  STATE_RUNNING  ||  this.runningState!=  STATE_SUSPENDED)  {  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_STOPPED;  }  else  {  stopTime  =  System.currentTimeM  
 + if(this.runningState == STATE_RUNNING || this.runningState!= STATE_SUSPENDED) { stopTime = System.currentTimeMillis(); this.runningState = STATE_STOPPED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.splitState!=  STATE_UNSTARTED)  {  stopTime  =  System.currentTimeMillis();  }  if(this.splitState!=  STATE_UNSTARTED)  {  blockTime  =  System.currentTimeMillis();  }  
 + if(this.runningState!= STATE_RUNNING) { this.runningState = STATE_STOPPED; } else if(this.splitState!= STATE_UNSTARTED) { stopTime = System.currentTimeMillis(); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.splitState!=  STATE_UNSTARTED)  {  stopTime  =  System.currentTimeMillis();  }  if(this.splitState!=  STATE_UNSTARTED)  {  blockTime  =  System.currentTimeMillis();  }  
 + if(this.runningState!= STATE_RUNNING) { this.runningState = STATE_STOPPED; } else if(this.splitState!= STATE_SUSPENDED) { stopTime = System.currentTimeMillis(); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState  ==  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  {  stopTime  =  System.currentTimeMillis();  }  if(this.runningState  ==  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  {  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_STOPPED;  }  
 + if(this.runningState == STATE_SUSPENDED) { this.runningState = STATE_SUSPENDED; } else { stopTime = System.currentTimeMillis(); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.stopTime!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  {  stopTime  =  System.currentTimeMillis();  }  if(this.stopTime!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  {  this.runningState  =  STATE_SPLIT;  }  
 + if(this.runningState!= STATE_SUSPENDED) { if(this.stopTime!= STATE_RUNNING) { stopTime = System.currentTimeMillis(); } else { this.runningState = STATE_SPLIT; } } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.stopTime!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  {  stopTime  =  System.currentTimeMillis();  }  if(this.stopTime!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  {  this.runningState  =  STATE_SPLIT;  }  
 + if(this.runningState!= STATE_SUSPENDED) { this.stopTime = System.currentTimeMillis(); } else { this.runningState = STATE_SPLIT; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  stopTime  =  System.currentTimeMillis()  -  1;  if(this.runningState!=  STATE_RUNNING)  {  this.runningState  =  STATE_SUSPENDED;  }  else  {  stopTime  =  System.currentTimeMillis()  -  1;  }  
 + long startTime = System.currentTimeMillis() - 1; if(this.runningState!= STATE_RUNNING) { this.runningState = STATE_SUSPENDED; } else { stopTime = System.currentTimeMillis() - 1; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  stopTime  =  System.currentTimeMillis()  -  1;  if(this.runningState!=  STATE_RUNNING)  {  this.runningState  =  STATE_SUSPENDED;  }  else  {  stopTime  =  System.currentTimeMillis()  -  1;  }  
 + long splitState = System.currentTimeMillis() - 1; if(this.runningState!= STATE_RUNNING) { this.runningState = STATE_SUSPENDED; } else { stopTime = System.currentTimeMillis() - 1; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  stopTime  =  System.currentTimeMillis()  -  1;  if(this.runningState!=  STATE_RUNNING)  {  this.runningState  =  STATE_SUSPENDED;  }  else  {  stopTime  =  System.currentTimeMillis()  -  1;  }  
 + long startTime = System.currentTimeMillis(); if(this.runningState!= STATE_RUNNING) { this.runningState = STATE_SUSPENDED; } else { stopTime = System.currentTimeMillis() - 1; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  stopTime  =  System.currentTimeMillis()  -  1;  if(this.runningState!=  STATE_RUNNING)  {  this.runningState  =  STATE_SUSPENDED;  }  else  {  stopTime  =  System.currentTimeMillis()  -  1;  }  
 + long splitState = System.currentTimeMillis() - 1; if(this.runningState!= STATE_RUNNING) { this.runningState = STATE_SUSPENDED; } else { stopTime = System.currentTimeMillis(); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  stopTime  =  System.currentTimeMillis()  -  1;  if(this.runningState!=  STATE_RUNNING)  {  this.runningState  =  STATE_SUSPENDED;  }  else  {  stopTime  =  System.currentTimeMillis()  -  1;  }  
 + long startTime = System.currentTimeMillis() - 1; if(this.runningState!= STATE_RUNNING) { this.runningState = STATE_SUSPENDED; } else { stopTime = System.currentTimeMillis(); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  stopTime  =  System.currentTimeMillis()  -  1;  if(this.runningState!=  STATE_RUNNING)  {  this.runningState  =  STATE_SUSPENDED;  }  else  {  stopTime  =  System.currentTimeMillis()  -  1;  }  
 + long startTime = System.currentTimeMillis(); if(this.runningState!= STATE_RUNNING) { this.runningState = STATE_SUSPENDED; } else { stopTime = System.currentTimeMillis(); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  stopTime  =  System.currentTimeMillis()  -  1;  if(this.runningState!=  STATE_RUNNING)  {  this.runningState  =  STATE_SUSPENDED;  }  else  {  stopTime  =  System.currentTimeMillis()  -  1;  }  
 + long splitState = System.currentTimeMillis(); if(this.runningState!= STATE_RUNNING) { this.runningState = STATE_SUSPENDED; } else { stopTime = System.currentTimeMillis() - 1; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.stopTime!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  {  stopTime  =  System.currentTimeMillis();  this.splitState  =  STATE_SPLIT;  }  if(this.stopTime!=  STATE_RUNNING)  {  this.runningState  =  STATE_SPLIT;  }  else  {  stopTime  =  System.currentTimeMillis();  this.splitState  =  STATE_SPLIT;  }  
 + if(this.runningState!= STATE_RUNNING) { this.runningState = STATE_STOPPED; } else { stopTime = System.currentTimeMillis(); this.splitState = STATE_SPLIT; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.stopTime!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  {  stopTime  =  System.currentTimeMillis();  this.splitState  =  STATE_SPLIT;  }  if(this.stopTime!=  STATE_RUNNING)  {  this.runningState  =  STATE_SPLIT;  }  else  {  stopTime  =  System.currentTimeMillis();  this.splitState  =  STATE_SPLIT;  }  
 + if(this.runningState!= STATE_RUNNING) { this.runningState = STATE_SPLIT; } else { stopTime = System.currentTimeMillis(); this.splitState = STATE_SPLIT; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.stopTime!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  {  stopTime  =  System.currentTimeMillis();  this.splitState  =  STATE_SPLIT;  }  if(this.stopTime!=  STATE_RUNNING)  {  this.runningState  =  STATE_SPLIT;  }  else  {  stopTime  =  System.currentTimeMillis();  this.splitState  =  STATE_SPLIT;  }  
 + if(this.runningState == STATE_SUSPENDED) { this.runningState = STATE_STOPPED; } else { stopTime = System.currentTimeMillis(); this.splitState = STATE_SPLIT; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState!=  STATE_STOPPED  &&  this.runningState  ==  STATE_SUSPENDED)  {  stopTime  =  System.currentTimeMillis();  }  else  {  startTime  =  System.currentTimeMillis();  }  
 + if(this.runningState == STATE_RUNNING) { if(this.runningState!= STATE_SUSPENDED) { stopTime = System.currentTimeMillis(); } else { startTime = System.currentTimeMillis(); } } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.stopTime!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  {  stopTime  =  System.currentTimeMillis();  }  when(this.stopTime!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  {  this.runningState  =  STATE_STOPPED;  }  
 + if(this.runningState!= STATE_SUSPENDED) { if(this.stopTime!= STATE_RUNNING) { stopTime = System.currentTimeMillis(); } else { this.runningState = STATE_STOPPED; } } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  stopTime  =  System.currentTimeMillis()  /  2;  if(this.runningState  ==  STATE_RUNNING  ||  this.runningState!=  STATE_SUSPENDED)  {  stopTime  =  System.currentTimeMillis()  /  2;  }  
 + long runningState = System.currentTimeMillis(); if(this.runningState == STATE_RUNNING || this.runningState!= STATE_SUSPENDED) { stopTime = System.currentTimeMillis(); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  stopTime  =  System.currentTimeMillis()  +  1;  if(this.runningState!=  STATE_RUNNING)  {  System.err.println(  "Stopwatch  is  not  running.    ");  stopTime  =  System.currentTimeMillis()  +  1;  }  
 + long startTime = System.currentTimeMillis(); if(this.runningState!= STATE_SUSPENDED) { System.err.println( "Stopwatch is not running.  "); stopTime = System.currentTimeMillis(); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  stopTime  =  System.currentTimeMillis()  +  1;  if(this.runningState!=  STATE_RUNNING)  {  System.err.println(  "Stopwatch  is  not  running.    ");  stopTime  =  System.currentTimeMillis()  +  1;  }  
 + long startTime = System.currentTimeMillis(); if(this.runningState!= STATE_SUSPENDED) { System.err.println( "Stopwatch is not running.  "); stopTime = System.currentTimeMillis() + 1; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.stopTime!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  {  this.stopTime  =  System.currentTimeMillis();  }  if(this.stopTime!=  STATE_SUSPENDED)  {  this.stopTime  =  System.currentTimeMillis();  }  else  {  this.runningState  =  STATE_STOPPED;  }  
 + if(this.runningState == STATE_RUNNING) { this.stopTime = System.currentTimeMillis(); } else { this.runningState = STATE_STOPPED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.stopTime!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  {  startTime  =  System.currentTimeMillis();  this.splitState  =  STATE_SUSPENDED;  }  if(this.stopTime!=  STATE_SPLIT)  {  stopTime  =  System.currentTimeMillis();  }  else  {  this.splitState  =  STATE_SUSPENDED;  }  
 + if(this.runningState!= STATE_SUSPENDED) { this.stopTime = System.currentTimeMillis(); } else { this.splitState = STATE_SUSPENDED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  if(this.runningState!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  this.runningState  =  STATE_STOPPED;  
 + if(this.runningState!= STATE_SUSPENDED) { stopTime = System.currentTimeMillis(); } else if(this.runningState!= STATE_SUSPENDED) { throw new IllegalStateException( "Stopwatch is not running.  "); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState!=  STATE_UNSTARTED)  {  this.stopTime  =  System.currentTimeMillis();  }  else  {  int  startTime  =  System.currentTimeMillis();  this.runningState  =  STATE_UNSTARTED;  }  
 + if(this.runningState == STATE_RUNNING) { this.stopTime = System.currentTimeMillis(); } else { this.runningState = STATE_UNSTARTED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState  ==  STATE_STOPPED)  {  this.runningState  =  STATE_SUSPENDED;  }  else  {  stopTime  =  System.currentTimeMillis();  }  
 + if(this.runningState!= STATE_RUNNING || this.runningState == STATE_SUSPENDED) { this.runningState = STATE_SUSPENDED; } else { stopTime = System.currentTimeMillis(); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState!=  STATE_RUNNING)  {  this.splitState  =  STATE_UNSTARTED;  stopTime  =  System.currentTimeMillis();  }  else  {  stopTime  =  System.currentTimeMillis();  }  
 + this.splitState = STATE_UNSTARTED; if(this.runningState!= STATE_SUSPENDED) { this.splitState = STATE_UNSTARTED; stopTime = System.currentTimeMillis(); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState!=  STATE_RUNNING)  {  this.splitState  =  STATE_UNSTARTED;  stopTime  =  System.currentTimeMillis();  }  else  {  stopTime  =  System.currentTimeMillis();  }  
 + if(this.runningState!= STATE_SUSPENDED) { this.splitState = STATE_UNSTARTED; stopTime = System.currentTimeMillis(); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  stopTime  =  System.currentTimeMillis()  +  1;  if(this.runningState!=  STATE_UNSTARTED)  {  int  startTime  =  System.currentTimeMillis()  +  1;  this.runningState  =  STATE_SUSPENDED;  stopTime  =  System.currentTimeMillis()  +  1;  }  
 + long startTime = System.currentTimeMillis() + 1; if(this.runningState!= STATE_SUSPENDED) { this.runningState = STATE_SUSPENDED; stopTime = System.currentTimeMillis() + 1; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.splitState!=  STATE_UNSTARTED)  {  stopTime  =  System.currentTimeMillis();  }  if(this.splitState!=  STATE_UNSTARTED)  {  clipTime  =  System.currentTimeMillis();  }  
 + if(this.runningState!= STATE_RUNNING) { this.runningState = STATE_STOPPED; } else if(this.runningState!= STATE_UNSTARTED) { stopTime = System.currentTimeMillis(); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.stopTime!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  {  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  if(this.stopTime!=  STATE_RUNNING)  {  this.runningState  =  STATE_UNSTARTED;  }  else  {  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  
 + if(this.runningState!= STATE_RUNNING) { this.runningState = STATE_UNSTARTED; } else { stopTime = System.currentTimeMillis(); this.runningState = STATE_SUSPENDED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState!=  STATE_SUSPENDED)  {  this.stopTime  =  System.currentTimeMillis();  }  else  {  int  startTime  =  System.currentTimeMillis();  this.runningState  =  STATE_UNSTARTED;  }  
 + if(this.runningState == STATE_RUNNING || this.runningState!= STATE_SUSPENDED) { this.stopTime = System.currentTimeMillis(); } else { this.runningState = STATE_UNSTARTED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  stopTime  =  System.currentTimeMillis()  +  1;  if(this.runningState!=  STATE_UNSTARTED)  {  int  startTime  =  System.currentTimeMillis()  +  1;  this.runningState  =  STATE_SUSPENDED;  }  else  {  stopTime  =  System.currentTimeMillis()  +  1;  }  
 + long startTime = System.currentTimeMillis() + 1; if(this.runningState!= STATE_RUNNING) { this.runningState = STATE_SUSPENDED; } else { stopTime = System.currentTimeMillis() + 1; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  stopTime  =  System.currentTimeMillis()  +  1;  if(this.runningState!=  STATE_UNSTARTED)  {  int  startTime  =  System.currentTimeMillis()  +  1;  this.runningState  =  STATE_SUSPENDED;  }  else  {  stopTime  =  System.currentTimeMillis()  +  1;  }  
 + long splitState = System.currentTimeMillis() + 1; if(this.runningState!= STATE_RUNNING) { this.runningState = STATE_SUSPENDED; } else { stopTime = System.currentTimeMillis() + 1; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  stopTime  =  System.currentTimeMillis()  +  1;  if(this.runningState!=  STATE_UNSTARTED)  {  int  startTime  =  System.currentTimeMillis()  +  1;  this.runningState  =  STATE_SUSPENDED;  }  else  {  stopTime  =  System.currentTimeMillis()  +  1;  }  
 + long startTime = System.currentTimeMillis(); if(this.runningState!= STATE_RUNNING) { this.runningState = STATE_SUSPENDED; } else { stopTime = System.currentTimeMillis() + 1; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  stopTime  =  System.currentTimeMillis()  +  1;  if(this.runningState!=  STATE_UNSTARTED)  {  int  startTime  =  System.currentTimeMillis()  +  1;  this.runningState  =  STATE_SUSPENDED;  }  else  {  stopTime  =  System.currentTimeMillis()  +  1;  }  
 + long startTime = System.currentTimeMillis() + 1; if(this.runningState!= STATE_SUSPENDED) { stopTime = System.currentTimeMillis() + 1; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState!=  STATE_STOPPED)  {  this.runningState  =  STATE_SUSPENDED;  }  else  {  this.runningState  =  STATE_UNSTARTED;  startTime  =  System.currentTimeMillis();  }  
 + if(this.runningState!= STATE_RUNNING) { this.runningState = STATE_SUSPENDED; } else { this.runningState = STATE_UNSTARTED; stopTime = System.currentTimeMillis(); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState  ==  STATE_SUSPENDED)  {  this.stopTime  =  System.currentTimeMillis();  }  else  {  this.runningState  =  STATE_STOPPED;  }  
 + if(this.runningState == STATE_RUNNING || this.runningState!= STATE_SUSPENDED) { this.stopTime = System.currentTimeMillis(); } else { this.runningState = STATE_STOPPED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState  ==  STATE_SUSPENDED)  {  this.stopTime  =  System.currentTimeMillis();  }  else  {  this.runningState  =  STATE_STOPPED;  }  
 + if(this.runningState == STATE_RUNNING && this.runningState!= STATE_SUSPENDED) { this.stopTime = System.currentTimeMillis(); } else { this.runningState = STATE_STOPPED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.stopTime!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  {  this.runningState  =  STATE_UNSTARTED;  startTime  =  System.currentTimeMillis();  }  if(this.stopTime!=  STATE_UNSTARTED)  {  startTime  =  System.currentTimeMillis();  }  else  {  this.runningState  =  STATE_UNSTARTED;  stopTime  =  System.currentTimeMillis();  }  
 + if(this.runningState!= STATE_RUNNING) { this.runningState = STATE_STOPPED; } else { this.runningState = STATE_UNSTARTED; stopTime = System.currentTimeMillis(); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.stopTime!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  {  this.runningState  =  STATE_UNSTARTED;  startTime  =  System.currentTimeMillis();  }  if(this.stopTime!=  STATE_UNSTARTED)  {  startTime  =  System.currentTimeMillis();  }  else  {  this.runningState  =  STATE_UNSTARTED;  stopTime  =  System.currentTimeMillis();  }  
 + if(this.runningState!= STATE_RUNNING) { this.runningState = STATE_UNSTARTED; } else { this.runningState = STATE_SUSPENDED; stopTime = System.currentTimeMillis(); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.stopTime!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  {  this.runningState  =  STATE_UNSTARTED;  startTime  =  System.currentTimeMillis();  }  if(this.stopTime!=  STATE_UNSTARTED)  {  startTime  =  System.currentTimeMillis();  }  else  {  this.runningState  =  STATE_UNSTARTED;  stopTime  =  System.currentTimeMillis();  }  
 + if(this.runningState!= STATE_RUNNING) { this.runningState = STATE_STOPPED; } else { this.runningState = STATE_SUSPENDED; stopTime = System.currentTimeMillis(); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.startTime!=  STATE_UNSTARTED)  {  this.stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  else  {  stopTime  =  System.currentTimeMillis();  }  
 + if(this.stopTime!= STATE_RUNNING && this.runningState!= STATE_SUSPENDED) { this.stopTime = System.currentTimeMillis(); this.runningState = STATE_SUSPENDED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.splitState!=  STATE_UNSTARTED)  {  stopTime  =  System.currentTimeMillis();  }  else  {  startTime  =  System.currentTimeMillis();  }  If(this.splitState!=  STATE_UNSTARTED)  {  stopTime  =  System.currentTimeMillis();  }  else  {  this.runningState  =  STATE_STOPPED;  }  
 + if(this.runningState == STATE_RUNNING) { if(this.splitState!= STATE_UNSTARTED) { stopTime = System.currentTimeMillis(); } else { this.runningState = STATE_STOPPED; } } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.splitState!=  STATE_UNSTARTED)  {  stopTime  =  System.currentTimeMillis();  }  else  {  startTime  =  System.currentTimeMillis();  }  If(this.splitState!=  STATE_UNSTARTED)  {  stopTime  =  System.currentTimeMillis();  }  else  {  this.runningState  =  STATE_STOPPED;  }  
 + if(this.runningState == STATE_RUNNING) { if(this.splitState!= STATE_SUSPENDED) { stopTime = System.currentTimeMillis(); } else { this.runningState = STATE_STOPPED; } } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.splitState!=  STATE_UNSTARTED)  {  stopTime  =  System.currentTimeMillis();  }  else  {  startTime  =  System.currentTimeMillis();  }  If(this.splitState!=  STATE_UNSTARTED)  {  stopTime  =  System.currentTimeMillis();  }  else  {  this.runningState  =  STATE_STOPPED;  }  
 + if(this.runningState!= STATE_SUSPENDED) { if(this.splitState!= STATE_UNSTARTED) { stopTime = System.currentTimeMillis(); } else { this.runningState = STATE_STOPPED; } } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  stopTime  =  System.currentTimeMillis()  -  1;  if(stopTime  ==  System.currentTimeMillis())  {  stopTime  =  System.currentTimeMillis()  -  1;  }  
 + if(this.runningState == STATE_RUNNING) { stopTime = System.currentTimeMillis() - 1; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  stopTime  =  System.currentTimeMillis()  -  1;  if(stopTime  ==  System.currentTimeMillis())  {  stopTime  =  System.currentTimeMillis()  -  1;  }  
 + if(this.runningState == STATE_RUNNING || this.runningState!= STATE_SUSPENDED) { stopTime = System.currentTimeMillis() - 1; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  stopTime  =  System.currentTimeMillis()  -  1;  if(stopTime  ==  System.currentTimeMillis())  {  stopTime  =  System.currentTimeMillis()  -  1;  }  
 + if(this.runningState == STATE_RUNNING) { stopTime = System.currentTimeMillis() - 1; } else { this.runningState = STATE_UNSTARTED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.splitState!=  STATE_UNSTARTED)  {  stopTime  =  System.currentTimeMillis();  }  else  {  switch(this.splitState)  {  stopTime  =  System.currentTimeMillis();  }  
 + if(this.runningState == STATE_RUNNING) { if(this.splitState!= STATE_UNSTARTED) { stopTime = System.currentTimeMillis(); } else { stopTime = System.currentTimeMillis(); } } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.splitState!=  STATE_SPLIT  ||  this.runningState!=  STATE_SUSPENDED)  {  stopTime  =  System.currentTimeMillis();  }  
 + if(this.splitState!= STATE_SPLIT && this.runningState!= STATE_SUSPENDED) { stopTime = System.currentTimeMillis(); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.splitState!=  STATE_RUNNING)  {  this.stopTime  =  System.currentTimeMillis();  }  else  {  System.arraycopy(this.splitState,  startTime,  this.splitState,  this.splitState);  }  
 + if(this.splitState!= STATE_RUNNING && this.runningState!= STATE_SUSPENDED) { this.stopTime = System.currentTimeMillis(); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  stopTime  =  System.currentTimeMillis()  -  1;  if(this.runningState!=  STATE_SUSPENDED)  {  System.currentTimeMillis()  -  1;  }  else  {  stopTime  =  System.currentTimeMillis()  -  1;  }  
 + long startTime = System.currentTimeMillis() - 1; if(this.runningState!= STATE_RUNNING) { System.currentTimeMillis(); } else { stopTime = System.currentTimeMillis() - 1; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  stopTime  =  System.currentTimeMillis()  -  1;  if(this.runningState!=  STATE_SUSPENDED)  {  System.currentTimeMillis()  -  1;  }  else  {  stopTime  =  System.currentTimeMillis()  -  1;  }  
 + long startTime = System.currentTimeMillis(); if(this.runningState!= STATE_RUNNING) { System.currentTimeMillis(); } else { stopTime = System.currentTimeMillis() - 1; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.stopTime!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  {  stopTime  =  System.currentTimeMillis()  +  1;  }  if(this.stopTime!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis()  +  1;  }  else  {  this.runningState  =  STATE_UNISTARTED;  }  
 + if(this.runningState!= STATE_SUSPENDED) { stopTime = System.currentTimeMillis() + 1; } else { this.runningState = STATE_STOPPED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.splitState!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  {  this.runningState  =  STATE_STOPPED;  }  
 + if(this.splitState!= STATE_RUNNING && this.runningState!= STATE_SUSPENDED) { stopTime = System.currentTimeMillis(); } else { this.runningState = STATE_STOPPED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.splitState  ==  STATE_SUSPENDED)  {  stopTime  =  System.currentTimeMillis();  }  else  {  stopTime  =  System.currentTimeMillis();  this.splitState  =  STATE_SPLIT;  }  
 + if(this.runningState!= STATE_RUNNING) { this.splitState = STATE_SPLIT; } else { stopTime = System.currentTimeMillis(); this.splitState = STATE_SPLIT; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.stopTime!=  STATE_RUNNING)  {  this.stopTime  =  System.currentTimeMillis();  }  else  {  this.runningState  =  STATE_UNSTARTED;  }  
 + if(this.stopTime!= STATE_RUNNING && this.runningState!= STATE_SUSPENDED) { this.stopTime = System.currentTimeMillis(); } else { this.runningState = STATE_UNSTARTED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.stopTime!=  STATE_RUNNING)  {  this.stopTime  =  System.currentTimeMillis();  }  else  {  this.runningState  =  STATE_UNSTARTED;  }  
 + if(this.stopTime == STATE_RUNNING || this.runningState!= STATE_SUSPENDED) { this.stopTime = System.currentTimeMillis(); } else { this.runningState = STATE_UNSTARTED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.stopTime!=  STATE_RUNNING)  {  this.stopTime  =  System.currentTimeMillis();  }  else  {  this.runningState  =  STATE_UNSTARTED;  }  
 + if(this.stopTime!= STATE_RUNNING && this.runningState!= STATE_SUSPENDED) { this.stopTime = System.currentTimeMillis(); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState  ==  STATE_STOPPED)  {  stopTime  =  System.currentTimeMillis();  }  else  {  switch(this.runningState)  {  case  STATE_UNSTARTED:  stopTime  =  System.currentTimeMillis();  break;  }  
 + if(this.runningState == STATE_RUNNING) { stopTime = System.currentTimeMillis(); } else { switch(this.runningState) { case STATE_UNSTARTED: stopTime = System.currentTimeMillis(); break; } } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState!=  STATE_STOPPED)  {  stopTime  =  System.currentTimeMillis();  this.splitState  =  STATE_UNSTARTED;  }  else  {  stopTime  =  System.currentTimeMillis();  }  
 + if(this.runningState!= STATE_RUNNING) { System.currentTimeMillis(); this.splitState = STATE_UNSTARTED; } else { stopTime = System.currentTimeMillis(); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState!=  STATE_STOPPED)  {  stopTime  =  System.currentTimeMillis();  this.splitState  =  STATE_UNSTARTED;  }  else  {  stopTime  =  System.currentTimeMillis();  }  
 + if(this.runningState!= STATE_RUNNING || this.splitState == STATE_SUSPENDED) { this.runningState = STATE_UNSTARTED; } else { stopTime = System.currentTimeMillis(); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  stopTime  =  System.currentTimeMillis()  -  1;  this.stopTime  =  System.currentTimeMillis()  -  1;  
 + if(this.runningState == STATE_RUNNING) { stopTime = System.currentTimeMillis() - 1; this.stopTime = System.currentTimeMillis() - 1; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  stopTime  =  System.currentTimeMillis()  -  1;  this.stopTime  =  System.currentTimeMillis()  -  1;  
 + if(this.runningState == STATE_RUNNING || this.runningState!= STATE_SUSPENDED) { stopTime = System.currentTimeMillis() - 1; this.stopTime = System.currentTimeMillis() - 1; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  stopTime  =  System.currentTimeMillis()  -  1;  this.stopTime  =  System.currentTimeMillis()  -  1;  
 + if(this.runningState!= STATE_SUSPENDED) { stopTime = System.currentTimeMillis() - 1; this.stopTime = System.currentTimeMillis() - 1; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.splitState!=  STATE_UNSTARTED)  {  stopTime  =  System.currentTimeMillis();  }  else  {  startTime  =  System.currentTimeMillis();  }  if(this.splitState!=  STATE_UNSTARTED)  {  startTime  =  System.currentTimeMillis();  }  else  {  this.runningState  =  STATE_STOPPED;  stopTime  =  System.currentTimeMillis();  }  
 + if(this.runningState!= STATE_RUNNING) { this.runningState = STATE_SUSPENDED; } else { this.runningState = STATE_STOPPED; stopTime = System.currentTimeMillis(); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.splitState!=  STATE_UNSTARTED)  {  stopTime  =  System.currentTimeMillis();  }  else  {  startTime  =  System.currentTimeMillis();  }  if(this.splitState!=  STATE_UNSTARTED)  {  startTime  =  System.currentTimeMillis();  }  else  {  this.runningState  =  STATE_STOPPED;  stopTime  =  System.currentTimeMillis();  }  
 + if(this.runningState!= STATE_RUNNING) { this.runningState = STATE_STOPPED; } else { this.runningState = STATE_STOPPED; stopTime = System.currentTimeMillis(); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.splitState!=  STATE_UNSTARTED)  {  stopTime  =  System.currentTimeMillis();  }  else  {  startTime  =  System.currentTimeMillis();  }  if(this.splitState!=  STATE_UNSTARTED)  {  startTime  =  System.currentTimeMillis();  }  else  {  this.runningState  =  STATE_STOPPED;  stopTime  =  System.currentTimeMillis();  }  
 + if(this.runningState!= STATE_RUNNING) { System.currentTimeMillis(); } else { this.runningState = STATE_STOPPED; stopTime = System.currentTimeMillis(); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState!=  STATE_STOPPED)  {  this.runningState  =  STATE_RUNNING;  }  else  {  this.runningState  =  STATE_SUSPENDED;  startTime  =  System.currentTimeMillis();  }  
 + if(this.runningState!= STATE_RUNNING) { this.runningState = STATE_RUNNING; } else { this.runningState = STATE_SUSPENDED; stopTime = System.currentTimeMillis(); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState!=  STATE_STOPPED  ||  this.splitState  ==  STATE_UNSTARTED)  {  stopTime  =  System.currentTimeMillis();  }  
 + if(this.runningState == STATE_RUNNING || this.splitState == STATE_UNSTARTED) { stopTime = System.currentTimeMillis(); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState!=  STATE_STOPPED  ||  this.splitState  ==  STATE_UNSTARTED)  {  stopTime  =  System.currentTimeMillis();  }  
 + if(this.runningState == STATE_RUNNING || this.splitState == STATE_SUSPENDED) { stopTime = System.currentTimeMillis(); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  {  stopTime  =  System.currentTimeMillis();  }  because(this.runningState!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  {  stopTime  =  System.currentTimeMillis();  }  
 + if(this.runningState!= STATE_SUSPENDED) { if(this.runningState!= STATE_RUNNING) { stopTime = System.currentTimeMillis(); } else { stopTime = System.currentTimeMillis(); } } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.stopTime  ==  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  {  this.splitState  =  STATE_SUSPENDED;  }  
 + if(this.stopTime == STATE_RUNNING || this.runningState!= STATE_SUSPENDED) { stopTime = System.currentTimeMillis(); } else { this.splitState = STATE_SUSPENDED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.stopTime  ==  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  {  this.splitState  =  STATE_SUSPENDED;  }  
 + if(this.stopTime == STATE_RUNNING || this.runningState!= STATE_SUSPENDED) { this.stopTime = System.currentTimeMillis(); } else { this.splitState = STATE_SUSPENDED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState!=  STATE_UNSTARTED)  {  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_STOPPED;  }  else  {  stopTime  =  System.currentTimeMillis();  }  
 + if(this.runningState!= STATE_RUNNING || this.runningState == STATE_SUSPENDED) { this.runningState = STATE_STOPPED; } else { stopTime = System.currentTimeMillis(); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState!=  STATE_RUNNING  &&  this.runningState!=  STATE_SUSPENDED)  {  stopTime  =  System.currentTimeMillis()  -  1;  }  
 + if(this.runningState!= STATE_STOPPED && this.runningState!= STATE_SUSPENDED) { stopTime = System.currentTimeMillis() - 1; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState!=  STATE_RUNNING  &&  this.runningState!=  STATE_SUSPENDED)  {  stopTime  =  System.currentTimeMillis()  -  1;  }  
 + if(this.runningState == STATE_RUNNING && this.runningState!= STATE_SUSPENDED) { stopTime = System.currentTimeMillis() - 1; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState!=  STATE_RUNNING  &&  this.runningState!=  STATE_SUSPENDED)  {  stopTime  =  System.currentTimeMillis()  -  1;  }  
 + if(this.runningState!= STATE_UNSTARTED && this.runningState!= STATE_SUSPENDED) { stopTime = System.currentTimeMillis() - 1; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  stopTime  =  System.currentTimeMillis()  +  1;  if(this.runningState!=  STATE_RUNNING  ||  this.runningState  ==  STATE_SUSPENDED)  {  System.currentTimeMillis()  +  1;  }  else  {  stopTime  =  System.currentTimeMillis()  +  1;  }  
 + long startTime = System.currentTimeMillis(); if(this.runningState!= STATE_RUNNING || this.runningState == STATE_SUSPENDED) { System.currentTimeMillis(); } else { stopTime = System.currentTimeMillis() + 1; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState!=  STATE_SUSPENDED)  {  this.splitState  =  STATE_UNSTARTED;  }  else  {  stopTime  =  System.currentTimeMillis();  }  
 + if(this.runningState!= STATE_RUNNING || this.runningState == STATE_SUSPENDED) { this.splitState = STATE_UNSTARTED; } else { stopTime = System.currentTimeMillis(); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState!=  STATE_SUSPENDED)  {  this.splitState  =  STATE_UNSTARTED;  }  else  {  stopTime  =  System.currentTimeMillis();  }  
 + this.splitState = STATE_UNSTARTED; if(this.runningState!= STATE_RUNNING) { this.splitState = STATE_UNSTARTED; } else { stopTime = System.currentTimeMillis(); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState!=  STATE_STOPPED  ||  this.runningState!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  {  this.runningState  =  STATE_UNSTARTED;  }  
 + if(this.runningState!= STATE_UNSTARTED && this.runningState!= STATE_SUSPENDED) { stopTime = System.currentTimeMillis(); } else { this.runningState = STATE_UNSTARTED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  {  startTime  =  System.currentTimeMillis();  this.splitState  =  STATE_UNSTARTED;  }  If(this.runningState!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  {  this.splitState  =  STATE_UNSTARTED;  }  
 + if(this.runningState!= STATE_STOPPED) { if(this.runningState!= STATE_SUSPENDED) { stopTime = System.currentTimeMillis(); } else { this.splitState = STATE_UNSTARTED; } } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  {  startTime  =  System.currentTimeMillis();  this.splitState  =  STATE_UNSTARTED;  }  If(this.runningState!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  {  this.splitState  =  STATE_UNSTARTED;  }  
 + if(this.runningState!= STATE_SPLIT) { if(this.runningState!= STATE_SUSPENDED) { stopTime = System.currentTimeMillis(); } else { this.splitState = STATE_UNSTARTED; } } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState!=  STATE_RUNNING  ||  this.runningState!=  STATE_SUSPENDED)  {  stopTime  =  System.currentTimeMillis();  }  else  {  startTime  =  System.currentTimeMillis();  }  if(this.runningState!=  STATE_RUNNING  ||  this.runningState!=  STATE_SUSPENDED)  {  stopTime  =  System.currentTimeMillis();  }  else  {  this.runningState  =  STATE_STOPPED;  }  
 + if(this.runningState == STATE_UNSTARTED || this.runningState!= STATE_SUSPENDED) { stopTime = System.currentTimeMillis(); } else { this.runningState = STATE_STOPPED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState!=  STATE_RUNNING  ||  this.runningState!=  STATE_SUSPENDED)  {  stopTime  =  System.currentTimeMillis();  }  else  {  startTime  =  System.currentTimeMillis();  }  if(this.runningState!=  STATE_RUNNING  ||  this.runningState!=  STATE_SUSPENDED)  {  stopTime  =  System.currentTimeMillis();  }  else  {  this.runningState  =  STATE_STOPPED;  }  
 + if(this.runningState!= STATE_SUSPENDED || this.runningState!= STATE_SUSPENDED) { stopTime = System.currentTimeMillis(); } else { this.runningState = STATE_SUSPENDED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.splitState!=  STATE_STOPPED)  {  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_UNSTARTED;  }  else  {  stopTime  =  System.currentTimeMillis();  }  
 + if(this.runningState!= STATE_RUNNING) { System.currentTimeMillis(); this.runningState = STATE_UNSTARTED; } else { stopTime = System.currentTimeMillis(); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  stopTime  =  System.currentTimeMillis();  if(this.runningState!=  STATE_SUSPENDED)  {  stopTime  =  System.currentTimeMillis()  +  1;  }  
 + long splitState = System.currentTimeMillis(); if(this.runningState!= STATE_SUSPENDED) { stopTime = System.currentTimeMillis() + 1; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  stopTime  =  System.currentTimeMillis();  if(this.runningState!=  STATE_SUSPENDED)  {  stopTime  =  System.currentTimeMillis()  +  1;  }  
 + long startTime = System.currentTimeMillis(); if(this.runningState!= STATE_SUSPENDED) { stopTime = System.currentTimeMillis() + 1; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  stopTime  =  System.currentTimeMillis();  if(this.runningState!=  STATE_SUSPENDED)  {  stopTime  =  System.currentTimeMillis()  +  1;  }  
 + long runningState = System.currentTimeMillis(); if(this.runningState!= STATE_SUSPENDED) { stopTime = System.currentTimeMillis() + 1; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.stopTime!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  {  startTime  =  System.currentTimeMillis();  this.runningState  =  STATE_STOPPED;  }  if(this.stopTime!=  STATE_RUNNING)  {  this.runningState  =  STATE_SUSPENDED;  }  else  {  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_STOPPED;  }  
 + if(this.runningState!= STATE_RUNNING) { this.runningState = STATE_SUSPENDED; } else { stopTime = System.currentTimeMillis(); this.runningState = STATE_STOPPED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.splitState!=  STATE_STOPPED)  {  stopTime  =  System.currentTimeMillis();  }  else  {  this.splitState  =  STATE_SUSPENDED;  }  
 + if(this.runningState == STATE_RUNNING || this.runningState!= STATE_SUSPENDED) { stopTime = System.currentTimeMillis(); } else { this.splitState = STATE_SUSPENDED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.splitState!=  STATE_STOPPED)  {  stopTime  =  System.currentTimeMillis();  }  else  {  this.splitState  =  STATE_SUSPENDED;  }  
 + if(this.runningState == STATE_RUNNING) { this.stopTime = System.currentTimeMillis(); } else { this.splitState = STATE_SUSPENDED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.splitState!=  STATE_UNSTARTED)  {  stopTime  =  System.currentTimeMillis();  }  if(this.splitState!=  STATE_UNSTARTED)  {  throw  new  IllegalStateException(  "Stopwatch  is  not  running.    ");  }  
 + if(this.runningState == STATE_RUNNING) { stopTime = System.currentTimeMillis(); } else if(this.runningState!= STATE_SUSPENDED) { throw new IllegalStateException( "Stopwatch is not running.  "); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  stopTime  =  System.currentTimeMillis()  -  1;  if(this.runningState  ==  STATE_UNSTARTED)  {  System.err.println(  "Stopwatch  is  not  running.    ");  stopTime  =  System.currentTimeMillis()  -  1;  }  
 + long splitState = System.currentTimeMillis() - 1; if(this.runningState == STATE_RUNNING) { System.err.println( "Stopwatch is not running.  "); stopTime = System.currentTimeMillis() - 1; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  stopTime  =  System.currentTimeMillis()  -  1;  if(this.runningState  ==  STATE_UNSTARTED)  {  System.err.println(  "Stopwatch  is  not  running.    ");  stopTime  =  System.currentTimeMillis()  -  1;  }  
 + long startTime = System.currentTimeMillis() - 1; if(this.runningState == STATE_RUNNING) { System.err.println( "Stopwatch is not running.  "); stopTime = System.currentTimeMillis() - 1; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  stopTime  =  System.currentTimeMillis()  -  1;  if(this.runningState  ==  STATE_UNSTARTED)  {  System.err.println(  "Stopwatch  is  not  running.    ");  stopTime  =  System.currentTimeMillis()  -  1;  }  
 + long splitState = System.currentTimeMillis(); if(this.runningState == STATE_RUNNING) { System.err.println( "Stopwatch is not running.  "); stopTime = System.currentTimeMillis() - 1; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  stopTime  =  System.currentTimeMillis()  -  1;  if(this.runningState  ==  STATE_UNSTARTED)  {  System.err.println(  "Stopwatch  is  not  running.    ");  stopTime  =  System.currentTimeMillis()  -  1;  }  
 + long startTime = System.currentTimeMillis(); if(this.runningState == STATE_RUNNING) { System.err.println( "Stopwatch is not running.  "); stopTime = System.currentTimeMillis() - 1; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  stopTime  =  System.currentTimeMillis()  -  1;  if(this.runningState  ==  STATE_UNSTARTED)  {  System.err.println(  "Stopwatch  is  not  running.    ");  stopTime  =  System.currentTimeMillis()  -  1;  }  
 + long splitState = System.currentTimeMillis(); if(this.runningState == STATE_RUNNING) { System.err.println( "Stopwatch is not running.  "); stopTime = System.currentTimeMillis(); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.stopTime!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  {  stopTime  =  System.currentTimeMillis()  +  1;  }  if(this.stopTime!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis()  +  1;  }  else  {  this.runningState  =  STATE_SPLIT;  }  
 + if(this.runningState!= STATE_SUSPENDED) { if(this.stopTime!= STATE_RUNNING) { stopTime = System.currentTimeMillis() + 1; } else { this.runningState = STATE_SPLIT; } } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  this.stopTime  =  System.currentTimeMillis();  if(this.runningState  ==  STATE_RUNNING)  {  this.stopTime  =  System.currentTimeMillis();  }  else  {  this.runningState  =  STATE_UNSTARTED;  }  
 + long splitState = System.currentTimeMillis(); if(this.runningState == STATE_RUNNING) { this.stopTime = System.currentTimeMillis(); } else { this.runningState = STATE_UNSTARTED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  this.stopTime  =  System.currentTimeMillis();  if(this.runningState  ==  STATE_RUNNING)  {  this.stopTime  =  System.currentTimeMillis();  }  else  {  this.runningState  =  STATE_UNSTARTED;  }  
 + long splitState = System.currentTimeMillis(); if(this.runningState == STATE_RUNNING) { this.stopTime = System.currentTimeMillis(); } else { this.runningState = STATE_SUSPENDED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState!=  STATE_STOPPED)  {  System.currentTimeMillis();  }  else  {  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  
 + if(this.runningState!= STATE_RUNNING || this.runningState == STATE_SUSPENDED) { System.currentTimeMillis(); } else { stopTime = System.currentTimeMillis(); this.runningState = STATE_SUSPENDED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState!=  STATE_STOPPED)  {  System.currentTimeMillis();  }  else  {  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  
 + if(this.runningState!= STATE_RUNNING && this.runningState == STATE_SUSPENDED) { System.currentTimeMillis(); } else { stopTime = System.currentTimeMillis(); this.runningState = STATE_SUSPENDED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  this.stopTime  =  System.currentTimeMillis();  if(this.stopTime  ==  System.currentTimeMillis())  {  this.stopTime  =  System.currentTimeMillis();  }  else  {  this.runningState  =  STATE_RUNNING;  }  
 + if(this.runningState!= STATE_SUSPENDED) { this.stopTime = System.currentTimeMillis(); } else { this.runningState = STATE_RUNNING; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.splitState  ==  STATE_UNSTARTED)  {  stopTime  =  System.currentTimeMillis();  }  else  {  switch(this.splitState)  {  stopTime  =  System.currentTimeMillis();  }  
 + if(this.runningState == STATE_RUNNING) { if(this.splitState == STATE_UNSTARTED) { stopTime = System.currentTimeMillis(); } else { stopTime = System.currentTimeMillis(); } } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  {  stopTime  =  System.currentTimeMillis();  }  if(this.runningState!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  {  this.runningState  =  STATE_SPLIT;  }  
 + if(this.splitState!= STATE_SPLIT) { if(this.runningState!= STATE_SUSPENDED) { stopTime = System.currentTimeMillis(); } else { this.runningState = STATE_SPLIT; } } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  {  stopTime  =  System.currentTimeMillis();  }  if(this.runningState!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  {  this.runningState  =  STATE_SPLIT;  }  
 + if(this.runningState!= STATE_SPLIT) { if(this.runningState!= STATE_SUSPENDED) { stopTime = System.currentTimeMillis(); } else { this.runningState = STATE_SPLIT; } } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState  ==  STATE_STOPPED)  {  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_UNSTARTED;  }  else  {  stopTime  =  System.currentTimeMillis();  }  
 + if(this.runningState!= STATE_RUNNING || this.runningState == STATE_SUSPENDED) { this.runningState = STATE_UNSTARTED; } else { stopTime = System.currentTimeMillis(); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState  ==  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  {  stopTime  =  System.currentTimeMillis();  }  if(this.runningState  ==  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  {  this.runningState  =  STATE_SPLIT;  }  
 + if(this.splitState!= STATE_SPLIT) { if(this.runningState == STATE_RUNNING) { stopTime = System.currentTimeMillis(); } else { this.runningState = STATE_SPLIT; } } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState!=  STATE_SUSPENDED)  {  this.runningState  =  STATE_RUNNING;  }  else  {  stopTime  =  System.currentTimeMillis();  }  
 + if(this.runningState!= STATE_RUNNING) { this.runningState = STATE_RUNNING; } else { stopTime = System.currentTimeMillis(); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState!=  STATE_SUSPENDED)  {  this.runningState  =  STATE_RUNNING;  }  else  {  stopTime  =  System.currentTimeMillis();  }  
 + if(this.runningState!= STATE_RUNNING || this.runningState == STATE_SUSPENDED) { this.runningState = STATE_RUNNING; } else { stopTime = System.currentTimeMillis(); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.stopTime!=  STATE_RUNNING)  {  this.runningState  =  STATE_SUSPENDED;  }  else  {  stopTime  =  System.currentTimeMillis();  }  
 + if(this.runningState!= STATE_RUNNING && this.runningState == STATE_SUSPENDED) { this.runningState = STATE_SUSPENDED; } else { stopTime = System.currentTimeMillis(); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.stopTime!=  STATE_UNSTARTED)  {  this.runningState  =  STATE_STOPPED;  }  else  {  stopTime  =  System.currentTimeMillis();  }  
 + if(this.runningState!= STATE_RUNNING && this.runningState == STATE_SUSPENDED) { this.runningState = STATE_STOPPED; } else { stopTime = System.currentTimeMillis(); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.stopTime!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  {  stopTime  =  System.currentTimeMillis();  this.splitState  =  STATE_SUSPENDED;  }  If(this.stopTime!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  {  this.splitState  =  STATE_SUSPENDED;  }  
 + if(this.runningState!= STATE_SUSPENDED) { if(this.stopTime!= STATE_RUNNING) { stopTime = System.currentTimeMillis(); } else { this.splitState = STATE_SUSPENDED; } } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState!=  STATE_SUSPENDED  &&  this.runningState!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  
 + if(this.runningState!= STATE_SUSPENDED && this.runningState!= STATE_UNSTARTED) { stopTime = System.currentTimeMillis(); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.splitState!=  STATE_UNSTARTED)  {  stopTime  =  System.currentTimeMillis();  }  else  {  stopTime  =  System.currentTimeMillis();  }  If(this.splitState!=  STATE_UNSTARTED)  {  stopTime  =  System.currentTimeMillis();  }  else  {  stopTime  =  System.currentTimeMillis();  }  
 + if(this.runningState == STATE_RUNNING) { if(this.splitState!= STATE_SUSPENDED) { stopTime = System.currentTimeMillis(); } else { stopTime = System.currentTimeMillis(); } } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.splitState!=  STATE_UNSTARTED)  {  stopTime  =  System.currentTimeMillis();  }  else  {  stopTime  =  System.currentTimeMillis();  }  If(this.splitState!=  STATE_UNSTARTED)  {  stopTime  =  System.currentTimeMillis();  }  else  {  stopTime  =  System.currentTimeMillis();  }  
 + if(this.runningState!= STATE_SUSPENDED) { if(this.splitState!= STATE_UNSTARTED) { stopTime = System.currentTimeMillis(); } else { stopTime = System.currentTimeMillis(); } } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.splitState!=  STATE_UNSTARTED)  {  stopTime  =  System.currentTimeMillis();  }  else  {  stopTime  =  System.currentTimeMillis();  }  If(this.splitState!=  STATE_UNSTARTED)  {  stopTime  =  System.currentTimeMillis();  }  else  {  stopTime  =  System.currentTimeMillis();  }  
 + if(this.runningState == STATE_RUNNING) { if(this.splitState!= STATE_STOPPED) { stopTime = System.currentTimeMillis(); } else { stopTime = System.currentTimeMillis(); } } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.splitState!=  STATE_UNSTARTED)  {  stopTime  =  System.currentTimeMillis();  }  else  {  stopTime  =  System.currentTimeMillis();  }  If(this.splitState!=  STATE_UNSTARTED)  {  stopTime  =  System.currentTimeMillis();  }  else  {  stopTime  =  System.currentTimeMillis();  }  
 + if(this.runningState == STATE_RUNNING) { if(this.splitState!= STATE_SPLIT) { stopTime = System.currentTimeMillis(); } else { stopTime = System.currentTimeMillis(); } } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis()  -  1;  }  else  {  this.runningState  =  STATE_UNSTARTED;  }  
 + if(this.runningState!= STATE_SUSPENDED) { stopTime = System.currentTimeMillis() - 1; } else { this.runningState = STATE_UNSTARTED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.stopTime!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  if(this.stopTime!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  this.runningState  =  STATE_STOPPED;  }  
 + if(this.runningState!= STATE_SUSPENDED) { if(this.stopTime!= STATE_RUNNING) { stopTime = System.currentTimeMillis(); } this.runningState = STATE_STOPPED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.splitState  ==  STATE_STOPPED)  {  stopTime  =  System.currentTimeMillis();  }  else  {  this.splitState  =  STATE_UNSTARTED;  }  
 + if(this.runningState == STATE_RUNNING || this.runningState!= STATE_SUSPENDED) { stopTime = System.currentTimeMillis(); } else { this.splitState = STATE_UNSTARTED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  stopTime  =  System.currentTimeMillis();  if(this.runningState!=  STATE_SUSPENDED)  {  stopTime  =  System.currentTimeMillis();  }  
 + long runningState = System.currentTimeMillis(); if(this.runningState!= STATE_SUSPENDED) { stopTime = System.currentTimeMillis(); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.stopTime!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  {  stopTime  =  System.currentTimeMillis()  +  1;  }  if(this.stopTime!=  STATE_RUNNING)  {  this.stopTime  =  System.currentTimeMillis()  +  1;  }  
 + if(this.runningState!= STATE_SUSPENDED) { this.stopTime = System.currentTimeMillis() + 1; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  while(this.runningState!=  STATE_SUSPENDED)  {  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_STOPPED;  
 + while(this.runningState == STATE_RUNNING) { stopTime = System.currentTimeMillis(); this.runningState = STATE_STOPPED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState!=  STATE_STOPPED)  {  stopTime  =  System.currentTimeMillis();  }  else  {  stopTime  =  System.currentTimeMillis();  this.splitState  =  STATE_UNSTARTED;  }  
 + if(this.runningState!= STATE_RUNNING) { this.runningState = STATE_SUSPENDED; } else { stopTime = System.currentTimeMillis(); this.splitState = STATE_UNSTARTED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState!=  STATE_STOPPED)  {  stopTime  =  System.currentTimeMillis();  }  else  {  stopTime  =  System.currentTimeMillis();  this.splitState  =  STATE_UNSTARTED;  }  
 + if(this.runningState!= STATE_RUNNING) { this.runningState = STATE_UNSTARTED; } else { stopTime = System.currentTimeMillis(); this.splitState = STATE_UNSTARTED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.stopTime  ==  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  {  this.runningState  =  STATE_SUSPENDED;  }  
 + if(this.stopTime == STATE_RUNNING || this.runningState!= STATE_SUSPENDED) { stopTime = System.currentTimeMillis(); } else { this.runningState = STATE_SUSPENDED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.stopTime  ==  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  {  this.runningState  =  STATE_SUSPENDED;  }  
 + if(this.stopTime!= STATE_RUNNING && this.runningState!= STATE_SUSPENDED) { stopTime = System.currentTimeMillis(); } else { this.runningState = STATE_SUSPENDED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.stopTime!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  {  this.stopTime  =  System.currentTimeMillis();  }  if(this.stopTime!=  STATE_STOPPED)  {  stopTime  =  System.currentTimeMillis();  }  else  {  this.stopTime  =  System.currentTimeMillis();  }  
 + if(this.runningState!= STATE_RUNNING) { System.currentTimeMillis(); } else { this.stopTime = System.currentTimeMillis(); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  stopTime  =  System.currentTimeMillis()  +  1;  if(this.runningState!=  STATE_UNSTARTED)  {  System.err.println(  "Stopwatch  is  not  running:  "  +  this.runningState);  stopTime  =  System.currentTimeMillis()  +  1;  }  
 + long splitState = System.currentTimeMillis(); if(this.runningState!= STATE_SUSPENDED) { System.err.println( "Stopwatch is not running: " + this.runningState); stopTime = System.currentTimeMillis(); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  stopTime  =  System.currentTimeMillis()  +  1;  if(this.runningState!=  STATE_UNSTARTED)  {  System.err.println(  "Stopwatch  is  not  running:  "  +  this.runningState);  stopTime  =  System.currentTimeMillis()  +  1;  }  
 + long startTime = System.currentTimeMillis(); if(this.runningState!= STATE_SUSPENDED) { System.err.println( "Stopwatch is not running: " + this.runningState); stopTime = System.currentTimeMillis(); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.stopTime!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  {  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_STOPPED;  }  if(this.stopTime!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  {  this.splitState  =  STATE_STOPPED;  }  
 + if(this.runningState!= STATE_SUSPENDED) { this.stopTime = System.currentTimeMillis(); } else { this.splitState = STATE_STOPPED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.stopTime!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  {  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_UNSTARTED;  }  if(this.stopTime!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  {  startTime  =  System.currentTimeMillis();  this.runningState  =  STATE_UNSTARTED;  }  
 + if(this.runningState!= STATE_SUSPENDED) { if(this.stopTime!= STATE_RUNNING) { stopTime = System.currentTimeMillis(); } else { startTime = System.currentTimeMillis(); } this.runningState = STATE_UNSTARTED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.stopTime!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  {  stopTime  =  System.currentTimeMillis();  this.splitState  =  STATE_SPLIT;  }  if(this.stopTime!=  STATE_SPLIT)  {  stopTime  =  System.currentTimeMillis();  }  else  {  this.splitState  =  STATE_SPLIT;  }  
 + if(this.runningState == STATE_RUNNING) { stopTime = System.currentTimeMillis(); } else { this.splitState = STATE_SPLIT; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState!=  STATE_RUNNING)  {  this.splitState  =  STATE_SUSPENDED;  stopTime  =  System.currentTimeMillis();  }  else  {  startTime  =  System.currentTimeMillis();  }  
 + if(this.runningState!= STATE_SUSPENDED) { this.splitState = STATE_SUSPENDED; stopTime = System.currentTimeMillis(); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState!=  STATE_STOPPED  ||  this.stopTime!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  this.splitState  =  STATE_UNSTARTED;  }  else  {  stopTime  =  System.currentTimeMillis();  }  
 + if(this.runningState!= STATE_RUNNING && this.splitState!= STATE_SUSPENDED) { this.runningState = STATE_UNSTARTED; } else { stopTime = System.currentTimeMillis(); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState!=  STATE_STOPPED  ||  this.stopTime!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  this.splitState  =  STATE_UNSTARTED;  }  else  {  stopTime  =  System.currentTimeMillis();  }  
 + if(this.runningState!= STATE_RUNNING && this.stopTime!= STATE_SUSPENDED) { this.runningState = STATE_UNSTARTED; } else { stopTime = System.currentTimeMillis(); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState!=  STATE_STOPPED  &&  this.runningState  ==  STATE_SUSPENDED)  {  stopTime  =  System.currentTimeMillis();  }  else  {  stopTime  =  System.currentTimeMillis();  }  
 + if(this.runningState == STATE_RUNNING) { if(this.runningState!= STATE_SUSPENDED) { stopTime = System.currentTimeMillis(); } else { stopTime = System.currentTimeMillis(); } } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  this.stopTime  =  System.currentTimeMillis();  if(this.runningState!=  STATE_RUNNING)  {  this.stopTime  =  System.currentTimeMillis();  }  
 + long runningState = System.currentTimeMillis(); if(this.runningState!= STATE_SUSPENDED) { this.stopTime = System.currentTimeMillis(); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  stopTime  =  System.currentTimeMillis()  -  2;  
 + if(this.runningState == STATE_RUNNING || this.runningState!= STATE_SUSPENDED) { stopTime = System.currentTimeMillis() - 2; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  stopTime  =  System.currentTimeMillis()  -  2;  
 + if(this.runningState == STATE_RUNNING) { stopTime = System.currentTimeMillis() - 2; } else { this.runningState = STATE_UNSTARTED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  stopTime  =  System.currentTimeMillis()  -  2;  
 + if(this.runningState == STATE_RUNNING && this.runningState!= STATE_SUSPENDED) { stopTime = System.currentTimeMillis() - 2; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  this.stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_UNSTARTED;  
 + if(this.runningState!= STATE_SUSPENDED) { this.stopTime = System.currentTimeMillis(); this.runningState = STATE_UNSTARTED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  this.stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_UNSTARTED;  
 + if(this.runningState == STATE_RUNNING) { this.stopTime = System.currentTimeMillis(); this.runningState = STATE_UNSTARTED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  this.stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_UNSTARTED;  
 + if(this.runningState!= STATE_SUSPENDED) { this.stopTime = System.currentTimeMillis(); this.runningState = STATE_UNSTARTED; } else { this.runningState = STATE_RUNNING; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  stopTime  =  System.currentTimeMillis()  -  1;  stopTime  =  System.currentTimeMillis()  -  1;  
 + if(this.runningState == STATE_RUNNING) { stopTime = System.currentTimeMillis() - 1; stopTime = System.currentTimeMillis() - 1; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  stopTime  =  System.currentTimeMillis()  -  1;  stopTime  =  System.currentTimeMillis()  -  1;  
 + if(this.runningState == STATE_RUNNING || this.runningState!= STATE_SUSPENDED) { stopTime = System.currentTimeMillis() - 1; stopTime = System.currentTimeMillis() - 1; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  stopTime  =  System.currentTimeMillis()  -  1;  stopTime  =  System.currentTimeMillis()  -  1;  
 + if(this.runningState == STATE_RUNNING) { stopTime = System.currentTimeMillis() - 1; stopTime = System.currentTimeMillis() - 1; } else { this.runningState = STATE_UNSTARTED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  stopTime  =  System.currentTimeMillis()  -  1;  stopTime  =  System.currentTimeMillis()  -  1;  
 + if(this.runningState!= STATE_SUSPENDED) { stopTime = System.currentTimeMillis() - 1; stopTime = System.currentTimeMillis() - 1; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  stopTime  =  System.currentTimeMillis()  -  1;  stopTime  =  System.currentTimeMillis()  -  1;  
 + if(this.runningState == STATE_RUNNING) { stopTime = System.currentTimeMillis() - 1; stopTime = System.currentTimeMillis() - 1; } else { this.runningState = STATE_SUSPENDED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  stopTime  =  System.currentTimeMillis()  -  1;  stopTime  =  System.currentTimeMillis()  -  1;  
 + if(this.runningState!= STATE_SUSPENDED) { stopTime = System.currentTimeMillis() - 1; stopTime = System.currentTimeMillis() - 1; } else { this.runningState = STATE_UNSTARTED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  stopTime  =  System.currentTimeMillis()  -  1;  stopTime  =  System.currentTimeMillis()  -  1;  
 + if(this.runningState!= STATE_SUSPENDED) { stopTime = System.currentTimeMillis() - 1; stopTime = System.currentTimeMillis() - 1; } else { this.runningState = STATE_RUNNING; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  stopTime  =  System.currentTimeMillis()  -  1;  stopTime  =  System.currentTimeMillis()  -  1;  
 + if(this.runningState == STATE_RUNNING) { stopTime = System.currentTimeMillis() - 1; stopTime = System.currentTimeMillis() - 1; } else { this.runningState = STATE_STOPPED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  stopTime  =  System.currentTimeMillis()  -  1;  stopTime  =  System.currentTimeMillis()  -  1;  
 + if(this.runningState == STATE_RUNNING) { stopTime = System.currentTimeMillis() - 1; stopTime = System.currentTimeMillis() - 1; } else { this.runningState = STATE_RUNNING; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState!=  STATE_STOPPED)  {  this.runningState  =  STATE_SUSPENDED;  stopTime  =  System.currentTimeMillis();  }  else  {  endTime  =  System.currentTimeMillis();  }  
 + while(this.runningState!= STATE_SUSPENDED) { this.runningState = STATE_SUSPENDED; stopTime = System.currentTimeMillis(); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState  ==  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  {  startTime  =  System.currentTimeMillis();  }  if(this.runningState  ==  STATE_STOPPED)  {  stopTime  =  System.currentTimeMillis();  }  else  {  this.runningState  =  STATE_STOPPED;  }  
 + if(this.runningState == STATE_UNSTARTED || this.runningState!= STATE_SUSPENDED) { stopTime = System.currentTimeMillis(); } else { this.runningState = STATE_SUSPENDED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState!=  STATE_RUNNING  ||  this.runningState  ==  STATE_SUSPENDED)  {  stopTime  =  System.currentTimeMillis();  }  if(this.runningState!=  STATE_SUNNING  ||  this.runningState  ==  STATE_SUSPENDED)  {  stopTime  =  System.currentTimeMillis();  }  
 + if(this.runningState == STATE_RUNNING || this.runningState == STATE_UNSTARTED) { stopTime = System.currentTimeMillis(); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState  ==  STATE_STOPPED)  {  this.splitState  =  STATE_UNSTARTED;  }  else  {  stopTime  =  System.currentTimeMillis();  }  
 + this.splitState = STATE_UNSTARTED; if(this.runningState == STATE_SUSPENDED) { this.splitState = STATE_UNSTARTED; } else { stopTime = System.currentTimeMillis(); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  stopTime  =  System.currentTimeMillis()  +  1;  if(this.runningState  ==  STATE_RUNNING  ||  this.runningState!=  STATE_SUSPENDED)  {  stopTime  =  System.currentTimeMillis()  +  1;  }  
 + long startTime = System.currentTimeMillis(); if(this.runningState == STATE_RUNNING || this.runningState!= STATE_SUSPENDED) { stopTime = System.currentTimeMillis() + 1; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  stopTime  =  System.currentTimeMillis()  +  1;  if(this.runningState  ==  STATE_RUNNING  ||  this.runningState!=  STATE_SUSPENDED)  {  stopTime  =  System.currentTimeMillis()  +  1;  }  
 + long splitState = System.currentTimeMillis(); if(this.runningState == STATE_RUNNING || this.runningState!= STATE_SUSPENDED) { stopTime = System.currentTimeMillis() + 1; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  stopTime  =  System.currentTimeMillis()  +  1;  if(this.runningState  ==  STATE_RUNNING  ||  this.runningState!=  STATE_SUSPENDED)  {  stopTime  =  System.currentTimeMillis()  +  1;  }  
 + if(this.runningState == STATE_RUNNING && this.runningState!= STATE_SUSPENDED) { stopTime = System.currentTimeMillis() + 1; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  stopTime  =  System.currentTimeMillis()  +  1;  if(this.runningState  ==  STATE_RUNNING  ||  this.runningState!=  STATE_SUSPENDED)  {  stopTime  =  System.currentTimeMillis()  +  1;  }  
 + long splitState = System.currentTimeMillis(); if(this.runningState == STATE_RUNNING && this.runningState!= STATE_SUSPENDED) { stopTime = System.currentTimeMillis(); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  stopTime  =  System.currentTimeMillis()  +  1;  if(this.runningState  ==  STATE_RUNNING  ||  this.runningState!=  STATE_SUSPENDED)  {  stopTime  =  System.currentTimeMillis()  +  1;  }  
 + long startTime = System.currentTimeMillis(); if(this.runningState == STATE_RUNNING && this.runningState!= STATE_SUSPENDED) { stopTime = System.currentTimeMillis() + 1; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  stopTime  =  System.currentTimeMillis()  +  1;  if(this.runningState  ==  STATE_RUNNING  ||  this.runningState!=  STATE_SUSPENDED)  {  stopTime  =  System.currentTimeMillis()  +  1;  }  
 + long splitState = System.currentTimeMillis(); if(this.runningState == STATE_RUNNING && this.runningState!= STATE_SUSPENDED) { stopTime = System.currentTimeMillis() + 1; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState!=  STATE_RUNNING  &&  this.runningState!=  STATE_SUSPENDED)  {  stopTime  =  System.currentTimeMillis();  }  if(this.runningState!=  STATE_TRUNCING  &&  this.runningState!=  STATE_SUSPENDED)  {  stopTime  =  System.currentTimeMillis();  }  
 + if(this.startTime!= STATE_RUNNING && this.runningState!= STATE_SUSPENDED) { stopTime = System.currentTimeMillis(); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.stopTime!=  STATE_SPLIT)  {  stopTime  =  System.currentTimeMillis();  }  else  {  this.splitState  =  STATE_UNSTARTED;  stopTime  =  System.currentTimeMillis();  }  
 + if(this.runningState!= STATE_RUNNING) { this.splitState = STATE_UNSTARTED; } else { this.splitState = STATE_UNSTARTED; stopTime = System.currentTimeMillis(); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.stopTime!=  STATE_STOPPED)  {  stopTime  =  System.currentTimeMillis();  }  else  {  long  endTime  =  System.currentTimeMillis();  this.runningState  =  STATE_UNSTARTED;  endTime  =  System.currentTimeMillis();  }  
 + if(this.runningState == STATE_RUNNING) { stopTime = System.currentTimeMillis(); } else { long endTime = System.currentTimeMillis(); this.runningState = STATE_UNSTARTED; endTime = System.currentTimeMillis(); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  stopTime  =  System.currentTimeMillis()  +  1;  long  splitState  =  System.currentTimeMillis()  +  1;  this.runningState  =  STATE_STOPPED;  
 + if(this.runningState == STATE_RUNNING) { stopTime = System.currentTimeMillis(); long splitState = System.currentTimeMillis(); this.runningState = STATE_STOPPED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  stopTime  =  System.currentTimeMillis()  +  1;  long  splitState  =  System.currentTimeMillis()  +  1;  this.runningState  =  STATE_STOPPED;  
 + if(this.runningState == STATE_RUNNING) { stopTime = System.currentTimeMillis(); long splitState = System.currentTimeMillis() + 1; this.runningState = STATE_STOPPED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  stopTime  =  System.currentTimeMillis()  +  1;  long  splitState  =  System.currentTimeMillis()  +  1;  this.runningState  =  STATE_STOPPED;  
 + if(this.runningState == STATE_RUNNING) { stopTime = System.currentTimeMillis() + 1; long splitState = System.currentTimeMillis() + 1; this.runningState = STATE_STOPPED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.stopTime!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_STOPPED;  }  else  {  stopTime  =  System.currentTimeMillis();  }  if(this.stopTime!=  STATE_RUNNING)  {  StopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_STOPPED;  }  else  {  stopTime  =  System.currentTimeMillis();  }  
 + if(this.runningState!= STATE_SUSPENDED) { stopTime = System.currentTimeMillis(); this.runningState = STATE_STOPPED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.splitState!=  STATE_UNSTARTED)  {  stopTime  =  System.currentTimeMillis();  }  else  {  stopTime  =  System.currentTimeMillis();  this.splitState  =  STATE_UNSTARTED;  }  
 + if(this.runningState!= STATE_RUNNING) { this.splitState = STATE_STOPPED; } else { stopTime = System.currentTimeMillis(); this.splitState = STATE_UNSTARTED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.splitState!=  STATE_STOPPED)  {  if(this.stopTime!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  {  this.splitState  =  STATE_UNSTARTED;  }  }  
 + if(this.runningState!= STATE_SUSPENDED) { if(this.stopTime!= STATE_RUNNING) { stopTime = System.currentTimeMillis(); } else { this.splitState = STATE_UNSTARTED; } } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.splitState!=  STATE_STOPPED)  {  if(this.stopTime!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  {  this.splitState  =  STATE_UNSTARTED;  }  }  
 + if(this.runningState!= STATE_SUSPENDED) { if(this.splitState!= STATE_RUNNING) { stopTime = System.currentTimeMillis(); } else { this.splitState = STATE_UNSTARTED; } } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.splitState!=  STATE_STOPPED)  {  if(this.stopTime!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  {  this.splitState  =  STATE_UNSTARTED;  }  }  
 + if(this.runningState == STATE_RUNNING) { if(this.splitState!= STATE_SUSPENDED) { stopTime = System.currentTimeMillis(); } else { this.splitState = STATE_UNSTARTED; } } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.splitState!=  STATE_STOPPED)  {  if(this.stopTime!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  {  this.splitState  =  STATE_UNSTARTED;  }  }  
 + if(this.runningState!= STATE_SUSPENDED) { if(this.splitState!= STATE_STOPPED) { stopTime = System.currentTimeMillis(); } else { this.splitState = STATE_UNSTARTED; } } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.splitState!=  STATE_STOPPED)  {  if(this.stopTime!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  {  this.splitState  =  STATE_UNSTARTED;  }  }  
 + if(this.runningState == STATE_RUNNING) { if(this.stopTime!= STATE_RUNNING) { stopTime = System.currentTimeMillis(); } else { this.splitState = STATE_UNSTARTED; } } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.splitState!=  STATE_STOPPED)  {  if(this.stopTime!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  {  this.splitState  =  STATE_UNSTARTED;  }  }  
 + if(this.runningState == STATE_RUNNING) { if(this.splitState!= STATE_STOPPED) { stopTime = System.currentTimeMillis(); } else { this.splitState = STATE_UNSTARTED; } } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  stopTime  =  System.currentTimeMillis()  +  1;  stopTime  =  System.currentTimeMillis()  +  1;  
 + if(this.runningState == STATE_RUNNING) { stopTime = System.currentTimeMillis() + 1; stopTime = System.currentTimeMillis() + 1; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  stopTime  =  System.currentTimeMillis()  +  1;  stopTime  =  System.currentTimeMillis()  +  1;  
 + if(this.runningState == STATE_RUNNING) { stopTime = System.currentTimeMillis(); stopTime = System.currentTimeMillis() + 1; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  stopTime  =  System.currentTimeMillis()  +  1;  stopTime  =  System.currentTimeMillis()  +  1;  
 + if(this.runningState == STATE_RUNNING || this.runningState!= STATE_SUSPENDED) { stopTime = System.currentTimeMillis(); stopTime = System.currentTimeMillis(); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  stopTime  =  System.currentTimeMillis()  +  1;  stopTime  =  System.currentTimeMillis()  +  1;  
 + if(this.runningState == STATE_RUNNING) { stopTime = System.currentTimeMillis(); stopTime = System.currentTimeMillis(); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  stopTime  =  System.currentTimeMillis()  +  1;  stopTime  =  System.currentTimeMillis()  +  1;  
 + if(this.runningState == STATE_RUNNING) { stopTime = System.currentTimeMillis() + 1; stopTime = System.currentTimeMillis() + 1; } else { this.runningState = STATE_UNSTARTED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  stopTime  =  System.currentTimeMillis()  +  1;  stopTime  =  System.currentTimeMillis()  +  1;  
 + if(this.runningState == STATE_RUNNING) { stopTime = System.currentTimeMillis(); stopTime = System.currentTimeMillis() + 1; } else { this.runningState = STATE_UNSTARTED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  stopTime  =  System.currentTimeMillis()  +  1;  stopTime  =  System.currentTimeMillis()  +  1;  
 + if(this.runningState == STATE_RUNNING || this.runningState!= STATE_SUSPENDED) { stopTime = System.currentTimeMillis(); stopTime = System.currentTimeMillis() + 1; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  stopTime  =  System.currentTimeMillis()  +  1;  stopTime  =  System.currentTimeMillis()  +  1;  
 + if(this.runningState == STATE_RUNNING) { stopTime = System.currentTimeMillis(); stopTime = System.currentTimeMillis(); } else { this.runningState = STATE_UNSTARTED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  stopTime  =  System.currentTimeMillis()  +  1;  stopTime  =  System.currentTimeMillis()  +  1;  
 + if(this.runningState == STATE_RUNNING) { stopTime = System.currentTimeMillis() + 1; stopTime = System.currentTimeMillis() + 1; } else { this.runningState = STATE_SUSPENDED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  stopTime  =  System.currentTimeMillis()  +  1;  stopTime  =  System.currentTimeMillis()  +  1;  
 + if(this.runningState == STATE_RUNNING || this.runningState!= STATE_SUSPENDED) { stopTime = System.currentTimeMillis() + 1; stopTime = System.currentTimeMillis() + 1; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  stopTime  =  System.currentTimeMillis()  +  1;  stopTime  =  System.currentTimeMillis()  +  1;  
 + if(this.runningState == STATE_RUNNING) { stopTime = System.currentTimeMillis(); stopTime = System.currentTimeMillis(); } else { this.runningState = STATE_SUSPENDED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  stopTime  =  System.currentTimeMillis()  +  1;  stopTime  =  System.currentTimeMillis()  +  1;  
 + if(this.runningState == STATE_RUNNING) { stopTime = System.currentTimeMillis(); stopTime = System.currentTimeMillis() + 1; } else { this.runningState = STATE_SUSPENDED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  stopTime  =  System.currentTimeMillis()  +  1;  stopTime  =  System.currentTimeMillis()  +  1;  
 + if(this.runningState!= STATE_SUSPENDED) { stopTime = System.currentTimeMillis() + 1; stopTime = System.currentTimeMillis() + 1; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  stopTime  =  System.currentTimeMillis()  +  1;  stopTime  =  System.currentTimeMillis()  +  1;  
 + if(this.runningState!= STATE_SUSPENDED) { stopTime = System.currentTimeMillis() + 1; stopTime = System.currentTimeMillis() + 1; } else { this.runningState = STATE_UNSTARTED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  stopTime  =  System.currentTimeMillis()  +  1;  stopTime  =  System.currentTimeMillis()  +  1;  
 + if(this.runningState!= STATE_SUSPENDED) { stopTime = System.currentTimeMillis(); stopTime = System.currentTimeMillis() + 1; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState!=  STATE_RUNNING  ||  this.runningState!=  STATE_SUSPENDED)  {  this.stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  else  {  stopTime  =  System.currentTimeM  
 + if(this.runningState == STATE_RUNNING && this.runningState!= STATE_SUSPENDED) { this.stopTime = System.currentTimeMillis(); this.runningState = STATE_SUSPENDED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState!=  STATE_RUNNING  ||  this.runningState!=  STATE_SUSPENDED)  {  this.stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  else  {  stopTime  =  System.currentTimeM  
 + if(this.runningState == STATE_RUNNING || this.runningState!= STATE_SUSPENDED) { this.stopTime = System.currentTimeMillis(); this.runningState = STATE_SUSPENDED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.stopTime  ==  STATE_STOPPED)  {  this.stopTime  =  System.currentTimeMillis();  }  else  {  switch(this.runningState)  {  case  STATE_UNSTARTED:  stopTime  =  System.currentTimeMillis();  break;  }  
 + if(this.runningState == STATE_RUNNING) { this.stopTime = System.currentTimeMillis(); } else { switch(this.runningState) { case STATE_UNSTARTED: stopTime = System.currentTimeMillis(); break; } } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.splitState!=  STATE_SPLIT)  {  this.stopTime  =  System.currentTimeMillis();  }  else  {  this.splitState  =  STATE_SUSPENDED;  }  
 + if(this.runningState == STATE_RUNNING || this.runningState!= STATE_SUSPENDED) { this.stopTime = System.currentTimeMillis(); } else { this.splitState = STATE_SUSPENDED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.stopTime!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  {  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_STOPPED;  }  if(this.stopTime  >>  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  {  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_STOPPED;  }  
 + if(this.runningState!= STATE_SUSPENDED) { if(this.stopTime!= STATE_RUNNING) { stopTime = System.currentTimeMillis(); } else { stopTime = System.currentTimeMillis(); } this.runningState = STATE_STOPPED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState!=  STATE_RUNNING  ||  this.runningState  ==  STATE_SUSPENDED)  {  stopTime  =  System.currentTimeMillis();  }  else  {  startTime  =  System.currentTimeMillis();  }  if(this.runningState!=  STATE_UNSTARTED  ||  this.runningState  ==  STATE_SUSPENDED)  {  stopTime  =  System.currentTimeMillis();  }  else  {  this.runningState  =  STATE_STOPPED;  }  
 + if(this.runningState == STATE_RUNNING && this.runningState!= STATE_SUSPENDED) { stopTime = System.currentTimeMillis(); } else { this.runningState = STATE_STOPPED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState!=  STATE_RUNNING  ||  this.runningState  ==  STATE_SUSPENDED)  {  stopTime  =  System.currentTimeMillis();  }  else  {  startTime  =  System.currentTimeMillis();  }  if(this.runningState!=  STATE_UNSTARTED  ||  this.runningState  ==  STATE_SUSPENDED)  {  stopTime  =  System.currentTimeMillis();  }  else  {  this.runningState  =  STATE_STOPPED;  }  
 + if(this.runningState == STATE_RUNNING && this.runningState!= STATE_SUSPENDED) { stopTime = System.currentTimeMillis(); } else { this.runningState = STATE_SUSPENDED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState!=  STATE_RUNNING  ||  this.runningState  ==  STATE_SUSPENDED)  {  stopTime  =  System.currentTimeMillis()  -  1;  }  
 + if(this.runningState!= STATE_SUSPENDED || this.runningState == STATE_RUNNING) { stopTime = System.currentTimeMillis() - 1; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.splitState!=  STATE_SUSPENDED)  {  stopTime  =  System.currentTimeMillis();  }  else  {  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_UNSTARTED;  }  
 + if(this.runningState!= STATE_RUNNING) { this.splitState = STATE_SUSPENDED; } else { stopTime = System.currentTimeMillis(); this.runningState = STATE_UNSTARTED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  {  System.err.println(    "Stopwatch  is  not  running:    "  +  this.runningState);  }  if(this.runningState!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  {  System.err.println(  "Stopwatch  is  not  running:...  "  +  this.runningState);  }  
 + if(this.runningState!= STATE_SUSPENDED) { stopTime = System.currentTimeMillis(); } else { System.err.println( "Stopwatch is not running:... " + this.runningState); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_STOPPED;  
 + if(this.runningState == STATE_RUNNING) { stopTime = System.currentTimeMillis(); this.runningState = STATE_STOPPED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.stopTime!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  {  stopTime  =  System.currentTimeMillis()  +  1;  }  if(this.stopTime!=  STATE_UNSTARTED)  {  stopTime  =  System.currentTimeMillis()  +  1;  }  
 + if(this.runningState!= STATE_RUNNING) { this.runningState = STATE_STOPPED; } else { stopTime = System.currentTimeMillis() + 1; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.stopTime!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  {  stopTime  =  System.currentTimeMillis()  +  1;  }  if(this.stopTime!=  STATE_RUNNING)  {  this.stopTime  =  System.currentTimeMillis()  +  1;  }  else  {  stopTime  =  System.currentTimeMillis()  +  1;  }  
 + if(this.runningState!= STATE_SUSPENDED) { if(this.stopTime!= STATE_RUNNING) { this.stopTime = System.currentTimeMillis() + 1; } else { stopTime = System.currentTimeMillis() + 1; } } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState!=  STATE_SUSPENDED)  {  this.runningState  =  STATE_UNSTARTED;  }  else  {  this.runningState  =  STATE_UNSTARTED;  startTime  =  System.currentTimeMillis();  }  
 + if(this.runningState!= STATE_RUNNING) { this.runningState = STATE_UNSTARTED; } else { this.runningState = STATE_UNSTARTED; stopTime = System.currentTimeMillis(); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState!=  STATE_RUNNING  ||  this.runningState!=  STATE_SUSPENDED)  {  stopTime  =  System.currentTimeMillis()  -  1;  }  
 + if(this.runningState!= STATE_SUSPENDED || this.runningState!= STATE_SUSPENDED) { stopTime = System.currentTimeMillis() - 1; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState!=  STATE_RUNNING  ||  this.runningState!=  STATE_SUSPENDED)  {  stopTime  =  System.currentTimeMillis()  -  1;  }  
 + if(this.runningState!= STATE_SUSPENDED && this.runningState!= STATE_SUSPENDED) { stopTime = System.currentTimeMillis() - 1; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.startTime!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  {  int  startTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  
 + if(this.startTime!= STATE_RUNNING && this.runningState!= STATE_SUSPENDED) { stopTime = System.currentTimeMillis(); } else { this.runningState = STATE_SUSPENDED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  stopTime  =  System.currentTimeMillis()  +  1;  long  runningState  =  System.currentTimeMillis()  +  1;  
 + if(this.runningState == STATE_RUNNING) { stopTime = System.currentTimeMillis(); long runningState = System.currentTimeMillis() + 1; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  stopTime  =  System.currentTimeMillis()  +  1;  long  runningState  =  System.currentTimeMillis()  +  1;  
 + if(this.runningState == STATE_RUNNING) { stopTime = System.currentTimeMillis() + 1; long runningState = System.currentTimeMillis() + 1; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  stopTime  =  System.currentTimeMillis()  +  1;  long  runningState  =  System.currentTimeMillis()  +  1;  
 + if(this.runningState == STATE_RUNNING) { stopTime = System.currentTimeMillis(); long runningState = System.currentTimeMillis(); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  stopTime  =  System.currentTimeMillis()  +  1;  long  runningState  =  System.currentTimeMillis()  +  1;  
 + if(this.runningState == STATE_RUNNING) { stopTime = System.currentTimeMillis(); long runningState = System.currentTimeMillis() + 1; } else { this.runningState = STATE_UNSTARTED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  stopTime  =  System.currentTimeMillis()  +  1;  long  runningState  =  System.currentTimeMillis()  +  1;  
 + if(this.runningState == STATE_RUNNING) { stopTime = System.currentTimeMillis(); long runningState = System.currentTimeMillis() + 1; } else { this.runningState = STATE_SUSPENDED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  stopTime  =  System.currentTimeMillis()  +  1;  long  runningState  =  System.currentTimeMillis()  +  1;  
 + if(this.runningState == STATE_RUNNING) { stopTime = System.currentTimeMillis() + 1; long runningState = System.currentTimeMillis() + 1; } else { this.runningState = STATE_SUSPENDED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  stopTime  =  System.currentTimeMillis()  +  1;  System.currentTimeMillis()  +  1;  this.runningState  =  STATE_UNSTARTED;  
 + if(this.runningState == STATE_RUNNING) { stopTime = System.currentTimeMillis(); System.currentTimeMillis(); this.runningState = STATE_UNSTARTED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  stopTime  =  System.currentTimeMillis()  +  1;  System.currentTimeMillis()  +  1;  this.runningState  =  STATE_UNSTARTED;  
 + if(this.runningState!= STATE_SUSPENDED) { stopTime = System.currentTimeMillis(); System.currentTimeMillis(); this.runningState = STATE_UNSTARTED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.stopTime  ==  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  {  long  startTime  =  System.currentTimeMillis();  this.splitState  =  STATE_UNSTARTED;  stopTime  =  System.currentTimeMillis();  }  
 + if(this.runningState!= STATE_RUNNING) { System.currentTimeMillis(); } else { long startTime = System.currentTimeMillis(); this.splitState = STATE_UNSTARTED; stopTime = System.currentTimeMillis(); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.stopTime!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  {  stopTime  =  System.currentTimeMillis();  }  if(this.stopTime!=  STATE_STOPPED)  {  stopTime  =  System.currentTimeMillis();  }  else  {  stopTime  =  System.currentTimeMillis();  }  
 + if(this.runningState!= STATE_RUNNING) { this.runningState = STATE_SPLIT; } else { stopTime = System.currentTimeMillis(); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  {  long  endTime  =  System.currentTimeMillis();  endTime  =  System.currentTimeMillis();  }  
 + if(this.runningState == STATE_RUNNING || this.runningState!= STATE_SUSPENDED) { stopTime = System.currentTimeMillis(); } else { long endTime = System.currentTimeMillis(); endTime = System.currentTimeMillis(); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState  ==  STATE_STOPPED)  {  stopTime  =  System.currentTimeMillis();  }  else  {  switch(this.runningState)  {  case  STATE_RUNNING:  startTime  =  System.currentTimeMillis();  break;  }  
 + if(this.runningState == STATE_RUNNING) { stopTime = System.currentTimeMillis(); } else { switch(this.runningState) { case STATE_RUNNING: startTime = System.currentTimeMillis(); break; } } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState!=  STATE_SUSPENDED  ||  this.runningState!=  STATE_UNSTARTED)  {  stopTime  =  System.currentTimeMillis();  }  else  {  this.runningState  =  STATE_STOPPED;  }  
 + if(this.runningState!= STATE_SUSPENDED && this.runningState!= STATE_UNSTARTED) { stopTime = System.currentTimeMillis(); } else { this.runningState = STATE_STOPPED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState!=  STATE_SUSPENDED  ||  this.runningState!=  STATE_UNSTARTED)  {  stopTime  =  System.currentTimeMillis();  }  else  {  this.runningState  =  STATE_STOPPED;  }  
 + if(this.runningState!= STATE_UNSTARTED && this.runningState!= STATE_SUSPENDED) { stopTime = System.currentTimeMillis(); } else { this.runningState = STATE_STOPPED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState!=  STATE_SUSPENDED  ||  this.runningState!=  STATE_UNSTARTED)  {  stopTime  =  System.currentTimeMillis();  }  else  {  this.runningState  =  STATE_STOPPED;  }  
 + if(this.runningState!= STATE_SUSPENDED || this.runningState == STATE_UNSTARTED) { stopTime = System.currentTimeMillis(); } else { this.runningState = STATE_STOPPED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.splitState!=  STATE_UNSTARTED)  {  stopTime  =  System.currentTimeMillis();  }  else  {  startTime  =  System.currentTimeMillis();  }  when(this.splitState!=  STATE_UNSTARTED)  {  stopTime  =  System.currentTimeMillis();  }  else  {  startTime  =  System.currentTimeMillis();  }  
 + if(this.runningState == STATE_RUNNING) { if(this.splitState!= STATE_UNSTARTED) { stopTime = System.currentTimeMillis(); } else { startTime = System.currentTimeMillis(); } } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.splitState!=  STATE_UNSTARTED)  {  stopTime  =  System.currentTimeMillis();  }  else  {  startTime  =  System.currentTimeMillis();  }  when(this.splitState!=  STATE_UNSTARTED)  {  stopTime  =  System.currentTimeMillis();  }  else  {  startTime  =  System.currentTimeMillis();  }  
 + if(this.runningState == STATE_RUNNING) { if(this.splitState!= STATE_SUSPENDED) { stopTime = System.currentTimeMillis(); } else { startTime = System.currentTimeMillis(); } } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.splitState!=  STATE_UNSTARTED)  {  stopTime  =  System.currentTimeMillis();  }  else  {  startTime  =  System.currentTimeMillis();  }  when(this.splitState!=  STATE_UNSTARTED)  {  stopTime  =  System.currentTimeMillis();  }  else  {  startTime  =  System.currentTimeMillis();  }  
 + if(this.runningState!= STATE_SUSPENDED) { if(this.splitState!= STATE_UNSTARTED) { stopTime = System.currentTimeMillis(); } else { startTime = System.currentTimeMillis(); } } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.stopTime!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  {  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_STOPPED;  }  if(this.stopTime  >=  STATE_RUNNING)  {  this.runningState  =  STATE_STOPPED;  }  else  {  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_STOPPED;  }  
 + if(this.runningState!= STATE_RUNNING) { this.runningState = STATE_STOPPED; } else { stopTime = System.currentTimeMillis(); this.runningState = STATE_STOPPED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState!=  STATE_STOPPED)  {  stopTime  =  System.currentTimeMillis();  }  else  {  long  startTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  
 + if(this.runningState == STATE_RUNNING) { stopTime = System.currentTimeMillis(); } else { long startTime = System.currentTimeMillis(); this.runningState = STATE_SUSPENDED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState!=  STATE_STOPPED)  {  stopTime  =  System.currentTimeMillis();  }  else  {  long  startTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  
 + if(this.runningState!= STATE_SUSPENDED) { stopTime = System.currentTimeMillis(); } else { long startTime = System.currentTimeMillis(); this.runningState = STATE_SUSPENDED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.splitState!=  STATE_UNSTARTED)  {  stopTime  =  System.currentTimeMillis();  }  else  {  System.err.println(    "Stopwatch  is  not  running:    "  +  this.splitState);  }  System.err.println(  "SplitState  is  not  running:  "  +  this.splitState);  
 + if(this.runningState == STATE_RUNNING) { stopTime = System.currentTimeMillis(); } else { System.err.println( "SplitState is not running: " + this.splitState); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.splitState!=  STATE_UNSTARTED)  {  stopTime  =  System.currentTimeMillis();  }  else  {  System.err.println(    "Stopwatch  is  not  running:    "  +  this.splitState);  }  System.err.println(  "SplitState  is  not  running:  "  +  this.splitState);  
 + if(this.runningState!= STATE_SUSPENDED) { stopTime = System.currentTimeMillis(); } else { System.err.println( "SplitState is not running:  " + this.splitState); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.stopTime  ==  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  {  long  startTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  
 + if(this.runningState!= STATE_SUSPENDED) { this.stopTime = System.currentTimeMillis(); } else { long startTime = System.currentTimeMillis(); this.runningState = STATE_SUSPENDED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.stopTime  ==  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  {  long  startTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  
 + if(this.runningState == STATE_RUNNING) { this.stopTime = System.currentTimeMillis(); } else { long startTime = System.currentTimeMillis(); this.runningState = STATE_SUSPENDED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.stopTime  ==  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  {  long  startTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  
 + if(this.stopTime == STATE_RUNNING || this.runningState!= STATE_SUSPENDED) { stopTime = System.currentTimeMillis(); } else { long startTime = System.currentTimeMillis(); this.runningState = STATE_SUSPENDED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState  ==  STATE_STOPPED)  {  this.stopTime  =  System.currentTimeMillis();  }  else  {  switch(this.runningState)  {  case  STATE_RUNNING:  stopTime  =  System.currentTimeMillis();  break;  }  
 + if(this.runningState == STATE_RUNNING) { this.stopTime = System.currentTimeMillis(); } else { switch(this.runningState) { case STATE_RUNNING: stopTime = System.currentTimeMillis(); break; } } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState  ==  STATE_STOPPED)  {  this.stopTime  =  System.currentTimeMillis();  }  else  {  switch(this.runningState)  {  case  STATE_RUNNING:  stopTime  =  System.currentTimeMillis();  break;  }  
 + if(this.runningState == STATE_UNSTARTED) { this.stopTime = System.currentTimeMillis(); } else { switch(this.runningState) { case STATE_RUNNING: stopTime = System.currentTimeMillis(); break; } } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.stopTime!=  STATE_UNSTARTED)  {  stopTime  =  System.currentTimeMillis();  }  else  {  long  runState  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  
 + if(this.runningState!= STATE_SUSPENDED) { this.stopTime = System.currentTimeMillis(); } else { long runState = System.currentTimeMillis(); this.runningState = STATE_SUSPENDED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  if(this.runningState!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  if(this.runningState!=  STATE_SUSPENDED)  {  stopTime  =  System.currentTimeMillis();  }  
 + if(this.runningState == STATE_UNSTARTED) { stopTime = System.currentTimeMillis(); } else if(this.runningState!= STATE_SUSPENDED) { stopTime = System.currentTimeMillis(); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  if(this.runningState!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  if(this.runningState!=  STATE_SUSPENDED)  {  stopTime  =  System.currentTimeMillis();  }  
 + if(this.runningState == STATE_STOPPED) { stopTime = System.currentTimeMillis(); } else if(this.runningState!= STATE_SUSPENDED) { stopTime = System.currentTimeMillis(); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  if(this.runningState!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  if(this.runningState!=  STATE_SUSPENDED)  {  stopTime  =  System.currentTimeMillis();  }  
 + if(this.runningState == STATE_STOPPED) { this.runningState = STATE_UNSTARTED; } else if(this.runningState!= STATE_SUSPENDED) { stopTime = System.currentTimeMillis(); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  stopTime  =  System.currentTimeMillis()  +  1;  if(this.runningState!=  STATE_RUNNING)  {  System.currentTimeMillis()  +  1;  }  else  {  stopTime  =  System.currentTimeMillis()  +  1;  this.runningState  =  STATE_STOPPED;  }  
 + long startTime = System.currentTimeMillis(); if(this.runningState!= STATE_RUNNING) { System.currentTimeMillis(); } else { stopTime = System.currentTimeMillis() + 1; this.runningState = STATE_STOPPED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  stopTime  =  System.currentTimeMillis()  +  1;  if(this.runningState!=  STATE_UNSTARTED)  {  System.err.println(  "Stopwatch  is  not  running.    ");  stopTime  =  System.currentTimeMillis()  +  1;  }  
 + long splitState = System.currentTimeMillis(); if(this.runningState!= STATE_SUSPENDED) { System.err.println( "Stopwatch is not running.  "); stopTime = System.currentTimeMillis(); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  stopTime  =  System.currentTimeMillis()  +  1;  if(this.runningState!=  STATE_UNSTARTED)  {  System.err.println(  "Stopwatch  is  not  running.    ");  stopTime  =  System.currentTimeMillis()  +  1;  }  
 + long splitState = System.currentTimeMillis(); if(this.runningState!= STATE_SUSPENDED) { System.err.println( "Stopwatch is not running.  "); stopTime = System.currentTimeMillis() + 1; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.stopTime!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  {  stopTime  =  System.currentTimeMillis();  }  when(this.stopTime!=  STATE_RUNNING)  {  this.stopTime  =  System.currentTimeMillis();  }  else  {  stopTime  =  System.currentTimeMillis();  }  
 + if(this.runningState!= STATE_SUSPENDED) { if(this.stopTime!= STATE_RUNNING) { this.stopTime = System.currentTimeMillis(); } else { stopTime = System.currentTimeMillis(); } } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.stopTime!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  {  this.splitState  =  STATE_SUSPENDED;  }  
 + if(this.stopTime!= STATE_RUNNING && this.runningState!= STATE_SUSPENDED) { stopTime = System.currentTimeMillis(); } else { this.splitState = STATE_SUSPENDED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.stopTime!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  {  this.splitState  =  STATE_SUSPENDED;  }  
 + if(this.stopTime!= STATE_RUNNING && this.runningState!= STATE_SUSPENDED) { this.stopTime = System.currentTimeMillis(); } else { this.splitState = STATE_SUSPENDED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState  ==  STATE_STOPPED)  {  stopTime  =  System.currentTimeMillis();  }  else  {  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_UNSTARTED;  }  
 + if(this.runningState!= STATE_RUNNING) { this.runningState = STATE_UNSTARTED; } else { stopTime = System.currentTimeMillis(); this.runningState = STATE_UNSTARTED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  stopTime  =  System.currentTimeMillis()  -  1;  if(this.runningState!=  STATE_RUNNING)  {  System.currentTimeMillis()  -  1;  }  else  {  stopTime  =  System.currentTimeMillis()  -  1;  }  
 + if(this.runningState == STATE_RUNNING) { stopTime = System.currentTimeMillis() - 1; } else { this.runningState = STATE_SUSPENDED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  this.stopTime  =  System.currentTimeMillis();  if(this.runningState!=  STATE_UNSTARTED)  {  this.stopTime  =  System.currentTimeMillis();  }  
 + long splitState = System.currentTimeMillis(); if(this.runningState!= STATE_SUSPENDED) { this.stopTime = System.currentTimeMillis(); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  this.stopTime  =  System.currentTimeMillis();  if(this.stopTime  ==  null)  {  this.stopTime  =  System.currentTimeMillis();  }  
 + long runningState = System.currentTimeMillis(); if(this.runningState == STATE_RUNNING || this.runningState!= STATE_SUSPENDED) { this.stopTime = System.currentTimeMillis(); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  this.stopTime  =  System.currentTimeMillis();  if(this.stopTime  ==  null)  {  this.stopTime  =  System.currentTimeMillis();  }  
 + long runningState = System.currentTimeMillis(); if(this.runningState == STATE_RUNNING) { this.stopTime = System.currentTimeMillis(); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  this.stopTime  =  System.currentTimeMillis();  if(this.stopTime  ==  null)  {  this.stopTime  =  System.currentTimeMillis();  }  
 + long startTime = System.currentTimeMillis(); if(this.runningState == STATE_RUNNING) { this.stopTime = System.currentTimeMillis(); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  this.stopTime  =  System.currentTimeMillis();  if(this.stopTime  ==  null)  {  this.stopTime  =  System.currentTimeMillis();  }  
 + long runState = System.currentTimeMillis(); if(this.runningState == STATE_RUNNING) { this.stopTime = System.currentTimeMillis(); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  this.stopTime  =  System.currentTimeMillis();  if(this.stopTime  ==  null)  {  this.stopTime  =  System.currentTimeMillis();  }  
 + long splitState = System.currentTimeMillis(); if(this.runningState == STATE_RUNNING) { this.stopTime = System.currentTimeMillis(); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.splitState!=  STATE_UNSTARTED)  {  stopTime  =  System.currentTimeMillis();  }  if(this.splitState!=  STATE_UNSTARTED)  {  stopTime  =  System.currentTimeMillis();  }  this.runningState  =  STATE_STOPPED;  }  
 + if(this.runningState == STATE_RUNNING) { if(this.splitState!= STATE_UNSTARTED) { stopTime = System.currentTimeMillis(); } this.runningState = STATE_STOPPED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -      if(this.runningState!=  STATE_RUNNING)  {  this.runningState  =  STATE_SUSPENDED;  }  else  {  stopTime  +=  System.currentTimeMillis();  }  
 + if(this.runningState!= STATE_RUNNING || this.runningState == STATE_SUSPENDED) { this.runningState = STATE_SUSPENDED; } else { stopTime += System.currentTimeMillis(); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -      if(this.runningState!=  STATE_RUNNING)  {  this.runningState  =  STATE_SUSPENDED;  }  else  {  stopTime  +=  System.currentTimeMillis();  }  
 + if(this.runningState!= STATE_RUNNING && this.runningState == STATE_SUSPENDED) { this.runningState = STATE_SUSPENDED; } else { stopTime += System.currentTimeMillis(); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -      if(this.runningState!=  STATE_RUNNING)  {  this.runningState  =  STATE_SUSPENDED;  }  else  {  stopTime  +=  System.currentTimeMillis();  }  
 + if(this.runningState == STATE_SUSPENDED) { this.runningState = STATE_SUSPENDED; } else { stopTime += System.currentTimeMillis(); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  stopTime  =  System.currentTimeMillis();  if(this.runningState!=  STATE_RUNNING  ||  this.runningState!=  STATE_SUSPENDED)  {  startTime  =  System.currentTimeMillis()  +  1;  }  
 + if(this.runningState!= STATE_SUSPENDED || this.runningState!= STATE_SUSPENDED) { stopTime = System.currentTimeMillis() + 1; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.splitState  ==  STATE_SPLIT)  {  stopTime  =  System.currentTimeMillis();  }  else  {  stopTime  =  System.currentTimeMillis();  }  
 + if(this.runningState!= STATE_RUNNING || this.runningState == STATE_SUSPENDED) { this.splitState = STATE_SPLIT; } else { stopTime = System.currentTimeMillis(); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState  ==  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  {  startTime  =  System.currentTimeMillis();  }  when(this.runningState  ==  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  {  startTime  =  System.currentTimeMillis();  }  
 + if(this.runningState!= STATE_SUSPENDED) { if(this.runningState == STATE_RUNNING) { stopTime = System.currentTimeMillis(); } else { startTime = System.currentTimeMillis(); } } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.splitState!=  STATE_UNSTARTED  ||  this.runningState  ==  STATE_SUSPENDED)  {  stopTime  =  System.currentTimeMillis();  }  
 + if(this.runningState!= STATE_SUSPENDED || this.splitState == STATE_SUSPENDED) { stopTime = System.currentTimeMillis(); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState!=  STATE_STOPPED)  {  this.splitState  =  STATE_UNSTARTED;  stopTime  =  System.currentTimeMillis();  }  else  {  startTime  =  System.currentTimeMillis();  }  
 + if(this.runningState == STATE_RUNNING) { this.splitState = STATE_UNSTARTED; stopTime = System.currentTimeMillis(); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState  ==  STATE_RUNNING  ||  this.runningState!=  STATE_SUSPENDED)  {  stopTime  =  System.currentTimeMillis();  }  else  {  startTime  =  System.currentTimeMillis();  }  if(this.runningState  ==  STATE_RUNNING  ||  this.runningState!=  STATE_SUSPENDED)  {  stopTime  =  System.currentTimeMillis();  }  else  {  this.runningState  =  STATE_SPLIT;  }  
 + if(this.runningState == STATE_STOPPED || this.runningState!= STATE_SUSPENDED) { stopTime = System.currentTimeMillis(); } else { this.runningState = STATE_SPLIT; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.splitState!=  STATE_UNSTARTED)  {  stopTime  =  System.currentTimeMillis();  }  else  {  startTime  =  System.currentTimeMillis();  }  if(this.splitState!=  STATE_UNSTARTED)  {  startTime  =  System.currentTimeMillis();  }  else  {  this.splitState  =  STATE_SPLIT;  }  
 + if(this.runningState == STATE_RUNNING || this.runningState!= STATE_SUSPENDED) { stopTime = System.currentTimeMillis(); } else { this.splitState = STATE_SPLIT; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState!=  STATE_UNSPLIT)  {  stopTime  =  System.currentTimeMillis();  }  else  {  stopTime  =  System.currentTimeMillis();  this.splitState  =  STATE_UNSTARTED;  }  
 + if(this.runningState!= STATE_RUNNING) { this.runningState = STATE_STOPPED; } else { stopTime = System.currentTimeMillis(); this.splitState = STATE_UNSTARTED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -      if(this.runningState!=  STATE_RUNNING  ||  this.runningState!=  STATE_SUSPENDED)  {  this.runningState  =  STATE_UNSTARTED;  }  else  {  stopTime  =  System.currentTimeMillis();  }  
 + if(this.runningState!= STATE_RUNNING && this.runningState == STATE_SUSPENDED) { this.runningState = STATE_UNSTARTED; } else { stopTime = System.currentTimeMillis(); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  while(this.splitState!=  STATE_UNSTARTED  &&  this.runningState!=  STATE_SUSPENDED)  {  stopTime  =  System.currentTimeMillis();  
 + if(this.splitState!= STATE_UNSTARTED && this.runningState!= STATE_SUSPENDED) { stopTime = System.currentTimeMillis(); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState!=  STATE_SUSPENDED  ||  this.stopTime!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_UNSTARTED;  }  else  {  stopTime  =  System.currentTimeMillis()  
 + if(this.runningState!= STATE_SUSPENDED && this.stopTime!= STATE_RUNNING) { stopTime = System.currentTimeMillis(); this.runningState = STATE_UNSTARTED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState!=  STATE_STOPPED  ||  this.runningState  ==  STATE_SUSPENDED)  {  stopTime  =  System.currentTimeMillis();  }  
 + if(this.runningState!= STATE_SUSPENDED || this.runningState == STATE_STOPPED) { stopTime = System.currentTimeMillis(); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.splitState  ==  STATE_SPLIT)  {  stopTime  =  System.currentTimeMillis();  }  else  {  stopTime  =  System.currentTimeMillis();  this.splitState  =  STATE_SPLIT;  }  
 + if(this.runningState!= STATE_RUNNING) { this.splitState = STATE_SUSPENDED; } else { stopTime = System.currentTimeMillis(); this.splitState = STATE_SPLIT; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.splitState  ==  STATE_SPLIT)  {  stopTime  =  System.currentTimeMillis();  }  else  {  stopTime  =  System.currentTimeMillis();  this.splitState  =  STATE_SPLIT;  }  
 + if(this.runningState!= STATE_RUNNING) { this.splitState = STATE_UNSTARTED; } else { stopTime = System.currentTimeMillis(); this.splitState = STATE_SPLIT; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.splitState  ==  STATE_SPLIT)  {  stopTime  =  System.currentTimeMillis();  }  else  {  stopTime  =  System.currentTimeMillis();  this.splitState  =  STATE_SPLIT;  }  
 + if(this.runningState!= STATE_RUNNING) { this.splitState = STATE_STOPPED; } else { stopTime = System.currentTimeMillis(); this.splitState = STATE_SPLIT; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.stopTime!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  {  stopTime  =  System.currentTimeMillis();  this.splitState  =  STATE_UNSTARTED;  }  this.splitState  =  STATE_UNSTARTED;  
 + if(this.runningState!= STATE_SUSPENDED) { if(this.stopTime!= STATE_RUNNING) { stopTime = System.currentTimeMillis(); } else { stopTime = System.currentTimeMillis(); } this.splitState = STATE_UNSTARTED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  stopTime  =  System.currentTimeMillis()  -  1;  if(this.runningState!=  STATE_UNSTARTED)  {  System.err.println(  "Stopwatch  is  not  running.    ");  stopTime  =  System.currentTimeMillis()  -  1;  }  
 + long splitState = System.currentTimeMillis() - 1; if(this.runningState!= STATE_SUSPENDED) { System.err.println( "Stopwatch is not running.  "); stopTime = System.currentTimeMillis() - 1; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  stopTime  =  System.currentTimeMillis()  -  1;  if(this.runningState!=  STATE_UNSTARTED)  {  System.err.println(  "Stopwatch  is  not  running.    ");  stopTime  =  System.currentTimeMillis()  -  1;  }  
 + long startTime = System.currentTimeMillis() - 1; if(this.runningState!= STATE_SUSPENDED) { System.err.println( "Stopwatch is not running.  "); stopTime = System.currentTimeMillis() - 1; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  stopTime  =  System.currentTimeMillis()  -  1;  long  splitState  =  System.currentTimeMillis()  -  1;  
 + if(this.runningState == STATE_RUNNING) { stopTime = System.currentTimeMillis() - 1; long splitState = System.currentTimeMillis() - 1; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  stopTime  =  System.currentTimeMillis()  -  1;  long  splitState  =  System.currentTimeMillis()  -  1;  
 + if(this.runningState == STATE_RUNNING) { stopTime = System.currentTimeMillis() - 1; long splitState = System.currentTimeMillis() - 1; } else { this.runningState = STATE_UNSTARTED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  stopTime  =  System.currentTimeMillis()  -  1;  long  splitState  =  System.currentTimeMillis()  -  1;  
 + if(this.runningState == STATE_RUNNING) { stopTime = System.currentTimeMillis() - 1; long splitState = System.currentTimeMillis() - 1; } else { this.runningState = STATE_SUSPENDED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  stopTime  =  System.currentTimeMillis()  -  1;  long  splitState  =  System.currentTimeMillis()  -  1;  
 + if(this.runningState == STATE_RUNNING) { stopTime = System.currentTimeMillis(); long splitState = System.currentTimeMillis() - 1; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  stopTime  =  System.currentTimeMillis()  -  1;  long  splitState  =  System.currentTimeMillis()  -  1;  
 + if(this.runningState == STATE_RUNNING) { stopTime = System.currentTimeMillis() - 1; long splitState = System.currentTimeMillis() - 1; } else { this.runningState = STATE_STOPPED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.stopTime!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  {  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_UNSTARTED;  }  when(this.stopTime!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  {  this.runningState  =  STATE_UNSTARTED;  }  
 + if(this.runningState!= STATE_SUSPENDED) { if(this.stopTime!= STATE_RUNNING) { stopTime = System.currentTimeMillis(); } else { this.runningState = STATE_UNSTARTED; } } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.splitState!=  STATE_SUSPENDED)  {  stopTime  =  System.currentTimeMillis();  }  else  {  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_STOPPED;  }  
 + if(this.runningState!= STATE_RUNNING) { this.splitState = STATE_SUSPENDED; } else { stopTime = System.currentTimeMillis(); this.runningState = STATE_STOPPED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.stopTime  ==  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  {  long  endTime  =  System.currentTimeMillis();  this.runningState  =  STATE_UNSTARTED;  endTime  =  System.currentTimeMillis();  }  
 + if(this.runningState!= STATE_SUSPENDED) { stopTime = System.currentTimeMillis(); } else { long endTime = System.currentTimeMillis(); this.runningState = STATE_UNSTARTED; endTime = System.currentTimeMillis(); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.stopTime!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  {  startTime  =  System.currentTimeMillis();  this.runningState  =  STATE_STOPPED;  }  if(this.stopTime!=  STATE_RUNNING)  {  this.runningState  =  STATE_UNSTARTED;  }  else  {  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_STOPPED;  }  
 + if(this.runningState!= STATE_RUNNING) { this.runningState = STATE_UNSTARTED; } else { stopTime = System.currentTimeMillis(); this.runningState = STATE_STOPPED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState!=  STATE_STOPPED  ||  this.stopTime!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  {  this.runningState  =  STATE_UNSTARTED;  }  
 + if(this.runningState == STATE_RUNNING && this.stopTime!= STATE_RUNNING) { stopTime = System.currentTimeMillis(); } else { this.runningState = STATE_UNSTARTED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState!=  STATE_STOPPED  ||  this.stopTime!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  {  this.runningState  =  STATE_UNSTARTED;  }  
 + if(this.runningState == STATE_RUNNING && this.stopTime!= STATE_SUSPENDED) { stopTime = System.currentTimeMillis(); } else { this.runningState = STATE_UNSTARTED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.stopTime!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  {  this.startTime  =  System.currentTimeMillis();  }  If(this.stopTime!=  STATE_RUNNING)  {  this.startTime  =  System.currentTimeMillis();  }  else  {  this.startTime  =  System.currentTimeMillis();  }  
 + if(this.runningState!= STATE_SUSPENDED) { if(this.stopTime!= STATE_RUNNING) { stopTime = System.currentTimeMillis(); } else { this.startTime = System.currentTimeMillis(); } } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.stopTime!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  {  this.startTime  =  System.currentTimeMillis();  }  If(this.stopTime!=  STATE_RUNNING)  {  this.startTime  =  System.currentTimeMillis();  }  else  {  this.startTime  =  System.currentTimeMillis();  }  
 + if(this.runningState!= STATE_SUSPENDED) { if(this.stopTime!= STATE_RUNNING) { this.stopTime = System.currentTimeMillis(); } else { this.startTime = System.currentTimeMillis(); } } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.stopTime!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  {  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_STOPPED;  }  if(this.stopTime!=  STATE_RUNNING)  {  this.runningState  =  STATE_STOPPED;  }  else  {  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_UNSTARTED;  }  
 + if(this.runningState!= STATE_RUNNING) { this.runningState = STATE_STOPPED; } else { stopTime = System.currentTimeMillis(); this.runningState = STATE_UNSTARTED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.stopTime!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  {  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_STOPPED;  }  if(this.stopTime!=  STATE_RUNNING)  {  this.runningState  =  STATE_STOPPED;  }  else  {  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_UNSTARTED;  }  
 + if(this.runningState!= STATE_RUNNING) { this.runningState = STATE_STOPPED; } else { stopTime = System.currentTimeMillis(); this.runningState = STATE_SUSPENDED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 add buggy code at line 118 Diagnostic: 
 -  
 +         if(this.runningState!=  STATE_RUNNING)  {  this.runningState  =  STATE_SUSPENDED;  }  else  {  stopTime  =  System.currentTimeMillis();  }  if(this.runningState!= STATE_RUNNING) { this.runningState = STATE_SUSPENDED; return; } else { stopTime = System.currentTimeMillis(); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState  ==  STATE_SUSPENDED  ||  this.runningState  ==  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  
 + if(this.runningState!= STATE_SUSPENDED && this.runningState == STATE_RUNNING) { stopTime = System.currentTimeMillis(); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState  ==  STATE_SUSPENDED  ||  this.runningState  ==  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  
 + if(this.runningState == STATE_STOPPED || this.runningState == STATE_RUNNING) { stopTime = System.currentTimeMillis(); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState  ==  STATE_SUSPENDED  ||  this.runningState  ==  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  
 + if(this.runningState == STATE_UNSTARTED || this.runningState == STATE_RUNNING) { stopTime = System.currentTimeMillis(); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.stopTime!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  else  {  stopTime  =  System.currentTimeMillis();  }  while(this.stopTime!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  else  {  stopTime  =  System.currentTimeMillis();  }  
 + while(this.runningState!= STATE_SUSPENDED) { stopTime = System.currentTimeMillis(); this.runningState = STATE_SUSPENDED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState!=  STATE_RUNNING  ||  this.runningState  ==  STATE_SUSPENDED)  {  stopTime  =  System.currentTimeMillis();  }  else  {  startTime  =  System.currentTimeMillis();  this.runningState  =  STATE_STOPPED;  }  
 + if(this.runningState!= STATE_SUSPENDED || this.runningState == STATE_RUNNING) { stopTime = System.currentTimeMillis(); } else { this.runningState = STATE_STOPPED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  stopTime  =  System.currentTimeMillis();  if(this.runningState!=  STATE_RUNNING  ||  this.runningState!=  STATE_SUSPENDED)  {  stopTime  =  System.currentTimeMillis()  +  1;  }  
 + long splitState = System.currentTimeMillis(); if(this.runningState!= STATE_SUSPENDED || this.runningState!= STATE_SUSPENDED) { stopTime = System.currentTimeMillis() + 1; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  stopTime  =  System.currentTimeMillis();  if(this.runningState!=  STATE_RUNNING  ||  this.runningState!=  STATE_SUSPENDED)  {  stopTime  =  System.currentTimeMillis()  +  1;  }  
 + long startTime = System.currentTimeMillis(); if(this.runningState!= STATE_SUSPENDED || this.runningState!= STATE_SUSPENDED) { stopTime = System.currentTimeMillis() + 1; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState!=  STATE_RUNNING  ||  this.runningState!=  STATE_SUSPENDED)  {  this.stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_STOPPED;  }  else  {  stopTime  =  System.currentTimeM  
 + if(this.runningState == STATE_RUNNING && this.runningState!= STATE_SUSPENDED) { this.stopTime = System.currentTimeMillis(); this.runningState = STATE_STOPPED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  this.stopTime  =  System.currentTimeMillis();  if(this.runningState  ==  STATE_RUNNING)  {  this.stopTime  =  System.currentTimeMillis();  }  else  {  this.runningState  =  STATE_STOPPED;  }  
 + long runningState = System.currentTimeMillis(); if(this.runningState == STATE_RUNNING) { this.stopTime = System.currentTimeMillis(); } else { this.runningState = STATE_STOPPED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  this.stopTime  =  System.currentTimeMillis();  if(this.runningState  ==  STATE_RUNNING)  {  this.stopTime  =  System.currentTimeMillis();  }  else  {  this.runningState  =  STATE_STOPPED;  }  
 + long startTime = System.currentTimeMillis(); if(this.runningState == STATE_RUNNING) { this.stopTime = System.currentTimeMillis(); } else { this.runningState = STATE_STOPPED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  this.stopTime  =  System.currentTimeMillis();  if(this.runningState  ==  STATE_RUNNING)  {  this.stopTime  =  System.currentTimeMillis();  }  else  {  this.runningState  =  STATE_STOPPED;  }  
 + long splitState = System.currentTimeMillis(); if(this.runningState == STATE_RUNNING) { this.stopTime = System.currentTimeMillis(); } else { this.runningState = STATE_STOPPED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.stopTime!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  {  stopTime  =  System.currentTimeMillis()  +  1;  }  if(this.stopTime!=  STATE_UNSTARTED)  {  stopTime  =  System.currentTimeMillis();  }  else  {  stopTime  =  System.currentTimeMillis()  +  1;  }  
 + if(this.runningState!= STATE_RUNNING) { System.currentTimeMillis(); } else { stopTime = System.currentTimeMillis() + 1; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState!=  STATE_STOPPED)  {  this.runningState  =  STATE_RUNNING;  stopTime  =  System.currentTimeMillis();  }  else  {  startTime  =  System.currentTimeMillis();  }  
 + if(this.runningState!= STATE_SUSPENDED) { this.runningState = STATE_RUNNING; stopTime = System.currentTimeMillis(); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  stopTime  =  System.currentTimeMillis()  +  1;  if(this.runningState  ==  STATE_RUNNING)  {  this.runningState  =  STATE_SUSPENDED;  }  else  {  stopTime  =  System.currentTimeMillis()  +  1;  }  
 + long startTime = System.currentTimeMillis(); if(this.runningState == STATE_SUSPENDED) { this.runningState = STATE_SUSPENDED; } else { stopTime = System.currentTimeMillis() + 1; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState  ==  STATE_STOPPED)  {  stopTime  =  System.currentTimeMillis();  }  else  {  switch(this.runningState)  {  case  STATE_RUNNING:  stopTime  =  System.currentTimeMillis();  break;  }  
 + if(this.runningState == STATE_RUNNING) { stopTime = System.currentTimeMillis(); } else { switch(this.runningState) { case STATE_RUNNING: stopTime = System.currentTimeMillis(); break; } } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState  ==  STATE_STOPPED)  {  stopTime  =  System.currentTimeMillis();  }  else  {  switch(this.runningState)  {  case  STATE_RUNNING:  stopTime  =  System.currentTimeMillis();  break;  }  
 + if(this.runningState == STATE_UNSTARTED) { stopTime = System.currentTimeMillis(); } else { switch(this.runningState) { case STATE_RUNNING: stopTime = System.currentTimeMillis(); break; } } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState!=  STATE_RUNNING  ||  this.runningState  ==  STATE_SUSPENDED)  {  stopTime  =  System.currentTimeMillis();  }  else  {  startTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  
 + if(this.runningState!= STATE_SUSPENDED || this.runningState == STATE_RUNNING) { stopTime = System.currentTimeMillis(); } else { this.runningState = STATE_SUSPENDED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.splitState!=  STATE_SPLIT)  {  if(this.runningState!=  STATE_UNSTARTED)  {  stopTime  =  System.currentTimeMillis();  }  else  {  startTime  =  System.currentTimeMillis();  }  
 + if(this.runningState == STATE_RUNNING) { if(this.splitState!= STATE_SPLIT) { stopTime = System.currentTimeMillis(); } else { startTime = System.currentTimeMillis(); } } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  stopTime  =  System.currentTimeMillis()  +  1;  if(this.runningState!=  STATE_UNSTARTED)  {  System.err.println(  "Stopwatch  is  not  running.    ");  }  else  {  stopTime  =  System.currentTimeMillis()  +  1;  }  
 + long startTime = System.currentTimeMillis(); if(this.runningState!= STATE_RUNNING) { System.err.println( "Stopwatch is not running.  "); } else { stopTime = System.currentTimeMillis() + 1; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState  ==  STATE_RUNNING  ||  this.runningState!=  STATE_SUSPENDED)  {  stopTime  =  System.currentTimeMillis();  }  else  {  stopTime  =  System.currentTimeMillis();  }  if(this.runningState  ==  STATE_RUNNING  ||  this.runningState!=  STATE_SUSPENDED)  {  stopTime  =  System.currentTimeMillis();  }  else  {  system.currentTimeMillis();  }  
 + if(this.runningState == STATE_STOPPED || this.runningState!= STATE_SUSPENDED) { stopTime = System.currentTimeMillis(); } else { System.currentTimeMillis(); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState  ==  STATE_RUNNING  ||  this.runningState!=  STATE_SUSPENDED)  {  stopTime  =  System.currentTimeMillis();  }  else  {  stopTime  =  System.currentTimeMillis();  }  if(this.runningState  ==  STATE_RUNNING  ||  this.runningState!=  STATE_SUSPENDED)  {  stopTime  =  System.currentTimeMillis();  }  else  {  system.currentTimeMillis();  }  
 + if(this.runningState == STATE_UNSTARTED || this.runningState!= STATE_SUSPENDED) { stopTime = System.currentTimeMillis(); } else { System.currentTimeMillis(); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.splitState!=  STATE_SPLIT  ||  this.runningState  ==  STATE_SUSPENDED)  {  stopTime  =  System.currentTimeMillis();  }  
 + if(this.runningState!= STATE_SUSPENDED || this.splitState == STATE_SPLIT) { stopTime = System.currentTimeMillis(); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState  ==  STATE_STOPPED)  {  stopTime  =  System.currentTimeMillis();  }  else  {  switch(this.runningState)  {  case  STATE_UNSTARTED:  startTime  =  System.currentTimeMillis();  break;  }  
 + if(this.runningState == STATE_RUNNING) { stopTime = System.currentTimeMillis(); } else { switch(this.runningState) { case STATE_UNSTARTED: startTime = System.currentTimeMillis(); break; } } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState!=  STATE_RUNNING  ||  this.stopTime!=  STATE_SUSPENDED)  {  stopTime  =  System.currentTimeMillis();  }  else  {  switch(this.runningState)  {  case  STATE_UNSTARTED:  stopTime  =  System.currentTimeM  
 + if(this.runningState == STATE_RUNNING && this.stopTime!= STATE_SUSPENDED) { stopTime = System.currentTimeMillis(); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.stopTime!=  STATE_RUNNING  ||  this.runningState  ==  STATE_SUSPENDED)  {  stopTime  =  System.currentTimeMillis();  }  else  {  this.runningState  =  STATE_UNSTARTED;  }  
 + if(this.runningState!= STATE_SUSPENDED || this.stopTime == STATE_RUNNING) { stopTime = System.currentTimeMillis(); } else { this.runningState = STATE_UNSTARTED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.stopTime!=  STATE_RUNNING  ||  this.runningState  ==  STATE_SUSPENDED)  {  stopTime  =  System.currentTimeMillis();  }  else  {  this.runningState  =  STATE_UNSTARTED;  }  
 + if(this.runningState!= STATE_SUSPENDED || this.stopTime == STATE_RUNNING) { stopTime = System.currentTimeMillis(); } else { this.runningState = STATE_SUSPENDED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState!=  STATE_RUNNING  ||  this.runningState!=  STATE_SUSPENDED)  {  this.stopTime  =  System.currentTimeMillis();  }  else  {  this.runningState  =  STATE_UNSTARTED;  startTime  =  System.currentTimeM  
 + if(this.runningState == STATE_RUNNING && this.runningState!= STATE_SUSPENDED) { this.stopTime = System.currentTimeMillis(); } else { this.runningState = STATE_UNSTARTED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState!=  STATE_RUNNING  &&  this.runningState!=  STATE_SUSPENDED)  {  this.stopTime  =  System.currentTimeMillis();  }  
 + if(this.runningState!= STATE_UNSTARTED && this.runningState!= STATE_SUSPENDED) { this.stopTime = System.currentTimeMillis(); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState!=  STATE_RUNNING  &&  this.runningState!=  STATE_SUSPENDED)  {  this.stopTime  =  System.currentTimeMillis();  }  
 + if(this.runningState!= STATE_STOPPED && this.runningState!= STATE_SUSPENDED) { this.stopTime = System.currentTimeMillis(); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState!=  STATE_RUNNING  ||  this.runningState!=  STATE_SUSPENDED)  {  stopTime  =  System.currentTimeMillis();  }  else  {  this.runningState  =  STATE_STOPPED;  }  
 + if(this.runningState!= STATE_SUSPENDED && this.runningState!= STATE_SUSPENDED) { stopTime = System.currentTimeMillis(); } else { this.runningState = STATE_STOPPED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  stopTime  =  System.currentTimeMillis()  -  1;  if(this.runningState!=  STATE_UNSTARTED)  {  System.err.println(  "Stopwatch  is  not  running:  "  +  this.runningState);  stopTime  =  System.currentTimeMillis()  -  1;  }  
 + long splitState = System.currentTimeMillis() - 1; if(this.runningState!= STATE_SUSPENDED) { System.err.println( "Stopwatch is not running: " + this.runningState); stopTime = System.currentTimeMillis() - 1; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  stopTime  =  System.currentTimeMillis()  /  2;  if(this.runningState  ==  STATE_RUNNING  ||  this.runningState!=  STATE_SUSPENDED)  {  System.currentTimeMillis()  /  2;  stopTime  =  System.currentTimeMillis()  /  2;  }  
 + long startTime = System.currentTimeMillis(); if(this.runningState == STATE_RUNNING || this.runningState!= STATE_SUSPENDED) { System.currentTimeMillis(); stopTime = System.currentTimeMillis(); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  stopTime  =  System.currentTimeMillis()  /  2;  if(this.runningState  ==  STATE_RUNNING  ||  this.runningState!=  STATE_SUSPENDED)  {  System.currentTimeMillis()  /  2;  stopTime  =  System.currentTimeMillis()  /  2;  }  
 + if(this.runningState == STATE_RUNNING || this.runningState!= STATE_SUSPENDED) { System.currentTimeMillis(); stopTime = System.currentTimeMillis(); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  stopTime  =  System.currentTimeMillis()  /  2;  if(this.runningState  ==  STATE_RUNNING  ||  this.runningState!=  STATE_SUSPENDED)  {  System.currentTimeMillis()  /  2;  stopTime  =  System.currentTimeMillis()  /  2;  }  
 + long splitState = System.currentTimeMillis(); if(this.runningState == STATE_RUNNING || this.runningState!= STATE_SUSPENDED) { System.currentTimeMillis(); stopTime = System.currentTimeMillis(); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  stopTime  =  System.currentTimeMillis()  /  2;  if(this.runningState  ==  STATE_RUNNING  ||  this.runningState!=  STATE_SUSPENDED)  {  System.currentTimeMillis()  /  2;  stopTime  =  System.currentTimeMillis()  /  2;  }  
 + long startTime = System.currentTimeMillis(); if(this.runningState == STATE_RUNNING && this.runningState!= STATE_SUSPENDED) { System.currentTimeMillis(); stopTime = System.currentTimeMillis(); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  {  this.runningState  =  STATE_STOPPED;  }  if(this.runningState  >>  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  {  this.runningState  =  STATE_STOPPED;  }  
 + if(this.runningState!= STATE_SUSPENDED) { this.runningState = STATE_SUSPENDED; stopTime = System.currentTimeMillis(); } else { this.runningState = STATE_STOPPED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.splitState!=  STATE_STOPPED)  {  stopTime  =  System.currentTimeMillis();  }  else  {  stopTime  =  System.currentTimeMillis()  +  1;  }  
 + if(this.runningState!= STATE_RUNNING) { this.splitState = STATE_STOPPED; } else { stopTime = System.currentTimeMillis() + 1; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState!=  STATE_RUNNING)  {  if(this.runningState!=  STATE_SUSPENDED)  {  stopTime  =  System.currentTimeMillis();  }  else  {  startTime  =  System.currentTimeMillis();  }  }  
 + if(this.runningState!= STATE_SUSPENDED) { if(this.runningState!= STATE_SUSPENDED) { stopTime = System.currentTimeMillis(); } else { startTime = System.currentTimeMillis(); } } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState!=  STATE_RUNNING)  {  if(this.runningState!=  STATE_SUSPENDED)  {  stopTime  =  System.currentTimeMillis();  }  else  {  startTime  =  System.currentTimeMillis();  }  }  
 + if(this.runningState!= STATE_STOPPED) { if(this.runningState!= STATE_SUSPENDED) { stopTime = System.currentTimeMillis(); } else { this.runningState = STATE_STOPPED; } } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState!=  STATE_RUNNING)  {  if(this.runningState!=  STATE_SUSPENDED)  {  stopTime  =  System.currentTimeMillis();  }  else  {  startTime  =  System.currentTimeMillis();  }  }  
 + if(this.runningState!= STATE_SUSPENDED) { if(this.runningState!= STATE_UNSTARTED) { stopTime = System.currentTimeMillis(); } else { startTime = System.currentTimeMillis(); } } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  stopTime  =  System.currentTimeMillis()  -  1;  if(this.runningState!=  STATE_RUNNING)  {  this.runningState  =  STATE_UNSTARTED;  }  else  {  stopTime  =  System.currentTimeMillis()  -  1;  }  
 + long splitState = System.currentTimeMillis() - 1; if(this.runningState!= STATE_RUNNING) { this.runningState = STATE_UNSTARTED; } else { stopTime = System.currentTimeMillis() - 1; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  stopTime  =  System.currentTimeMillis()  -  1;  if(this.runningState!=  STATE_RUNNING)  {  this.runningState  =  STATE_UNSTARTED;  }  else  {  stopTime  =  System.currentTimeMillis()  -  1;  }  
 + long startTime = System.currentTimeMillis() - 1; if(this.runningState!= STATE_RUNNING) { this.runningState = STATE_UNSTARTED; } else { stopTime = System.currentTimeMillis() - 1; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  stopTime  =  System.currentTimeMillis()  -  1;  if(this.runningState!=  STATE_RUNNING)  {  this.runningState  =  STATE_UNSTARTED;  }  else  {  stopTime  =  System.currentTimeMillis()  -  1;  }  
 + long startTime = System.currentTimeMillis(); if(this.runningState!= STATE_RUNNING) { this.runningState = STATE_UNSTARTED; } else { stopTime = System.currentTimeMillis() - 1; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  stopTime  =  System.currentTimeMillis()  -  1;  if(this.runningState!=  STATE_RUNNING)  {  this.runningState  =  STATE_UNSTARTED;  }  else  {  stopTime  =  System.currentTimeMillis()  -  1;  }  
 + long splitState = System.currentTimeMillis() - 1; if(this.runningState!= STATE_RUNNING) { this.runningState = STATE_UNSTARTED; } else { stopTime = System.currentTimeMillis(); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  stopTime  =  System.currentTimeMillis()  -  1;  if(this.runningState!=  STATE_RUNNING)  {  this.runningState  =  STATE_UNSTARTED;  }  else  {  stopTime  =  System.currentTimeMillis()  -  1;  }  
 + long startTime = System.currentTimeMillis() - 1; if(this.runningState!= STATE_RUNNING) { this.runningState = STATE_UNSTARTED; } else { stopTime = System.currentTimeMillis(); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  stopTime  =  System.currentTimeMillis()  -  1;  if(this.runningState!=  STATE_RUNNING)  {  this.runningState  =  STATE_UNSTARTED;  }  else  {  stopTime  =  System.currentTimeMillis()  -  1;  }  
 + long splitState = System.currentTimeMillis(); if(this.runningState!= STATE_RUNNING) { this.runningState = STATE_UNSTARTED; } else { stopTime = System.currentTimeMillis() - 1; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_1 replace buggy code at line 118 Diagnostic: 
 -  if(this.stopTime!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  else  {  stopTime  =  System.currentTimeMillis();  }  
 + if(this.runningState!= STATE_RUNNING) { System.currentTimeMillis(); this.runningState = STATE_SUSPENDED; } else { stopTime = System.currentTimeMillis(); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_1 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  {  this.runningState  =  STATE_STOPPED;  }  
 + if(this.runningState!= STATE_SUSPENDED) { stopTime = System.currentTimeMillis(); } else { this.runningState = STATE_STOPPED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_1 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  {  this.runningState  =  STATE_STOPPED;  }  
 + if(this.runningState == STATE_RUNNING || this.runningState!= STATE_SUSPENDED) { stopTime = System.currentTimeMillis(); } else { this.runningState = STATE_STOPPED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_1 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState!=  STATE_RUNNING  &&  this.runningState!=  STATE_SUSPENDED)  {  stopTime  =  System.currentTimeMillis();  }  
 + if(this.runningState!= STATE_STOPPED && this.runningState!= STATE_SUSPENDED) { stopTime = System.currentTimeMillis(); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_1 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState!=  STATE_RUNNING  &&  this.runningState!=  STATE_SUSPENDED)  {  stopTime  =  System.currentTimeMillis();  }  
 + if(this.runningState == STATE_RUNNING && this.runningState!= STATE_SUSPENDED) { stopTime = System.currentTimeMillis(); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_1 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState!=  STATE_RUNNING  &&  this.runningState!=  STATE_SUSPENDED)  {  stopTime  =  System.currentTimeMillis();  }  
 + if(this.runningState!= STATE_UNSTARTED && this.runningState!= STATE_SUSPENDED) { stopTime = System.currentTimeMillis(); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_1 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState!=  STATE_RUNNING  &&  this.runningState!=  STATE_SUSPENDED)  {  stopTime  =  System.currentTimeMillis();  }  
 + if(this.runningState!= STATE_SUSPENDED) { stopTime = System.currentTimeMillis(); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_1 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState!=  STATE_RUNNING  &&  this.runningState!=  STATE_SUSPENDED)  {  stopTime  =  System.currentTimeMillis();  }  
 + if(this.runningState!= STATE_SUSPENDED && this.runningState!= STATE_SUSPENDED) { stopTime = System.currentTimeMillis(); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_1 replace buggy code at line 118 Diagnostic: 
 -  if(this.stopTime!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_STOPPED;  }  else  {  stopTime  =  System.currentTimeMillis();  }  
 + if(this.runningState!= STATE_SUSPENDED) { this.stopTime = System.currentTimeMillis(); this.runningState = STATE_STOPPED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_1 replace buggy code at line 118 Diagnostic: 
 -  if(this.stopTime!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  {  this.splitState  =  STATE_UNSTARTED;  }  
 + if(this.stopTime!= STATE_RUNNING && this.runningState!= STATE_SUSPENDED) { stopTime = System.currentTimeMillis(); } else { this.splitState = STATE_UNSTARTED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_1 replace buggy code at line 118 Diagnostic: 
 -  if(this.stopTime!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  {  this.splitState  =  STATE_UNSTARTED;  }  
 + if(this.runningState!= STATE_SUSPENDED) { this.stopTime = System.currentTimeMillis(); } else { this.splitState = STATE_UNSTARTED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_1 replace buggy code at line 118 Diagnostic: 
 -  if(this.stopTime!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  {  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_STOPPED;  }  
 + if(this.runningState!= STATE_RUNNING) { System.currentTimeMillis(); } else { stopTime = System.currentTimeMillis(); this.runningState = STATE_STOPPED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_1 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  {  int  startTime  =  System.currentTimeMillis();  this.runningState  =  STATE_UNSTARTED;  }  
 + if(this.runningState!= STATE_SUSPENDED) { stopTime = System.currentTimeMillis(); } else { this.runningState = STATE_UNSTARTED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_1 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState  ==  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  {  stopTime  =  System.currentTimeMillis();  }  
 + if(this.runningState == STATE_SUSPENDED) { this.runningState = STATE_RUNNING; } else { stopTime = System.currentTimeMillis(); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_1 replace buggy code at line 118 Diagnostic: 
 -  if(this.stopTime!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  this.splitState  =  STATE_UNSTARTED;  }  else  {  stopTime  =  System.currentTimeMillis();  }  
 + if(this.runningState!= STATE_RUNNING) { this.splitState = STATE_UNSTARTED; } else { stopTime = System.currentTimeMillis(); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_1 replace buggy code at line 118 Diagnostic: 
 -  if(this.stopTime!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  {  int  startTime  =  System.currentTimeMillis();  this.runningState  =  STATE_UNSTARTED;  }  
 + if(this.runningState!= STATE_SUSPENDED) { this.stopTime = System.currentTimeMillis(); } else { this.runningState = STATE_UNSTARTED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_1 replace buggy code at line 118 Diagnostic: 
 -  if(this.splitState!=  STATE_UNSTARTED)  {  stopTime  =  System.currentTimeMillis();  }  else  {  stopTime  =  System.currentTimeMillis();  }  
 + if(this.runningState!= STATE_RUNNING) { this.splitState = STATE_SUSPENDED; } else { stopTime = System.currentTimeMillis(); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_1 replace buggy code at line 118 Diagnostic: 
 -  if(this.stopTime!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  {  stopTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  
 + if(this.runningState!= STATE_RUNNING) { System.currentTimeMillis(); } else { stopTime = System.currentTimeMillis(); this.runningState = STATE_SUSPENDED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_1 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState!=  STATE_RUNNING  ||  this.runningState!=  STATE_SUSPENDED)  {  stopTime  =  System.currentTimeMillis();  }  
 + if(this.runningState!= STATE_SUSPENDED || this.runningState!= STATE_SUSPENDED) { stopTime = System.currentTimeMillis(); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_1 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  {  this.runningState  =  STATE_SUSPENDED;  }  
 + if(this.runningState!= STATE_SUSPENDED) { stopTime = System.currentTimeMillis(); } else { this.runningState = STATE_SUSPENDED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_1 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  {  this.runningState  =  STATE_SUSPENDED;  }  
 + if(this.runningState == STATE_RUNNING || this.runningState!= STATE_SUSPENDED) { stopTime = System.currentTimeMillis(); } else { this.runningState = STATE_SUSPENDED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_1 replace buggy code at line 118 Diagnostic: 
 -  if(this.stopTime!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  {  this.runningState  =  STATE_UNSTARTED;  }  
 + if(this.stopTime!= STATE_RUNNING && this.runningState!= STATE_SUSPENDED) { stopTime = System.currentTimeMillis(); } else { this.runningState = STATE_UNSTARTED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_1 replace buggy code at line 118 Diagnostic: 
 -  if(this.stopTime!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  {  this.runningState  =  STATE_UNSTARTED;  }  
 + if(this.stopTime == STATE_RUNNING || this.runningState!= STATE_SUSPENDED) { stopTime = System.currentTimeMillis(); } else { this.runningState = STATE_UNSTARTED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_1 replace buggy code at line 118 Diagnostic: 
 -  if(this.stopTime!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  {  stopTime  =  System.currentTimeMillis();  this.splitState  =  STATE_SUSPENDED;  }  
 + if(this.runningState!= STATE_RUNNING) { System.currentTimeMillis(); } else { stopTime = System.currentTimeMillis(); this.splitState = STATE_SUSPENDED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_1 replace buggy code at line 118 Diagnostic: 
 -  if(this.stopTime!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  {  int  startTime  =  System.currentTimeMillis();  this.runningState  =  STATE_SUSPENDED;  }  
 + if(this.runningState!= STATE_SUSPENDED) { this.stopTime = System.currentTimeMillis(); } else { this.runningState = STATE_SUSPENDED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_1 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  {  this.runningState  =  STATE_UNSTARTED;  }  
 + if(this.runningState == STATE_RUNNING || this.runningState!= STATE_SUSPENDED) { stopTime = System.currentTimeMillis(); } else { this.runningState = STATE_UNSTARTED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_1 replace buggy code at line 118 Diagnostic: 
 -  if(this.splitState!=  STATE_UNSTARTED)  {  stopTime  =  System.currentTimeMillis();  }  else  {  System.err.println(  "Stopwatch  is  not  running:  "  +  this.splitState);  }  
 + if(this.runningState!= STATE_SUSPENDED) { stopTime = System.currentTimeMillis(); } else { System.err.println( "Stopwatch is not running: " + this.splitState); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_1 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState!=  STATE_RUNNING  ||  this.runningState  ==  STATE_SUSPENDED)  {  stopTime  =  System.currentTimeMillis();  }  
 + if(this.runningState!= STATE_SUSPENDED || this.runningState == STATE_RUNNING) { stopTime = System.currentTimeMillis(); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_1 replace buggy code at line 118 Diagnostic: 
 -  if(this.stopTime!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  
 + if(this.stopTime!= STATE_RUNNING && this.runningState!= STATE_SUSPENDED) { stopTime = System.currentTimeMillis(); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_1 replace buggy code at line 118 Diagnostic: 
 -  if(this.stopTime!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  
 + if(this.stopTime == STATE_RUNNING || this.runningState!= STATE_SUSPENDED) { stopTime = System.currentTimeMillis(); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_1 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  {  System.err.println(  "Stopwatch  is  not  running:  "  +  this.runningState);  }  
 + if(this.runningState!= STATE_SUSPENDED) { stopTime = System.currentTimeMillis(); } else { System.err.println( "Stopwatch is not running: " + this.runningState); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_1 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  {  System.err.println(  "Stopwatch  is  not  running:  "  +  this.runningState);  }  
 + if(this.runningState == STATE_RUNNING) { stopTime = System.currentTimeMillis(); } else { System.err.println( "Stopwatch is not running: " + this.runningState); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_1 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState  ==  STATE_RUNNING  ||  this.runningState!=  STATE_SUSPENDED)  {  stopTime  =  System.currentTimeMillis();  }  else  {  startTime  =  System.currentTimeMillis();  }  
 + if(this.runningState == STATE_STOPPED || this.runningState!= STATE_SUSPENDED) { stopTime = System.currentTimeMillis(); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_1 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState  ==  STATE_RUNNING  ||  this.runningState!=  STATE_SUSPENDED)  {  stopTime  =  System.currentTimeMillis();  }  else  {  startTime  =  System.currentTimeMillis();  }  
 + if(this.runningState == STATE_UNSTARTED || this.runningState!= STATE_SUSPENDED) { stopTime = System.currentTimeMillis(); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_1 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  {  int  startTime  =  System.currentTimeMillis();  endTime  =  System.currentTimeMillis();  }  
 + if(this.runningState!= STATE_SUSPENDED) { stopTime = System.currentTimeMillis(); } else { long endTime = System.currentTimeMillis(); endTime = System.currentTimeMillis(); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_1 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  {  int  startTime  =  System.currentTimeMillis();  this.runningState  =  STATE_UNSTARTED;  }  
 + if(this.runningState!= STATE_SUSPENDED) { stopTime = System.currentTimeMillis(); } else { long splitState = System.currentTimeMillis(); this.runningState = STATE_UNSTARTED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_1 replace buggy code at line 118 Diagnostic: 
 -  if(this.stopTime!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  {  this.splitState  =  STATE_UNSTARTED;  }  
 + if(this.runningState!= STATE_SUSPENDED) { stopTime = System.currentTimeMillis(); } else { this.splitState = STATE_UNSTARTED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_1 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  {  this.runningState  =  STATE_STOPPED;  }  
 + if(this.runningState!= STATE_SUSPENDED || this.runningState!= STATE_SUSPENDED) { stopTime = System.currentTimeMillis(); } else { this.runningState = STATE_STOPPED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_1 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  {  this.runningState  =  STATE_STOPPED;  }  
 + if(this.runningState!= STATE_SUSPENDED) { this.stopTime = System.currentTimeMillis(); } else { this.runningState = STATE_STOPPED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_1 replace buggy code at line 118 Diagnostic: 
 -  if(this.splitState!=  STATE_UNSTARTED)  {  stopTime  =  System.currentTimeMillis();  }  else  {  System.err.println(  "Stopwatch  is  not  running:  "  +  this.splitState);  }  
 + if(this.runningState == STATE_RUNNING) { stopTime = System.currentTimeMillis(); } else { System.err.println( "Stopwatch is not running: " + this.splitState); } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_1 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  {  int  startTime  =  System.currentTimeMillis();  this.runningState  =  STATE_UNSTARTED;  }  
 + if(this.runningState!= STATE_SUSPENDED) { stopTime = System.currentTimeMillis(); } else { long runState = System.currentTimeMillis(); this.runningState = STATE_UNSTARTED; } 
 ----------------------------------------------------------------------------------------------------
Lang55 -  FL is ranked in the 7
iteration_1 replace buggy code at line 118 Diagnostic: 
 -  if(this.runningState!=  STATE_RUNNING)  {  stopTime  =  System.currentTimeMillis();  }  else  {  int  startTime  =  System.currentTimeMillis();  endTime  =  System.currentTimeMillis();  }  
 + if(this.runningState == STATE_RUNNING) { stopTime = System.currentTimeMillis(); } else { long endTime = System.currentTimeMillis(); endTime = System.currentTimeMillis(); } 
 ----------------------------------------------------------------------------------------------------
repair_iteration/Lang55/7/iteration_0/plausible.csv
repair_iteration/Lang55/7/iteration_0/plausible.csv
repair_iteration/Lang55/7/iteration_0/plausible.csv
repair_iteration/Lang55/7/iteration_0/plausible.csv
repair_iteration/Lang55/7/iteration_0/plausible.csv
Compress38 -  FL is ranked in the 1
iteration_2 replace buggy code at line 860 Diagnostic: 
 -  if(linkFlag  ==  EMPTY_TAR_ARCHIVE_ERROR  ||  linkFlag  ==  EMPTY_TAR_ARCHIVE_ENTRIES)  {  return  false;  }  
 + if(linkFlag == MILLIS_PER_SECOND || linkFlag == MILLIS_PER_SECOND) { return false; } 
 ----------------------------------------------------------------------------------------------------
Compress38 -  FL is ranked in the 1
iteration_2 replace buggy code at line 860 Diagnostic: 
 -  if(linkFlag  ==  EMPTY_TAR_ARCHIVE_ERROR  ||  linkFlag  ==  EMPTY_TAR_ARCHIVE_ENTRIES)  {  return  false;  }  
 + if(linkFlag == MAX_NAMELEN || linkFlag == MAX_NAMELEN) { return false; } 
 ----------------------------------------------------------------------------------------------------
Compress38 -  FL is ranked in the 1
iteration_2 replace buggy code at line 860 Diagnostic: 
 -  if(linkFlag  ==  EMPTY_TAR_ARCHIVE_LIST  ||  linkFlag  ==  EMPTY_TAR_ARCHIVE_ENTRIES)  {  return  true;  }  
 + if(linkFlag == LF_DIR || linkFlag == LF_DIR) { return true; } 
 ----------------------------------------------------------------------------------------------------
Compress38 -  FL is ranked in the 1
iteration_2 replace buggy code at line 860 Diagnostic: 
 -  if(linkFlag  ==  EMPTY_TAR_ARCHIVE_LIST  ||  linkFlag  ==  EMPTY_TAR_ARCHIVE_ENTRIES)  {  return  true;  }  
 + if(linkFlag == MILLIS_PER_SECOND || linkFlag == MILLIS_PER_SECOND) { return true; } 
 ----------------------------------------------------------------------------------------------------
Compress38 -  FL is ranked in the 1
iteration_2 replace buggy code at line 860 Diagnostic: 
 -  if(linkFlag  ==  EMPTY_TAR_ARCHIVE_EXTENDS  ||  linkFlag  ==  EMPTY_TAR_ARCHIVE_ENTRIES)  {  return  true;  }  
 + if(linkFlag == MAX_NAMELEN || linkFlag == MAX_NAMELEN) { return true; } 
 ----------------------------------------------------------------------------------------------------
Compress38 -  FL is ranked in the 1
iteration_2 replace buggy code at line 860 Diagnostic: 
 -  return(getName().endsWith(    "/    ")||  getName().endsWith(    "/    "));  return(getName().endsWith(  "./    ")||  getName().endsWith(  "/    "));  
 + return(getName().endsWith( "/  ")|| getName().endsWith( "./  ")|| getName().endsWith( "/  ")); 
 ----------------------------------------------------------------------------------------------------
Compress38 -  FL is ranked in the 1
iteration_2 replace buggy code at line 860 Diagnostic: 
 -  return(getName().endsWith(    "/    ")||  getName().endsWith(    "/    "));  return(getName().endsWith(  "./    ")||  getName().endsWith(  "/    "));  
 + return(getName().endsWith( "./. ")|| getName().endsWith( "./.* ")); 
 ----------------------------------------------------------------------------------------------------
Compress38 -  FL is ranked in the 1
iteration_2 replace buggy code at line 860 Diagnostic: 
 -  if(linkFlag  ==  EMPTY_TAR_ARCHIVE_EXTENDS  ||  linkFlag  ==  EMPTY_TAR_ARCHIVE_SECOND)  {  return  true;  }  
 + if(linkFlag == MILLIS_PER_SECOND || linkFlag == MAX_NAMELEN) { return true; } 
 ----------------------------------------------------------------------------------------------------
Compress38 -  FL is ranked in the 1
iteration_2 replace buggy code at line 860 Diagnostic: 
 -  if(linkFlag  ==  EMPTY_TAR_ARCHIVE_DIR  ||  linkFlag  ==  EMPTY_TAR_ARCHIVE_ENTRIES)  {  return  false;  }  
 + if(linkFlag == LF_DIR || linkFlag == LF_DIR) { return false; } 
 ----------------------------------------------------------------------------------------------------
Compress38 -  FL is ranked in the 1
iteration_2 replace buggy code at line 860 Diagnostic: 
 -  if(getName().endsWith(    "/    "))  {  return  true;  }  if(getName().endsWith(  "/    "))  {  return  true;  }  
 + Thread.currentThread().setContextClassLoader(TarArchiveEntry.class.getClassLoader()); 
 ----------------------------------------------------------------------------------------------------
Compress38 -  FL is ranked in the 1
iteration_2 replace buggy code at line 860 Diagnostic: 
 -  return(getName().startsWith(  "/  ")||  getName().endsWith(  "/  "));  
 + return(getName().startsWith( "./ ")|| getName().endsWith( "./ ")); 
 ----------------------------------------------------------------------------------------------------
Compress38 -  FL is ranked in the 1
iteration_2 replace buggy code at line 860 Diagnostic: 
 -  return(getName().startsWith(  "/  ")||  getName().endsWith(  "/  "));  
 + return(getName().startsWith( "/ ")|| getName().endsWith( "./ ")); 
 ----------------------------------------------------------------------------------------------------
Compress38 -  FL is ranked in the 1
iteration_2 replace buggy code at line 860 Diagnostic: 
 -  return(getName().startsWith(  "/  ")||  getName().endsWith(  "/  "));  
 + return(getName().startsWith( ".zip ")|| getName().endsWith( ".zip ")); 
 ----------------------------------------------------------------------------------------------------
Compress38 -  FL is ranked in the 1
iteration_2 replace buggy code at line 860 Diagnostic: 
 -  return(getName().startsWith(  "/  ")||  getName().endsWith(  "/  "));  
 + return(getName().startsWith( "/ ")|| getName().startsWith( "/ ")); 
 ----------------------------------------------------------------------------------------------------
Compress38 -  FL is ranked in the 1
iteration_2 replace buggy code at line 860 Diagnostic: 
 -  [Delete]  
 + if(!getName().endsWith( "/ ")) { return false; } 
 ----------------------------------------------------------------------------------------------------
Compress38 -  FL is ranked in the 1
iteration_2 replace buggy code at line 860 Diagnostic: 
 -  return(getName().endsWith(  "/  ")||  getName().startsWith(  "/  "));  
 + return(getName().endsWith( "./ ")|| getName().startsWith( "./ ")); 
 ----------------------------------------------------------------------------------------------------
Compress38 -  FL is ranked in the 1
iteration_2 replace buggy code at line 860 Diagnostic: 
 -  return(getName().endsWith(  "/  ")||  getName().startsWith(  "/  "));  
 + return(getName().endsWith( ".js ")|| getName().startsWith( ".js ")); 
 ----------------------------------------------------------------------------------------------------
Compress38 -  FL is ranked in the 1
iteration_2 replace buggy code at line 860 Diagnostic: 
 -  return(getName().endsWith(  "/  ")||  getName().startsWith(  "/  "));  
 + return(getName().endsWith( ".zip ")|| getName().startsWith( ".zip ")); 
 ----------------------------------------------------------------------------------------------------
Compress38 -  FL is ranked in the 1
iteration_2 replace buggy code at line 860 Diagnostic: 
 -  if(linkFlag  ==  EMPTY_TAR_ARCHIVE_LITERAL  ||  linkFlag  ==  EMPTY_TAR_ARCHIVE_LIST)  {  return  true;  }  
 + if(linkFlag == DEFAULT_FILE_MODE || linkFlag == DEFAULT_FILE_MODE) { return true; } 
 ----------------------------------------------------------------------------------------------------
Compress38 -  FL is ranked in the 1
iteration_2 replace buggy code at line 860 Diagnostic: 
 -  if(linkFlag  ==  EMPTY_TAR_ARCHIVE_DIR  ||  linkFlag  ==  EMPTY_TAR_ARCHIVE_ENTRIES)  {  return  false;  }  
 + if(linkFlag == DEFAULT_FILE_MODE || linkFlag == DEFAULT_FILE_MODE) { return false; } 
 ----------------------------------------------------------------------------------------------------
Compress38 -  FL is ranked in the 1
iteration_2 replace buggy code at line 860 Diagnostic: 
 -  if(linkFlag  ==  EMPTY_TAR_ARCHIVE_EXTENDS  ||  linkFlag  ==  EMPTY_TAR_ARCHIVE_EXTENDS)  {  return  true;  }  
 + if(linkFlag == LF_DIR) { return true; } 
 ----------------------------------------------------------------------------------------------------
Compress38 -  FL is ranked in the 1
iteration_2 replace buggy code at line 860 Diagnostic: 
 -  return(getName().endsWith(    "/    ")||  getName().endsWith(    "/    "));  return(getName().endsWith(    "/    ")||  getName().endsWith(  "./    "));  
 + return(getName().endsWith( "/  ")|| getName().endsWith( "./  ")|| getName().endsWith( "./  ")); 
 ----------------------------------------------------------------------------------------------------
Compress38 -  FL is ranked in the 1
iteration_2 replace buggy code at line 860 Diagnostic: 
 -  return(getName().endsWith(    "/    ")||  getName().endsWith(    "/    "));  return(getName().endsWith(    "/    ")||  getName().endsWith(  "./    "));  
 + return(getName().endsWith( "./  ")|| getName().endsWith( "./  ")|| getName().endsWith( "./  ")); 
 ----------------------------------------------------------------------------------------------------
Compress38 -  FL is ranked in the 1
iteration_2 replace buggy code at line 860 Diagnostic: 
 -  return(getName().endsWith(    "/    ")||  getName().endsWith(    "/    "));  return(getName().endsWith(    "/    ")||  getName().endsWith(  "/    "));  
 + return(getName().endsWith( "/  ")|| getName().endsWith( "/  ")|| getName().endsWith( "/  ")); 
 ----------------------------------------------------------------------------------------------------
Compress38 -  FL is ranked in the 1
iteration_2 replace buggy code at line 860 Diagnostic: 
 -  return(getName().endsWith(    "/    ")||  getName().endsWith(    "/    "));  return(getName().endsWith(    "/    ")||  getName().endsWith(  "/    "));  
 + return(getName().endsWith( ".js ")|| getName().endsWith( ".js ")|| getName().endsWith( ".js ")); 
 ----------------------------------------------------------------------------------------------------
Compress38 -  FL is ranked in the 1
iteration_2 replace buggy code at line 860 Diagnostic: 
 -  return(getName().endsWith(  "/  ")||  getName().startsWith(  "/  "));  
 + return(getName().startsWith( "./ ")|| getName().startsWith( "./ ")); 
 ----------------------------------------------------------------------------------------------------
Compress38 -  FL is ranked in the 1
iteration_2 add buggy code at line 860 Diagnostic: 
 -  
 + if(getName().endsWith(    "/    "))    {    return    true;    }    if(getName().endsWith(  ")/    "))  {  return  true;  }  if(getName().endsWith(  "/  ")) { return true; } if(getName().endsWith(  "/  ")) { return true; } if(getName().endsWith(  "/  ")) { return true; } if(getName().endsWith(  ")/  ")) 
 ----------------------------------------------------------------------------------------------------
Compress38 -  FL is ranked in the 1
iteration_2 replace buggy code at line 860 Diagnostic: 
 -  [Delete]  
 + if(getName().endsWith( ".js ")|| getName().endsWith( ".js ")) { return true; } 
 ----------------------------------------------------------------------------------------------------
Compress38 -  FL is ranked in the 1
iteration_2 replace buggy code at line 860 Diagnostic: 
 -  [Delete]  
 + if(getName().endsWith( ".js ")|| getName().endsWith( ".js ")) { return false; } 
 ----------------------------------------------------------------------------------------------------
Compress38 -  FL is ranked in the 1
iteration_2 replace buggy code at line 860 Diagnostic: 
 -  [Delete]  
 + if(getName().endsWith( ".js ")|| getName().endsWith( ".js ")) { throw new IllegalArgumentException( " "); } 
 ----------------------------------------------------------------------------------------------------
Compress38 -  FL is ranked in the 1
iteration_2 replace buggy code at line 860 Diagnostic: 
 -  [Delete]  
 + if(getName().endsWith( ".js ")|| getName().endsWith( ".js ")) { throw new IllegalStateException( " "); } 
 ----------------------------------------------------------------------------------------------------
Compress38 -  FL is ranked in the 1
iteration_2 replace buggy code at line 860 Diagnostic: 
 -  return(getName().endsWith(  "/  ")||  getName().startsWith(  "/  "));  
 + return(getName().endsWith( ".jpg ")|| getName().startsWith( ".jpg ")); 
 ----------------------------------------------------------------------------------------------------
Compress38 -  FL is ranked in the 1
iteration_2 replace buggy code at line 860 Diagnostic: 
 -  return(getName().endsWith(  "/  ")||  getName().startsWith(  "/  "));  
 + return(getName().endsWith( ".java ")|| getName().startsWith( ".java ")); 
 ----------------------------------------------------------------------------------------------------
Compress38 -  FL is ranked in the 1
iteration_2 replace buggy code at line 860 Diagnostic: 
 -  return(getName().endsWith(    "/    ")||  getName().endsWith(    "/    "));  return(getName().endsWith(  "./    ")||  getName().endsWith(  "/    "));  
 + return(getName().endsWith( ".prototype. ")|| getName().endsWith( ".prototype. ")); 
 ----------------------------------------------------------------------------------------------------
Compress38 -  FL is ranked in the 1
iteration_2 replace buggy code at line 860 Diagnostic: 
 -  return(getName().endsWith(  "/  ")||  getName().endsWith(  "./  "));  
 + return(getName().endsWith( ".java ")|| getName().endsWith( "./ ")); 
 ----------------------------------------------------------------------------------------------------
Compress38 -  FL is ranked in the 1
iteration_2 replace buggy code at line 860 Diagnostic: 
 -  return(getName().startsWith(  "/  ")||  getName().endsWith(  "/  "));  
 + return(getName().startsWith( ".js ")|| getName().endsWith( ".js ")); 
 ----------------------------------------------------------------------------------------------------
Compress38 -  FL is ranked in the 1
iteration_2 replace buggy code at line 860 Diagnostic: 
 -  return(getName().startsWith(  "/  ")||  getName().endsWith(  "/  "));  
 + return(getName().startsWith( ".jpg ")|| getName().endsWith( ".jpg ")); 
 ----------------------------------------------------------------------------------------------------
Compress38 -  FL is ranked in the 1
iteration_1 replace buggy code at line 860 Diagnostic: 
 -  return(getName().endsWith(  "/  ")||  getName().endsWith(  "/  "));  
 + return(getName().endsWith( "./ ")|| getName().endsWith( "./ ")); 
 ----------------------------------------------------------------------------------------------------
Compress38 -  FL is ranked in the 1
iteration_1 replace buggy code at line 860 Diagnostic: 
 -  return(getName().endsWith(  "/  ")||  getName().endsWith(  "/  "));  
 + return(getName().endsWith( ".js ")|| getName().endsWith( ".js ")); 
 ----------------------------------------------------------------------------------------------------
Compress38 -  FL is ranked in the 1
iteration_1 replace buggy code at line 860 Diagnostic: 
 -  return(getName().endsWith(  "/  ")||  getName().endsWith(  "/  "));  
 + return(getName().endsWith( ".zip ")|| getName().endsWith( ".zip ")); 
 ----------------------------------------------------------------------------------------------------
Compress38 -  FL is ranked in the 1
iteration_1 replace buggy code at line 860 Diagnostic: 
 -  return(getName().endsWith(  "/  ")||  getName().endsWith(  "/  "));  
 + return(getName().endsWith( ".jpg ")|| getName().endsWith( ".jpg ")); 
 ----------------------------------------------------------------------------------------------------
Compress38 -  FL is ranked in the 1
iteration_1 replace buggy code at line 860 Diagnostic: 
 -  return(getName().endsWith(  "/  ")||  getName().endsWith(  "/  "));  
 + return(getName().endsWith( ".java ")|| getName().endsWith( ".java ")); 
 ----------------------------------------------------------------------------------------------------
repair_iteration/Compress38/1/iteration_0/plausible.csv
repair_iteration/Compress38/1/iteration_0/plausible.csv
repair_iteration/Compress38/1/iteration_0/plausible.csv
Csv5 -  FL is ranked in the 1
iteration_1 add buggy code at line 117 Diagnostic: 
 -  
 +     if(newRecord) { out.append(format.getDelimiter()); } 
 ----------------------------------------------------------------------------------------------------
Csv5 -  FL is ranked in the 1
iteration_1 add buggy code at line 117 Diagnostic: 
 -  
 +     if(newRecord) { out.append( "n "); } 
 ----------------------------------------------------------------------------------------------------
Time4 -  FL is ranked in the 23
iteration_1 replace buggy code at line 464 Diagnostic: 
 -  Partial  newPartial  =  new  Partial(iChronology,  newValues,  newTypes);  
 + Partial newPartial = new Partial(newTypes, newValues); 
 ----------------------------------------------------------------------------------------------------
Time4 -  FL is ranked in the 23
iteration_1 replace buggy code at line 464 Diagnostic: 
 -  Partial  newPartial  =  new  Partial(iChronology,  newValues,  newTypes);  
 + Partial newPartial = new Partial(newTypes, newValues, iChronology); 
 ----------------------------------------------------------------------------------------------------
repair_iteration/Time2/1/iteration_0/plausible.csv
Compress46 -  FL is ranked in the 4
iteration_2 replace buggy code at line 529 Diagnostic: 
 -  final  long  TWO_TO_32  =  0x100000000L  *  2;  
 + final long TWO_TO_32 = 0x100000000L / 2; 
 ----------------------------------------------------------------------------------------------------
Compress46 -  FL is ranked in the 4
iteration_2 replace buggy code at line 529 Diagnostic: 
 -  long  TWO_TO_32  =  0x100000000L  +  2;  
 + long TWO_TO_32 = 0x100000000L / 2; 
 ----------------------------------------------------------------------------------------------------
JacksonCore25 -  FL is ranked in the 32
iteration_2 replace buggy code at line 243 Diagnostic: 
 -  int  count  =  _reader.read(_inputBuffer,  0,  _inputPtr);  
 + int count = _reader.read(_inputBuffer, 0, _inputPtr + 1); 
 ----------------------------------------------------------------------------------------------------
JacksonCore25 -  FL is ranked in the 32
iteration_1 replace buggy code at line 243 Diagnostic: 
 -  int  count  =  _reader.read(_inputBuffer,  0,  bufSize);  
 + int count = _reader.read(_inputBuffer, 0, bufSize + 1); 
 ----------------------------------------------------------------------------------------------------
repair_iteration/JacksonCore25/32/iteration_0/plausible.csv
JacksonCore25 -  FL is ranked in the 33
iteration_2 replace buggy code at line 244 Diagnostic: 
 -  if(count  ==  1)  {  
 + if(count > 1) { 
 ----------------------------------------------------------------------------------------------------
JacksonCore25 -  FL is ranked in the 36
iteration_2 replace buggy code at line 247 Diagnostic: 
 -  return(count  ==  1)?  true  :  false;  
 + return(count == 1)? false : true; 
 ----------------------------------------------------------------------------------------------------
JacksonCore25 -  FL is ranked in the 36
iteration_2 replace buggy code at line 247 Diagnostic: 
 -  return  count!=  0;  
 + return count!= 1; 
 ----------------------------------------------------------------------------------------------------
JacksonCore25 -  FL is ranked in the 8
iteration_1 replace buggy code at line 1956 Diagnostic: 
 -    
 + if(_inputPtr >= _inputEnd) { if(!_tokenIncomplete) { break; } 
 ----------------------------------------------------------------------------------------------------
JacksonCore25 -  FL is ranked in the 34
iteration_2 replace buggy code at line 245 Diagnostic: 
 -  _inputPtr  =(count  >  0)?  0  :  count;  _inputPtr  =(count  >  0)?  0  :  count;  
 + _inputPtr =(count > 1)? 0 : count; 
 ----------------------------------------------------------------------------------------------------
JacksonCore25 -  FL is ranked in the 7
iteration_2 replace buggy code at line 1953 Diagnostic: 
 -  final  int  maxCode  =  _symbols.length  +  1;  
 + final int maxCode = outBuf.length + 1; 
 ----------------------------------------------------------------------------------------------------
JacksonCore25 -  FL is ranked in the 7
iteration_2 replace buggy code at line 1953 Diagnostic: 
 -  final  int  maxCode  =(codes!=  null)?  codes.length  :  0;  final  int  maxCode  =(codes  ==  null)?  codes.length  :  0;  
 + int maxCode =(codes == null)? codes.length : 0; 
 ----------------------------------------------------------------------------------------------------
JacksonCore25 -  FL is ranked in the 7
iteration_2 replace buggy code at line 1953 Diagnostic: 
 -  final  int  maxCode  =  _inputBuffer.length  -  1;  
 + final int maxCode = outBuf.length - 1; 
 ----------------------------------------------------------------------------------------------------
JacksonCore25 -  FL is ranked in the 7
iteration_2 replace buggy code at line 1953 Diagnostic: 
 -  final  int  maxCode  =(codes!=  null)?  codes.length  :  1;  
 + final int maxCode =(codes == null)? codes.length : 1; 
 ----------------------------------------------------------------------------------------------------
JacksonCore25 -  FL is ranked in the 7
iteration_2 replace buggy code at line 1953 Diagnostic: 
 -  final  int  maxCode  =(codes!=  null)?  codes.length  :  1;  
 + final int maxCode =(codes!= null)? 0 : 1; 
 ----------------------------------------------------------------------------------------------------
JacksonCore25 -  FL is ranked in the 7
iteration_2 replace buggy code at line 1953 Diagnostic: 
 -  final  int  maxCode  =  _inputEnd;  
 + final int maxCode = 0; 
 ----------------------------------------------------------------------------------------------------
JacksonCore25 -  FL is ranked in the 7
iteration_2 replace buggy code at line 1953 Diagnostic: 
 -  final  int  maxCode  =(codes  ==  null)?  0  :  codes.length;  
 + final int maxCode =(codes!= null)? 0 : codes.length + 1; 
 ----------------------------------------------------------------------------------------------------
JacksonCore25 -  FL is ranked in the 7
iteration_2 replace buggy code at line 1953 Diagnostic: 
 -  final  int  maxCode  =(codes!=  null)?  codes.length  :  0;  final  int  maxCode  =(codes  ==  null)?  codes.length  :  0;  
 + final int maxCode =(outPtr == 0)? codes.length : 0; 
 ----------------------------------------------------------------------------------------------------
JacksonCore25 -  FL is ranked in the 7
iteration_2 replace buggy code at line 1953 Diagnostic: 
 -  final  int  maxCode  =(codes!=  null)?  codes.length  :  0;  final  int  maxCode  =(codes  ==  null)?  codes.length  :  0;  
 + final int maxCode =(_inputPtr == 0)? codes.length : 0; 
 ----------------------------------------------------------------------------------------------------
JacksonCore25 -  FL is ranked in the 7
iteration_2 replace buggy code at line 1953 Diagnostic: 
 -  final  int  maxCode  =  _symbols.length  -  1;  
 + final int maxCode = codes.length - 1; 
 ----------------------------------------------------------------------------------------------------
JacksonCore25 -  FL is ranked in the 7
iteration_1 replace buggy code at line 1953 Diagnostic: 
 -  final  int  maxCode  =(codes!=  null)?  codes.length  :  0;  
 + final int maxCode =(codes == null)? codes.length : 0; 
 ----------------------------------------------------------------------------------------------------
JacksonCore25 -  FL is ranked in the 7
iteration_1 replace buggy code at line 1953 Diagnostic: 
 -  final  int  maxCode  =(codes!=  null)?  codes.length  :  0;  
 + final int maxCode =(codes!= null)? 0 : codes.length; 
 ----------------------------------------------------------------------------------------------------
JacksonCore25 -  FL is ranked in the 7
iteration_1 replace buggy code at line 1953 Diagnostic: 
 -  final  int  maxCode  =  _inputPtr;  
 + final int maxCode = _inputPtr - startPtr; 
 ----------------------------------------------------------------------------------------------------
JacksonCore25 -  FL is ranked in the 7
iteration_1 replace buggy code at line 1953 Diagnostic: 
 -  final  int  maxCode  =  _inputBuffer.length;  
 + final int maxCode = _inputBuffer.length - startPtr; 
 ----------------------------------------------------------------------------------------------------
JacksonCore25 -  FL is ranked in the 7
iteration_1 replace buggy code at line 1953 Diagnostic: 
 -  final  int  maxCode  =  _inputBuffer.length;  
 + final int maxCode = _inputBuffer[outPtr]; 
 ----------------------------------------------------------------------------------------------------
repair_iteration/JacksonCore25/7/iteration_0/plausible.csv
JacksonCore25 -  FL is ranked in the 10
iteration_2 replace buggy code at line 1961 Diagnostic: 
 -  char  c  =(_inputPtr  <  1)?  _inputBuffer[0]  :  _inputBuffer[0];  
 + char c =(_inputPtr < 1)? _inputBuffer[1] : _inputBuffer[1]; 
 ----------------------------------------------------------------------------------------------------
JacksonCore25 -  FL is ranked in the 10
iteration_2 replace buggy code at line 1961 Diagnostic: 
 -  char  c  =  codes[outPtr];  
 + char c = outBuf[outPtr]; 
 ----------------------------------------------------------------------------------------------------
JacksonCore25 -  FL is ranked in the 10
iteration_2 replace buggy code at line 1961 Diagnostic: 
 -  char  c  =  _inputBuffer[_inputPtr++];  Char  c  =  _inputBuffer[_inputPtr++];  
 + char c = _inputBuffer[_inputPtr++]; c = _inputBuffer[_inputPtr++]; 
 ----------------------------------------------------------------------------------------------------
JacksonCore25 -  FL is ranked in the 10
iteration_1 replace buggy code at line 1961 Diagnostic: 
 -  char  c  =  _inputBuffer[0];  
 + char c = _inputBuffer[1]; 
 ----------------------------------------------------------------------------------------------------
repair_iteration/JacksonCore25/10/iteration_0/plausible.csv
repair_iteration/JacksonCore25/10/iteration_0/plausible.csv
JacksonCore25 -  FL is ranked in the 11
iteration_2 replace buggy code at line 1962 Diagnostic: 
 -  char  i  =(c  >=  '.')?(char)c  :  c;  
 + char i =(c == '.')?(char)c : 0; 
 ----------------------------------------------------------------------------------------------------
JacksonCore25 -  FL is ranked in the 11
iteration_2 replace buggy code at line 1962 Diagnostic: 
 -  char  i  =(c  ==  'n')?  (char)c  :  c;  
 + char i =(c == 'n')? (char)c : 0; 
 ----------------------------------------------------------------------------------------------------
JacksonCore25 -  FL is ranked in the 11
iteration_2 replace buggy code at line 1962 Diagnostic: 
 -  char  i  =(c  ==  'n')?  (char)c  :  _inputBuffer[_inputPtr];  
 + char i =(c == 'n')? (char)c : _inputBuffer[_inputPtr + 1]; 
 ----------------------------------------------------------------------------------------------------
JacksonCore25 -  FL is ranked in the 11
iteration_2 replace buggy code at line 1962 Diagnostic: 
 -  char  i  =  c;  
 + char i = 0; 
 ----------------------------------------------------------------------------------------------------
JacksonCore25 -  FL is ranked in the 11
iteration_1 replace buggy code at line 1962 Diagnostic: 
 -    
 + int i = _textBuffer.getCurrentSegmentSize(); 
 ----------------------------------------------------------------------------------------------------
repair_iteration/JacksonCore25/11/iteration_0/plausible.csv
JacksonCore25 -  FL is ranked in the 13
iteration_2 replace buggy code at line 1964 Diagnostic: 
 -  if  (codes[i]  ==  0)  {  if  (codes[i]  >=  0)  {  
 + if(i < maxCode) { 
 ----------------------------------------------------------------------------------------------------
JacksonCore25 -  FL is ranked in the 3
iteration_2 replace buggy code at line 1807 Diagnostic: 
 -  return  _symbols.findSymbol(_inputBuffer,  start,  ptr);  
 + return _symbols.findSymbol(_inputBuffer, start, hash, ptr); 
 ----------------------------------------------------------------------------------------------------
JacksonCore25 -  FL is ranked in the 3
iteration_1 replace buggy code at line 1807 Diagnostic: 
 -    
 + return _symbols.findSymbol(_inputBuffer, start, ptr - start, hash); 
 ----------------------------------------------------------------------------------------------------
JacksonCore25 -  FL is ranked in the 12
iteration_2 replace buggy code at line 1963 Diagnostic: 
 -  if(i  <  maxCode)  {  for(int  c  =  0;  c  <  codes.length;  ++i)  {  outBuf[outPtr++]  =  codec;  }  
 + if(i < maxCode) { for(int j = 0; j < codes.length; ++j) { outBuf[outPtr++] = c; } 
 ----------------------------------------------------------------------------------------------------
JacksonCore25 -  FL is ranked in the 12
iteration_2 replace buggy code at line 1963 Diagnostic: 
 -  if  (i  <  maxCode  ||  codes[i]  ==  0)  {  if  (i  <  maxCode  ||  codes[i]!=  0)  {  
 + if(i < _inputEnd) { 
 ----------------------------------------------------------------------------------------------------
JacksonCore25 -  FL is ranked in the 12
iteration_2 replace buggy code at line 1963 Diagnostic: 
 -  if  (i  <  maxCode  ||  codes[i]  ==  0)  {  if  (i  <  maxCode  ||  codes[i]!=  0)  {  
 + if(i < _inputPtr) { 
 ----------------------------------------------------------------------------------------------------
JacksonCore25 -  FL is ranked in the 12
iteration_2 replace buggy code at line 1963 Diagnostic: 
 -  if  (i  <  maxCode  ||  codes[i]  ==  0)  {  if  (i  <  maxCode  ||  codes[i]!=  0)  {  
 + if(i < 0 || i < maxCode) { 
 ----------------------------------------------------------------------------------------------------
JacksonCore25 -  FL is ranked in the 12
iteration_1 replace buggy code at line 1963 Diagnostic: 
 -  if  (i  <  maxCode  ||  codes[i]  ==  0)  {  
 + if(i < maxCode && codes[i] == 0) { 
 ----------------------------------------------------------------------------------------------------
JacksonCore25 -  FL is ranked in the 12
iteration_1 replace buggy code at line 1963 Diagnostic: 
 -  if  (i  >=  maxCode)  {  
 + if (i > maxCode) { 
 ----------------------------------------------------------------------------------------------------
JacksonCore25 -  FL is ranked in the 12
iteration_1 replace buggy code at line 1963 Diagnostic: 
 -  if  (i  ==  maxCode)  {  
 + if (i == 0) { 
 ----------------------------------------------------------------------------------------------------
JacksonCore25 -  FL is ranked in the 12
iteration_1 replace buggy code at line 1963 Diagnostic: 
 -  if  (i  <  maxCode  ||  codes[i]!=  0)  {  
 + if (i < maxCode && codes[i]!= 0) { 
 ----------------------------------------------------------------------------------------------------
JacksonCore25 -  FL is ranked in the 12
iteration_1 replace buggy code at line 1963 Diagnostic: 
 -    
 + if(i < maxCode) { if(codes[i]!= 0) { break; } 
 ----------------------------------------------------------------------------------------------------
JacksonCore25 -  FL is ranked in the 12
iteration_1 replace buggy code at line 1963 Diagnostic: 
 -    
 + if(i < maxCode) { if(codes[i] == 0) { break; } 
 ----------------------------------------------------------------------------------------------------
repair_iteration/JacksonCore25/12/iteration_0/plausible.csv
JacksonCore25 -  FL is ranked in the 2
iteration_2 add buggy code at line 1806 Diagnostic: 
 -  
 + _inputPtr    =    ptr-1;    _inputPtr  =  ptr-2;  int _inputPtr = ptr-1; _inputPtr = ptr-2; 
 ----------------------------------------------------------------------------------------------------
JacksonCore25 -  FL is ranked in the 2
iteration_2 replace buggy code at line 1806 Diagnostic: 
 -  _inputPtr  =  ptr-1;  _inputPtr  =  ptr-2;  
 + _inputPtr = ptr-3; 
 ----------------------------------------------------------------------------------------------------
JacksonCore25 -  FL is ranked in the 2
iteration_2 replace buggy code at line 1806 Diagnostic: 
 -  _inputPtr  =  ptr-1;  _inputPtr  =  ptr-2;  
 + _inputPtr = ptr-4; 
 ----------------------------------------------------------------------------------------------------
JacksonCore25 -  FL is ranked in the 2
iteration_2 replace buggy code at line 1806 Diagnostic: 
 -  _inputPtr  +=  i;  
 + _inputPtr -= i; 
 ----------------------------------------------------------------------------------------------------
JacksonCore25 -  FL is ranked in the 2
iteration_2 replace buggy code at line 1806 Diagnostic: 
 -  _inputPtr  +=  ptr;  
 + _inputPtr -= ptr; 
 ----------------------------------------------------------------------------------------------------
JacksonCore25 -  FL is ranked in the 2
iteration_2 add buggy code at line 1806 Diagnostic: 
 -  
 + _inputPtr    =    ptr-1;    _inputPtr  =  ptr-2;  if(ptr < inputLen) { _inputPtr = ptr-1; _inputPtr = ptr-2; } else { return _handleOddName2(start, hash, codes); } 
 ----------------------------------------------------------------------------------------------------
JacksonCore25 -  FL is ranked in the 2
iteration_1 replace buggy code at line 1806 Diagnostic: 
 -  _inputPtr  =  ptr-1;  
 + _inputPtr = start-1; 
 ----------------------------------------------------------------------------------------------------
JacksonCore25 -  FL is ranked in the 2
iteration_1 replace buggy code at line 1806 Diagnostic: 
 -  _inputPtr  =  ptr-1;  
 + _inputPtr = ptr-2; 
 ----------------------------------------------------------------------------------------------------
repair_iteration/JacksonCore25/2/iteration_0/plausible.csv
repair_iteration/JacksonCore25/2/iteration_0/plausible.csv
Math28 -  FL is ranked in the 8
iteration_2 replace buggy code at line 145 Diagnostic: 
 -      minIndex  =  i;  i  =  i;  
 + minIndex = 0; i = 0; 
 ----------------------------------------------------------------------------------------------------
Math28 -  FL is ranked in the 8
iteration_2 replace buggy code at line 145 Diagnostic: 
 -      minIndex  =  i;  minRow  =  row;  minuteIndex  =  i;  minRow  =  row;  
 + minRow = row; 
 ----------------------------------------------------------------------------------------------------
Math28 -  FL is ranked in the 8
iteration_2 add buggy code at line 145 Diagnostic: 
 -  
 + minIndex    =    i    +    1;    i  =  i  +  1;  minIndex = i + 1; i = i + 1; 
 ----------------------------------------------------------------------------------------------------
Math28 -  FL is ranked in the 8
iteration_2 replace buggy code at line 145 Diagnostic: 
 -  minIndex  =  i  +  1;  i  =  i  +  1;  
 + minIndex = row + 1; i = i + 1; 
 ----------------------------------------------------------------------------------------------------
Math28 -  FL is ranked in the 8
iteration_2 replace buggy code at line 145 Diagnostic: 
 -  minIndex  =  i  +  1;  i  =  i  +  1;  
 + minIndex = col + 1; i = i + 1; 
 ----------------------------------------------------------------------------------------------------
Math28 -  FL is ranked in the 8
iteration_2 replace buggy code at line 145 Diagnostic: 
 -  i  =  table.getBasicRow(i).intValue();  
 + i = tableau.getBasicRow(i).intValue(); 
 ----------------------------------------------------------------------------------------------------
Math28 -  FL is ranked in the 8
iteration_2 replace buggy code at line 145 Diagnostic: 
 -  minIndex  =  i;  minRow  =  row  +  1;  
 + minIndex = row; minRow = row + 1; 
 ----------------------------------------------------------------------------------------------------
Math28 -  FL is ranked in the 8
iteration_2 replace buggy code at line 145 Diagnostic: 
 -  minIndex  =  i;  minRow  =  row  +  1;  
 + minIndex = 0; minRow = row + 1; 
 ----------------------------------------------------------------------------------------------------
Math28 -  FL is ranked in the 8
iteration_2 replace buggy code at line 145 Diagnostic: 
 -  i  =  table.getBasicRow(i);  minIndex  =  i  +  1;  
 + i = tableau.getBasicRow(i); minIndex = i + 1; 
 ----------------------------------------------------------------------------------------------------
Math28 -  FL is ranked in the 8
iteration_2 replace buggy code at line 145 Diagnostic: 
 -  minIndex  =  i  +  1;  minRow  =  row;  
 + minIndex = row + 1; minRow = i; 
 ----------------------------------------------------------------------------------------------------
Math28 -  FL is ranked in the 8
iteration_2 replace buggy code at line 145 Diagnostic: 
 -      minIndex  =  i;  minIndex  =  i);  
 + minIndex = 0; minIndex = 0; 
 ----------------------------------------------------------------------------------------------------
Math28 -  FL is ranked in the 8
iteration_2 replace buggy code at line 145 Diagnostic: 
 -  minIndex  =  table.getBasicRow(i);  
 + minIndex = tableau.getBasicRow(i); 
 ----------------------------------------------------------------------------------------------------
Math28 -  FL is ranked in the 8
iteration_2 replace buggy code at line 145 Diagnostic: 
 -      minIndex  =  i;  i  =  i;  
 + minIndex = row; i = i; 
 ----------------------------------------------------------------------------------------------------
Math28 -  FL is ranked in the 8
iteration_2 replace buggy code at line 145 Diagnostic: 
 -      minIndex  =  i;  i  =  i;  
 + minIndex = col; i = i; 
 ----------------------------------------------------------------------------------------------------
Math28 -  FL is ranked in the 8
iteration_2 replace buggy code at line 145 Diagnostic: 
 -  minIndex  =  i  +  1;  minRow  =  row;  
 + minIndex = row + 1; minRow = row; 
 ----------------------------------------------------------------------------------------------------
Math28 -  FL is ranked in the 8
iteration_2 replace buggy code at line 145 Diagnostic: 
 -  minIndex  =  i  +  1;  minIndex  =  i  +  1;  
 + minIndex = i + 3; 
 ----------------------------------------------------------------------------------------------------
Math28 -  FL is ranked in the 8
iteration_2 replace buggy code at line 145 Diagnostic: 
 -      minIndex  =  i;  minRow  =  row;  minIndex  =  i;  minRow  =  row;  
 + minIndex = -1; minRow = row; 
 ----------------------------------------------------------------------------------------------------
Math28 -  FL is ranked in the 8
iteration_1 replace buggy code at line 145 Diagnostic: 
 -  minIndex  =  i  +  1;  
 + minIndex = row + 1; 
 ----------------------------------------------------------------------------------------------------
Math28 -  FL is ranked in the 8
iteration_1 replace buggy code at line 145 Diagnostic: 
 -  minIndex  =  i  +  1;  
 + minIndex = i + 2; 
 ----------------------------------------------------------------------------------------------------
Math28 -  FL is ranked in the 8
iteration_1 replace buggy code at line 145 Diagnostic: 
 -  minIndex  =  i  +  1;  
 + minIndex = col + 1; 
 ----------------------------------------------------------------------------------------------------
Math28 -  FL is ranked in the 8
iteration_1 replace buggy code at line 145 Diagnostic: 
 -    i  =  table.getBasicRow(i);  minIndex  =  i;  
 + i = tableau.getBasicRow(i); minIndex = i; 
 ----------------------------------------------------------------------------------------------------
Math28 -  FL is ranked in the 8
iteration_1 replace buggy code at line 145 Diagnostic: 
 -    i  =  table.getBasicRow(i);  
 + i = tableau.getBasicRow(i); 
 ----------------------------------------------------------------------------------------------------
Math28 -  FL is ranked in the 8
iteration_1 replace buggy code at line 145 Diagnostic: 
 -    row  =  table.getBasicRow(i);  
 + row = tableau.getBasicRow(i); 
 ----------------------------------------------------------------------------------------------------
Math28 -  FL is ranked in the 8
iteration_1 replace buggy code at line 145 Diagnostic: 
 -    minIndex  =  i;  minRow  =  row;  
 + minIndex = col; minRow = row; 
 ----------------------------------------------------------------------------------------------------
Math28 -  FL is ranked in the 8
iteration_1 replace buggy code at line 145 Diagnostic: 
 -    minIndex  =  i;  minRow  =  row;  
 + minIndex = 0; minRow = row; 
 ----------------------------------------------------------------------------------------------------
Math28 -  FL is ranked in the 8
iteration_1 replace buggy code at line 145 Diagnostic: 
 -    minIndex  =  i;  minRow  =  row;  
 + minIndex = row; minRow = i; 
 ----------------------------------------------------------------------------------------------------
Math28 -  FL is ranked in the 8
iteration_1 replace buggy code at line 145 Diagnostic: 
 -    minRow  =  row.getBasicRow(i);  
 + minRow = tableau.getBasicRow(i); 
 ----------------------------------------------------------------------------------------------------
repair_iteration/Math28/8/iteration_0/plausible.csv
repair_iteration/Math28/8/iteration_0/plausible.csv
repair_iteration/Math28/8/iteration_0/plausible.csv
repair_iteration/Math28/8/iteration_0/plausible.csv
repair_iteration/Math28/8/iteration_0/plausible.csv
Math28 -  FL is ranked in the 9
iteration_1 add buggy code at line 146 Diagnostic: 
 -  
 + minRow  =  col;  minIndex = col; 
 ----------------------------------------------------------------------------------------------------
Math28 -  FL is ranked in the 7
iteration_2 replace buggy code at line 144 Diagnostic: 
 -  if  (i  <  minIndex  ||  col  <  minRatioPositions.size())  {  if  (i  <  minIndex  ||  col  >=  minRatioPositions.size())  {  
 + if (i < minIndex || col >= minRatioPositions.size()) { 
 ----------------------------------------------------------------------------------------------------
Math28 -  FL is ranked in the 7
iteration_2 replace buggy code at line 144 Diagnostic: 
 -  if  (minIndex  <  minRow)  {  if  (minIndex  >=  minRow)  {  
 + if (minIndex >= 0) { 
 ----------------------------------------------------------------------------------------------------
Math28 -  FL is ranked in the 7
iteration_2 replace buggy code at line 144 Diagnostic: 
 -  if  (i  <  minIndex  ||  col  <  0)  {  
 + if (i < minIndex || col > 0) { 
 ----------------------------------------------------------------------------------------------------
Math28 -  FL is ranked in the 7
iteration_2 replace buggy code at line 144 Diagnostic: 
 -  if  (i  <  minIndex  ||  col  <  minRatio)  {  if  (i  <  minIndex  ||  col  >=  minRatio)  {  
 + if (i < minRatio || col > minRatio) { 
 ----------------------------------------------------------------------------------------------------
Math28 -  FL is ranked in the 7
iteration_2 replace buggy code at line 144 Diagnostic: 
 -  if  (i  >  maxUlps)  {  
 + if (minIndex > maxUlps) { 
 ----------------------------------------------------------------------------------------------------
Math28 -  FL is ranked in the 7
iteration_2 replace buggy code at line 144 Diagnostic: 
 -  if  (i  <  minIndex  ||  col  <  minRatio)  {  if  (i  <  minIndex  ||  col  >=  minRatio)  {  
 + if (i < minIndex || col >= DEFAULT_EPSILON) { 
 ----------------------------------------------------------------------------------------------------
Math28 -  FL is ranked in the 7
iteration_2 replace buggy code at line 144 Diagnostic: 
 -  if  (minIndex  <  minRow  ||  col  >  minRatio)  {  
 + if (minIndex < 0 || col > 0) { 
 ----------------------------------------------------------------------------------------------------
Math28 -  FL is ranked in the 7
iteration_1 replace buggy code at line 144 Diagnostic: 
 -  if  (i  >  minIndex)  {  
 + if (i > 0) { 
 ----------------------------------------------------------------------------------------------------
Math28 -  FL is ranked in the 7
iteration_1 replace buggy code at line 144 Diagnostic: 
 -  if  (i  <  minIndex  ||  col  <  minRatio)  {  
 + if (i < minIndex || col > minRatio) { 
 ----------------------------------------------------------------------------------------------------
Math28 -  FL is ranked in the 7
iteration_1 replace buggy code at line 144 Diagnostic: 
 -  if  (i  <  minIndex  ||  col  <  minRatio)  {  
 + if (i < minIndex || col > minRatioPositions.size()) { 
 ----------------------------------------------------------------------------------------------------
Math28 -  FL is ranked in the 7
iteration_1 replace buggy code at line 144 Diagnostic: 
 -  if  (i  <  minIndex  ||  col  <  minRatio)  {  
 + if (i < minIndex || col > maxUlps) { 
 ----------------------------------------------------------------------------------------------------
Math28 -  FL is ranked in the 7
iteration_1 replace buggy code at line 144 Diagnostic: 
 -  if  (i  <  minIndex  ||  col  <  minRatio)  {  
 + if (i < minIndex || col >= col) { 
 ----------------------------------------------------------------------------------------------------
Math28 -  FL is ranked in the 6
iteration_2 replace buggy code at line 143 Diagnostic: 
 -  if(i  ==  tableau.getBasicRow(i))  {  if(i  ==  Table.getBasicRow(i))  {  
 + if(i < minIndex) { 
 ----------------------------------------------------------------------------------------------------
Math28 -  FL is ranked in the 1
iteration_2 replace buggy code at line 138 Diagnostic: 
 -  Integer  minRow  =  0;  Integer  minRow  =(int)Math.ceil(col);  
 + Integer minRow =(int)Math.ceil(col); 
 ----------------------------------------------------------------------------------------------------
Math28 -  FL is ranked in the 1
iteration_2 replace buggy code at line 138 Diagnostic: 
 -  Integer  minRow  =  this.minUlps  -  1;  
 + Integer minRow = col - 1; 
 ----------------------------------------------------------------------------------------------------
Math28 -  FL is ranked in the 1
iteration_2 replace buggy code at line 138 Diagnostic: 
 -  Integer  minRow  =  0;  Integer  minRow  =(int)Math.rint(col);  
 + Integer minRow =(int)Math.rint(col - 1); 
 ----------------------------------------------------------------------------------------------------
Math28 -  FL is ranked in the 1
iteration_2 replace buggy code at line 138 Diagnostic: 
 -  Integer  minRow  =  0;  Integer  minRow  =(int)Math.floor(col);  
 + Integer minRow =(int)Math.floor(col); 
 ----------------------------------------------------------------------------------------------------
Math28 -  FL is ranked in the 1
iteration_2 replace buggy code at line 138 Diagnostic: 
 -  Integer  minRow  =  0;  Integer  minRow  =(int)Math.floor(col);  
 + Integer minRow =(int)Math.floor(col - 1); 
 ----------------------------------------------------------------------------------------------------
Math28 -  FL is ranked in the 1
iteration_1 replace buggy code at line 138 Diagnostic: 
 -  Integer  minRow  =  0;  
 + Integer minRow = 2; 
 ----------------------------------------------------------------------------------------------------
Math28 -  FL is ranked in the 1
iteration_1 replace buggy code at line 138 Diagnostic: 
 -  Integer  minRow  =  0;  
 + Integer minRow =(int)Math.rint(col); 
 ----------------------------------------------------------------------------------------------------
repair_iteration/Math28/1/iteration_0/plausible.csv
Chart20 -  FL is ranked in the 1
iteration_1 replace buggy code at line 95 Diagnostic: 
 -  super(paint,  stroke,  outlineStroke,  alpha);  
 + super(paint, stroke, outlinePaint, outlineStroke, alpha); 
 ----------------------------------------------------------------------------------------------------
Cli11 -  FL is ranked in the 1
iteration_1 replace buggy code at line 634 Diagnostic: 
 -  buff.append(  "  <    ").append(option.getArgName()).append(  ">n  ");  
 + buff.append( " <  ").append(option.getArgName()).append( "> ", option.getLongOpt()); 
 ----------------------------------------------------------------------------------------------------
Cli11 -  FL is ranked in the 1
iteration_1 replace buggy code at line 634 Diagnostic: 
 -  buff.append(  "  <    ").append(option.getArgName()).append(  ">n  ");  
 + buff.append( " <  ").append(option.getArgName()).append( "> ", option.getOpt()); 
 ----------------------------------------------------------------------------------------------------
Cli11 -  FL is ranked in the 1
iteration_1 replace buggy code at line 634 Diagnostic: 
 -    if(option.hasArg())  {  buff.append(  "  <    ").append(option.getArgName()).append(  ">  ");  }  
 + bucket.append( " <  ").append(option.getArgName()).append( "> "); 
 ----------------------------------------------------------------------------------------------------
Cli11 -  FL is ranked in the 1
iteration_1 replace buggy code at line 634 Diagnostic: 
 -    if(option.hasArg())  {  buff.append(  "  <    ").append(option.getArgName()).append(  ">  ");  }  
 + buff.append( " <  ").append(option.getOpt()).append( "> "); 
 ----------------------------------------------------------------------------------------------------
Cli11 -  FL is ranked in the 1
iteration_1 replace buggy code at line 634 Diagnostic: 
 -    if(option.hasArg())  {  buff.append(  "  <    ").append(option.getArgName()).append(  ">  ");  }  
 + buff.append( " <  ").append(option.getArgName()).append('> "); 
 ----------------------------------------------------------------------------------------------------
Cli11 -  FL is ranked in the 1
iteration_1 replace buggy code at line 634 Diagnostic: 
 -  append(  "  <    ").append(option.getArgName()).append(  ">  ");  
 + append( " <  ").append(option.getArgName()).append( "> ", option.getLongOpt()); 
 ----------------------------------------------------------------------------------------------------
Cli11 -  FL is ranked in the 1
iteration_1 replace buggy code at line 634 Diagnostic: 
 -  append(  "  <    ").append(option.getArgName()).append(  ">  ");  
 + append( " <  ").append(option.getArgName()).append( "> ", option.getOpt()); 
 ----------------------------------------------------------------------------------------------------
Cli11 -  FL is ranked in the 1
iteration_1 replace buggy code at line 634 Diagnostic: 
 -  append(  "  <    ").append(option.getArgName()).append(  ">  ");  
 + append( " <  ").append(option.getArgName()), buff.append( "> "); 
 ----------------------------------------------------------------------------------------------------
Cli11 -  FL is ranked in the 1
iteration_1 replace buggy code at line 634 Diagnostic: 
 -    if(option.hasArgName())  {  buff.append(  "  <    ").append(option.getArgName()).append(  ">  ");  }  
 + appendOption( " <  ").append(option.getArgName()).append( "> "); 
 ----------------------------------------------------------------------------------------------------
Cli11 -  FL is ranked in the 1
iteration_1 replace buggy code at line 634 Diagnostic: 
 -  buff.append(  "  <  /  ").append(option.getArgName()).append(  ">  ");  
 + if(!required) { buff.append( " < / ").append(option.getArgName()).append( "> "); } 
 ----------------------------------------------------------------------------------------------------
Cli11 -  FL is ranked in the 1
iteration_1 replace buggy code at line 634 Diagnostic: 
 -  buff.append(  "  <  /  ").append(option.getArgName()).append(  ">  ");  
 + buff.append( " < / ").append(option.getArgName()).append( "> ", option.getLongOpt()); 
 ----------------------------------------------------------------------------------------------------
Cli11 -  FL is ranked in the 1
iteration_1 add buggy code at line 634 Diagnostic: 
 -  
 +     if(option.hasArgName())  {  buff.append(  "  <    ").append(option.getArgName()).append(  ">  ");  }  if(option.hasArgName()) { buff.append( " <  ").append(option.getArgName()).append( "> "); } 
 ----------------------------------------------------------------------------------------------------
Cli11 -  FL is ranked in the 1
iteration_1 add buggy code at line 634 Diagnostic: 
 -  
 +     if(option.hasArgName())  {  buff.append(  "  <    ").append(option.getArgName()).append(  ">  ");  }  if(option.hasArgName()) { buff.append( " <  ").append(option.getArgName()).append('> "); } 
 ----------------------------------------------------------------------------------------------------
Cli11 -  FL is ranked in the 1
iteration_1 add buggy code at line 634 Diagnostic: 
 -  
 + buff.append(  ">  ").append(option.getArgName()).append(  "  <    ");  buff.append( ">  ").append(option.getArgName()).append(  " <  "); 
 ----------------------------------------------------------------------------------------------------
Cli11 -  FL is ranked in the 1
iteration_1 add buggy code at line 634 Diagnostic: 
 -  
 + buff.append(  ">  ").append(option.getArgName()).append(  "  <    ");  if(!required) { buff.append( ">  ").append(option.getArgName()).append( " <  "); } 
 ----------------------------------------------------------------------------------------------------
repair_iteration/Cli11/1/iteration_0/plausible.csv
repair_iteration/Cli11/1/iteration_0/plausible.csv
Chart5 -  FL is ranked in the 3
iteration_1 replace buggy code at line 563 Diagnostic: 
 -  if(this.allowDuplicateXValues)  {  
 + if(!this.allowDuplicateXValues) { 
 ----------------------------------------------------------------------------------------------------
Chart5 -  FL is ranked in the 16
iteration_1 replace buggy code at line 155 Diagnostic: 
 -  this.autoSort  =  autoSort?  true  :  false;  
 + this.autoSort = autoSort? false : false; 
 ----------------------------------------------------------------------------------------------------
repair_iteration/Chart5/16/iteration_0/plausible.csv
Chart5 -  FL is ranked in the 2
iteration_2 replace buggy code at line 564 Diagnostic: 
 -      this.data.add(new  XYDataItem(x,  y));  this.data.add(new  XYDataItem(x,  y));  
 + if(this.autoSort) { this.data.add(new XYDataItem(x, y)); } else { this.data.add(new XYDataItem(x, y)); } 
 ----------------------------------------------------------------------------------------------------
repair_iteration/Chart11/4/iteration_0/plausible.csv
repair_iteration/Chart11/5/iteration_0/plausible.csv
Gson5 -  FL is ranked in the 18
iteration_2 replace buggy code at line 237 Diagnostic: 
 -  if(clean.equals(timezoneId))  {  
 + if(act.equals(timezoneId)) { 
 ----------------------------------------------------------------------------------------------------
Gson5 -  FL is ranked in the 18
iteration_2 replace buggy code at line 237 Diagnostic: 
 -  if(cleaned!=  null  ||  cleaned.equals(timezoneIndicator))  {  
 + if(cleaned!= null && cleaned.equals(timezoneIndicator)) { 
 ----------------------------------------------------------------------------------------------------
Gson5 -  FL is ranked in the 18
iteration_2 replace buggy code at line 237 Diagnostic: 
 -  if(cleaned!=  null  ||  cleaned.equals(timezoneIndicator))  {  
 + if(cleaned == null && cleaned.equals(timezoneIndicator)) { 
 ----------------------------------------------------------------------------------------------------
Gson5 -  FL is ranked in the 18
iteration_2 replace buggy code at line 237 Diagnostic: 
 -  if(cleaned!=  null  ||  cleaned.equals(timezoneIndicator))  {  
 + if(cleaned == null || cleaned.equals(timezoneIndicator)) { 
 ----------------------------------------------------------------------------------------------------
Gson5 -  FL is ranked in the 18
iteration_2 replace buggy code at line 237 Diagnostic: 
 -  if(cleaned!=  null  ||  cleaned.length()  ==  0)  {  
 + if(cleaned == null || cleaned.length() == 0) { 
 ----------------------------------------------------------------------------------------------------
Gson5 -  FL is ranked in the 18
iteration_2 replace buggy code at line 237 Diagnostic: 
 -  if(cleaned!=  null  ||  cleaned.length()  ==  0)  {  
 + if(cleaned!= null && cleaned.length() == 0) { 
 ----------------------------------------------------------------------------------------------------
Gson5 -  FL is ranked in the 18
iteration_2 replace buggy code at line 237 Diagnostic: 
 -  if  (!cleaned.equals(timezone))  {  if  (!cleaned.equals(timezone))  <  throw  new  IndexOutOfBoundsException(  "Mismatching  time  zone  indicator:    "+timezoneId+    "  given,  resolves  to    "  +timezone.getID());  }  
 + if(cleaned == null) { if (!cleaned.equals(timezone)) { throw new IndexOutOfBoundsException( "Mismatching time zone indicator: "+timezoneId+ " given, resolves to " +timezone.getID()); } 
 ----------------------------------------------------------------------------------------------------
Gson5 -  FL is ranked in the 18
iteration_2 replace buggy code at line 237 Diagnostic: 
 -  if(clean.equals(timezoneIndicator))  {  
 + if(act.equals(timezoneIndicator)) { 
 ----------------------------------------------------------------------------------------------------
Gson5 -  FL is ranked in the 18
iteration_2 replace buggy code at line 237 Diagnostic: 
 -  if(cleane.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {  
 + if(cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator)) { 
 ----------------------------------------------------------------------------------------------------
Gson5 -  FL is ranked in the 18
iteration_2 replace buggy code at line 237 Diagnostic: 
 -  if(cleane.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {  
 + if(timezone.equals(timezoneId)&&!cleaned.equals(timezoneIndicator)) { 
 ----------------------------------------------------------------------------------------------------
Gson5 -  FL is ranked in the 18
iteration_2 replace buggy code at line 237 Diagnostic: 
 -  if(cleaned!=  null  ||  cleaned.equals(timezoneId))  {  
 + if(cleaned == null && cleaned.equals(timezoneId)) { 
 ----------------------------------------------------------------------------------------------------
Gson5 -  FL is ranked in the 18
iteration_2 replace buggy code at line 237 Diagnostic: 
 -  if(cleaned!=  null  ||  cleaned.equals(timezoneId))  {  
 + if(cleaned == null || cleaned.equals(timezoneId)) { 
 ----------------------------------------------------------------------------------------------------
Gson5 -  FL is ranked in the 18
iteration_2 replace buggy code at line 237 Diagnostic: 
 -  if(cleaned!=  null  ||!cleaned.equals(timezoneIndicator))  {  
 + if(cleaned == null &&!cleaned.equals(timezoneIndicator)) { 
 ----------------------------------------------------------------------------------------------------
Gson5 -  FL is ranked in the 18
iteration_2 replace buggy code at line 237 Diagnostic: 
 -  if(cleaned!=  null  ||!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {  
 + if(cleaned == null &&!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator)) { 
 ----------------------------------------------------------------------------------------------------
Gson5 -  FL is ranked in the 18
iteration_2 replace buggy code at line 237 Diagnostic: 
 -  if(cleaned!=  null  ||!cleaned.equals(timezone))  {  
 + if(cleaned == null &&!cleaned.equals(timezone)) { 
 ----------------------------------------------------------------------------------------------------
Gson5 -  FL is ranked in the 18
iteration_2 replace buggy code at line 237 Diagnostic: 
 -  if(clean.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {  
 + if(act.equals(timezoneId)&&!cleaned.equals(timezoneIndicator)) { 
 ----------------------------------------------------------------------------------------------------
Gson5 -  FL is ranked in the 18
iteration_2 replace buggy code at line 237 Diagnostic: 
 -  if(clean.equals(timezone))  {  
 + if(act.equals(timezone)) { 
 ----------------------------------------------------------------------------------------------------
Gson5 -  FL is ranked in the 18
iteration_2 replace buggy code at line 237 Diagnostic: 
 -  if(clean.equals(timezone))  {  
 + if(timezoneId.equals(timezone)) { 
 ----------------------------------------------------------------------------------------------------
Gson5 -  FL is ranked in the 18
iteration_2 replace buggy code at line 237 Diagnostic: 
 -  if(clean  ==  null)  {  
 + if(timezoneId == null) { 
 ----------------------------------------------------------------------------------------------------
Gson5 -  FL is ranked in the 18
iteration_2 replace buggy code at line 237 Diagnostic: 
 -  if(clean  ==  null  &&!cleaned.equals(timezoneId))  {  
 + if(cleaned == null &&!act.equals(timezoneId)) { 
 ----------------------------------------------------------------------------------------------------
Gson5 -  FL is ranked in the 18
iteration_1 replace buggy code at line 237 Diagnostic: 
 -  if(cleaned!=  null  ||!cleaned.equals(timezoneId))  {  
 + if(cleaned == null &&!cleaned.equals(timezoneId)) { 
 ----------------------------------------------------------------------------------------------------
Gson5 -  FL is ranked in the 18
iteration_1 replace buggy code at line 237 Diagnostic: 
 -  if(cleaned!=  null)  {  
 + if(cleaned == null) { 
 ----------------------------------------------------------------------------------------------------
Gson5 -  FL is ranked in the 18
iteration_1 replace buggy code at line 237 Diagnostic: 
 -  if(cleaned!=  null)  {  
 + if(cleaned!= null && cleaned.equals(timezoneId)) { 
 ----------------------------------------------------------------------------------------------------
Gson5 -  FL is ranked in the 19
iteration_2 replace buggy code at line 238 Diagnostic: 
 -  throw  new  IndexOutOfBoundsException(    "Mismatching  time  zone  indicator:    "+timezoneId+    "  given,  resolves  to    "  +cleaned);  Throwable  cause  =  new  IndexOutOfBoundsException(  "Mismatching  time  zone  indicator:    "+timezoneId+    "  given,  resolves  to    "  +cleaned);  
 + Throwable cause = new IndexOutOfBoundsException( "Mismatching time zone indicator: "+timezoneId+ " given, resolves to " +cleaned); 
 ----------------------------------------------------------------------------------------------------
Gson5 -  FL is ranked in the 19
iteration_2 replace buggy code at line 238 Diagnostic: 
 -  throw  new  IndexOutOfBoundsException(    "Mismatching  time  zone  indicator:    "+timezoneId+    "  given,  resolves  to    "  +cleaned);  Throwable  cause  =  new  IndexOutOfBoundsException(  "Mismatching  time  zone  indicator:    "+timezoneId+    "  given,  resolves  to    "  +cleaned);  
 + Throwable cause = new IndexOutOfBoundsException( "Mismatching time zone indicator: "+timezoneId+ ", given, resolves to " +cleaned); 
 ----------------------------------------------------------------------------------------------------
Gson5 -  FL is ranked in the 19
iteration_2 replace buggy code at line 238 Diagnostic: 
 -  throw  new  IndexOutOfBoundsException(    "Mismatching  time  zone  indicator:    "+timezoneId+    "  given,  resolves  to    "  +cleaned);  JsonSyntaxException  e  =  new  JsonSyntaxException(  "Mismatching  time  zone  indicator:    "+timezoneId+    "  given,  resolves  to    "  +cleaned);  
 + Throwable msg = new IndexOutOfBoundsException( "Mismatching time zone indicator: "+timezoneId+ " given, resolves to " +cleaned); 
 ----------------------------------------------------------------------------------------------------
Gson5 -  FL is ranked in the 19
iteration_2 replace buggy code at line 238 Diagnostic: 
 -  throw  new  IndexOutOfBoundsException(    "Mismatching  time  zone  indicator:    "+timezoneId+    "  given,  resolves  to    "  +cleaned.toString());  Throwable  cause  =  new  IndexOutOfBoundsException(  "Mismatching  time  zone  indicator:    "+timezoneId+    "  given,  resolves  to    "  +cleaned.toString());  
 + Throwable cause = new IndexOutOfBoundsException( "Mismatching time zone indicator: "+timezoneId+ " given, resolves to " +cleaned.toString()); 
 ----------------------------------------------------------------------------------------------------
Gson5 -  FL is ranked in the 19
iteration_2 replace buggy code at line 238 Diagnostic: 
 -  throw  new  IndexOutOfBoundsException(    "Mismatching  time  zone  indicator:    "+timezoneId+    "  given,  resolves  to    "  +cleaned.toString());  Throwable  cause  =  new  IndexOutOfBoundsException(  "Mismatching  time  zone  indicator:    "+timezoneId+    "  given,  resolves  to    "  +cleaned.toString());  
 + Throwable cause = new IndexOutOfBoundsException( "Mismatching time zone indicator: "+timezoneId+ ", given, resolves to " +cleaned.toString()); 
 ----------------------------------------------------------------------------------------------------
Gson5 -  FL is ranked in the 19
iteration_2 replace buggy code at line 238 Diagnostic: 
 -  throw  new  IndexOutOfBoundsException(    "Mismatching  time  zone  indicator:    "+timezoneId+    "  given,  resolves  to    "  +cleaned.toString());  Throwable  cause  =  new  IndexOutOfBoundsException(  "Mismatching  time  zone  indicator:    "+timezoneId+    "  given,  resolves  to    "  +cleaned.toString());  
 + Throwable reason = new IndexOutOfBoundsException( "Mismatching time zone indicator: "+timezoneId+ " given, resolves to " +cleaned.toString()); 
 ----------------------------------------------------------------------------------------------------
Gson5 -  FL is ranked in the 19
iteration_2 replace buggy code at line 238 Diagnostic: 
 -  throw  new  IndexOutOfBoundsException(    "Mismatching  time  zone  indicator:    "+timezoneId+    "  given,  resolved  to    "  +cleaned);  Throwable  cause  =  new  IndexOutOfBoundsException(  "Mismatching  time  zone  indicator:    "+timezoneId+    "  given,  resolved  to    "  +cleaned);  
 + Throwable cause = new IndexOutOfBoundsException( "Mismatching time zone indicator: "+timezoneId+ " given, resolved to " +cleaned); 
 ----------------------------------------------------------------------------------------------------
Gson5 -  FL is ranked in the 19
iteration_2 replace buggy code at line 238 Diagnostic: 
 -  throw  new  IndexOutOfBoundsException(    "Mismatching  time  zone  indicator:    "+timezoneId+    "  given,  resolved  to    "  +cleaned);  Throwable  cause  =  new  IndexOutOfBoundsException(  "Mismatching  time  zone  indicator:    "+timezoneId+    "  given,  resolved  to    "  +cleaned);  
 + Throwable cause = new IndexOutOfBoundsException( "Mismatching time zone indicator: "+timezoneId+ ", given, resolved to " +cleaned); 
 ----------------------------------------------------------------------------------------------------
Gson5 -  FL is ranked in the 19
iteration_2 replace buggy code at line 238 Diagnostic: 
 -  throw  new  IndexOutOfBoundsException(    "Mismatching  time  zone  indicator:    "+timezoneId+    "  given,  resolves  to    "  +cleaned.toString());  JsonSyntaxException  e  =  new  JsonSyntaxException(  "Mismatching  time  zone  indicator:    "+timezoneId+    "  given,  resolves  to    "  +cleaned.toString());  
 + Throwable msg = new IndexOutOfBoundsException( "Mismatching time zone indicator: "+timezoneId+ " given, resolves to " +cleaned.toString()); 
 ----------------------------------------------------------------------------------------------------
Gson5 -  FL is ranked in the 19
iteration_2 replace buggy code at line 238 Diagnostic: 
 -  throw  new  IndexOutOfBoundsException(    "Mismatching  time  zone  indicator:    "+timezone.getID()  +    "  given,  resolves  to    "  +timezone.getID());  Throwable  cause  =  new  IndexOutOfBoundsException(  "Mismatching  time  zone  indicator:    "+timezone.getID()  +    "  given,  resolves  to    "  +timezone.getID());  
 + Throwable cause = new IndexOutOfBoundsException( "Mismatching time zone indicator: "+timezone.getID() + " given, resolves to " +timezone.getID()); 
 ----------------------------------------------------------------------------------------------------
Gson5 -  FL is ranked in the 19
iteration_2 replace buggy code at line 238 Diagnostic: 
 -  throw  new  IndexOutOfBoundsException(    "Mismatching  time  zone  indicator:    "+timezone.getID()  +    "  given,  resolves  to    "  +timezone.getID());  Throwable  cause  =  new  IndexOutOfBoundsException(  "Mismatching  time  zone  indicator:    "+timezone.getID()  +    "  given,  resolves  to    "  +timezone.getID());  
 + Throwable cause = new IndexOutOfBoundsException( "Mismatching time zone indicator: "+timezone.getID() + ", given, resolves to " +timezone.getID()); 
 ----------------------------------------------------------------------------------------------------
Gson5 -  FL is ranked in the 19
iteration_2 replace buggy code at line 238 Diagnostic: 
 -  throw  new  IndexOutOfBoundsException(    "Mismatching  time  zone  indicator:    "+timezone.getID()  +    "  given,  resolves  to    "  +timezone.getID());  Throwable  cause  =  new  IndexOutOfBoundsException(  "Mismatching  time  zone  indicator:    "+timezone.getID()  +    "  given,  resolves  to    "  +timezone.getID());  
 + Throwable reason = new IndexOutOfBoundsException( "Mismatching time zone indicator: "+timezone.getID() + " given, resolves to " +timezone.getID()); 
 ----------------------------------------------------------------------------------------------------
Gson5 -  FL is ranked in the 19
iteration_2 replace buggy code at line 238 Diagnostic: 
 -  throw  new  IndexOutOfBoundsException(    "Mismatching  time  zone  indicator:    "+timezoneId+    "  given,  resolved  to    "  +cleaned);  JsonSyntaxException  e  =  new  JsonSyntaxException(  "Mismatching  time  zone  indicator:    "+timezoneId+    "  given,  resolved  to    "  +cleaned);  
 + Throwable msg = new IndexOutOfBoundsException( "Mismatching time zone indicator: "+timezoneId+ " given, resolved to " +cleaned); 
 ----------------------------------------------------------------------------------------------------
repair_iteration/Gson5/19/iteration_0/plausible.csv
Gson5 -  FL is ranked in the 16
iteration_2 replace buggy code at line 230 Diagnostic: 
 -  if(act!=  null)  {  if(action!=  null)  {  
 + if(timezoneId == null) { 
 ----------------------------------------------------------------------------------------------------
Gson5 -  FL is ranked in the 16
iteration_2 replace buggy code at line 230 Diagnostic: 
 -  if(act!=  null)  {  if(action!=  null)  {  
 + if(timezoneOffset == timezone.getID()) { 
 ----------------------------------------------------------------------------------------------------
Gson5 -  FL is ranked in the 16
iteration_2 replace buggy code at line 230 Diagnostic: 
 -  if(act!=  null  &&  timezoneId!=  UTC_ID)  {  
 + if(act == null && timezoneId!= UTC_ID) { 
 ----------------------------------------------------------------------------------------------------
Gson5 -  FL is ranked in the 16
iteration_2 replace buggy code at line 230 Diagnostic: 
 -  if(act!=  null  &&  timezoneId!=  UTC_ID)  {  
 + if(act!= null && timezoneId == UTC_ID) { 
 ----------------------------------------------------------------------------------------------------
Gson5 -  FL is ranked in the 16
iteration_2 replace buggy code at line 230 Diagnostic: 
 -  if(!uTC_ID.equals(timezoneId))  {  
 + if(!timezoneId.equals(timezoneId)) { 
 ----------------------------------------------------------------------------------------------------
Gson5 -  FL is ranked in the 16
iteration_2 replace buggy code at line 230 Diagnostic: 
 -  if(!output.equals(timezoneId)&&!act.equals(timezoneId))  {  
 + if(!timezoneId.equals(timezoneId)&&!act.equals(timezoneId)) { 
 ----------------------------------------------------------------------------------------------------
Gson5 -  FL is ranked in the 16
iteration_2 replace buggy code at line 230 Diagnostic: 
 -  if(act!=  null)  {  if(act  ==  null)  {  
 + if(timezoneOffset == null) { 
 ----------------------------------------------------------------------------------------------------
Gson5 -  FL is ranked in the 16
iteration_2 replace buggy code at line 230 Diagnostic: 
 -  if(act!=  null  &&  hasT)  {  
 + if(act == null && hasT) { 
 ----------------------------------------------------------------------------------------------------
Gson5 -  FL is ranked in the 16
iteration_2 replace buggy code at line 230 Diagnostic: 
 -  if(act!=  null  ||!hasT)  {  
 + if(act == null ||!hasT) { 
 ----------------------------------------------------------------------------------------------------
Gson5 -  FL is ranked in the 16
iteration_2 replace buggy code at line 230 Diagnostic: 
 -  if(act!=  null  ||!hasT)  {  
 + if(act == null &&!hasT) { 
 ----------------------------------------------------------------------------------------------------
Gson5 -  FL is ranked in the 16
iteration_2 replace buggy code at line 230 Diagnostic: 
 -  if(act!=  null  ||!act.equals(timezone))  {  
 + if(act == null &&!act.equals(timezone)) { 
 ----------------------------------------------------------------------------------------------------
Gson5 -  FL is ranked in the 16
iteration_2 replace buggy code at line 230 Diagnostic: 
 -  if(act!=  null  ||!act.equals(timezoneIndicator))  {  
 + if(act == null &&!act.equals(timezoneIndicator)) { 
 ----------------------------------------------------------------------------------------------------
Gson5 -  FL is ranked in the 16
iteration_2 replace buggy code at line 230 Diagnostic: 
 -  if(act!=  null  ||!act.equals(timezoneId))  {  
 + if(act == null &&!act.equals(timezoneId)) { 
 ----------------------------------------------------------------------------------------------------
Gson5 -  FL is ranked in the 16
iteration_2 replace buggy code at line 230 Diagnostic: 
 -  if(act!=  null  &&  act.length()  >  0)  {  
 + if(act!= null && act.length() == 0) { 
 ----------------------------------------------------------------------------------------------------
Gson5 -  FL is ranked in the 16
iteration_2 replace buggy code at line 230 Diagnostic: 
 -  if(act!=  null  &&  act.length()  >  0)  {  
 + if(act == null && act.length() > 0) { 
 ----------------------------------------------------------------------------------------------------
Gson5 -  FL is ranked in the 16
iteration_2 replace buggy code at line 230 Diagnostic: 
 -  if(!act.equals(timezone))  {  if(!act.equals(timezone))  {  
 + if(timezone.getID()!= timezone.getID()) { 
 ----------------------------------------------------------------------------------------------------
Gson5 -  FL is ranked in the 16
iteration_1 replace buggy code at line 230 Diagnostic: 
 -  if(act!=  null)  {  
 + if(act == null) { 
 ----------------------------------------------------------------------------------------------------
Gson5 -  FL is ranked in the 16
iteration_1 replace buggy code at line 230 Diagnostic: 
 -  if(act!=  null)  {  
 + if(act!= null &&!hasT) { 
 ----------------------------------------------------------------------------------------------------
Chart24 -  FL is ranked in the 3
iteration_1 replace buggy code at line 126 Diagnostic: 
 -  int  g  =(int)((  value  *  this.lowerBound)/  (this.upperBound  -  this.lowerBound)*  255.0);  
 + int g =(int)(( value * this.lowerBound)/ this.upperBound +(v - this.lowerBound)* 255.0); 
 ----------------------------------------------------------------------------------------------------
Chart24 -  FL is ranked in the 3
iteration_1 add buggy code at line 126 Diagnostic: 
 -  
 +     v  =  Math.max(v,  this.lowerBound);  v = Math.max(v, this.lowerBound); value = Math.min(v, this.upperBound); 
 ----------------------------------------------------------------------------------------------------
repair_iteration/Chart24/3/iteration_0/plausible.csv
Closure22 -  FL is ranked in the Closure22_plausible -  FL is ranked in the 9
iteration_1 replace buggy code at line 114 Diagnostic: 
 -  if(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.FOR)continue;  
 + if(ancestorType!= Token.COMMA || ancestorType == Token.FOR)continue; 
 ----------------------------------------------------------------------------------------------------
Closure22 -  FL is ranked in the Closure22_plausible -  FL is ranked in the 9
iteration_1 replace buggy code at line 114 Diagnostic: 
 -  if(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.FOR)continue;  
 + if(ancestorType == Token.COMMA || ancestorType!= Token.FOR)continue; 
 ----------------------------------------------------------------------------------------------------
Closure22 -  FL is ranked in the Closure22_plausible -  FL is ranked in the 9
iteration_1 replace buggy code at line 114 Diagnostic: 
 -  if(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.FOR)continue;  
 + if(ancestorType >= Token.COMMA || ancestorType == Token.FOR)continue; 
 ----------------------------------------------------------------------------------------------------
Closure22 -  FL is ranked in the Closure22_plausible -  FL is ranked in the 9
iteration_1 replace buggy code at line 114 Diagnostic: 
 -  if(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.FOR)continue;  
 + if(ancestorType == Token.FOR || ancestorType == Token.COMMA)continue; 
 ----------------------------------------------------------------------------------------------------
Closure22 -  FL is ranked in the Closure22_plausible -  FL is ranked in the 9
iteration_1 replace buggy code at line 114 Diagnostic: 
 -  if(ancestorType!=  Token.COMMA  ||  ancestorType  ==  Token.EXPR_RESULT)continue;  
 + if(ancestorType == Token.COMMA || ancestorType!= Token.EXPR_RESULT)continue; 
 ----------------------------------------------------------------------------------------------------
Closure22 -  FL is ranked in the Closure22_plausible -  FL is ranked in the 9
iteration_1 replace buggy code at line 114 Diagnostic: 
 -  if(ancestorType!=  Token.COMMA  ||  ancestorType  ==  Token.EXPR_RESULT)continue;  
 + if(ancestorType >= Token.COMMA || ancestorType == Token.EXPR_RESULT)continue; 
 ----------------------------------------------------------------------------------------------------
Closure22 -  FL is ranked in the Closure22_plausible -  FL is ranked in the 9
iteration_1 replace buggy code at line 114 Diagnostic: 
 -  if(ancestorType!=  Token.COMMA  ||  ancestorType  ==  Token.EXPR_RESULT)continue;  
 + if(ancestorType!= Token.COMMA && ancestorType == Token.EXPR_RESULT)continue; 
 ----------------------------------------------------------------------------------------------------
Closure22 -  FL is ranked in the Closure22_plausible -  FL is ranked in the 9
iteration_1 replace buggy code at line 114 Diagnostic: 
 -  if(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.BLOCK)continue;  
 + if(ancestorType!= Token.COMMA || ancestorType == Token.BLOCK)continue; 
 ----------------------------------------------------------------------------------------------------
Closure22 -  FL is ranked in the Closure22_plausible -  FL is ranked in the 9
iteration_1 replace buggy code at line 114 Diagnostic: 
 -  if(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.BLOCK)continue;  
 + if(ancestorType == Token.COMMA || ancestorType!= Token.BLOCK)continue; 
 ----------------------------------------------------------------------------------------------------
Closure22 -  FL is ranked in the Closure22_plausible -  FL is ranked in the 9
iteration_1 replace buggy code at line 114 Diagnostic: 
 -  if(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.BLOCK)continue;  
 + if(ancestorType == Token.COMMA && ancestorType == Token.BLOCK)continue; 
 ----------------------------------------------------------------------------------------------------
Closure22 -  FL is ranked in the Closure22_plausible -  FL is ranked in the 9
iteration_1 replace buggy code at line 114 Diagnostic: 
 -  if(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.BLOCK)continue;  
 + if(ancestorType >= Token.COMMA || ancestorType == Token.BLOCK)continue; 
 ----------------------------------------------------------------------------------------------------
Closure22 -  FL is ranked in the Closure22_plausible -  FL is ranked in the 9
iteration_1 replace buggy code at line 114 Diagnostic: 
 -  if(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.BLOCK)continue;  
 + if(ancestorType!= Token.COMMA && ancestorType == Token.BLOCK)continue; 
 ----------------------------------------------------------------------------------------------------
Closure22 -  FL is ranked in the Closure22_plausible -  FL is ranked in the 9
iteration_1 replace buggy code at line 114 Diagnostic: 
 -  if(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.FUNCTION)continue;  
 + if(ancestorType!= Token.COMMA && ancestorType == Token.FUNCTION)continue; 
 ----------------------------------------------------------------------------------------------------
Closure22 -  FL is ranked in the Closure22_plausible -  FL is ranked in the 9
iteration_1 replace buggy code at line 114 Diagnostic: 
 -  if(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.NAME)continue;  
 + if(ancestorType == Token.COMMA || ancestorType!= Token.NAME)continue; 
 ----------------------------------------------------------------------------------------------------
Closure22 -  FL is ranked in the Closure22_plausible -  FL is ranked in the 9
iteration_1 replace buggy code at line 114 Diagnostic: 
 -  if(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.NAME)continue;  
 + if(ancestorType >= Token.COMMA || ancestorType == Token.NAME)continue; 
 ----------------------------------------------------------------------------------------------------
Closure22 -  FL is ranked in the Closure22_plausible -  FL is ranked in the 9
iteration_1 replace buggy code at line 114 Diagnostic: 
 -  if(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.NAME)continue;  
 + if(ancestorType == Token.COMMA && ancestorType == Token.NAME)continue; 
 ----------------------------------------------------------------------------------------------------
Closure22 -  FL is ranked in the Closure22_plausible -  FL is ranked in the 9
iteration_1 replace buggy code at line 114 Diagnostic: 
 -  if(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.NAME)continue;  
 + if(ancestorType!= Token.COMMA && ancestorType == Token.NAME)continue; 
 ----------------------------------------------------------------------------------------------------
Closure22 -  FL is ranked in the Closure22_plausible -  FL is ranked in the 9
iteration_1 replace buggy code at line 114 Diagnostic: 
 -  if(ancestorType!=  Token.COMMA)continue;  
 + if(ancestorType!= Token.COMMA || ancestorType!= Token.NEW)continue; 
 ----------------------------------------------------------------------------------------------------
Math105 -  FL is ranked in the 13
iteration_1 replace buggy code at line 108 Diagnostic: 
 -    ybar  =  Math.abs(xbar);  
 + ybar = Math.min(y, xbar); 
 ----------------------------------------------------------------------------------------------------
Math105 -  FL is ranked in the 12
iteration_2 add buggy code at line 107 Diagnostic: 
 -  
 + x  =  Math.max(x,  y  -  1);  x = Math.max(x, y - 1); 
 ----------------------------------------------------------------------------------------------------
Math105 -  FL is ranked in the 12
iteration_2 add buggy code at line 107 Diagnostic: 
 -  
 + x  =  Math.max(x,  y  -  1);  x = Math.max(x, y - 2); 
 ----------------------------------------------------------------------------------------------------
Cli17 -  FL is ranked in the 1
iteration_1 replace buggy code at line 302 Diagnostic: 
 -    tokens.add(token.substring(i));  
 + tokens.add(token.substring(1)); 
 ----------------------------------------------------------------------------------------------------
Cli17 -  FL is ranked in the 1
iteration_1 replace buggy code at line 302 Diagnostic: 
 -    tokens.add(token.substring(i));  
 + tokens.add(token.substring(2)); 
 ----------------------------------------------------------------------------------------------------
Cli17 -  FL is ranked in the 1
iteration_1 add buggy code at line 302 Diagnostic: 
 -  
 +     tokens.add(token.substring(i  +  1));  tokens.add(token.substring(i + 1)); 
 ----------------------------------------------------------------------------------------------------
Cli17 -  FL is ranked in the 1
iteration_1 add buggy code at line 302 Diagnostic: 
 -  
 +     tokens.add(token.substring(i  +  1));  tokens.add(Token.substring(i + 1)); 
 ----------------------------------------------------------------------------------------------------
Cli17 -  FL is ranked in the 1
iteration_1 replace buggy code at line 302 Diagnostic: 
 -    ||  currentOption.hasArg())  {  tokens.add(token.substring(i  +  1));  break;  
 + || currentOption.hasArg()) { tokens.add(token.substring(i + 1, ch)); break; 
 ----------------------------------------------------------------------------------------------------
Math84 -  FL is ranked in the 11
iteration_2 replace buggy code at line 90 Diagnostic: 
 -  if(comparator  ==  null)  {  if(comparator.compare(contracted,  best)  <  0)  {  return;  }  
 + if(contracted!= null) { if(comparator.compare(contracted, best) < 0) { return; } 
 ----------------------------------------------------------------------------------------------------
Math84 -  FL is ranked in the 11
iteration_2 replace buggy code at line 90 Diagnostic: 
 -  if(comparator  ==  null)  {  if(comparator.compare(contracted,  best)  <  0)  {  return;  }  
 + if(contracted!= null) { if(comparator.compare(contracted, best) >= 0) { return; } 
 ----------------------------------------------------------------------------------------------------
Math84 -  FL is ranked in the 11
iteration_2 replace buggy code at line 90 Diagnostic: 
 -      if(comparator.compare(contracted,  best)  <  0)  {  return;  }  if(comparator.compare(contracted,  best)  <  0)  {  return;  }  
 + if(simplex!= null) { if(comparator.compare(contracted, best) < 0) { return; } 
 ----------------------------------------------------------------------------------------------------
Math84 -  FL is ranked in the 11
iteration_2 replace buggy code at line 90 Diagnostic: 
 -  if(comparator  ==  null)  {  if(comparator.compare(contracted,  best)  <  0)  {  return;  }  
 + if(comparator!= null) { if(comparator.compare(contracted, best) == 0) { return; } 
 ----------------------------------------------------------------------------------------------------
Math84 -  FL is ranked in the 11
iteration_2 replace buggy code at line 90 Diagnostic: 
 -  if(comparator.compare(contracted,  best)!=  0)  {  return;  }  
 + if(contracted!= null) { if(comparator.compare(contracted, best)!= 0) { return; } 
 ----------------------------------------------------------------------------------------------------
Math84 -  FL is ranked in the 11
iteration_2 replace buggy code at line 90 Diagnostic: 
 -  if(comparator.compare(contracted,  best)!=  0)  {  return;  }  
 + if(comparator!= null) { if(comparator.compare(contracted, best)!= 0) { return; } 
 ----------------------------------------------------------------------------------------------------
Math84 -  FL is ranked in the 11
iteration_2 replace buggy code at line 90 Diagnostic: 
 -  if(comparator.compare(contracted,  best)  ==  0)  {  return;  }  
 + if(contracted!= null) { if(comparator.compare(contracted, best) == 0) { return; } 
 ----------------------------------------------------------------------------------------------------
Math84 -  FL is ranked in the 11
iteration_1 replace buggy code at line 90 Diagnostic: 
 -    if(comparator.compare(contracted,  best)  <  0)  {  return;  }  
 + if(comparator!= null) { if(comparator.compare(contracted, best) < 0) { return; } 
 ----------------------------------------------------------------------------------------------------
repair_iteration/Math84/11/iteration_0/plausible.csv
repair_iteration/Chart13/43/iteration_0/plausible.csv
Chart13 -  FL is ranked in the 44
iteration_2 replace buggy code at line 454 Diagnostic: 
 -  RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.FIXED,  h[3],  null,  
 + RectangleConstraint c4 = new RectangleConstraint(0.0, new Range(0.0, constraint.getHeight() - w[2]), LengthConstraintType.FIXED, h[3], null, 
 ----------------------------------------------------------------------------------------------------
Chart13 -  FL is ranked in the 44
iteration_1 replace buggy code at line 454 Diagnostic: 
 -  RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.FIXED,  h[2],  null,  
 + RectangleConstraint c4 = new RectangleConstraint(0.0, new Range(0.0, constraint.getWidth() - w[3]), LengthConstraintType.FIXED, h[2], null, 
 ----------------------------------------------------------------------------------------------------
Chart13 -  FL is ranked in the 44
iteration_1 replace buggy code at line 454 Diagnostic: 
 -  RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.FIXED,  h[2],  null,  
 + RectangleConstraint c4 = new RectangleConstraint(0.0, new Range(0.0, constraint.getWidth() - w[3]), LengthConstraintType.FIXED, h[3], null, 
 ----------------------------------------------------------------------------------------------------
repair_iteration/Chart13/44/iteration_0/plausible.csv
repair_iteration/Chart13/44/iteration_0/plausible.csv
repair_iteration/Chart13/44/iteration_0/plausible.csv
repair_iteration/Chart13/42/iteration_0/plausible.csv
repair_iteration/Chart13/41/iteration_0/plausible.csv
repair_iteration/Chart13/41/iteration_0/plausible.csv
Closure104 -  FL is ranked in the 8
iteration_2 add buggy code at line 291 Diagnostic: 
 -  
 +         result    =    builder.build();    result  =  builder.build();  result = builder.build(); result = builder.build(); if(this.isObject() && that.isObject()) { return getNativeType(JSTypeNative.NO_OBJECT_TYPE); } 
 ----------------------------------------------------------------------------------------------------
Closure104 -  FL is ranked in the 8
iteration_2 add buggy code at line 291 Diagnostic: 
 -  
 +         result    =    builder.build();    result  =  builder.build();  result = builder.build(); result = builder.build(); if(this.isObject()) { return getNativeType(JSTypeNative.NO_OBJECT_TYPE); } 
 ----------------------------------------------------------------------------------------------------
Closure104 -  FL is ranked in the 9
iteration_2 add buggy code at line 292 Diagnostic: 
 -  
 +         result    =    builder.build();    result  =  builder.build();  result = builder.build(); result = builder.build(); if(this.isObject() && that.isObject()) { return getNativeType(JSTypeNative.NO_OBJECT_TYPE); } 
 ----------------------------------------------------------------------------------------------------
Closure104 -  FL is ranked in the 9
iteration_2 add buggy code at line 292 Diagnostic: 
 -  
 +         result    =    builder.build();    result  =  builder.build();  result = builder.build(); result = builder.build(); if(this.isObject()) { return getNativeType(JSTypeNative.NO_OBJECT_TYPE); } 
 ----------------------------------------------------------------------------------------------------
repair_iteration/Lang57/4/iteration_0/plausible.csv
Closure131 -  FL is ranked in the 18
iteration_2 replace buggy code at line 199 Diagnostic: 
 -  if(i  ==  0)  {  
 + if(i == 0 ||!Character.isJavaIdentifierStart(s.charAt(i))) { 
 ----------------------------------------------------------------------------------------------------
Closure131 -  FL is ranked in the 18
iteration_2 replace buggy code at line 199 Diagnostic: 
 -  if(!Character.isJavaIdentifierPart(s.charAt(0))||!Character.isJavaIdentifierPart(s.charAt(0)))  {  
 + if(!Character.isJavaIdentifierStart(s.charAt(i)) ||!Character.isJavaIdentifierPart(s.charAt(i))) { 
 ----------------------------------------------------------------------------------------------------
Closure131 -  FL is ranked in the 18
iteration_2 replace buggy code at line 199 Diagnostic: 
 -  if(!Character.isJavaIdentifierPart(s.charAt(i))  ||!Character.isJavaIdentifierPart(s.charAt(0)))  {  
 + if(!Character.isJavaIdentifierPart(s.charAt(i)) ||!Character.isJavaIdentifierStart(s.charAt(i))) { 
 ----------------------------------------------------------------------------------------------------
Closure131 -  FL is ranked in the 18
iteration_1 replace buggy code at line 199 Diagnostic: 
 -  if(s.length()  ==  0  ||!Character.isJavaIdentifierPart(s.charAt(i)))  {  
 + if(s.length() == 0 ||!Character.isJavaIdentifierStart(s.charAt(i))) { 
 ----------------------------------------------------------------------------------------------------
repair_iteration/Compress31/1/iteration_0/plausible.csv
repair_iteration/Compress31/1/iteration_0/plausible.csv
repair_iteration/Compress31/1/iteration_0/plausible.csv
repair_iteration/Compress31/1/iteration_0/plausible.csv
repair_iteration/Compress31/1/iteration_0/plausible.csv
repair_iteration/Compress31/1/iteration_0/plausible.csv
repair_iteration/Compress31/1/iteration_0/plausible.csv
repair_iteration/Compress31/1/iteration_0/plausible.csv
repair_iteration/Compress31/1/iteration_0/plausible.csv
repair_iteration/Compress31/1/iteration_0/plausible.csv
repair_iteration/Cli22/1/iteration_0/plausible.csv
repair_iteration/Math5/1/iteration_0/plausible.csv
Closure102 -  FL is ranked in the 23
iteration_2 replace buggy code at line 92 Diagnostic: 
 -      NodeTraversal.traverse(compiler,  root,  this);  t.traverse(compiler,  root,  this);  
 + NodeTraversal.traverse(compiler, externs, this); t.traverse(compiler, root, this); 
 ----------------------------------------------------------------------------------------------------
Closure102 -  FL is ranked in the 23
iteration_2 replace buggy code at line 92 Diagnostic: 
 -      NodeTraversal.traverse(compiler,  root,  this);  t.traverse(compiler,  root,  this);  
 + t.traverse(compiler, root, this); 
 ----------------------------------------------------------------------------------------------------
Closure102 -  FL is ranked in the 23
iteration_2 replace buggy code at line 92 Diagnostic: 
 -      NodeTraversal.traverse(compiler,  externs,  this);  t.traverse(compiler,  externs,  this);  
 + NodeTraversal.traverse(compiler, root, this); t.traverse(compiler, externs, this); 
 ----------------------------------------------------------------------------------------------------
Closure102 -  FL is ranked in the 23
iteration_2 replace buggy code at line 92 Diagnostic: 
 -      NodeTraversal.traverse(compiler,  externs,  this);  t.traverse(compiler,  externs,  this);  
 + t.traverse(compiler, externs, this); 
 ----------------------------------------------------------------------------------------------------
Closure102 -  FL is ranked in the 23
iteration_2 replace buggy code at line 92 Diagnostic: 
 -      NodeTraversal.traverse(compiler,  root,  this);  NodeTraversal.traverse(compiler,  root,  this);  
 + NodeTraversal.traverse(compiler, externs, this); NodeTraversal.traverse(compiler, root, this); 
 ----------------------------------------------------------------------------------------------------
Closure102 -  FL is ranked in the 23
iteration_2 replace buggy code at line 92 Diagnostic: 
 -      NodeTraversal.traverse(compiler,  externs,  this);  NodeTraversal.traverse(compiler,  externs,  this);  
 + NodeTraversal.traverse(compiler, root, this); NodeTraversal.traverse(compiler, externs, this); 
 ----------------------------------------------------------------------------------------------------
Closure102 -  FL is ranked in the 23
iteration_2 replace buggy code at line 92 Diagnostic: 
 -      t.traverseRoots(externs,  root);  t.traverseRoots(externs,  root);  
 + if(externs.getType() == Token.EXPR_RESULT) { t.traverseRoots(externs, root); t.traverseRoots(externs, root); } 
 ----------------------------------------------------------------------------------------------------
Closure102 -  FL is ranked in the 23
iteration_1 replace buggy code at line 92 Diagnostic: 
 -    NodeTraversal.traverse(compiler,  renamer);  
 + NodeTraversal.traverse(compiler, root, renamer); 
 ----------------------------------------------------------------------------------------------------
Closure102 -  FL is ranked in the 23
iteration_1 replace buggy code at line 92 Diagnostic: 
 -    NodeTraversal.traverse(compiler,  renamer);  
 + NodeTraversal.traverse(compiler, externs, renamer); 
 ----------------------------------------------------------------------------------------------------
Closure102 -  FL is ranked in the 22
iteration_1 replace buggy code at line 91 Diagnostic: 
 -  NodeTraversal  t  =  new  NodeTraversal(compiler,  externals);  
 + NodeTraversal t = new NodeTraversal(compiler, this); 
 ----------------------------------------------------------------------------------------------------
Chart7 -  FL is ranked in the 50
iteration_2 replace buggy code at line 302 Diagnostic: 
 -  long  e  =  getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime()  +  1;  long  e  =  getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime  +  1;  
 + long e = getDataItem(this.maxMiddleIndex).getPeriod().getEnd().getTime() + 1; 
 ----------------------------------------------------------------------------------------------------
Chart7 -  FL is ranked in the 50
iteration_2 replace buggy code at line 302 Diagnostic: 
 -  long  e  =  getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime()  *  2  +  Math.min(this.maxMiddleIndex,  this.maxMiddleIndex);  
 + long e = getDataItem(this.maxMiddleIndex).getPeriod().getEnd().getTime() * 2 + Math.min(this.minMiddleIndex, this.maxMiddleIndex); 
 ----------------------------------------------------------------------------------------------------
Chart7 -  FL is ranked in the 50
iteration_2 replace buggy code at line 302 Diagnostic: 
 -  long  e  =  getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime()  +  1;  long  e  =  getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime()  +  1L;  
 + long e = getDataItem(this.maxMiddleIndex).getPeriod().getEnd().getTime() + 1L; 
 ----------------------------------------------------------------------------------------------------
Chart7 -  FL is ranked in the 50
iteration_2 replace buggy code at line 302 Diagnostic: 
 -  long  e  =  getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime()  *  2;  long  e  =  getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime()  *  2  +  this.maxMiddle;  
 + long e = getDataItem(this.maxMiddleIndex).getPeriod().getEnd().getTime() * 2 + this.minMiddleIndex; 
 ----------------------------------------------------------------------------------------------------
Chart7 -  FL is ranked in the 50
iteration_2 replace buggy code at line 302 Diagnostic: 
 -  long  e  =  getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime()  *  2  +  Math.max(this.maxMiddleIndex,  this.maxMiddleIndex);  
 + long e = getDataItem(this.maxMiddleIndex).getPeriod().getEnd().getTime() * 2 + Math.max(this.minMiddleIndex, this.maxMiddleIndex); 
 ----------------------------------------------------------------------------------------------------
Chart7 -  FL is ranked in the 50
iteration_2 replace buggy code at line 302 Diagnostic: 
 -  long  e  =  getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime()  *  2;  long  e  =  getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime()  *  1;  
 + long e = getDataItem(this.maxMiddleIndex).getPeriod().getEnd().getTime() * 2; 
 ----------------------------------------------------------------------------------------------------
Chart7 -  FL is ranked in the 50
iteration_2 replace buggy code at line 302 Diagnostic: 
 -  long  e  =  getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime()  *  2;  long  e  =  getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime()  *  2L;  
 + long e = getDataItem(this.maxMiddleIndex).getPeriod().getEnd().getTime() * 2L; 
 ----------------------------------------------------------------------------------------------------
Chart7 -  FL is ranked in the 50
iteration_2 replace buggy code at line 302 Diagnostic: 
 -  long  e  =  getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime()  *  2  -(s  +  this.maxMiddleIndex);  
 + long e = getDataItem(this.maxMiddleIndex).getPeriod().getEnd().getTime() -(s + this.minMiddleIndex); 
 ----------------------------------------------------------------------------------------------------
Chart7 -  FL is ranked in the 50
iteration_2 replace buggy code at line 302 Diagnostic: 
 -  long  e  =  getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime()  *  2;  long  d  =  getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime()  *  2;  
 + long e = getDataItem(this.maxMiddleIndex).getPeriod().getEnd().getTime(); long d = getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime(); 
 ----------------------------------------------------------------------------------------------------
Chart7 -  FL is ranked in the 50
iteration_2 replace buggy code at line 302 Diagnostic: 
 -  long  e  =  getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime()  -  index;  
 + long e = getDataItem(this.maxMiddleIndex).getPeriod().getEnd().getTime() - index; 
 ----------------------------------------------------------------------------------------------------
Chart7 -  FL is ranked in the 50
iteration_2 replace buggy code at line 302 Diagnostic: 
 -  long  e  =  getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime()  -  index;  
 + long e = getDataItem(this.maxMiddleIndex).getPeriod().getEnd().getTime() - 1; 
 ----------------------------------------------------------------------------------------------------
Chart7 -  FL is ranked in the 50
iteration_2 replace buggy code at line 302 Diagnostic: 
 -  final  int  e  =  getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();  
 + final long e = getDataItem(this.maxMiddleIndex).getPeriod().getEnd().getTime(); 
 ----------------------------------------------------------------------------------------------------
Chart7 -  FL is ranked in the 50
iteration_2 replace buggy code at line 302 Diagnostic: 
 -  long  e  =  getDataItem(this.maxMiddleIndex).getPeriod().getStart().getTime();  long  r  =  getDataItem(this.maxMiddleIndex).getPeriod().getStart().getTime();  
 + long e = getDataItem(this.maxMiddleIndex).getPeriod().getEnd().getTime(); long r = getDataItem(this.maxMiddleIndex).getPeriod().getStart().getTime(); 
 ----------------------------------------------------------------------------------------------------
Chart7 -  FL is ranked in the 50
iteration_2 replace buggy code at line 302 Diagnostic: 
 -  long  e  =  getDataItem(this.minMiddleIndex),  this.maxMiddleIndex.getEnd().getTime();  
 + long e =(this.minMiddleIndex >= 0)? getDataItem(this.maxMiddleIndex).getPeriod().getEnd().getTime() : 0; 
 ----------------------------------------------------------------------------------------------------
Chart7 -  FL is ranked in the 50
iteration_2 replace buggy code at line 302 Diagnostic: 
 -  long  e  =  getDataItem(this.minMiddleIndex),  this.maxMiddleIndex.getEnd().getTime();  
 + long e =(this.minMiddleIndex >= 0)? getDataItem(this.maxMiddleIndex).getPeriod().getEnd().getTime() : index; 
 ----------------------------------------------------------------------------------------------------
Chart7 -  FL is ranked in the 50
iteration_2 replace buggy code at line 302 Diagnostic: 
 -  long  e  =  getDataItem(this.minMiddleIndex),  this.maxMiddleIndex.getEnd().getTime();  
 + long e =(this.minMiddleIndex >= 0)? getDataItem(this.maxMiddleIndex).getPeriod().getEnd().getTime() : 1; 
 ----------------------------------------------------------------------------------------------------
Chart7 -  FL is ranked in the 50
iteration_2 replace buggy code at line 302 Diagnostic: 
 -  long  e  =  getDataItem(this.maxMiddleIndex).getPeriod().getStart().getTime();  long  d  =  getDataItem(this.maxMiddleIndex).getPeriod().getStart().getTime();  
 + long e = getDataItem(this.maxMiddleIndex).getPeriod().getEnd().getTime(); long d = getDataItem(this.maxMiddleIndex).getPeriod().getStart().getTime(); 
 ----------------------------------------------------------------------------------------------------
Chart7 -  FL is ranked in the 50
iteration_2 replace buggy code at line 302 Diagnostic: 
 -  long  e  =  getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime()  *  2  +  1;  
 + long e = getDataItem(this.maxMiddleIndex).getPeriod().getEnd().getTime() * 2 + 1; 
 ----------------------------------------------------------------------------------------------------
Chart7 -  FL is ranked in the 50
iteration_2 replace buggy code at line 302 Diagnostic: 
 -  long  e  =  getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime()  *  2;  long  e  =  getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime()  *  2  +  this.minMiddleIndex;  
 + long e = getDataItem(this.maxMiddleIndex).getPeriod().getEnd().getTime() + this.minMiddleIndex; 
 ----------------------------------------------------------------------------------------------------
Chart7 -  FL is ranked in the 50
iteration_2 replace buggy code at line 302 Diagnostic: 
 -  long  e  =  getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime()  *  2  +  Math.max(this.maxMiddleIndex,  0);  
 + long e = getDataItem(this.maxMiddleIndex).getPeriod().getEnd().getTime() * 2 + Math.max(this.minMiddleIndex, 0); 
 ----------------------------------------------------------------------------------------------------
Chart7 -  FL is ranked in the 50
iteration_2 replace buggy code at line 302 Diagnostic: 
 -  long  e  =  getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime()  -  this.maxMiddleIndex;  
 + long e = getDataItem(this.maxMiddleIndex).getPeriod().getEnd().getTime() - this.minMiddleIndex; 
 ----------------------------------------------------------------------------------------------------
Chart7 -  FL is ranked in the 50
iteration_2 replace buggy code at line 302 Diagnostic: 
 -  long  e  =  getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime()  *  2  +  Math.max(s,  this.maxMiddleIndex);  
 + long e = getDataItem(this.maxMiddleIndex).getPeriod().getEnd().getTime() * 2 + Math.max(s, this.minMiddleIndex); 
 ----------------------------------------------------------------------------------------------------
Chart7 -  FL is ranked in the 50
iteration_2 replace buggy code at line 302 Diagnostic: 
 -  long  e  =  getDataItem(this.maxMiddleIndex).getPeriod().getEnd().getTime()  /  2;  
 + long e = getDataItem(this.maxMiddleIndex).getPeriod().getEnd().getTime() + 2; 
 ----------------------------------------------------------------------------------------------------
Chart7 -  FL is ranked in the 50
iteration_2 replace buggy code at line 302 Diagnostic: 
 -  long  e  =  getDataItem(this.maxMiddleIndex).getPeriod().getEnd().getTime()  /  2;  
 + long e = getDataItem(this.maxMiddleIndex).getPeriod().getEnd().getTime() + 3; 
 ----------------------------------------------------------------------------------------------------
Chart7 -  FL is ranked in the 50
iteration_2 replace buggy code at line 302 Diagnostic: 
 -  long  e  =(long)getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();  
 + long e =(long)getDataItem(this.maxMiddleIndex).getPeriod().getEnd().getTime(); 
 ----------------------------------------------------------------------------------------------------
Chart7 -  FL is ranked in the 50
iteration_2 replace buggy code at line 302 Diagnostic: 
 -  long  e  =  getDataItem(this.maxMiddleIndex).getPeriod().getStart().getTime();  long  p  =  getDataItem(this.maxMiddleIndex).getPeriod().getStart().getTime();  
 + long e = getDataItem(this.maxMiddleIndex).getPeriod().getEnd().getTime(); long p = getDataItem(this.maxMiddleIndex).getPeriod().getStart().getTime(); 
 ----------------------------------------------------------------------------------------------------
Chart7 -  FL is ranked in the 50
iteration_2 replace buggy code at line 302 Diagnostic: 
 -  long  e  =  getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime()  *  2;  long  b  =  getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime()  *  2;  
 + long e = getDataItem(this.maxMiddleIndex).getPeriod().getEnd().getTime(); long b = getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime(); 
 ----------------------------------------------------------------------------------------------------
Chart7 -  FL is ranked in the 50
iteration_2 replace buggy code at line 302 Diagnostic: 
 -  long  e  =  getDataItem(this.maxMiddleIndex).getPeriod().getStart().getTime();  long  b  =  getDataItem(this.maxMiddleIndex).getPeriod().getStart().getTime();  
 + long e = getDataItem(this.maxMiddleIndex).getPeriod().getEnd().getTime(); long b = getDataItem(this.maxMiddleIndex).getPeriod().getStart().getTime(); 
 ----------------------------------------------------------------------------------------------------
Chart7 -  FL is ranked in the 50
iteration_2 replace buggy code at line 302 Diagnostic: 
 -  long  e  =  getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime()  *  2  +  start;  
 + long e = getDataItem(this.maxMiddleIndex).getPeriod().getEnd().getTime() / 2 + start; 
 ----------------------------------------------------------------------------------------------------
Chart7 -  FL is ranked in the 50
iteration_2 replace buggy code at line 302 Diagnostic: 
 -  long  e  =  getDataItem(this.maxMiddleIndex).getPeriod().getStart().getTime()  +  1;  
 + long e = getDataItem(this.maxMiddleIndex).getPeriod().getStart().getTime() * 2 + 1; 
 ----------------------------------------------------------------------------------------------------
Chart7 -  FL is ranked in the 50
iteration_2 replace buggy code at line 302 Diagnostic: 
 -  long  e  =  getDataItem(this.maxMiddleIndex).getPeriod().getStart().getTime()  +  1;  
 + long e = getDataItem(this.maxMiddleIndex).getPeriod().getStart().getTime() * 2; 
 ----------------------------------------------------------------------------------------------------
Chart7 -  FL is ranked in the 50
iteration_2 replace buggy code at line 302 Diagnostic: 
 -  long  e  =  getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime()  *  1;  
 + long e = getDataItem(this.maxMiddleIndex).getPeriod().getEnd().getTime() / 1; 
 ----------------------------------------------------------------------------------------------------
Chart7 -  FL is ranked in the 50
iteration_2 replace buggy code at line 302 Diagnostic: 
 -  long  e  =  getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime()  *  1;  
 + long e = getDataItem(this.maxMiddleIndex).getPeriod().getEnd().getTime() * 1; 
 ----------------------------------------------------------------------------------------------------
Chart7 -  FL is ranked in the 50
iteration_2 replace buggy code at line 302 Diagnostic: 
 -  long  e  =  getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime()  *  2  +  Math.max(this.maxMiddleIndex,  this.maxMiddleIndex);  
 + long e = getDataItem(this.maxMiddleIndex).getPeriod().getStart().getTime() * 2 + Math.max(this.minMiddleIndex, this.maxMiddleIndex); 
 ----------------------------------------------------------------------------------------------------
Chart7 -  FL is ranked in the 50
iteration_2 replace buggy code at line 302 Diagnostic: 
 -  long  e  =  getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime()  *  2  +  Math.max(this.maxMiddleIndex,  this.maxMiddleIndex);  
 + long e = getDataItem(this.maxMiddleIndex).getPeriod().getEnd().getTime() + Math.max(this.minMiddleIndex, this.maxMiddleIndex); 
 ----------------------------------------------------------------------------------------------------
Chart7 -  FL is ranked in the 50
iteration_2 replace buggy code at line 302 Diagnostic: 
 -  long  e  =  getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime()  *  2  +  10;  
 + long e = getDataItem(this.maxMiddleIndex).getPeriod().getEnd().getTime() * 2 + 10; 
 ----------------------------------------------------------------------------------------------------
Chart7 -  FL is ranked in the 50
iteration_2 replace buggy code at line 302 Diagnostic: 
 -  long  e  =  getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime()  *  2;  long  b  =  getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime()  *  2;  
 + long e = getDataItem(this.maxMiddleIndex).getPeriod().getEnd().getTime(); long b = getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime() * 2; 
 ----------------------------------------------------------------------------------------------------
Chart7 -  FL is ranked in the 50
iteration_2 replace buggy code at line 302 Diagnostic: 
 -  long  e  =  getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime()  *  2  +  Math.min(this.maxMiddleIndex,  this.maxMiddleIndex);  
 + long e = getDataItem(this.maxMiddleIndex).getPeriod().getStart().getTime() * 2 + Math.min(this.minMiddleIndex, this.maxMiddleIndex); 
 ----------------------------------------------------------------------------------------------------
repair_iteration/Chart7/50/iteration_0/plausible.csv
Chart7 -  FL is ranked in the 49
iteration_2 replace buggy code at line 300 Diagnostic: 
 -  long  s  =  getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();  long  d  =  getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();  
 + long s = getDataItem(this.maxMiddleIndex).getPeriod().getStart().getTime(); long d = getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime(); 
 ----------------------------------------------------------------------------------------------------
Chart7 -  FL is ranked in the 49
iteration_2 replace buggy code at line 300 Diagnostic: 
 -  long  s  =  getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();  s  =  getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();  
 + long s = getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime(); s = getDataItem(this.maxMiddleIndex).getPeriod().getEnd().getTime(); 
 ----------------------------------------------------------------------------------------------------
Chart7 -  FL is ranked in the 49
iteration_2 replace buggy code at line 300 Diagnostic: 
 -  final  int  s  =  getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();  
 + final long s = getDataItem(this.maxMiddleIndex).getPeriod().getStart().getTime(); 
 ----------------------------------------------------------------------------------------------------
Chart7 -  FL is ranked in the 49
iteration_2 replace buggy code at line 300 Diagnostic: 
 -  int  s  =  getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime()  +  1;  
 + long s = getDataItem(this.maxMiddleIndex).getPeriod().getStart().getTime() + 1; 
 ----------------------------------------------------------------------------------------------------
Chart7 -  FL is ranked in the 49
iteration_2 replace buggy code at line 300 Diagnostic: 
 -  long  s  =  getDataItem(this.minimumMiddleIndex).getPeriod().getStart().getTime()  +  1;  
 + long s = getDataItem(this.maxMiddleIndex).getPeriod().getEnd().getTime() + 1; 
 ----------------------------------------------------------------------------------------------------
Chart7 -  FL is ranked in the 49
iteration_2 replace buggy code at line 300 Diagnostic: 
 -  long  s  =  getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime()  +  1;  long  m  =  getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime()  +  1;  
 + long s = getDataItem(this.maxMiddleIndex).getPeriod().getStart().getTime(); long m = getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime(); 
 ----------------------------------------------------------------------------------------------------
Chart7 -  FL is ranked in the 49
iteration_2 replace buggy code at line 300 Diagnostic: 
 -  long  s  =  getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime()  *  1;  
 + long s = getDataItem(this.maxMiddleIndex).getPeriod().getStart().getTime() / 1; 
 ----------------------------------------------------------------------------------------------------
Chart7 -  FL is ranked in the 49
iteration_2 replace buggy code at line 300 Diagnostic: 
 -  long  s  =  getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime()  *  1;  
 + long s = getDataItem(this.maxMiddleIndex).getPeriod().getEnd().getTime() / 1; 
 ----------------------------------------------------------------------------------------------------
Chart7 -  FL is ranked in the 49
iteration_2 replace buggy code at line 300 Diagnostic: 
 -  long  s  =  getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime()  +  1;  s  =  getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime()  +  1;  
 + long s = getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime(); s = getDataItem(this.maxMiddleIndex).getPeriod().getStart().getTime(); 
 ----------------------------------------------------------------------------------------------------
repair_iteration/Chart7/49/iteration_0/plausible.csv
repair_iteration/Chart7/49/iteration_0/plausible.csv
Cli2 -  FL is ranked in the 4
iteration_2 replace buggy code at line 53 Diagnostic: 
 -      eatTheRest  =  false;  tokens.clear();  eatTheRest  =  false;  tokens.clear();  currentOption  =  null;  
 + tokens.clear(); eatTheRest = true; tokens.clear(); currentOption = null; 
 ----------------------------------------------------------------------------------------------------
Cli2 -  FL is ranked in the 4
iteration_2 replace buggy code at line 53 Diagnostic: 
 -      ArrayList  tokens  =  new  ArrayList();  ArrayList  tokens  =  new  ArrayList();  this.eatTheRest  =  true;  
 + ArrayList tokens = new ArrayList(); this.eatTheRest = true; 
 ----------------------------------------------------------------------------------------------------
Cli2 -  FL is ranked in the 4
iteration_2 add buggy code at line 53 Diagnostic: 
 -  
 + tokens.remove(  "--  ");  tokens.remove( "--  "); eatTheRest = true; 
 ----------------------------------------------------------------------------------------------------
Cli2 -  FL is ranked in the 4
iteration_2 add buggy code at line 53 Diagnostic: 
 -  
 +         eatTheRest    =    false;    tokens.clear();    tokens.clear();  eatTheRest = true; tokens.clear(); tokens.clear(); 
 ----------------------------------------------------------------------------------------------------
Cli2 -  FL is ranked in the 4
iteration_2 add buggy code at line 53 Diagnostic: 
 -  
 +         tokens.add(    "--    ");    tokens.add(  "--    ");  eatTheRest  =  true;  tokens.clear(); 
 ----------------------------------------------------------------------------------------------------
Cli2 -  FL is ranked in the 4
iteration_2 add buggy code at line 53 Diagnostic: 
 -  
 + tokens.add(  "n  ");  tokens.add( "n  "); eatTheRest = true; 
 ----------------------------------------------------------------------------------------------------
Cli2 -  FL is ranked in the 4
iteration_2 add buggy code at line 53 Diagnostic: 
 -  
 + currentOption  =  Option.OK_OPTIONAL;  currentOption = Option.OK_OPTIONAL; 
 ----------------------------------------------------------------------------------------------------
Cli2 -  FL is ranked in the 4
iteration_2 add buggy code at line 53 Diagnostic: 
 -  
 + currentOption  =  Option.OK_OPTIONAL;  tokens.clear(); currentOption = Option.OK_OPTIONAL; 
 ----------------------------------------------------------------------------------------------------
Cli2 -  FL is ranked in the 4
iteration_2 add buggy code at line 53 Diagnostic: 
 -  
 + currentOption  =  Option.OK_OPTIONAL;  ArrayList < Option> tokens = new ArrayList < Option>(tokens.size()); 
 ----------------------------------------------------------------------------------------------------
Cli2 -  FL is ranked in the 4
iteration_2 add buggy code at line 53 Diagnostic: 
 -  
 + currentOption  =  Option.OK_OPTIONAL;  tokens.clear(); 
 ----------------------------------------------------------------------------------------------------
Cli2 -  FL is ranked in the 4
iteration_2 add buggy code at line 53 Diagnostic: 
 -  
 + currentOption  =  Option.OK_OPTIONAL;  ArrayList < Option> tokens = new ArrayList < Option>(); 
 ----------------------------------------------------------------------------------------------------
Cli2 -  FL is ranked in the 4
iteration_2 replace buggy code at line 53 Diagnostic: 
 -  currentOption  =  Option.OK_STANDARD;  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens);  
 + currentOption = Option.OK_STANDARD; tokens = new ArrayList < Option>(tokens); 
 ----------------------------------------------------------------------------------------------------
Cli2 -  FL is ranked in the 4
iteration_2 replace buggy code at line 53 Diagnostic: 
 -  currentOption  =  Option.OK_STANDARD;  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens);  
 + options.add(Option.OK_STANDARD); tokens.addAll(tokens); 
 ----------------------------------------------------------------------------------------------------
Cli2 -  FL is ranked in the 4
iteration_2 replace buggy code at line 53 Diagnostic: 
 -  if(tokens  ==  null)  {  eatTheRest  =  false;  tokens.clear();  }  
 + if(tokens!= null) { eatTheRest = true; tokens.clear(); } 
 ----------------------------------------------------------------------------------------------------
Cli2 -  FL is ranked in the 4
iteration_2 replace buggy code at line 53 Diagnostic: 
 -      tokens.clear();  currentOption  =  null;  eatTheRest  =  false;  tokens.clear();  currentOption  =  null;  
 + if(!eatTheRest) { tokens.clear(); currentOption = null; eatTheRest = true; tokens.clear(); currentOption = null; } 
 ----------------------------------------------------------------------------------------------------
Cli2 -  FL is ranked in the 4
iteration_2 replace buggy code at line 53 Diagnostic: 
 -  if(!eatTheRest)  {  eatTheRest  =  false;  tokens.clear();  }  
 + if(!eatTheRest) { eatTheRest = true; tokens.clear(); } 
 ----------------------------------------------------------------------------------------------------
Cli2 -  FL is ranked in the 4
iteration_1 add buggy code at line 53 Diagnostic: 
 -  
 +     eatTheRest  =  false;  tokens.clear();  eatTheRest = true; tokens.clear(); 
 ----------------------------------------------------------------------------------------------------
Cli2 -  FL is ranked in the 4
iteration_1 add buggy code at line 53 Diagnostic: 
 -  
 +     tokens.clear();  currentOption  =  null;  eatTheRest = true; tokens.clear(); currentOption = null; 
 ----------------------------------------------------------------------------------------------------
Cli2 -  FL is ranked in the 4
iteration_1 replace buggy code at line 53 Diagnostic: 
 -  currentOption  =  Option.OK_STANDARD;  
 + currentOption = Options.OK_STANDARD; 
 ----------------------------------------------------------------------------------------------------
repair_iteration/Cli2/4/iteration_0/plausible.csv
Cli2 -  FL is ranked in the 3
iteration_2 add buggy code at line 52 Diagnostic: 
 -  
 + tokens.add(  "    ");  tokens.add( "  "); eatTheRest = true; 
 ----------------------------------------------------------------------------------------------------
Cli2 -  FL is ranked in the 3
iteration_2 add buggy code at line 52 Diagnostic: 
 -  
 + tokens.add(  "-n  ");  tokens.add( "-n  "); eatTheRest = true; 
 ----------------------------------------------------------------------------------------------------
Cli2 -  FL is ranked in the 3
iteration_2 add buggy code at line 52 Diagnostic: 
 -  
 + tokens.add(  "none  ");  tokens.add( "none  "); eatTheRest = true; 
 ----------------------------------------------------------------------------------------------------
Cli2 -  FL is ranked in the 3
iteration_2 add buggy code at line 52 Diagnostic: 
 -  
 + tokens.add(  "utf-8  ");  tokens.add( "utf-8 "); eatTheRest = true; 
 ----------------------------------------------------------------------------------------------------
Cli2 -  FL is ranked in the 3
iteration_2 add buggy code at line 52 Diagnostic: 
 -  
 + tokens.add(  "this  ");  tokens.add( "this  "); eatTheRest = true; 
 ----------------------------------------------------------------------------------------------------
Cli2 -  FL is ranked in the 3
iteration_2 add buggy code at line 52 Diagnostic: 
 -  
 + tokens.add(  "--n  ");  tokens.add( "--n  "); eatTheRest = true; 
 ----------------------------------------------------------------------------------------------------
Cli2 -  FL is ranked in the 3
iteration_2 add buggy code at line 52 Diagnostic: 
 -  
 + tokens.remove(  "--  ");  tokens.remove( "--  "); eatTheRest = true; 
 ----------------------------------------------------------------------------------------------------
Cli2 -  FL is ranked in the 3
iteration_2 add buggy code at line 52 Diagnostic: 
 -  
 + tokens.remove(  "-  ");  tokens.remove( "-  "); eatTheRest = true; 
 ----------------------------------------------------------------------------------------------------
Cli2 -  FL is ranked in the 3
iteration_2 add buggy code at line 52 Diagnostic: 
 -  
 + tokens.add(  "--  ".equals(this.options));  tokens.add( "--  ".equals(this.options)); eatTheRest = true; 
 ----------------------------------------------------------------------------------------------------
Cli2 -  FL is ranked in the 3
iteration_1 add buggy code at line 52 Diagnostic: 
 -  
 + tokens.add(  "--  ");  tokens.add( "--  "); eatTheRest = true; 
 ----------------------------------------------------------------------------------------------------
Cli2 -  FL is ranked in the 3
iteration_1 add buggy code at line 52 Diagnostic: 
 -  
 + tokens.add(  "n  ");  tokens.add( "n  "); eatTheRest = true; 
 ----------------------------------------------------------------------------------------------------
Cli2 -  FL is ranked in the 3
iteration_1 add buggy code at line 52 Diagnostic: 
 -  
 + tokens.add(  "-  ");  tokens.add( "-  "); eatTheRest = true; 
 ----------------------------------------------------------------------------------------------------
Cli2 -  FL is ranked in the 3
iteration_1 add buggy code at line 52 Diagnostic: 
 -  
 + tokens.add(  "u  ");  tokens.add( "u  "); eatTheRest = true; 
 ----------------------------------------------------------------------------------------------------
Cli2 -  FL is ranked in the 3
iteration_1 add buggy code at line 52 Diagnostic: 
 -  
 +     eatTheRest = true; 
 ----------------------------------------------------------------------------------------------------
Cli2 -  FL is ranked in the 2
iteration_2 replace buggy code at line 51 Diagnostic: 
 -  this.eatTheRest  =  false;  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>(tokens.size());  
 + this.eatTheRest = true; tokens = new ArrayList < Option>(tokens.size()); 
 ----------------------------------------------------------------------------------------------------
Cli2 -  FL is ranked in the 2
iteration_2 replace buggy code at line 51 Diagnostic: 
 -  this.eatTheRest  =  false;  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  
 + this.eatTheRest = true; ArrayList < Option> tokens = new ArrayList < Option>(); 
 ----------------------------------------------------------------------------------------------------
Cli2 -  FL is ranked in the 2
iteration_2 replace buggy code at line 51 Diagnostic: 
 -  this.eatTheRest  =  false;  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  
 + this.eatTheRest = true; tokens = new ArrayList < Option>(); 
 ----------------------------------------------------------------------------------------------------
Cli2 -  FL is ranked in the 2
iteration_2 replace buggy code at line 51 Diagnostic: 
 -  this.eatTheRest  =  false;  ArrayList  <  Option>  tokens  =  new  ArrayList  <  Option>();  this.eatTheRest  =  false;  
 + ArrayList < Option> tokens = new ArrayList < Option>(); this.eatTheRest = true; 
 ----------------------------------------------------------------------------------------------------
Cli2 -  FL is ranked in the 2
iteration_2 replace buggy code at line 51 Diagnostic: 
 -  this.eatTheRest  =  false;  this.eatTheRest  =  false;  
 + this.eatTheRest = true; this.eatTheRest = true; 
 ----------------------------------------------------------------------------------------------------
Cli2 -  FL is ranked in the 2
iteration_1 replace buggy code at line 51 Diagnostic: 
 -  this.eatTheRest  =  false;  
 + this.eatTheRest = true; 
 ----------------------------------------------------------------------------------------------------
repair_iteration/Cli2/2/iteration_0/plausible.csv
Math44 -  FL is ranked in the 40
iteration_2 replace buggy code at line 287 Diagnostic: 
 -      Iterator  <  EventState>  iterator  =  eventsStates.iterator();  Iterator  <  EventState>  iterator  =  eventsStates.iterator();  isLastStep  =  false;  
 + Iterator < EventState> iterator = eventsStates.iterator(); isLastStep = false; 
 ----------------------------------------------------------------------------------------------------
Math44 -  FL is ranked in the 40
iteration_1 replace buggy code at line 287 Diagnostic: 
 -    Iterator  <  EventState>  iterator  =  eventsStates.iterator();  
 + Iterator < EventState> iterator = this.eventsStates.iterator(); 
 ----------------------------------------------------------------------------------------------------
repair_iteration/Math44/40/iteration_0/plausible.csv
Math44 -  FL is ranked in the 36
iteration_2 replace buggy code at line 283 Diagnostic: 
 -  if(previousT  >  currentT)  {  
 + if(currentT > previousT) { 
 ----------------------------------------------------------------------------------------------------
Math44 -  FL is ranked in the 36
iteration_2 replace buggy code at line 283 Diagnostic: 
 -  if(eventsStates.size()  ==  1)  {  
 + if(eventsStates.size() > 1) { 
 ----------------------------------------------------------------------------------------------------
Math44 -  FL is ranked in the 36
iteration_2 replace buggy code at line 283 Diagnostic: 
 -  if(eventsStates.size()  ==  1)  {  
 + if(eventsStates.size()!= 1) { 
 ----------------------------------------------------------------------------------------------------
Math44 -  FL is ranked in the 36
iteration_2 replace buggy code at line 283 Diagnostic: 
 -  if(eventsStates.size()  ==  1)  {  
 + if(eventsStates.size() >= 1) { 
 ----------------------------------------------------------------------------------------------------
repair_iteration/Math44/36/iteration_0/plausible.csv
repair_iteration/Math44/36/iteration_0/plausible.csv
Math95 -  FL is ranked in the 4
iteration_2 replace buggy code at line 147 Diagnostic: 
 -  ret  =  d  /(p  -  2.0);  p  =  d  /(p  -  2.0);  
 + ret = d /(p * 2.0); p = d /(p - 2.0); 
 ----------------------------------------------------------------------------------------------------
Math95 -  FL is ranked in the 4
iteration_2 add buggy code at line 147 Diagnostic: 
 -  
 + ret    =    p    /(d    -    2.0);    d  =  p  /(d  -  2.0);  ret = p /(d - 2.0); d = p /(d - 2.0); 
 ----------------------------------------------------------------------------------------------------
Math95 -  FL is ranked in the 4
iteration_2 add buggy code at line 147 Diagnostic: 
 -  
 + ret    =    p    /(d    -    2.0);    d  =  p  /(d  -  2.0);  d = p /(d - 2.0); d = p /(d - 2.0); 
 ----------------------------------------------------------------------------------------------------
Math95 -  FL is ranked in the 4
iteration_2 replace buggy code at line 147 Diagnostic: 
 -  ret  =  d  /(p  -  1.0);  
 + ret = d /(d * 1.0); 
 ----------------------------------------------------------------------------------------------------
Math95 -  FL is ranked in the 4
iteration_2 add buggy code at line 147 Diagnostic: 
 -  
 + ret    =    d    /(p    -    2.0);    p  =  d  /(p  -  2.0);  d = d /(p - 2.0); p = d /(p - 2.0); 
 ----------------------------------------------------------------------------------------------------
Math95 -  FL is ranked in the 4
iteration_2 add buggy code at line 147 Diagnostic: 
 -  
 + ret    =    d    /(p    -    2.0);    ret  =  d  /(p  -  2.0);  d = d /(p - 2.0); ret = d /(p - 2.0); 
 ----------------------------------------------------------------------------------------------------
Math95 -  FL is ranked in the 4
iteration_2 replace buggy code at line 147 Diagnostic: 
 -  ret  =  p  /(d  -  1.0);  
 + ret = p /(d * 1.0); 
 ----------------------------------------------------------------------------------------------------
Math95 -  FL is ranked in the 4
iteration_2 add buggy code at line 147 Diagnostic: 
 -  
 + ret    =    d    /(p    -    2.0);    ret  =  d  /(p  -  3.0);  d = d /(p - 3.0); ret = d /(p - 3.0); 
 ----------------------------------------------------------------------------------------------------
Math95 -  FL is ranked in the 4
iteration_2 add buggy code at line 147 Diagnostic: 
 -  
 + ret    =    d    /(p    -    2.0);    ret  =  d  /(p  -  3.0);  d = d /(p - 2.0); ret = d /(p - 3.0); 
 ----------------------------------------------------------------------------------------------------
Math95 -  FL is ranked in the 4
iteration_2 replace buggy code at line 147 Diagnostic: 
 -      ret  =  getNumeratorDegreesOfFreedom();  ret  =  getNumeratorDegreesOfFreedom();  
 + ret = getDenominatorDegreesOfFreedom(); ret = getNumeratorDegreesOfFreedom(); 
 ----------------------------------------------------------------------------------------------------
Math95 -  FL is ranked in the 4
iteration_2 add buggy code at line 147 Diagnostic: 
 -  
 + ret  =  d  /(p  -  1.0);  d = d /(p - 1.0); 
 ----------------------------------------------------------------------------------------------------
Math95 -  FL is ranked in the 4
iteration_2 replace buggy code at line 147 Diagnostic: 
 -      ret  =  getNumeratorDegreesOfFreedom();  d  =  getNumeratorDegreesOfFreedom();  
 + ret = getDenominatorDegreesOfFreedom(); d = getNumeratorDegreesOfFreedom(); 
 ----------------------------------------------------------------------------------------------------
Math95 -  FL is ranked in the 4
iteration_2 replace buggy code at line 147 Diagnostic: 
 -  ret  =  d  /(d  <  <  1.0);  
 + ret = d /(d + 1.0); 
 ----------------------------------------------------------------------------------------------------
Math95 -  FL is ranked in the 4
iteration_2 replace buggy code at line 147 Diagnostic: 
 -      ret  =  getNumeratorDegreesOfFreedom();  d  =  getNumeratorDegreesOfFreedom();  
 + ret = getNumeratorDegreesOfFreedom(); d = getDenominatorDegreesOfFreedom(); 
 ----------------------------------------------------------------------------------------------------
Math95 -  FL is ranked in the 4
iteration_2 replace buggy code at line 147 Diagnostic: 
 -      ret  =  getNumeratorDegreesOfFreedom();  d  =  getNumeratorDegreesOfFreedom();  
 + ret = getDenominatorDegreesOfFreedom(); d = getDenominatorDegreesOfFreedom(); 
 ----------------------------------------------------------------------------------------------------
Math95 -  FL is ranked in the 4
iteration_2 replace buggy code at line 147 Diagnostic: 
 -  ret  =  p  /(d  -  1.0);  
 + ret = p /(d / 1.0); 
 ----------------------------------------------------------------------------------------------------
Math95 -  FL is ranked in the 4
iteration_2 replace buggy code at line 147 Diagnostic: 
 -      ret  =  getNumeratorDegreesOfFreedom();  ret  =  getNumeratorDegreesOfFreedom();  
 + ret = getNumeratorDegreesOfFreedom(); ret = getDenominatorDegreesOfFreedom(); 
 ----------------------------------------------------------------------------------------------------
Math95 -  FL is ranked in the 4
iteration_2 replace buggy code at line 147 Diagnostic: 
 -      ret  =  getNumeratorDegreesOfFreedom();  ret  =  getNumeratorDegreesOfFreedom();  
 + ret = getDenominatorDegreesOfFreedom(); ret = getDenominatorDegreesOfFreedom(); 
 ----------------------------------------------------------------------------------------------------
Math95 -  FL is ranked in the 4
iteration_2 replace buggy code at line 147 Diagnostic: 
 -  ret  =  d  /(p  -  1.0);  
 + ret = d /(p * 1.0); 
 ----------------------------------------------------------------------------------------------------
Math95 -  FL is ranked in the 4
iteration_2 replace buggy code at line 147 Diagnostic: 
 -      d  =  getNumeratorDegreesOfFreedom();  ret  =  getNumeratorDegreesOfFreedom();  
 + d = getNumeratorDegreesOfFreedom(); ret = getDenominatorDegreesOfFreedom(); 
 ----------------------------------------------------------------------------------------------------
Math95 -  FL is ranked in the 4
iteration_2 replace buggy code at line 147 Diagnostic: 
 -  ret  =  p  /(d  -  2.0);  p  =  p  /(d  -  2.0);  
 + ret = p /(d / 2.0); p = p /(d / 2.0); 
 ----------------------------------------------------------------------------------------------------
Math95 -  FL is ranked in the 4
iteration_2 replace buggy code at line 147 Diagnostic: 
 -      d  =  getNumeratorDegreesOfFreedom();  ret  =  getNumeratorDegreesOfFreedom();  
 + d = getDenominatorDegreesOfFreedom(); ret = getNumeratorDegreesOfFreedom(); 
 ----------------------------------------------------------------------------------------------------
Math95 -  FL is ranked in the 4
iteration_2 add buggy code at line 147 Diagnostic: 
 -  
 + ret    =    p    /(d    -    2.0);    d  =  p  /(d  -  2.0);  ret = d /(d - 2.0); d = p /(d - 2.0); 
 ----------------------------------------------------------------------------------------------------
Math95 -  FL is ranked in the 4
iteration_2 replace buggy code at line 147 Diagnostic: 
 -  ret  =  getNumberDenominatorDegreesOfFreedom()  /  denominatorDegreesOfFreedom;  
 + ret = getDenominatorDegreesOfFreedom() / denominatorDegreesOfFreedom; 
 ----------------------------------------------------------------------------------------------------
Math95 -  FL is ranked in the 4
iteration_1 replace buggy code at line 147 Diagnostic: 
 -  ret  =  d  /(p  -  2.0);  
 + ret = d /(p * 2.0); 
 ----------------------------------------------------------------------------------------------------
Math95 -  FL is ranked in the 4
iteration_1 replace buggy code at line 147 Diagnostic: 
 -  ret  =  d  /(p  -  2.0);  
 + ret = d /(p + 2.0); 
 ----------------------------------------------------------------------------------------------------
Math95 -  FL is ranked in the 4
iteration_1 add buggy code at line 147 Diagnostic: 
 -  
 + ret  =  d  /(p  -  2.0);  d = d /(p - 2.0); 
 ----------------------------------------------------------------------------------------------------
Math95 -  FL is ranked in the 4
iteration_1 replace buggy code at line 147 Diagnostic: 
 -  ret  =  d  /(p  -  2.0);  
 + ret = d /(p / 2.0); 
 ----------------------------------------------------------------------------------------------------
Math95 -  FL is ranked in the 4
iteration_1 replace buggy code at line 147 Diagnostic: 
 -  ret  =  p  /(d  -  2.0);  
 + ret = p /(d / 2.0); 
 ----------------------------------------------------------------------------------------------------
Math95 -  FL is ranked in the 4
iteration_1 replace buggy code at line 147 Diagnostic: 
 -    ret  =  getNumeratorDegreesOfFreedom();  
 + ret = getDenominatorDegreesOfFreedom(); 
 ----------------------------------------------------------------------------------------------------
Math95 -  FL is ranked in the 4
iteration_1 replace buggy code at line 147 Diagnostic: 
 -    ret  =  getNumeratorDegreesOfFreedom();  
 + ret = getNumeratorDegreesOfFreedom() + 1; 
 ----------------------------------------------------------------------------------------------------
repair_iteration/Math95/4/iteration_0/plausible.csv
Math95 -  FL is ranked in the 5
iteration_2 replace buggy code at line 148 Diagnostic: 
 -  return  ret  *  denominatorDegreesOfFreedom;  
 + return p * denominatorDegreesOfFreedom; 
 ----------------------------------------------------------------------------------------------------
Math95 -  FL is ranked in the 5
iteration_2 replace buggy code at line 148 Diagnostic: 
 -  return  p  /  denominatorDegrees_OfFreedom;  
 + return p / d; 
 ----------------------------------------------------------------------------------------------------
Math95 -  FL is ranked in the 5
iteration_2 replace buggy code at line 148 Diagnostic: 
 -  return  ret  /  p;  
 + return d / p; 
 ----------------------------------------------------------------------------------------------------
Math95 -  FL is ranked in the 5
iteration_1 replace buggy code at line 148 Diagnostic: 
 -  return  ret  /  denominatorDegreesOfFreedom;  
 + return p / denominatorDegreesOfFreedom; 
 ----------------------------------------------------------------------------------------------------
Math95 -  FL is ranked in the 5
iteration_1 replace buggy code at line 148 Diagnostic: 
 -  return  ret  /  denominatorDegreesOfFreedom;  
 + return d / denominatorDegreesOfFreedom; 
 ----------------------------------------------------------------------------------------------------
Math95 -  FL is ranked in the 5
iteration_1 replace buggy code at line 148 Diagnostic: 
 -  return  ret  -  p;  
 + return d - p; 
 ----------------------------------------------------------------------------------------------------
repair_iteration/Math95/5/iteration_0/plausible.csv
repair_iteration/Math95/5/iteration_0/plausible.csv
repair_iteration/Math95/5/iteration_0/plausible.csv
repair_iteration/Math95/5/iteration_0/plausible.csv
Cli40 -  FL is ranked in the 1
iteration_2 replace buggy code at line 103 Diagnostic: 
 -  return(T)createValue(str,  str);  
 + return(T)createValue(str, PatternOptionBuilder.URL_VALUE); 
 ----------------------------------------------------------------------------------------------------
Cli40 -  FL is ranked in the 1
iteration_1 replace buggy code at line 103 Diagnostic: 
 -  return  this;  
 + return(T)createURL(str); 
 ----------------------------------------------------------------------------------------------------
Cli40 -  FL is ranked in the 2
iteration_2 add buggy code at line 97 Diagnostic: 
 -  
 +         else    if(PatternOptionBuilder.URL_VALUE    ==    clazz)    {    return    (T)createURL(str);    }    else  if(PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)createURL(str);  }  else if(PatternOptionBuilder.URL_VALUE!= clazz) { return (T)createURL(str); } 
 ----------------------------------------------------------------------------------------------------
Cli40 -  FL is ranked in the 2
iteration_1 replace buggy code at line 97 Diagnostic: 
 -  else  if(PatternOptionBuilder.URL_VALUE  >=  clazz)  {  
 + else if(PatternOptionBuilder.URL_VALUE == clazz || PatternOptionBuilder.URL_VALUE!= clazz) { 
 ----------------------------------------------------------------------------------------------------
Cli40 -  FL is ranked in the 2
iteration_1 replace buggy code at line 97 Diagnostic: 
 -  else  if(PatternOptionBuilder.URL_VALUE  >=  clazz)  {  
 + else if(PatternOptionBuilder.URL_VALUE!= clazz || PatternOptionBuilder.URL_VALUE == clazz) { 
 ----------------------------------------------------------------------------------------------------
Cli40 -  FL is ranked in the 2
iteration_1 add buggy code at line 97 Diagnostic: 
 -  
 +     else  if(PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)createURL(str);  }  else if(PatternOptionBuilder.URL_VALUE!= clazz) { return (T)createURL(str); } 
 ----------------------------------------------------------------------------------------------------
Lang26 -  FL is ranked in the 3
iteration_1 replace buggy code at line 820 Diagnostic: 
 -  Calendar  c  =  new  GregorianCalendar(mDaylight);  
 + Calendar c = new GregorianCalendar(mLocale); 
 ----------------------------------------------------------------------------------------------------
repair_iteration/Closure73/8/iteration_0/plausible.csv
Csv4 -  FL is ranked in the 1
iteration_1 replace buggy code at line 288 Diagnostic: 
 -  return(this.headerMap!=  null)?  null  :  new  LinkedHashMap  <  String,  Integer>(this.headerMap);  
 + return(this.headerMap == null)? null : new LinkedHashMap < String, Integer>(this.headerMap); 
 ----------------------------------------------------------------------------------------------------
JacksonCore17 -  FL is ranked in the 46
iteration_2 replace buggy code at line 1883 Diagnostic: 
 -  if(ch  <  =  SURR2_LAST)  {  if(ch  >  MAX_BYTES_TO_BUFFER)  {  return  inputOffset;  }  
 + if(ch == SURR2_LAST) { if(ch > MAX_BYTES_TO_BUFFER) { return inputOffset; } 
 ----------------------------------------------------------------------------------------------------
JacksonCore17 -  FL is ranked in the 46
iteration_2 replace buggy code at line 1883 Diagnostic: 
 -  if(ch  <  =  SURR2_LAST)  {  if(ch  >  MAX_BYTES_TO_BUFFER)  {  return  inputOffset;  }  
 + if(ch < MAX_BYTES_TO_BUFFER) { if(ch > MAX_BYTES_TO_BUFFER) { return inputOffset; } 
 ----------------------------------------------------------------------------------------------------
JacksonCore17 -  FL is ranked in the 46
iteration_2 replace buggy code at line 1883 Diagnostic: 
 -  if(ch  <  =  SURR2_LAST)  {  if(ch  >  MAX_BYTES_TO_BUFFER)  {  return  inputOffset;  }  
 + if(ch < MAX_BYTES_TO_BUFFER) { if(ch > SURR2_LAST) { return inputOffset; } 
 ----------------------------------------------------------------------------------------------------
JacksonCore17 -  FL is ranked in the 46
iteration_2 replace buggy code at line 1883 Diagnostic: 
 -  if(ch  <  =  SURR2_LAST)  {  if(inputEnd  >  MAX_BYTES_TO_BUFFER)  {  return  inputOffset+1;  }  
 + if(ch == SURR2_LAST) { if(inputEnd > MAX_BYTES_TO_BUFFER) { return inputOffset+1; } 
 ----------------------------------------------------------------------------------------------------
JacksonCore17 -  FL is ranked in the 46
iteration_2 replace buggy code at line 1883 Diagnostic: 
 -  if(ch  <  =  SURR2_LAST)  {  if(inputEnd  >  MAX_BYTES_TO_BUFFER)  {  return  inputOffset+1;  }  
 + if(ch < MAX_BYTES_TO_BUFFER) { if(inputEnd > MAX_BYTES_TO_BUFFER) { return inputOffset+1; } 
 ----------------------------------------------------------------------------------------------------
JacksonCore17 -  FL is ranked in the 46
iteration_2 replace buggy code at line 1883 Diagnostic: 
 -  if(ch  >  MAX_BYTES_TO_BUFFER)  {  
 + if(ch == MAX_BYTES_TO_BUFFER) { 
 ----------------------------------------------------------------------------------------------------
JacksonCore17 -  FL is ranked in the 46
iteration_2 replace buggy code at line 1883 Diagnostic: 
 -  if(ch  <  =  SURR2_LAST)  {  if(inputEnd  >  MAX_BYTES_TO_BUFFER)  {  return  inputOffset+1;  }  
 + if(ch < SURR1_FIRST || ch > SURR2_LAST) { if(inputEnd > MAX_BYTES_TO_BUFFER) { return inputOffset+1; } 
 ----------------------------------------------------------------------------------------------------
JacksonCore17 -  FL is ranked in the 46
iteration_2 replace buggy code at line 1883 Diagnostic: 
 -  if(ch  <  =  SURR2_LAST)  {  if(inputEnd  <  =  MAX_BYTES_TO_BUFFER)  {  return  inputOffset;  }  
 + if(ch < SURR1_FIRST || ch > SURR2_LAST) { if(inputEnd < MAX_BYTES_TO_BUFFER) { return inputOffset; } 
 ----------------------------------------------------------------------------------------------------
JacksonCore17 -  FL is ranked in the 46
iteration_2 replace buggy code at line 1883 Diagnostic: 
 -  if(ch  <  =  SURR2_LAST)  {  if(inputEnd  <  =  MAX_BYTES_TO_BUFFER)  {  return  inputOffset+1;  }  
 + if(ch < SURR1_FIRST || ch > SURR2_LAST) { if(inputEnd < MAX_BYTES_TO_BUFFER) { return inputOffset+1; } 
 ----------------------------------------------------------------------------------------------------
JacksonCore17 -  FL is ranked in the 46
iteration_2 replace buggy code at line 1883 Diagnostic: 
 -  if(ch  >  MAX_BYTES_TO_BUFFER)  {  
 + if(ch > SURR2_LAST) { 
 ----------------------------------------------------------------------------------------------------
JacksonCore17 -  FL is ranked in the 46
iteration_2 replace buggy code at line 1883 Diagnostic: 
 -  if(ch  <  =  SURR2_LAST)  {  if(ch  >  MAX_BYTES_TO_BUFFER)  {  return  inputOffset;  }  
 + if(ch < SURR1_FIRST || ch > SURR2_LAST) { if(ch > MAX_BYTES_TO_BUFFER) { return inputOffset; } 
 ----------------------------------------------------------------------------------------------------
JacksonCore17 -  FL is ranked in the 46
iteration_2 replace buggy code at line 1883 Diagnostic: 
 -  if(ch  <  =  SURR2_LAST)  {  if(ch  >  MAX_BYTES_TO_BUFFER)  {  return  inputOffset;  }  
 + if(ch < SURR2_LAST) { if(ch > MAX_BYTES_TO_BUFFER) { return inputOffset; } 
 ----------------------------------------------------------------------------------------------------
JacksonCore17 -  FL is ranked in the 46
iteration_1 replace buggy code at line 1883 Diagnostic: 
 -  if(ch  <  =  SURR1_FIRST  ||  ch  >  SURR2_LAST)  {  
 + if(ch == SURR1_FIRST || ch == SURR2_LAST) { 
 ----------------------------------------------------------------------------------------------------
JacksonCore17 -  FL is ranked in the 46
iteration_1 replace buggy code at line 1883 Diagnostic: 
 -  if(ch  >=  SURR2_FIRST)  {  
 + if(ch == SURR2_FIRST || ch > SURR2_LAST) { 
 ----------------------------------------------------------------------------------------------------
JacksonCore17 -  FL is ranked in the 46
iteration_1 replace buggy code at line 1883 Diagnostic: 
 -  if(ch  >  SURR1_FIRST  ||  ch  <  SURR2_LAST)  {  
 + if(ch == SURR1_FIRST || ch >= SURR2_LAST) { 
 ----------------------------------------------------------------------------------------------------
JacksonCore17 -  FL is ranked in the 46
iteration_1 replace buggy code at line 1883 Diagnostic: 
 -  if(ch  <  =  SURR1_FIRST)  {  
 + if(ch == SURR1_FIRST) { 
 ----------------------------------------------------------------------------------------------------
JacksonCore17 -  FL is ranked in the 46
iteration_1 replace buggy code at line 1883 Diagnostic: 
 -  if(ch  <  =  SURR2_FIRST)  {  
 + if(ch == SURR2_FIRST) { 
 ----------------------------------------------------------------------------------------------------
JacksonCore17 -  FL is ranked in the 46
iteration_1 replace buggy code at line 1883 Diagnostic: 
 -  if(ch  <  =  SURR2_LAST)  {  
 + if(ch == SURR2_LAST) { 
 ----------------------------------------------------------------------------------------------------
JacksonCore17 -  FL is ranked in the 46
iteration_1 replace buggy code at line 1883 Diagnostic: 
 -  if(ch  <  =  SURR2_LAST)  {  
 + if(ch < MAX_BYTES_TO_BUFFER) { 
 ----------------------------------------------------------------------------------------------------
JacksonCore17 -  FL is ranked in the 46
iteration_1 replace buggy code at line 1883 Diagnostic: 
 -  if(ch  <  =  SURR1_FIRST)  {  
 + if(ch < SURR1_FIRST) { 
 ----------------------------------------------------------------------------------------------------
JacksonCore17 -  FL is ranked in the 46
iteration_1 replace buggy code at line 1883 Diagnostic: 
 -  if(ch  <  =  SURR2_LAST)  {  
 + if(ch < MAX_BYTES_TO_BUFFER || ch > SURR2_LAST) { 
 ----------------------------------------------------------------------------------------------------
repair_iteration/JacksonCore17/46/iteration_0/plausible.csv
JacksonCore17 -  FL is ranked in the 4
iteration_2 replace buggy code at line 535 Diagnostic: 
 -  text.getChars(0,  offset+len2,  buf,  len2);  text.getChars(0,  offset+len2,  buf,  len2);  
 + if(len2 == 0) { text.getChars(0, offset+len2, buf, len2); text.getChars(0, offset+len2, buf, len2); } 
 ----------------------------------------------------------------------------------------------------
JacksonCore17 -  FL is ranked in the 4
iteration_2 replace buggy code at line 535 Diagnostic: 
 -  text.getChars(0,  offset+len2,  buf,  len2);  text.getChars(0,  offset+len2,  buf,  len2);  
 + if(len2 < 0) { text.getChars(0, offset+len2, buf, len2); text.getChars(0, offset+len2, buf, len2); } 
 ----------------------------------------------------------------------------------------------------
JacksonCore17 -  FL is ranked in the 4
iteration_2 replace buggy code at line 535 Diagnostic: 
 -  text.getChars(0,  offset+len2,  buf,  0);  text.getChars(0,  offset+len2,  buf,  0);  
 + if(len2 == 0) { text.getChars(0, offset+len2, buf, 0); text.getChars(0, offset+len2, buf, 0); } 
 ----------------------------------------------------------------------------------------------------
JacksonCore17 -  FL is ranked in the 4
iteration_2 replace buggy code at line 535 Diagnostic: 
 -  if(len2  >  0)  {  text.getChars(0,  offset+len2,  buf,  len2);  }  
 + if(len2 < 0) { text.getChars(0, offset+len2, buf, len2); } 
 ----------------------------------------------------------------------------------------------------
JacksonCore17 -  FL is ranked in the 4
iteration_1 replace buggy code at line 535 Diagnostic: 
 -  text.getChars(0,  offset+len2,  buf,  0);  
 + text.getChars(0, len2, buf, 0); 
 ----------------------------------------------------------------------------------------------------
repair_iteration/JacksonCore17/4/iteration_0/plausible.csv
repair_iteration/JacksonCore17/5/iteration_0/plausible.csv
repair_iteration/JacksonCore17/5/iteration_0/plausible.csv
JacksonCore17 -  FL is ranked in the 1
iteration_1 replace buggy code at line 525 Diagnostic: 
 -  char[]  buf  =  text;  
 + char[] buf = text.toCharArray(); 
 ----------------------------------------------------------------------------------------------------
JacksonCore17 -  FL is ranked in the 1
iteration_1 replace buggy code at line 525 Diagnostic: 
 -  final  char[]  buf  =  text;  
 + final char[] buf = text.toCharArray(); 
 ----------------------------------------------------------------------------------------------------
JacksonCore17 -  FL is ranked in the 2
iteration_2 replace buggy code at line 533 Diagnostic: 
 -  while(buf!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  
 + while(buf == null && isEnabled(Feature.QUOTE_FIELD_NAMES)) { 
 ----------------------------------------------------------------------------------------------------
JacksonCore17 -  FL is ranked in the 2
iteration_2 replace buggy code at line 533 Diagnostic: 
 -  while(buf!=  null  &&  buf.length  <  =  0)  {  
 + while(buf!= null && buf.length == 0) { 
 ----------------------------------------------------------------------------------------------------
JacksonCore17 -  FL is ranked in the 2
iteration_2 replace buggy code at line 533 Diagnostic: 
 -  _verifyValueWrite(  "write  text  value  ");  if(buf!=  null)  {  writeRaw(buf,  0,  buf.length);  }  
 + if(buf == null) { _verifyValueWrite( "write text value "); if(buf!= null) { writeRaw(buf, 0, buf.length); } 
 ----------------------------------------------------------------------------------------------------
JacksonCore17 -  FL is ranked in the 2
iteration_2 replace buggy code at line 533 Diagnostic: 
 -  if(buf!=  null)  {  if(_outputTail  >=  _outputEnd)  {  writeRaw(buf,  0,  buf.length);  }  
 + if(buf == null) { if(_outputTail >= _outputEnd) { writeRaw(buf, 0, buf.length); } 
 ----------------------------------------------------------------------------------------------------
JacksonCore17 -  FL is ranked in the 2
iteration_2 replace buggy code at line 533 Diagnostic: 
 -  _verifyValueWrite(  "write  text  value  ");  if(buf!=  null)  {  throw  new  IllegalArgumentException(  "  ");  }  
 + if(buf == null) { _verifyValueWrite( "write text value "); if(buf!= null) { throw new IllegalArgumentException( " "); } 
 ----------------------------------------------------------------------------------------------------
JacksonCore17 -  FL is ranked in the 2
iteration_2 replace buggy code at line 533 Diagnostic: 
 -  while(buf!=  null  &&  len  >  0)  {  if(buf!=  null  &&  len  >  0)  {  for(int  len  =  buf.length;  len  <  len;  len++)  {  writeRaw(buf,  0,  len);  }  
 + while(buf!= null && len < 0) { if(buf!= null && buf.length > 0) { writeRaw(buf, 0, buf.length); } 
 ----------------------------------------------------------------------------------------------------
JacksonCore17 -  FL is ranked in the 2
iteration_2 replace buggy code at line 533 Diagnostic: 
 -  while(buf!=  null  &&  buf.length  >=  0)  {  
 + while(buf!= null && buf.length < 0) { 
 ----------------------------------------------------------------------------------------------------
JacksonCore17 -  FL is ranked in the 2
iteration_2 replace buggy code at line 533 Diagnostic: 
 -  while  (offset  <  =  0)  {  
 + while (offset < 0) { 
 ----------------------------------------------------------------------------------------------------
JacksonCore17 -  FL is ranked in the 2
iteration_2 replace buggy code at line 533 Diagnostic: 
 -  while  (offset  <  =  0)  {  
 + while (offset == 0) { 
 ----------------------------------------------------------------------------------------------------
JacksonCore17 -  FL is ranked in the 2
iteration_2 replace buggy code at line 533 Diagnostic: 
 -  while(buf.length  >  0)  {  if(buf.length  >  0)  {  while(buf.length  >  0)  {  }  
 + while(buf == null) { if(buf.length > 0) { } 
 ----------------------------------------------------------------------------------------------------
JacksonCore17 -  FL is ranked in the 2
iteration_2 replace buggy code at line 533 Diagnostic: 
 -  _verifyValueWrite(  "write  text  value  ");  if(buf!=  null)  {  writeRaw(buf,  0,  buf.length);  }  
 + if(text.length() == 0) { _verifyValueWrite( "write text value "); if(buf!= null) { writeRaw(buf, 0, buf.length); } 
 ----------------------------------------------------------------------------------------------------
JacksonCore17 -  FL is ranked in the 2
iteration_1 replace buggy code at line 533 Diagnostic: 
 -  while(buf!=  null  &&  buf.length  >  0)  {  
 + while(buf == null && buf.length > 0) { 
 ----------------------------------------------------------------------------------------------------
JacksonCore17 -  FL is ranked in the 2
iteration_1 replace buggy code at line 533 Diagnostic: 
 -  while(buf!=  null  &&  len  >  0)  {  
 + while(buf!= null && len < 0) { 
 ----------------------------------------------------------------------------------------------------
JacksonCore17 -  FL is ranked in the 2
iteration_1 replace buggy code at line 533 Diagnostic: 
 -  while(buf.length  >  0)  {  
 + while(buf.length < 0) { 
 ----------------------------------------------------------------------------------------------------
JacksonCore17 -  FL is ranked in the 2
iteration_1 replace buggy code at line 533 Diagnostic: 
 -  while(buf.length  >  0)  {  
 + while(buf.length == 0) { 
 ----------------------------------------------------------------------------------------------------
JacksonCore17 -  FL is ranked in the 2
iteration_1 replace buggy code at line 533 Diagnostic: 
 -  while(buf!=  null)  {  
 + while(buf == null) { 
 ----------------------------------------------------------------------------------------------------
Closure115 -  FL is ranked in the 1
iteration_2 replace buggy code at line 731 Diagnostic: 
 -      cArg  =  fnParam.getNext();  cArg  =  fnParam.getNext();  
 + if(cArg.getType() == Token.FUNCTION) { cArg = fnParam.getNext(); cArg = cArg.getNext(); } 
 ----------------------------------------------------------------------------------------------------
Closure115 -  FL is ranked in the 1
iteration_2 replace buggy code at line 731 Diagnostic: 
 -      cArg  =  fnParam.getFirstChild();  cArg  =  fnParam.getLastChild();  
 + if(cArg.getType() == Token.FUNCTION) { cArg = fnParam.getFirstChild(); cArg = fnParam.getLastChild(); } 
 ----------------------------------------------------------------------------------------------------
Closure115 -  FL is ranked in the 1
iteration_2 replace buggy code at line 731 Diagnostic: 
 -      cArg  =  fnParam.getFirstChild();  cArg  =  fnParam.getNext();  
 + if(cArg.getType() == Token.FUNCTION) { cArg = fnParam.getFirstChild(); cArg = cArg.getNext(); } 
 ----------------------------------------------------------------------------------------------------
Closure115 -  FL is ranked in the 1
iteration_2 replace buggy code at line 731 Diagnostic: 
 -      cArg  =  fnParam.getFirstChild();  cArg  =  fnParam.getFirstChild();  
 + if(cArg.getType() == Token.FUNCTION) { cArg = fnParam.getFirstChild(); cArg = fnParam.getFirstChild(); } 
 ----------------------------------------------------------------------------------------------------
Closure115 -  FL is ranked in the 1
iteration_2 replace buggy code at line 731 Diagnostic: 
 -      cArg  =  fnParam.getNext();  cArg  =  fnParam.getNext();  
 + if(cArg.getType() == Token.FUNCTION) { cArg = fnParam.getNext(); cArg = fnParam.getNext(); } 
 ----------------------------------------------------------------------------------------------------
repair_iteration/Math50/1/iteration_0/plausible.csv
repair_iteration/Math50/1/iteration_0/plausible.csv
Lang59 -  FL is ranked in the 1
iteration_1 replace buggy code at line 879 Diagnostic: 
 -    if(width  >  0)  {  for(int  i  =  0;  i  <  width;  i++)  {  ensureCapacity(i  +  width);  }  
 + if(width > 0) { for(int i = 0; i < width; i++) { ensureCapacity(i + padChar); } 
 ----------------------------------------------------------------------------------------------------
Lang59 -  FL is ranked in the 1
iteration_1 replace buggy code at line 879 Diagnostic: 
 -    if(width  >  0)  {  for(int  i  =  0;  i  <  width;  i++)  {  ensureCapacity(i  +  length);  }  
 + if(width > 0) { for(int i = 0; i < width; i++) { ensureCapacity(size + padChar); } 
 ----------------------------------------------------------------------------------------------------
Closure46 -  FL is ranked in the 6
iteration_2 replace buggy code at line 142 Diagnostic: 
 -  if(that.isRecordType()  ||  that.isConstructor())  {  if(That.isRecordType()  ||  that.isConstructor())  {  
 + if(this.isRecordType() || that.isRecordType()) { 
 ----------------------------------------------------------------------------------------------------
Closure46 -  FL is ranked in the 6
iteration_2 replace buggy code at line 142 Diagnostic: 
 -  if(that.isUnknownType()  ||!that.isConstructor())  {  
 + if(!that.isUnknownType() ||!that.isConstructor()) { 
 ----------------------------------------------------------------------------------------------------
Closure46 -  FL is ranked in the 6
iteration_2 replace buggy code at line 142 Diagnostic: 
 -  if(that.isRecordType()  ||!that.isConstructor())  {  
 + if(!that.isRecordType() ||!that.isConstructor()) { 
 ----------------------------------------------------------------------------------------------------
Closure46 -  FL is ranked in the 6
iteration_2 replace buggy code at line 142 Diagnostic: 
 -  if(that.isRecordType()  ||!that.isConstructor())  {  
 + if(this.isRecordType() ||!that.isConstructor()) { 
 ----------------------------------------------------------------------------------------------------
Closure46 -  FL is ranked in the 6
iteration_2 replace buggy code at line 142 Diagnostic: 
 -  if(that.isRecordType()  ||!that.isUnknownType())  {  if(this.isRecordType()  ||!that.isUnknownType())  {  
 + if(this.isRecordType() ||!that.isRecordType()) { 
 ----------------------------------------------------------------------------------------------------
Closure46 -  FL is ranked in the 6
iteration_2 replace buggy code at line 142 Diagnostic: 
 -  if(that.isRecordType()  ||  that.isUnknownType())  {  if(that.isRecordType()  ||  this.isUnknownType())  {  
 + if(that.isRecordType() || this.isRecordType()) { 
 ----------------------------------------------------------------------------------------------------
Closure46 -  FL is ranked in the 6
iteration_2 replace buggy code at line 142 Diagnostic: 
 -  if(that.isRecordType()  ||  that.isInterface())  {  
 + if(this.isRecordType() || that.isInterface()) { 
 ----------------------------------------------------------------------------------------------------
Closure46 -  FL is ranked in the 6
iteration_2 replace buggy code at line 142 Diagnostic: 
 -  if(that.isConstructor()  ||  that.isRecordType()  ||!that.isUnknownType())  {  
 + if(!that.isConstructor() || that.isRecordType() ||!that.isUnknownType()) { 
 ----------------------------------------------------------------------------------------------------
Closure46 -  FL is ranked in the 6
iteration_2 replace buggy code at line 142 Diagnostic: 
 -  if(that.isRecordType())  {  if(that.isRecordType())  <  return  super.getLeastSupertype(that);  
 + if(this.isRecordType()) { if(that.isRecordType()) { return super.getLeastSupertype(that); } 
 ----------------------------------------------------------------------------------------------------
Closure46 -  FL is ranked in the 6
iteration_2 replace buggy code at line 142 Diagnostic: 
 -  if(that.isRecordType()  ||  that.isUnknownType())  {  if(this.isRecordType()  ||  that.isUnknownType())  {  
 + if(this.isRecordType() || that.isEquivalentTo(getLeastSupertype(that))) { 
 ----------------------------------------------------------------------------------------------------
Closure46 -  FL is ranked in the 6
iteration_2 replace buggy code at line 142 Diagnostic: 
 -  if(that.isRecordType()  ||  that.isUnknownType())  {  if(!that.isRecordType()  ||  that.isUnknownType())  {  
 + if(!that.isRecordType() || that.isRecordType()) { 
 ----------------------------------------------------------------------------------------------------
Closure46 -  FL is ranked in the 6
iteration_2 replace buggy code at line 142 Diagnostic: 
 -  if(that.isRecordType()  ||  that.isAllType())  {  
 + if(this.isRecordType() || that.isAllType()) { 
 ----------------------------------------------------------------------------------------------------
Closure46 -  FL is ranked in the 6
iteration_2 replace buggy code at line 142 Diagnostic: 
 -  if(that.isRecordType()  ||!that.isAllType())  {  
 + if(!that.isRecordType() ||!that.isAllType()) { 
 ----------------------------------------------------------------------------------------------------
Closure46 -  FL is ranked in the 6
iteration_2 replace buggy code at line 142 Diagnostic: 
 -  if(that.isRecordType()  ||  that.isFunctionType())  {  
 + if(this.isRecordType() || that.isFunctionType()) { 
 ----------------------------------------------------------------------------------------------------
Closure46 -  FL is ranked in the 6
iteration_2 replace buggy code at line 142 Diagnostic: 
 -  if(that.isUnknownType()  ||!that.isFunctionType())  {  
 + if(that.isFunctionType() ||!that.isFunctionType()) { 
 ----------------------------------------------------------------------------------------------------
Closure46 -  FL is ranked in the 6
iteration_2 replace buggy code at line 142 Diagnostic: 
 -  if(that.isUnknownType()  ||!that.isFunctionType())  {  
 + if(that.isUnknownType() ||!that.isUnknownType()) { 
 ----------------------------------------------------------------------------------------------------
Closure46 -  FL is ranked in the 6
iteration_2 replace buggy code at line 142 Diagnostic: 
 -  if(that.isUnknownType()  ||!that.isFunctionType())  {  
 + if(!that.isUnknownType() ||!that.isFunctionType()) { 
 ----------------------------------------------------------------------------------------------------
Closure46 -  FL is ranked in the 6
iteration_2 replace buggy code at line 142 Diagnostic: 
 -  if(that.isRecordType()  ||!that.isUnknownType())  {  if(That.isRecordType()  ||!that.isUnknownType())  {  
 + if(that!= null) { 
 ----------------------------------------------------------------------------------------------------
Closure46 -  FL is ranked in the 6
iteration_2 replace buggy code at line 142 Diagnostic: 
 -  if(that.isUnknownType())  {  
 + if(that!= null || that.isUnknownType()) { 
 ----------------------------------------------------------------------------------------------------
Closure46 -  FL is ranked in the 6
iteration_2 replace buggy code at line 142 Diagnostic: 
 -  if(that.isRecordType()  ||!that.isAllType())  {  
 + if(this.isRecordType() ||!that.isAllType()) { 
 ----------------------------------------------------------------------------------------------------
Closure46 -  FL is ranked in the 6
iteration_2 replace buggy code at line 142 Diagnostic: 
 -  if(that.isUnknownType()  &&!that.isRecordType())  {  
 + if(that!= null || that.isUnknownType() &&!that.isRecordType()) { 
 ----------------------------------------------------------------------------------------------------
Closure46 -  FL is ranked in the 6
iteration_2 replace buggy code at line 142 Diagnostic: 
 -  if(that.isUnknownType()  ||!that.isFunctionType())  {  
 + if(that!= null || that.isUnknownType() ||!that.isFunctionType()) { 
 ----------------------------------------------------------------------------------------------------
Closure46 -  FL is ranked in the 6
iteration_2 replace buggy code at line 142 Diagnostic: 
 -  if(that.isRecordType())  {  if(that.isRecordType())  {  
 + if(that!= null || that.isRecordType()) { 
 ----------------------------------------------------------------------------------------------------
Closure46 -  FL is ranked in the 6
iteration_2 replace buggy code at line 142 Diagnostic: 
 -  if(that.isUnknownType()  ||!that.isConstructor())  {  
 + if(that!= null || that.isUnknownType() ||!that.isConstructor()) { 
 ----------------------------------------------------------------------------------------------------
Closure46 -  FL is ranked in the 6
iteration_2 replace buggy code at line 142 Diagnostic: 
 -  if(that.isUnknownType()  ||  that.isFunctionType()  ||!that.isRecordType())  {  
 + if(that.isRecordType() || that.isUnknownType() || that.isFunctionType() ||!that.isRecordType()) { 
 ----------------------------------------------------------------------------------------------------
Closure46 -  FL is ranked in the 6
iteration_2 replace buggy code at line 142 Diagnostic: 
 -  if(that.isConstructor()  ||  that.isRecordType()  ||!that.isUnknownType())  {  
 + if(that.isConstructor() || that.isUnknownType() ||!that.isUnknownType()) { 
 ----------------------------------------------------------------------------------------------------
Closure46 -  FL is ranked in the 6
iteration_2 replace buggy code at line 142 Diagnostic: 
 -  if(that.isConstructor()  ||  that.isRecordType()  ||!that.isUnknownType())  {  
 + if(that.isUnknownType() || that.isConstructor() || that.isRecordType() ||!that.isUnknownType()) { 
 ----------------------------------------------------------------------------------------------------
Closure46 -  FL is ranked in the 6
iteration_2 replace buggy code at line 142 Diagnostic: 
 -  if(that.isConstructor()  ||  that.isRecordType()  ||!that.isUnknownType())  {  
 + if(that!= null || that.isConstructor() || that.isRecordType() ||!that.isUnknownType()) { 
 ----------------------------------------------------------------------------------------------------
Closure46 -  FL is ranked in the 6
iteration_2 replace buggy code at line 142 Diagnostic: 
 -  if(that.isConstructor()  ||  that.isUnknownType()  ||!that.isRecordType())  {  
 + if(that!= null || that.isConstructor() || that.isUnknownType() ||!that.isRecordType()) { 
 ----------------------------------------------------------------------------------------------------
Closure46 -  FL is ranked in the 6
iteration_2 replace buggy code at line 142 Diagnostic: 
 -  if(that.isUnknownType()  ||  that.isConstructor())  {  
 + if(that!= null || that.isUnknownType() || that.isConstructor()) { 
 ----------------------------------------------------------------------------------------------------
Closure46 -  FL is ranked in the 6
iteration_2 replace buggy code at line 142 Diagnostic: 
 -  if(that.isUnknownType())  {  
 + if(that.isUnknownType() || that.isSubtype(getNativeType(JSTypeNative.UNKNOWN_TYPE))) { 
 ----------------------------------------------------------------------------------------------------
Closure46 -  FL is ranked in the 6
iteration_2 replace buggy code at line 142 Diagnostic: 
 -  if(that.isRecordType()  ||!that.isAllType())  {  
 + if(that.isAllType() ||!that.isAllType()) { 
 ----------------------------------------------------------------------------------------------------
Closure46 -  FL is ranked in the 6
iteration_2 replace buggy code at line 142 Diagnostic: 
 -  if(that.isUnknownType()  ||!that.isConstructor())  {  
 + if(that.isUnknownType() ||!that.isInterface()) { 
 ----------------------------------------------------------------------------------------------------
Closure46 -  FL is ranked in the 6
iteration_1 replace buggy code at line 142 Diagnostic: 
 -  if(that.isRecordType()  ||  that.isConstructor())  {  
 + if(this.isRecordType() || that.isConstructor()) { 
 ----------------------------------------------------------------------------------------------------
Closure46 -  FL is ranked in the 6
iteration_1 replace buggy code at line 142 Diagnostic: 
 -  if(that.isRecordType()  ||!that.isUnknownType())  {  
 + if(!that.isRecordType() ||!that.isUnknownType()) { 
 ----------------------------------------------------------------------------------------------------
Closure46 -  FL is ranked in the 6
iteration_1 replace buggy code at line 142 Diagnostic: 
 -  if(that.isRecordType()  ||!that.isUnknownType())  {  
 + if(this.isRecordType() ||!that.isUnknownType()) { 
 ----------------------------------------------------------------------------------------------------
Closure46 -  FL is ranked in the 6
iteration_1 replace buggy code at line 142 Diagnostic: 
 -  if(that.isRecordType()  ||  that.isUnknownType())  {  
 + if(this.isRecordType() || that.isUnknownType()) { 
 ----------------------------------------------------------------------------------------------------
Closure46 -  FL is ranked in the 6
iteration_1 replace buggy code at line 142 Diagnostic: 
 -  if(that.isRecordType())  {  
 + if(this.isRecordType()) { 
 ----------------------------------------------------------------------------------------------------
Closure46 -  FL is ranked in the 6
iteration_1 replace buggy code at line 142 Diagnostic: 
 -  if(that.isUnknownType()  ||!that.isRecordType())  {  
 + if(that!= null || that.isUnknownType() ||!that.isRecordType()) { 
 ----------------------------------------------------------------------------------------------------
repair_iteration/Closure46/6/iteration_0/plausible.csv
repair_iteration/Closure46/6/iteration_0/plausible.csv
Math30 -  FL is ranked in the 15
iteration_2 replace buggy code at line 173 Diagnostic: 
 -  final  double  n1n2prod  =  n1  *  n2  +  1;  
 + final double n1n2prod = n1 * n2 / 1; 
 ----------------------------------------------------------------------------------------------------
repair_iteration/Math30/15/iteration_0/plausible.csv
repair_iteration/Math75/1/iteration_0/plausible.csv
repair_iteration/Math75/1/iteration_0/plausible.csv
Lang51 -  FL is ranked in the 10
iteration_2 replace buggy code at line 672 Diagnostic: 
 -  if(ch  ==  'Y'  ||  ch  ==  'H')  {  
 + if(ch == 'Y' || ch!= 'H') { 
 ----------------------------------------------------------------------------------------------------
Lang51 -  FL is ranked in the 10
iteration_2 replace buggy code at line 672 Diagnostic: 
 -  if(ch  =='s'  ||  ch  ==  'y')  {  
 + if(ch!='s' || ch == 'y') { 
 ----------------------------------------------------------------------------------------------------
Lang51 -  FL is ranked in the 10
iteration_2 replace buggy code at line 672 Diagnostic: 
 -  if(ch  ==  'y'  ||  ch  ==  'H')  {  if(ch  ==  'y'  ||  ch!=  'H')  {  
 + if(ch == 'y' || ch!= 'H') { 
 ----------------------------------------------------------------------------------------------------
Lang51 -  FL is ranked in the 10
iteration_2 replace buggy code at line 672 Diagnostic: 
 -  if(ch  ==  'e'  ||  ch  ==  'E')  {  
 + if(ch == 'e' || ch!= 'E') { 
 ----------------------------------------------------------------------------------------------------
Lang51 -  FL is ranked in the 10
iteration_1 replace buggy code at line 672 Diagnostic: 
 -  if(ch  ==  't')  {  
 + if(ch == 't' || ch == 'y') { 
 ----------------------------------------------------------------------------------------------------
Lang51 -  FL is ranked in the 12
iteration_2 replace buggy code at line 677 Diagnostic: 
 -  if(ch  ==  't'  ||  ch  ==  'y')  {  
 + if(ch == 't' || ch == 'Y') { 
 ----------------------------------------------------------------------------------------------------
repair_iteration/Lang51/12/iteration_0/plausible.csv
repair_iteration/Lang51/12/iteration_0/plausible.csv
repair_iteration/Lang51/12/iteration_0/plausible.csv
repair_iteration/Math57/4/iteration_0/plausible.csv
repair_iteration/Math57/4/iteration_0/plausible.csv
Math8 -  FL is ranked in the 5
iteration_1 replace buggy code at line 189 Diagnostic: 
 -  for(int  i  =  0;  i  <  out.length;  i++)  {  
 + for(int i = 0; i < out.length - 1; i++) { 
 ----------------------------------------------------------------------------------------------------
repair_iteration/Math8/5/iteration_0/plausible.csv
Math32 -  FL is ranked in the 4
iteration_2 replace buggy code at line 136 Diagnostic: 
 -  if(tree!=  null  &&(Boolean)tree.getAttribute())  {  if(tree  >=  null  &&(Boolean)tree.getAttribute())  {  
 + if(tree!= null && tree.getAttribute() instanceof Boolean &&(( Boolean)tree.getAttribute()).booleanValue()) { 
 ----------------------------------------------------------------------------------------------------
Math32 -  FL is ranked in the 4
iteration_2 replace buggy code at line 136 Diagnostic: 
 -  if(tree  ==  null  ||(Boolean)tree.getAttribute())  {  if(tree  ==  null  ||(Boolean)tree.getAattribute())  {  
 + if(tree == null || tree.getAttribute() == null) { 
 ----------------------------------------------------------------------------------------------------
Math32 -  FL is ranked in the 4
iteration_1 replace buggy code at line 136 Diagnostic: 
 -  if(tree!=  null)  {  
 + if(tree == null) { 
 ----------------------------------------------------------------------------------------------------
Math32 -  FL is ranked in the 4
iteration_1 replace buggy code at line 136 Diagnostic: 
 -  if(tree!=  null  &&(Boolean)tree.getAttribute())  {  
 + if(tree == null &&(Boolean)tree.getAttribute()) { 
 ----------------------------------------------------------------------------------------------------
repair_iteration/Math32/4/iteration_0/plausible.csv
repair_iteration/Math32/4/iteration_0/plausible.csv
Math85 -  FL is ranked in the 15
iteration_1 replace buggy code at line 198 Diagnostic: 
 -    if(fa  *  fb  >  0.0)  {  if(fa  *  fb  >=  0.0)  {  throw  new  ConvergenceException(  "number  of  iterations=  {  0  }    ",  initial,  lowerBound,  upperBound,  a,  fa);  }  
 + if(fa > 0.0) { if(fa * fb >= 0.0) { throw new ConvergenceException( "number of iterations= { 0 }  ", initial, lowerBound, upperBound, a, fa); } 
 ----------------------------------------------------------------------------------------------------
Math85 -  FL is ranked in the 15
iteration_1 replace buggy code at line 198 Diagnostic: 
 -    if(fa  *  fb  >  0.0)  {  if(fa  *  fb  >=  0.0)  {  throw  new  ConvergenceException(  "number  of  iterations=  {  0  }    ",  initial,  lowerBound,  upperBound,  a,  fa);  }  
 + if(initial < 0) { if(fa * fb > 0.0) { throw new ConvergenceException( "number of iterations= { 0 }  ", initial, lowerBound, upperBound, a, fa); } 
 ----------------------------------------------------------------------------------------------------
Math85 -  FL is ranked in the 15
iteration_1 replace buggy code at line 198 Diagnostic: 
 -    if(fa  *  fb  >  0.0)  {  if(fa  *  fb  >=  0.0)  {  throw  new  ConvergenceException(  "number  of  iterations=  {  0  }    ",  initial,  lowerBound,  upperBound,  a,  fa);  }  
 + if(initial < 0.0) { if(fa * fb > 0.0) { throw new ConvergenceException( "number of iterations= { 0 }  ", initial, lowerBound, upperBound, a, fa); } 
 ----------------------------------------------------------------------------------------------------
Math85 -  FL is ranked in the 15
iteration_1 replace buggy code at line 198 Diagnostic: 
 -    if(fa  *  fb  >  0.0)  {  if(fa  *  fb  >=  0.0)  {  throw  new  ConvergenceException(  "number  of  iterations=  {  0  }    ",  initial,  lowerBound,  upperBound,  a,  fa);  }  
 + if(initial < a) { if(fa > 0.0) { throw new ConvergenceException( "number of iterations= { 0 }  ", initial, lowerBound, upperBound, a, fa); } 
 ----------------------------------------------------------------------------------------------------
Math85 -  FL is ranked in the 15
iteration_1 replace buggy code at line 198 Diagnostic: 
 -    if(fa  *  fb  >  0.0)  {  if(fa  *  fb  >=  0.0)  {  throw  new  ConvergenceException(  "number  of  iterations=  {  0  },  initial  =  {  1  }    ",  fa  *  fb);  }  
 + if(fa > 0.0) { if(fa * fb >= 0.0) { throw new ConvergenceException( "number of iterations= { 0 }, maximum iterations = { 1 }  ", fa * fb); } 
 ----------------------------------------------------------------------------------------------------
Math85 -  FL is ranked in the 15
iteration_1 replace buggy code at line 198 Diagnostic: 
 -    if(fa  *  fb  >  0.0)  {  if(fa  *  fb  >=  0.0)  {  throw  new  ConvergenceException(  "number  of  iterations=  {  0  },  initial  =  {  1  }    ",  fa  *  fb);  }  
 + if(fa > 0.0) { if(fa * fb >= 0.0) { throw new ConvergenceException( "number of iterations= { 0 }, initial = { 1 }  ", fa * fb); } 
 ----------------------------------------------------------------------------------------------------
Math85 -  FL is ranked in the 15
iteration_1 replace buggy code at line 198 Diagnostic: 
 -    if(fa  *  fb  >  0.0)  {  if(fa  *  fb  >=  0.0)  {  throw  new  ConvergenceException(  "number  of  iterations=  {  0  },  initial  =  {  1  }    ",  fa  *  fb);  }  
 + if(initial < 0.0) { if(fa * fb > 0.0) { throw new ConvergenceException( "number of iterations= { 0 }, initial = { 1 }  ", fa * fb); } 
 ----------------------------------------------------------------------------------------------------
Math85 -  FL is ranked in the 15
iteration_1 replace buggy code at line 198 Diagnostic: 
 -    if(fa  *  fb  >  0.0)  {  if(fa  *  fb  >=  0.0)  {  throw  new  ConvergenceException(  "number  of  iterations=  {  0  }    ",  initial,  lowerBound,  upperBound,  a,  fa,  fb);  }  
 + if(fa > 0.0) { if(fa * fb >= 0.0) { throw new ConvergenceException( "number of iterations= { 0 }  ", initial, lowerBound, upperBound, a, fa, fb); } 
 ----------------------------------------------------------------------------------------------------
Math85 -  FL is ranked in the 15
iteration_1 replace buggy code at line 198 Diagnostic: 
 -    if(fa  *  fb  >  0.0)  {  if(fa  *  fb  >=  0.0)  {  throw  new  ConvergenceException(  "number  of  iterations=  {  0  }    ",  initial,  lowerBound,  upperBound,  a,  fa,  fb);  }  
 + if(initial < 0) { if(fa * fb > 0.0) { throw new ConvergenceException( "number of iterations= { 0 }  ", initial, lowerBound, upperBound, a, fa, fb); } 
 ----------------------------------------------------------------------------------------------------
Math85 -  FL is ranked in the 15
iteration_1 replace buggy code at line 198 Diagnostic: 
 -    if(fa  *  fb  >  0.0)  {  if(fa  *  fb  >=  0.0)  {  throw  new  ConvergenceException(  "number  of  iterations=  {  0  }    ",  initial,  lowerBound,  upperBound,  a,  fa,  fb);  }  
 + if(initial < 0.0) { if(fa * fb > 0.0) { throw new ConvergenceException( "number of iterations= { 0 }  ", initial, lowerBound, upperBound, a, fa, fb); } 
 ----------------------------------------------------------------------------------------------------
Math85 -  FL is ranked in the 15
iteration_1 replace buggy code at line 198 Diagnostic: 
 -    if(fa  *  fb  >  0.0)  {  if(fa  *  fb  >=  0.0)  {  throw  new  ConvergenceException(  "number  of  iterations=  {  0  }    ",  initial,  lowerBound,  upperBound,  a,  fa,  fb);  }  
 + if(initial < a) { if(fa > 0.0) { throw new ConvergenceException( "number of iterations= { 0 }  ", initial, lowerBound, upperBound, a, fa, fb); } 
 ----------------------------------------------------------------------------------------------------
Math85 -  FL is ranked in the 15
iteration_1 replace buggy code at line 198 Diagnostic: 
 -    if(fa  *  fb  >  0.0)  {  if(fa  *  fb  >=  0.0)  {  throw  new  ConvergenceException(  "number  of  iterations=  {  0  }    ",  initial,  lowerBound,  upperBound,  a,  fa);  }  
 + if(fa > 0.0) { if(fa * fb == 0.0) { throw new ConvergenceException( "number of iterations= { 0 }  ", initial, lowerBound, upperBound, a, fa); } 
 ----------------------------------------------------------------------------------------------------
repair_iteration/Math85/15/iteration_0/plausible.csv
repair_iteration/Lang43/1/iteration_0/plausible.csv
Closure62 -  FL is ranked in the 26
iteration_1 replace buggy code at line 97 Diagnostic: 
 -  if(excerpt.equals(LINE)&&  0  <=  charno  &&  charno  >=  sourceExcerpt.length())  {  
 + if(excerpt.equals(LINE)&& 0 <= charno || charno >= sourceExcerpt.length()) { 
 ----------------------------------------------------------------------------------------------------
Closure62 -  FL is ranked in the 26
iteration_1 replace buggy code at line 97 Diagnostic: 
 -  if(excerpt.equals(LINE)&&  0  <=  charno  &&  charno  >=  sourceExcerpt.length())  {  
 + if(excerpt.equals(LINE)|| 0 <= charno && charno >= sourceExcerpt.length()) { 
 ----------------------------------------------------------------------------------------------------
repair_iteration/Closure62/26/iteration_0/plausible.csv
repair_iteration/Closure62/26/iteration_0/plausible.csv
Gson6 -  FL is ranked in the 13
iteration_2 replace buggy code at line 67 Diagnostic: 
 -  typeAdapter  =(typeAdapter!=  null)?  null  :  typeAdapter.nullSafe();  TypeAdapter  typeAdapter  =(typeAdapter  ==  null)?  null  :  typeAdapter.nullSafe();  
 + if(typeAdapter!= null) { typeAdapter = typeAdapter.nullSafe(); typeAdapter = typeAdapter.nullSafe(); } 
 ----------------------------------------------------------------------------------------------------
Gson6 -  FL is ranked in the 13
iteration_2 replace buggy code at line 67 Diagnostic: 
 -  typeAdapter  =(typeAdapter!=  null)?  null  :  typeAdapter.nullSafe();  typeAdapter  =(typeAdapter  ==  null)?  null  :  typeAdapter.nullSafe();  
 + if(typeAdapter!= null) { typeAdapter = typeAdapter.nullSafe(); typeAdapter = typeAdapter == null? null : typeAdapter.nullSafe(); } 
 ----------------------------------------------------------------------------------------------------
Gson6 -  FL is ranked in the 13
iteration_2 replace buggy code at line 67 Diagnostic: 
 -  typeAdapter  =(typeAdapter!=  null)?  null  :  typeAdapter.nullSafe();  typeAdapter  =(typeAdapter  ==  null)?  null  :  typeAdapter.nullSafe();  
 + if(typeAdapter!= null) { typeAdapter =(typeAdapter == null)? null : typeAdapter.nullSafe(); typeAdapter =(typeAdapter == null)? null : typeAdapter.nullSafe(); } 
 ----------------------------------------------------------------------------------------------------
Gson6 -  FL is ranked in the 13
iteration_2 replace buggy code at line 67 Diagnostic: 
 -  typeAdapter  =(typeAdapter!=  null)?  null  :  typeAdapter.nullSafe();  typeAdapter  =(typeAdapter  ==  null)?  null  :  typeAdapter.nullSafe();  
 + if(typeAdapter == null) { typeAdapter =(typeAdapter == null)? null : typeAdapter.nullSafe(); typeAdapter =(typeAdapter == null)? null : typeAdapter.nullSafe(); } 
 ----------------------------------------------------------------------------------------------------
Gson6 -  FL is ranked in the 13
iteration_2 replace buggy code at line 67 Diagnostic: 
 -  typeAdapter  =(typeAdapter!=  null)?  null  :  typeAdapter.nullSafe();  typeAdapter  =(typeAdapter  ==  null)?  null  :  typeAdapter.nullSafe();  
 + if(typeAdapter!= null) { typeAdapter =(typeAdapter == null)? null : typeAdapter.nullSafe(); typeAdapter = typeAdapter == null? null : typeAdapter.nullSafe(); } 
 ----------------------------------------------------------------------------------------------------
Gson6 -  FL is ranked in the 13
iteration_2 replace buggy code at line 67 Diagnostic: 
 -  typeAdapter  =(typeAdapter!=  null)?  null  :  typeAdapter.nullSafe();  typeAdapter  =(typeAdapter  ==  null)?  null  :  typeAdapter.nullSafe();  
 + if(typeAdapter!= null) { typeAdapter =(typeAdapter == null)? null : typeAdapter.nullSafe(); } 
 ----------------------------------------------------------------------------------------------------
Gson6 -  FL is ranked in the 13
iteration_2 replace buggy code at line 67 Diagnostic: 
 -  typeAdapter  =(typeAdapter!=  null)?  null  :  typeAdapter.nullSafe();  typeAdapter  =(typeAdapter  ==  null)?  null  :  typeAdapter.nullSupported();  
 + if(typeAdapter!= null) { typeAdapter =(typeAdapter == null)? null : typeAdapter.nullSafe(); typeAdapter = typeAdapter; } 
 ----------------------------------------------------------------------------------------------------
Gson6 -  FL is ranked in the 13
iteration_2 replace buggy code at line 67 Diagnostic: 
 -  typeAdapter  =(typeAdapter!=  null)?  null  :  typeAdapter.nullSafe();  typeAdapter  =(typeAdapter!=  null)?  null  :  typeAdapter.nullSafe();  
 + if(typeAdapter!= null) { typeAdapter =(typeAdapter!= null)? null : typeAdapter.nullSafe(); typeAdapter = typeAdapter == null? null : typeAdapter.nullSafe(); } 
 ----------------------------------------------------------------------------------------------------
Gson6 -  FL is ranked in the 13
iteration_2 replace buggy code at line 67 Diagnostic: 
 -  typeAdapter  =(typeAdapter!=  null)?  null  :  typeAdapter.nullSafe();  typeAdapter  =(typeAdapter!=  null)?  null  :  typeAdapter.nullSafe();  
 + if(typeAdapter!= null) { typeAdapter =(typeAdapter == null)? null : typeAdapter.nullSafe(); typeAdapter = typeAdapter!= null? null : typeAdapter.nullSafe(); } 
 ----------------------------------------------------------------------------------------------------
Gson6 -  FL is ranked in the 13
iteration_2 replace buggy code at line 67 Diagnostic: 
 -  typeAdapter  =(typeAdapter!=  null)?  null  :  typeAdapter.nullSafe();  TypeAdapter  typeAdapter  =(typeAdapter  ==  null)?  null  :  typeAdapter.nullSafe();  
 + if(typeAdapter == null) { typeAdapter =(typeAdapter == null)? null : typeAdapter.nullSafe(); typeAdapter = typeAdapter == null? null : typeAdapter.nullSafe(); } 
 ----------------------------------------------------------------------------------------------------
Gson6 -  FL is ranked in the 13
iteration_2 replace buggy code at line 67 Diagnostic: 
 -  typeAdapter  =(typeAdapter!=  null)?  null  :  typeAdapter.nullSafe();  TypeAdapter  typeAdapter  =(typeAdapter  ==  null)?  null  :  typeAdapter.nullSafe();  
 + if(typeAdapter == null) { typeAdapter =(typeAdapter == null)? null : typeAdapter.nullSafe(); typeAdapter = typeAdapter!= null? typeAdapter.nullSafe() : null; } 
 ----------------------------------------------------------------------------------------------------
Gson6 -  FL is ranked in the 13
iteration_1 replace buggy code at line 67 Diagnostic: 
 -  typeAdapter  =(typeAdapter!=  null)?  null  :  typeAdapter.nullSafe();  
 + if(typeAdapter == null) { typeAdapter =(typeAdapter == null)? null : typeAdapter.nullSafe(); } 
 ----------------------------------------------------------------------------------------------------
repair_iteration/Gson6/13/iteration_0/plausible.csv
repair_iteration/Gson6/13/iteration_0/plausible.csv
repair_iteration/Gson6/13/iteration_0/plausible.csv
Gson6 -  FL is ranked in the 4
iteration_2 replace buggy code at line 43 Diagnostic: 
 -  JsonAdapter  annotation  =  JsonAdapter.getAnnotation(JsonAdapter.class);  
 + JsonAdapter annotation = JsonAdapter.class.getAnnotation(JsonAdapter.class); 
 ----------------------------------------------------------------------------------------------------
repair_iteration/Gson6/4/iteration_0/plausible.csv
repair_iteration/Gson6/5/iteration_0/plausible.csv
Math33 -  FL is ranked in the 18
iteration_2 replace buggy code at line 338 Diagnostic: 
 -  if  (restrictToNonNegative  &&  Precision.compareTo(entry,  0,  columnLabels)>  0)  {  
 + if (restrictToNonNegative && Precision.compareTo(entry, 0, columnsToDrop.size() - 1)> 0) { 
 ----------------------------------------------------------------------------------------------------
Math33 -  FL is ranked in the 18
iteration_2 replace buggy code at line 338 Diagnostic: 
 -  if  (restrictToNonNegative  &&  Precision.compareTo(entry,  0,  columnLength)>  0)  {  
 + if (restrictToNonNegative && Precision.compareTo(entry, 0, columnLabels.size())> 0) { 
 ----------------------------------------------------------------------------------------------------
Math33 -  FL is ranked in the 18
iteration_2 replace buggy code at line 338 Diagnostic: 
 -  if  (i  >  0  &&  restrictToNonNegative  &&  Precision.compareTo(entry,  0,  entry)>  0)  {  
 + if (entry > 0 && restrictToNonNegative && Precision.compareTo(entry, 0, entry) == 0) { 
 ----------------------------------------------------------------------------------------------------
Math33 -  FL is ranked in the 18
iteration_2 replace buggy code at line 338 Diagnostic: 
 -  if(restrictToNonNegative  &&  Precision.compareTo(entry,  1,  entry)>  0)  {  
 + if(restrictToNonNegative && Precision.compareTo(entry, 1, entry) == 0) { 
 ----------------------------------------------------------------------------------------------------
Math33 -  FL is ranked in the 18
iteration_2 replace buggy code at line 338 Diagnostic: 
 -  if  (restrictToNonNegative  &&  Precision.compareTo(entry,  0,  column)>  0)  {  
 + if (restrictToNonNegative && Precision.compareTo(entry, 0, 2)> 0) { 
 ----------------------------------------------------------------------------------------------------
Math33 -  FL is ranked in the 18
iteration_2 replace buggy code at line 338 Diagnostic: 
 -  if  (restrictToNonNegative  &&  Precision.compareTo(entry,  0,  col)>  0)  {  
 + if (restrictToNonNegative && Precision.compareTo(entry, 0, 0)> 0) { 
 ----------------------------------------------------------------------------------------------------
Math33 -  FL is ranked in the 18
iteration_2 replace buggy code at line 338 Diagnostic: 
 -  if(entry!=  null  &&  Precision.compareTo(entry,  0,  columnsToDrop.size()  *  2)>  0)  {  
 + if(restrictToNonNegative && Precision.compareTo(entry, 0, columnsToDrop.size() / 2)> 0) { 
 ----------------------------------------------------------------------------------------------------
Math33 -  FL is ranked in the 18
iteration_2 replace buggy code at line 338 Diagnostic: 
 -  if  (restrictToNonNegative  &&  Precision.compareTo(entry,  0,  columnLength)>  0)  {  
 + if (restrictToNonNegative && Precision.compareTo(entry, 0, this.columnLabels.size())> 0) { 
 ----------------------------------------------------------------------------------------------------
Math33 -  FL is ranked in the 18
iteration_2 replace buggy code at line 338 Diagnostic: 
 -  if  (Precision.compareTo(entry,  0,  getNumObjectiveFunctions())>  0)  {  
 + if (restrictToNonNegative && Precision.compareTo(entry, 0, getNumObjectiveFunctions())> 0) { 
 ----------------------------------------------------------------------------------------------------
Math33 -  FL is ranked in the 18
iteration_2 replace buggy code at line 338 Diagnostic: 
 -  if(epsilon.contains(entry)||  Precision.compareTo(entry,  0,  entry)>  0)  {  
 + if(columnsToDrop.contains(entry)|| Precision.compareTo(entry, 0, epsilon)> 0) { 
 ----------------------------------------------------------------------------------------------------
Math33 -  FL is ranked in the 18
iteration_2 replace buggy code at line 338 Diagnostic: 
 -  if  (i  >  0  &&  restrictToNonNegative  &&  Precision.compareTo(entry,  0,  entry)>  0)  {  
 + if (entry > 0 && restrictToNonNegative && Precision.compareTo(entry, 0, entry) >= 0) { 
 ----------------------------------------------------------------------------------------------------
Math33 -  FL is ranked in the 18
iteration_2 replace buggy code at line 338 Diagnostic: 
 -  if  (i  >  0  &&  restrictToNonNegative  &&  Precision.compareTo(entry,  0,  entry)>  0)  {  
 + if (entry > 0 && restrictToNonNegative && Precision.compareTo(entry, 0, entry) <= 0) { 
 ----------------------------------------------------------------------------------------------------
Math33 -  FL is ranked in the 18
iteration_2 replace buggy code at line 338 Diagnostic: 
 -  if  (Precision.compareTo(entry,  0,  getNumArtificialVariables())>  0)  {  
 + if (restrictToNonNegative && Precision.compareTo(entry, 0, getNumArtificialVariables())> 0) { 
 ----------------------------------------------------------------------------------------------------
Math33 -  FL is ranked in the 18
iteration_2 replace buggy code at line 338 Diagnostic: 
 -  if(columnLabels.contains(entry)||  Precision.compareTo(entry,  0,  col)>  0)  {  
 + if(columnLabels.contains(entry)|| Precision.compareTo(entry, 0, epsilon)> 0) { 
 ----------------------------------------------------------------------------------------------------
Math33 -  FL is ranked in the 18
iteration_2 replace buggy code at line 338 Diagnostic: 
 -  if  (i  >  0  &&  restrictToNonNegative  &&  Precision.compareTo(entry,  0,  entry)>  0)  {  
 + if(entry > 0 && restrictToNonNegative && Precision.compareTo(entry, 0, entry) < 1) { 
 ----------------------------------------------------------------------------------------------------
Math33 -  FL is ranked in the 18
iteration_2 replace buggy code at line 338 Diagnostic: 
 -  if(restrictToNonNegative  &&  Precision.compareTo(entry,  1,  entry)>  0)  {  
 + if(restrictToNonNegative && Precision.compareTo(entry, 1, entry) >= 0) { 
 ----------------------------------------------------------------------------------------------------
Math33 -  FL is ranked in the 18
iteration_2 replace buggy code at line 338 Diagnostic: 
 -  if  (restrictToNonNegative  &&  Precision.compareTo(entry,  0,  col)>  0)  {  
 + if (restrictToNonNegative && Precision.compareTo(entry, 0, DEFAULT_ULPS)> 0) { 
 ----------------------------------------------------------------------------------------------------
Math33 -  FL is ranked in the 18
iteration_1 replace buggy code at line 338 Diagnostic: 
 -  if  (restrictToNonNegative  &&  Precision.compareTo(entry,  0,  entry)>  0)  {  
 + if (restrictToNonNegative && Precision.compareTo(entry, 0, columnsToDrop.size())> 0) { 
 ----------------------------------------------------------------------------------------------------
Math33 -  FL is ranked in the 18
iteration_1 replace buggy code at line 338 Diagnostic: 
 -  if  (restrictToNonNegative  &&  Precision.compareTo(entry,  0,  entry)>  0)  {  
 + if(restrictToNonNegative && Precision.compareTo(entry, 0, i)> 0) { 
 ----------------------------------------------------------------------------------------------------
Math33 -  FL is ranked in the 18
iteration_1 replace buggy code at line 338 Diagnostic: 
 -  if  (restrictToNonNegative  &&  Precision.compareTo(entry,  0,  entry)>  0)  {  
 + if (restrictToNonNegative && Precision.compareTo(entry, 0, 1)> 0) { 
 ----------------------------------------------------------------------------------------------------
repair_iteration/Math33/18/iteration_0/plausible.csv
repair_iteration/Math33/18/iteration_0/plausible.csv
Math15 -  FL is ranked in the 1
iteration_1 replace buggy code at line 1542 Diagnostic: 
 -  return  pow(-x,  y  +  1);  
 + return -pow(-x, y + 1); 
 ----------------------------------------------------------------------------------------------------
Math15 -  FL is ranked in the 1
iteration_1 replace buggy code at line 1542 Diagnostic: 
 -    y  =  Math.pow(-x,  y);  
 + y = Math.pow(-1, y); 
 ----------------------------------------------------------------------------------------------------
repair_iteration/Math15/1/iteration_0/plausible.csv
repair_iteration/Lang6/1/iteration_0/plausible.csv
Math70 -  FL is ranked in the 1
iteration_2 replace buggy code at line 72 Diagnostic: 
 -  return  solve(initial,  max);  double  min  =  getMinimumSize();  
 + return solve(f, initial, max); 
 ----------------------------------------------------------------------------------------------------
Math70 -  FL is ranked in the 1
iteration_1 replace buggy code at line 72 Diagnostic: 
 -  return  solve(f,  max);  
 + return solve(f, min, max); 
 ----------------------------------------------------------------------------------------------------
Cli8 -  FL is ranked in the 5
iteration_2 replace buggy code at line 812 Diagnostic: 
 -  pos  =  findWrapPos(text,  width,  this.nextLineTabStop);  
 + pos = findWrapPos(text, width, this.defaultLeftPad); 
 ----------------------------------------------------------------------------------------------------
repair_iteration/Cli8/5/iteration_0/plausible.csv
repair_iteration/Cli8/5/iteration_0/plausible.csv
repair_iteration/Chart4/8/iteration_0/plausible.csv
Chart8 -  FL is ranked in the 14
iteration_1 replace buggy code at line 149 Diagnostic: 
 -    this.year  =(byte)this.year.getYear();  
 + this.year =(byte)year.getYear(); 
 ----------------------------------------------------------------------------------------------------
Chart8 -  FL is ranked in the 14
iteration_1 replace buggy code at line 149 Diagnostic: 
 -    this.year  =(short)getYear();  
 + this.year =(short)getYearValue(); 
 ----------------------------------------------------------------------------------------------------
repair_iteration/Chart8/14/iteration_0/plausible.csv
repair_iteration/Chart8/14/iteration_0/plausible.csv
repair_iteration/Chart8/14/iteration_0/plausible.csv
Chart8 -  FL is ranked in the 8
iteration_2 add buggy code at line 134 Diagnostic: 
 -  
 + this.firstMillisecond  =  Math.max(FIRST_WEEK_IN_YEAR,  this.lastMillisecond);  this.firstMillisecond = Math.max(FIRST_WEEK_IN_YEAR, this.lastMillisecond); 
 ----------------------------------------------------------------------------------------------------
Chart8 -  FL is ranked in the 8
iteration_2 add buggy code at line 134 Diagnostic: 
 -  
 + this.firstMillisecond  =  Math.max(FIRST_WEEK_IN_YEAR,  year);  this.firstMillisecond = Math.max(FIRST_WEEK_IN_YEAR, year); 
 ----------------------------------------------------------------------------------------------------
Chart8 -  FL is ranked in the 8
iteration_2 add buggy code at line 134 Diagnostic: 
 -  
 + this.firstMillisecond  =  Math.max(firstMillisecond,  year);  this.firstMillisecond = Math.max(firstMillisecond, year); 
 ----------------------------------------------------------------------------------------------------
Chart8 -  FL is ranked in the 8
iteration_2 add buggy code at line 134 Diagnostic: 
 -  
 + this.firstMillisecond  =  Math.max(FIRST_WEEK_IN_YEAR,  year);  int firstMillisecond = Math.max(FIRST_WEEK_IN_YEAR, year); 
 ----------------------------------------------------------------------------------------------------
Chart8 -  FL is ranked in the 8
iteration_1 add buggy code at line 134 Diagnostic: 
 -  
 +     this.firstMillisecond = Math.max(firstMillisecond, this.lastMillisecond)+ 1; 
 ----------------------------------------------------------------------------------------------------
Chart8 -  FL is ranked in the 8
iteration_1 add buggy code at line 134 Diagnostic: 
 -  
 +     this.firstMillisecond = Math.max(FIRST_WEEK_IN_YEAR, this.year); 
 ----------------------------------------------------------------------------------------------------
repair_iteration/Chart8/8/iteration_0/plausible.csv
repair_iteration/Chart8/8/iteration_0/plausible.csv
repair_iteration/Chart8/8/iteration_0/plausible.csv
repair_iteration/Chart8/8/iteration_0/plausible.csv
repair_iteration/Chart8/8/iteration_0/plausible.csv
repair_iteration/Chart8/8/iteration_0/plausible.csv
repair_iteration/Chart8/8/iteration_0/plausible.csv
repair_iteration/Chart8/8/iteration_0/plausible.csv
repair_iteration/Chart8/8/iteration_0/plausible.csv
repair_iteration/Chart8/8/iteration_0/plausible.csv
repair_iteration/Chart8/8/iteration_0/plausible.csv
repair_iteration/Chart8/9/iteration_0/plausible.csv
Chart8 -  FL is ranked in the 7
iteration_2 add buggy code at line 133 Diagnostic: 
 -  
 + this.year  =(byte)this.year;  this.year =(byte)this.year; 
 ----------------------------------------------------------------------------------------------------
Chart8 -  FL is ranked in the 7
iteration_2 add buggy code at line 133 Diagnostic: 
 -  
 + this.year  =(byte)this.year;  this.week =(byte)this.week; 
 ----------------------------------------------------------------------------------------------------
Chart8 -  FL is ranked in the 7
iteration_1 add buggy code at line 133 Diagnostic: 
 -  
 + this.year  =  (short)this.year;  this.year = (short)this.year; 
 ----------------------------------------------------------------------------------------------------
repair_iteration/Chart8/7/iteration_0/plausible.csv
repair_iteration/Chart8/7/iteration_0/plausible.csv
repair_iteration/Chart8/7/iteration_0/plausible.csv
repair_iteration/Chart8/7/iteration_0/plausible.csv
repair_iteration/Chart8/7/iteration_0/plausible.csv
repair_iteration/Chart8/7/iteration_0/plausible.csv
repair_iteration/Chart8/7/iteration_0/plausible.csv
repair_iteration/Chart8/7/iteration_0/plausible.csv
repair_iteration/Chart8/7/iteration_0/plausible.csv
repair_iteration/Chart8/11/iteration_0/plausible.csv
repair_iteration/Chart8/11/iteration_0/plausible.csv
repair_iteration/Chart8/11/iteration_0/plausible.csv
repair_iteration/Chart8/11/iteration_0/plausible.csv
Chart8 -  FL is ranked in the 13
iteration_2 replace buggy code at line 148 Diagnostic: 
 -  this.year  =(short)getValue();  
 + this.year =(short)this.year; 
 ----------------------------------------------------------------------------------------------------
Chart8 -  FL is ranked in the 13
iteration_1 replace buggy code at line 148 Diagnostic: 
 -    this.year  =(short)getYear();  
 + this.year =(short)getYearValue(); 
 ----------------------------------------------------------------------------------------------------
Chart8 -  FL is ranked in the 13
iteration_1 replace buggy code at line 148 Diagnostic: 
 -    this.year  =(byte)getValue();  
 + this.year =(byte)getYearValue(); 
 ----------------------------------------------------------------------------------------------------
Chart8 -  FL is ranked in the 13
iteration_1 replace buggy code at line 148 Diagnostic: 
 -    this.year  =(byte)this.year.getYear();  
 + this.year =(byte)year.getYear(); 
 ----------------------------------------------------------------------------------------------------
repair_iteration/Chart8/13/iteration_0/plausible.csv
repair_iteration/Chart8/13/iteration_0/plausible.csv
repair_iteration/Chart8/13/iteration_0/plausible.csv
repair_iteration/Chart8/4/iteration_0/plausible.csv
repair_iteration/Chart8/4/iteration_0/plausible.csv
Chart8 -  FL is ranked in the 12
iteration_1 replace buggy code at line 145 Diagnostic: 
 -    this.year  =  year.getYear();  
 + this.year = LAST_WEEK_IN_YEAR; 
 ----------------------------------------------------------------------------------------------------
Chart8 -  FL is ranked in the 12
iteration_1 replace buggy code at line 145 Diagnostic: 
 -    this.year  =(Short)year.getYear();  
 + this.year =(short)year.getYear(); 
 ----------------------------------------------------------------------------------------------------
Chart8 -  FL is ranked in the 12
iteration_1 replace buggy code at line 145 Diagnostic: 
 -    this.year  =(byte)getValue();  
 + this.year =(byte)getYearValue(); 
 ----------------------------------------------------------------------------------------------------
repair_iteration/Chart8/12/iteration_0/plausible.csv
repair_iteration/Chart8/12/iteration_0/plausible.csv
repair_iteration/Chart8/12/iteration_0/plausible.csv
repair_iteration/Chart8/12/iteration_0/plausible.csv
repair_iteration/Chart8/12/iteration_0/plausible.csv
repair_iteration/Chart8/12/iteration_0/plausible.csv
repair_iteration/Chart8/12/iteration_0/plausible.csv
repair_iteration/Chart8/12/iteration_0/plausible.csv
Chart8 -  FL is ranked in the 6
iteration_2 add buggy code at line 132 Diagnostic: 
 -  
 + this.firstMillisecond  =  Math.min(firstMillisecond,  week);  this.firstMillisecond = Math.min(firstMillisecond, week); 
 ----------------------------------------------------------------------------------------------------
Chart8 -  FL is ranked in the 6
iteration_2 add buggy code at line 132 Diagnostic: 
 -  
 + this.year  =(byte)getYearValue();  this.year =(byte)getYearValue(); 
 ----------------------------------------------------------------------------------------------------
Chart8 -  FL is ranked in the 6
iteration_2 add buggy code at line 132 Diagnostic: 
 -  
 + this.year  =(short)(FIRST_WEEK_IN_YEAR  -  FIRST_WEEK_IN_YEAR);  this.year =(short)(FIRST_WEEK_IN_YEAR - FIRST_WEEK_IN_YEAR); 
 ----------------------------------------------------------------------------------------------------
Chart8 -  FL is ranked in the 6
iteration_1 add buggy code at line 132 Diagnostic: 
 -  
 +     this.year =(short)(FIRST_WEEK_IN_YEAR); 
 ----------------------------------------------------------------------------------------------------
Chart8 -  FL is ranked in the 6
iteration_1 add buggy code at line 132 Diagnostic: 
 -  
 +     this.year =(short)(FIRST_WEEK_IN_YEAR + 1); 
 ----------------------------------------------------------------------------------------------------
Chart8 -  FL is ranked in the 6
iteration_1 add buggy code at line 132 Diagnostic: 
 -  
 +     this.year =(short)week; 
 ----------------------------------------------------------------------------------------------------
Chart8 -  FL is ranked in the 6
iteration_1 add buggy code at line 132 Diagnostic: 
 -  
 +     this.year =(short)(FIRST_WEEK_IN_YEAR - 1); 
 ----------------------------------------------------------------------------------------------------
repair_iteration/Chart8/6/iteration_0/plausible.csv
repair_iteration/Chart8/6/iteration_0/plausible.csv
repair_iteration/Chart8/6/iteration_0/plausible.csv
repair_iteration/Chart8/6/iteration_0/plausible.csv
repair_iteration/Chart8/6/iteration_0/plausible.csv
repair_iteration/Chart8/6/iteration_0/plausible.csv
repair_iteration/Chart8/6/iteration_0/plausible.csv
repair_iteration/Chart8/6/iteration_0/plausible.csv
repair_iteration/Chart8/6/iteration_0/plausible.csv
repair_iteration/Chart8/5/iteration_0/plausible.csv
repair_iteration/Chart8/5/iteration_0/plausible.csv
repair_iteration/Chart8/5/iteration_0/plausible.csv
repair_iteration/Chart8/5/iteration_0/plausible.csv
repair_iteration/Chart8/5/iteration_0/plausible.csv
repair_iteration/Chart8/5/iteration_0/plausible.csv
repair_iteration/Chart8/5/iteration_0/plausible.csv
repair_iteration/Chart8/5/iteration_0/plausible.csv
repair_iteration/Chart8/5/iteration_0/plausible.csv
repair_iteration/Chart8/5/iteration_0/plausible.csv
repair_iteration/Chart8/5/iteration_0/plausible.csv
repair_iteration/Chart8/5/iteration_0/plausible.csv
repair_iteration/Chart8/5/iteration_0/plausible.csv
repair_iteration/Chart8/5/iteration_0/plausible.csv
repair_iteration/Chart8/5/iteration_0/plausible.csv
repair_iteration/Chart8/5/iteration_0/plausible.csv
Chart8 -  FL is ranked in the 1
iteration_2 replace buggy code at line 118 Diagnostic: 
 -  this(FIRST_WEEK_IN_YEAR,  DEFAULT_WEEK_IN_YEAR);  
 + this(LAST_WEEK_IN_YEAR, LAST_WEEK_IN_YEAR); 
 ----------------------------------------------------------------------------------------------------
Chart8 -  FL is ranked in the 1
iteration_1 replace buggy code at line 118 Diagnostic: 
 -    this(null,  FIRST_WEEK_IN_YEAR);  
 + this(LAST_WEEK_IN_YEAR, FIRST_WEEK_IN_YEAR); 
 ----------------------------------------------------------------------------------------------------
Chart8 -  FL is ranked in the 1
iteration_1 replace buggy code at line 118 Diagnostic: 
 -    this(FIRST_WEEK_IN_YEAR,  1);  
 + this(FIRST_WEEK_IN_YEAR, 0); 
 ----------------------------------------------------------------------------------------------------
Chart8 -  FL is ranked in the 1
iteration_1 replace buggy code at line 118 Diagnostic: 
 -    this(FIRST_WEEK_IN_YEAR,  1);  
 + this(LAST_WEEK_IN_YEAR, 1); 
 ----------------------------------------------------------------------------------------------------
repair_iteration/Chart8/1/iteration_0/plausible.csv
repair_iteration/Chart8/1/iteration_0/plausible.csv
Closure10 -  FL is ranked in the 37
iteration_2 replace buggy code at line 1417 Diagnostic: 
 -  return  mayBeString(n,  recurse);  return  mayBeString(n,  recurse);  
 + if(n.getType() == Token.FUNCTION) { return mayBeString(n, recurse); } else { return mayBeStringHelper(n); } 
 ----------------------------------------------------------------------------------------------------
Closure10 -  FL is ranked in the 37
iteration_2 replace buggy code at line 1417 Diagnostic: 
 -  return  mayBeString(n,  recurse);  return  mayBeString(n,  recurse);  
 + if(NodeUtil.isFunctionDeclaration(n)) { return mayBeString(n, recurse); } else { return mayBeStringHelper(n); } 
 ----------------------------------------------------------------------------------------------------
Closure10 -  FL is ranked in the 37
iteration_2 replace buggy code at line 1417 Diagnostic: 
 -  return  mayBeString(n,  recurse);  if(NodeUtil.isFunction(n))  {  return  mayBeString(n,  recurse);  }  else  {  return  mayBeStringHelper(n);  }  
 + if(NodeUtil.isAssignmentOp(n)) { return mayBeString(n, recurse); } else { return mayBeStringHelper(n); } 
 ----------------------------------------------------------------------------------------------------
Closure10 -  FL is ranked in the 37
iteration_2 replace buggy code at line 1417 Diagnostic: 
 -  return  mayBeString(n,  recurse);  if(n.getType()  ==  Token.FUNCTION)  {  return  mayBeString(n,  recurse);  }  else  {  return  mayBeStringHelper(n);  }  
 + if(n.getType() == Token.BLOCK) { return mayBeString(n, recurse); } else { return mayBeStringHelper(n); } 
 ----------------------------------------------------------------------------------------------------
repair_iteration/Closure10/37/iteration_0/plausible.csv
repair_iteration/Closure57/9/iteration_0/plausible.csv
Closure57 -  FL is ranked in the Closure57 -  FL is ranked in the 9
iteration_2 replace buggy code at line 197 Diagnostic: 
 -  if(target!=  null  &&  target.getType()  ==  Token.NAME)  {  if(target!=  null  &&  target.getType()  >=  Token.NAME)  {  
 + if(target!= null && target.getType()!= Token.NAME) { 
 ----------------------------------------------------------------------------------------------------
Closure57 -  FL is ranked in the Closure57 -  FL is ranked in the 9
iteration_2 replace buggy code at line 197 Diagnostic: 
 -  if(target!=  null  &&  target.getType()  ==  Token.STRING  ||  callee.getType()  ==  Token.GETPROP)  {  
 + if(target!= null && target.getType() == Token.STRING && callee.getType() == Token.GETPROP) { 
 ----------------------------------------------------------------------------------------------------
Closure57 -  FL is ranked in the Closure57 -  FL is ranked in the 9
iteration_1 replace buggy code at line 197 Diagnostic: 
 -  if(target!=  null  ||  target.getType()  ==  Token.STRING)  {  
 + if(target!= null && target.getType() >= Token.STRING) { 
 ----------------------------------------------------------------------------------------------------
repair_iteration/Closure57/Closure57/9/iteration_0/plausible.csv
Csv2 -  FL is ranked in the 1
iteration_1 replace buggy code at line 84 Diagnostic: 
 -  final  Integer  index  =  mapping.get(name  +  1);  
 + final Integer index = mapping.get(name + 2); 
 ----------------------------------------------------------------------------------------------------
Csv2 -  FL is ranked in the 1
iteration_1 replace buggy code at line 84 Diagnostic: 
 -  final  Integer  index  =  mapping.get(name  +  1);  
 + final Integer index = recordNumber.get(name + 1); 
 ----------------------------------------------------------------------------------------------------
Csv2 -  FL is ranked in the 1
iteration_1 replace buggy code at line 84 Diagnostic: 
 -    
 + String index = name.substring(0, name.length() - 1); 
 ----------------------------------------------------------------------------------------------------
Csv2 -  FL is ranked in the 1
iteration_1 replace buggy code at line 84 Diagnostic: 
 -    
 + Integer index = recordNumber(name); 
 ----------------------------------------------------------------------------------------------------
Csv2 -  FL is ranked in the 1
iteration_1 replace buggy code at line 84 Diagnostic: 
 -    
 + Integer index = mapping.get(name); 
 ----------------------------------------------------------------------------------------------------
Csv2 -  FL is ranked in the 1
iteration_1 replace buggy code at line 84 Diagnostic: 
 -    
 + String index = name.substring(0, name.length() - 2); 
 ----------------------------------------------------------------------------------------------------
Csv2 -  FL is ranked in the 1
iteration_1 replace buggy code at line 84 Diagnostic: 
 -  final  Integer  index  =  mapping.get(name.intValue());  
 + final Integer index = mapping.get(mapping.intValue()); 
 ----------------------------------------------------------------------------------------------------
Csv2 -  FL is ranked in the 1
iteration_1 add buggy code at line 84 Diagnostic: 
 -  
 + final  Integer  index  =  this.mapping.get(name);  final Integer index = this.mapping.get(name); 
 ----------------------------------------------------------------------------------------------------
Csv2 -  FL is ranked in the 1
iteration_1 add buggy code at line 84 Diagnostic: 
 -  
 + final  Integer  index  =  this.mapping.get(name);  if(this.mapping!= null) { final Integer index = this.mapping.get(name); } else { final Integer index = this.mapping.get(name); } 
 ----------------------------------------------------------------------------------------------------
Csv2 -  FL is ranked in the 1
iteration_1 add buggy code at line 84 Diagnostic: 
 -  
 + final  Integer  index  =  this.mapping.get(name);  if(name!= null) { final Integer index = this.mapping.get(name); } else { final Integer index = this.mapping.get(name); } 
 ----------------------------------------------------------------------------------------------------
Csv2 -  FL is ranked in the 1
iteration_1 add buggy code at line 84 Diagnostic: 
 -  
 + final  Integer  index  =  this.mapping.get(name);  if(this.mapping!= null) { final Integer index = this.mapping.get(name); } 
 ----------------------------------------------------------------------------------------------------
Csv2 -  FL is ranked in the 1
iteration_1 add buggy code at line 84 Diagnostic: 
 -  
 + final  Integer  index  =  this.mapping.get(name);  if(this.mapping!= null) { final Integer index = this.mapping.get(name); if(index!= null) { throw new IllegalStateException( " "); } 
 ----------------------------------------------------------------------------------------------------
repair_iteration/Cli1/5/iteration_0/plausible.csv
Codec16 -  FL is ranked in the 1
iteration_2 replace buggy code at line 309 Diagnostic: 
 -  throw  new  IllegalArgumentException(    "Padding  must  not  be  in  alphabet  or  whitespace    ");  throw  new  IllegalArgumentException(    "Padding  must  not  be  in  alphabet  or  whitespace    ");  
 + new IllegalArgumentException( "Padding must not be in alphabet or whitespace "); 
 ----------------------------------------------------------------------------------------------------
Codec16 -  FL is ranked in the 1
iteration_2 replace buggy code at line 309 Diagnostic: 
 -  throw  new  IllegalArgumentException(    "pad  must  not  be  in  alphabet  or  whitespace.    ");  Throwable  cause  =  new  IllegalArgumentException(  "pad  must  not  be  in  alphabet  or  whitespace.    ");  
 + Throwable cause = new IllegalArgumentException( "Whitespace must not be in alphabet or whitespace.  "); 
 ----------------------------------------------------------------------------------------------------
Codec16 -  FL is ranked in the 1
iteration_2 replace buggy code at line 309 Diagnostic: 
 -  throw  new  IllegalArgumentException(    "pad  must  not  be  in  alphabet  or  whitespace.    ");  Throwable  cause  =  new  IllegalArgumentException(  "pad  must  not  be  in  alphabet  or  whitespace.    ");  
 + Throwable cause = new IllegalArgumentException( "Bytes must not be in alphabet or whitespace.  "); 
 ----------------------------------------------------------------------------------------------------
Codec16 -  FL is ranked in the 1
iteration_2 replace buggy code at line 309 Diagnostic: 
 -  throw  new  IllegalArgumentException(    "pad  must  not  be  in  alphabet  or  whitespace.    ");  Throwable  cause  =  new  IllegalArgumentException(  "pad  must  not  be  in  alphabet  or  whitespace.    ");  
 + Throwable cause = new IllegalArgumentException( "Alphabet must not be in alphabet or whitespace.  "); 
 ----------------------------------------------------------------------------------------------------
Codec16 -  FL is ranked in the 1
iteration_2 replace buggy code at line 309 Diagnostic: 
 -  throw  new  IllegalArgumentException(    "pad  must  not  be  in  alphabet  or  whitespace.    ");  Throwable  cause  =  new  IllegalArgumentException(  "pad  must  not  be  in  alphabet  or  whitespace.    ");  
 + Throwable cause = new IllegalArgumentException( "pad must not be in alphabet or whitespace.  "); 
 ----------------------------------------------------------------------------------------------------
Codec16 -  FL is ranked in the 1
iteration_2 replace buggy code at line 309 Diagnostic: 
 -  throw  new  IllegalArgumentException(    "pad  must  not  be  in  alphabet  or  whitespace.    ");  Throwable  cause  =  new  IllegalArgumentException(  "pad  must  not  be  in  alphabet  or  whitespace.    ");  
 + Throwable cause = new IllegalArgumentException( "Platform must not be in alphabet or whitespace.  "); 
 ----------------------------------------------------------------------------------------------------
Codec16 -  FL is ranked in the 1
iteration_2 replace buggy code at line 309 Diagnostic: 
 -  throw  new  IllegalArgumentException(    "pad  must  not  be  in  alphabet  or  whitespace.    ");  Throwable  cause  =  new  IllegalArgumentException(  "pad  must  not  be  in  alphabet  or  whitespace.    ");  
 + Throwable cause = new IllegalArgumentException( "Bad space must not be in alphabet or whitespace.  "); 
 ----------------------------------------------------------------------------------------------------
Codec16 -  FL is ranked in the 1
iteration_2 replace buggy code at line 309 Diagnostic: 
 -  throw  new  IllegalArgumentException(    "pad  must  not  be  in  alphabet  or  whitespace.    ");  Throwable  cause  =  new  IllegalArgumentException(  "pad  must  not  be  in  alphabet  or  whitespace.    ");  
 + Throwable cause = new IllegalArgumentException( "Bluespace must not be in alphabet or whitespace.  "); 
 ----------------------------------------------------------------------------------------------------
Codec16 -  FL is ranked in the 1
iteration_2 replace buggy code at line 309 Diagnostic: 
 -  throw  new  IllegalArgumentException(    "Whitespace  must  not  be  in  alphabet  or  whitespace.    ");  throw  new  IllegalArgumentException(    "Whitespace  must  not  be  in  alphabet  or  whitespace.    ");  
 + new IllegalArgumentException( "Whitespace must not be in alphabet or whitespace. "); 
 ----------------------------------------------------------------------------------------------------
Codec16 -  FL is ranked in the 1
iteration_2 replace buggy code at line 309 Diagnostic: 
 -  throw  new  IllegalArgumentException(    "UsageHex  must  not  be  in  alphabet  or  whitespace    ");  IllegalArgumentException(    "UsageHex  must  not  be  in  alphabet  or  whitespace    ");  
 + new IllegalArgumentException( "UsageHex must not be in alphabet or whitespace "); 
 ----------------------------------------------------------------------------------------------------
Codec16 -  FL is ranked in the 1
iteration_2 replace buggy code at line 309 Diagnostic: 
 -  throw  new  IllegalArgumentException(    "Bad  useHex  must  not  be  in  alphabet  or  whitespace.    ");  throw  new  IllegalArgumentException(    "Bad  useHex  must  not  be  in  alphabet  or  whitespace.    ");  
 + Throwable cause = new IllegalArgumentException( "Bad useHex must not be in alphabet or whitespace. "); 
 ----------------------------------------------------------------------------------------------------
Codec16 -  FL is ranked in the 1
iteration_2 replace buggy code at line 309 Diagnostic: 
 -  throw  new  IllegalArgumentException(    "Whitespace  must  not  be  in  alphabet  or  blackspace    ");  Throwable  cause  =  new  IllegalArgumentException(  "Whitespace  must  not  be  in  alphabet  or  blackspace    ");  
 + Throwable cause = new IllegalArgumentException( "Whitespace must not be in alphabet or blackspace "); 
 ----------------------------------------------------------------------------------------------------
Codec16 -  FL is ranked in the 1
iteration_2 replace buggy code at line 309 Diagnostic: 
 -  throw  new  IllegalArgumentException(    "Whitespace  must  not  be  in  alphabet  or  blackspace    ");  Throwable  cause  =  new  IllegalArgumentException(  "Whitespace  must  not  be  in  alphabet  or  blackspace    ");  
 + Throwable cause = new IllegalArgumentException( "Whitespace must not be in alphabet or blackspace. "); 
 ----------------------------------------------------------------------------------------------------
Codec16 -  FL is ranked in the 1
iteration_2 replace buggy code at line 309 Diagnostic: 
 -  throw  new  IllegalArgumentException(    "Whitespace  must  not  be  in  alphabet  or  blackspace    ");  Throwable  cause  =  new  IllegalArgumentException(  "Whitespace  must  not  be  in  alphabet  or  blackspace    ");  
 + Throwable cause = new IllegalArgumentException( "Whitespace must not be in alphabet or blackspace, "); 
 ----------------------------------------------------------------------------------------------------
Codec16 -  FL is ranked in the 1
iteration_2 replace buggy code at line 309 Diagnostic: 
 -  throw  new  IllegalArgumentException(    "Whitespace  must  not  be  in  alphabet  or  blackspace    ");  Throwable  cause  =  new  IllegalArgumentException(  "Whitespace  must  not  be  in  alphabet  or  blackspace    ");  
 + Throwable cause = new IllegalArgumentException( "Whitespace must not be in alphabet or blackspace! "); 
 ----------------------------------------------------------------------------------------------------
Codec16 -  FL is ranked in the 1
iteration_2 replace buggy code at line 309 Diagnostic: 
 -  throw  new  IllegalArgumentException(    "Whitespace  must  not  be  in  alphabet  or  blackspace    ");  Throwable  cause  =  new  IllegalArgumentException(  "Whitespace  must  not  be  in  alphabet  or  blackspace    ");  
 + Throwable cause = new IllegalArgumentException( "Whitespace must not be in alphabet or blackspace... "); 
 ----------------------------------------------------------------------------------------------------
Codec16 -  FL is ranked in the 1
iteration_2 replace buggy code at line 309 Diagnostic: 
 -  throw  new  IllegalArgumentException(    "Whitespace  must  not  be  in  alphabet  or  blackspace    ");  Throwable  cause  =  new  IllegalArgumentException(  "Whitespace  must  not  be  in  alphabet  or  blackspace    ");  
 + Throwable cause = new IllegalArgumentException( "Whitespace must not be in alphabet or blackspace: "); 
 ----------------------------------------------------------------------------------------------------
Codec16 -  FL is ranked in the 1
iteration_2 replace buggy code at line 309 Diagnostic: 
 -  throw  new  IllegalArgumentException(    "Padding  must  not  be  in  alphabet  or  whitespace    ");  Throwable  cause  =  new  IllegalArgumentException(    "Padding  must  not  be  in  alphabet  or  whitespace    ");  
 + Throwable cause = new IllegalArgumentException( "Padding must not be in alphabet or whitespace "); 
 ----------------------------------------------------------------------------------------------------
Codec16 -  FL is ranked in the 1
iteration_2 replace buggy code at line 309 Diagnostic: 
 -  throw  new  IllegalArgumentException(    "Padding  must  not  be  in  alphabet  or  whitespace    ");  Throwable  cause  =  new  IllegalArgumentException(    "Padding  must  not  be  in  alphabet  or  whitespace    ");  
 + Throwable cause = new IllegalArgumentException( "Padding must not be in alphabet or whitespace. "); 
 ----------------------------------------------------------------------------------------------------
Codec16 -  FL is ranked in the 1
iteration_2 replace buggy code at line 309 Diagnostic: 
 -  throw  new  IllegalArgumentException(    "Padding  must  not  be  in  alphabet  or  whitespace    ");  Throwable  cause  =  new  IllegalArgumentException(    "Padding  must  not  be  in  alphabet  or  whitespace    ");  
 + Throwable cause = new IllegalArgumentException( "Padding must not be in alphabet or whitespace! "); 
 ----------------------------------------------------------------------------------------------------
Codec16 -  FL is ranked in the 1
iteration_2 replace buggy code at line 309 Diagnostic: 
 -  throw  new  IllegalArgumentException(    "Padding  must  not  be  in  alphabet  or  whitespace    ");  Throwable  cause  =  new  IllegalArgumentException(    "Padding  must  not  be  in  alphabet  or  whitespace    ");  
 + Throwable cause = new IllegalArgumentException( "Padding must not be in alphabet or whitespace, "); 
 ----------------------------------------------------------------------------------------------------
Codec16 -  FL is ranked in the 1
iteration_2 replace buggy code at line 309 Diagnostic: 
 -  throw  new  IllegalArgumentException(    "Padding  must  not  be  in  alphabet  or  whitespace    ");  Throwable  cause  =  new  IllegalArgumentException(    "Padding  must  not  be  in  alphabet  or  whitespace    ");  
 + Throwable cause = new IllegalArgumentException( "Padding must not be in alphabet or whitespace... "); 
 ----------------------------------------------------------------------------------------------------
Codec16 -  FL is ranked in the 1
iteration_2 replace buggy code at line 309 Diagnostic: 
 -  throw  new  IllegalArgumentException(    "Padding  must  not  be  in  alphabet  or  whitespace    ");  Throwable  cause  =  new  IllegalArgumentException(    "Padding  must  not  be  in  alphabet  or  whitespace    ");  
 + Throwable cause = new IllegalArgumentException( "Padding must not be in alphabet or whitespace: "); 
 ----------------------------------------------------------------------------------------------------
Codec16 -  FL is ranked in the 1
iteration_2 replace buggy code at line 309 Diagnostic: 
 -  throw  new  IllegalArgumentException(    "Whitespace  must  not  be  in  alphabet  or  whitespace    ");  Throwable  cause  =  new  IllegalArgumentException(  "Whitespace  must  not  be  in  alphabet  or  whitespace    ");  
 + Throwable cause = new IllegalArgumentException( "Whitespace must not be in alphabet or whitespace "); 
 ----------------------------------------------------------------------------------------------------
Codec16 -  FL is ranked in the 1
iteration_2 replace buggy code at line 309 Diagnostic: 
 -  throw  new  IllegalArgumentException(    "Whitespace  must  not  be  in  alphabet  or  whitespace    ");  Throwable  cause  =  new  IllegalArgumentException(  "Whitespace  must  not  be  in  alphabet  or  whitespace    ");  
 + Throwable cause = new IllegalArgumentException( "Whitespace must not be in alphabet or whitespace, "); 
 ----------------------------------------------------------------------------------------------------
Codec16 -  FL is ranked in the 1
iteration_2 replace buggy code at line 309 Diagnostic: 
 -  throw  new  IllegalArgumentException(    "Whitespace  must  not  be  in  alphabet  or  whitespace    ");  Throwable  cause  =  new  IllegalArgumentException(  "Whitespace  must  not  be  in  alphabet  or  whitespace    ");  
 + Throwable cause = new IllegalArgumentException( "Whitespace must not be in alphabet or whitespace! "); 
 ----------------------------------------------------------------------------------------------------
Codec16 -  FL is ranked in the 1
iteration_2 replace buggy code at line 309 Diagnostic: 
 -  throw  new  IllegalArgumentException(    "Whitespace  must  not  be  in  alphabet  or  whitespace    ");  Throwable  cause  =  new  IllegalArgumentException(  "Whitespace  must  not  be  in  alphabet  or  whitespace    ");  
 + Throwable cause = new IllegalArgumentException( "Whitespace must not be in alphabet or whitespace... "); 
 ----------------------------------------------------------------------------------------------------
Codec16 -  FL is ranked in the 1
iteration_2 replace buggy code at line 309 Diagnostic: 
 -  throw  new  IllegalArgumentException(    "Whitespace  must  not  be  in  alphabet  or  whitespace    ");  Throwable  cause  =  new  IllegalArgumentException(  "Whitespace  must  not  be  in  alphabet  or  whitespace    ");  
 + Throwable cause = new IllegalArgumentException( "Whitespace must not be in alphabet or whitespace: "); 
 ----------------------------------------------------------------------------------------------------
Codec16 -  FL is ranked in the 1
iteration_2 replace buggy code at line 309 Diagnostic: 
 -  throw  new  IllegalArgumentException(    "UsageHex  must  not  be  in  alphabet  or  whitespace    ");  Throwable  cause  =  new  IllegalArgumentException(  "UsageHex  must  not  be  in  alphabet  or  whitespace    ");  
 + Throwable cause = new IllegalArgumentException( "UsageHex must not be in alphabet or whitespace "); 
 ----------------------------------------------------------------------------------------------------
Codec16 -  FL is ranked in the 1
iteration_2 replace buggy code at line 309 Diagnostic: 
 -  throw  new  IllegalArgumentException(    "UsageHex  must  not  be  in  alphabet  or  whitespace    ");  Throwable  cause  =  new  IllegalArgumentException(  "UsageHex  must  not  be  in  alphabet  or  whitespace    ");  
 + Throwable cause = new IllegalArgumentException( "UsageHex must not be in alphabet or whitespace. "); 
 ----------------------------------------------------------------------------------------------------
Codec16 -  FL is ranked in the 1
iteration_2 replace buggy code at line 309 Diagnostic: 
 -  throw  new  IllegalArgumentException(    "UsageHex  must  not  be  in  alphabet  or  whitespace    ");  Throwable  cause  =  new  IllegalArgumentException(  "UsageHex  must  not  be  in  alphabet  or  whitespace    ");  
 + Throwable cause = new IllegalArgumentException( "UsageHex must not be in alphabet or whitespace, "); 
 ----------------------------------------------------------------------------------------------------
Codec16 -  FL is ranked in the 1
iteration_2 replace buggy code at line 309 Diagnostic: 
 -  throw  new  IllegalArgumentException(    "UsageHex  must  not  be  in  alphabet  or  whitespace    ");  Throwable  cause  =  new  IllegalArgumentException(  "UsageHex  must  not  be  in  alphabet  or  whitespace    ");  
 + Throwable cause = new IllegalArgumentException( "UsageHex must not be in alphabet or whitespace! "); 
 ----------------------------------------------------------------------------------------------------
Codec16 -  FL is ranked in the 1
iteration_2 replace buggy code at line 309 Diagnostic: 
 -  throw  new  IllegalArgumentException(    "UsageHex  must  not  be  in  alphabet  or  whitespace    ");  Throwable  cause  =  new  IllegalArgumentException(  "UsageHex  must  not  be  in  alphabet  or  whitespace    ");  
 + Throwable cause = new IllegalArgumentException( "UsageHex must not be in alphabet or whitespace... "); 
 ----------------------------------------------------------------------------------------------------
Codec16 -  FL is ranked in the 1
iteration_2 replace buggy code at line 309 Diagnostic: 
 -  throw  new  IllegalArgumentException(    "UsageHex  must  not  be  in  alphabet  or  whitespace    ");  Throwable  cause  =  new  IllegalArgumentException(  "UsageHex  must  not  be  in  alphabet  or  whitespace    ");  
 + Throwable cause = new IllegalArgumentException( "UsageHex must not be in alphabet or whitespace: "); 
 ----------------------------------------------------------------------------------------------------
Codec16 -  FL is ranked in the 1
iteration_2 replace buggy code at line 309 Diagnostic: 
 -  throw  new  IllegalArgumentException(    "Bad  space  must  not  be  in  alphabet  or  whitespace    ");  Throwable  cause  =  new  IllegalArgumentException(    "Bad  space  must  not  be  in  alphabet  or  whitespace    ");  
 + Throwable cause = new IllegalArgumentException( "Bad space must not be in alphabet or whitespace "); 
 ----------------------------------------------------------------------------------------------------
Codec16 -  FL is ranked in the 1
iteration_2 replace buggy code at line 309 Diagnostic: 
 -  throw  new  IllegalArgumentException(    "Bad  space  must  not  be  in  alphabet  or  whitespace    ");  Throwable  cause  =  new  IllegalArgumentException(    "Bad  space  must  not  be  in  alphabet  or  whitespace    ");  
 + Throwable cause = new IllegalArgumentException( "Bad space must not be in alphabet or whitespace! "); 
 ----------------------------------------------------------------------------------------------------
Codec16 -  FL is ranked in the 1
iteration_2 replace buggy code at line 309 Diagnostic: 
 -  throw  new  IllegalArgumentException(    "Bad  space  must  not  be  in  alphabet  or  whitespace    ");  Throwable  cause  =  new  IllegalArgumentException(    "Bad  space  must  not  be  in  alphabet  or  whitespace    ");  
 + Throwable cause = new IllegalArgumentException( "Bad space must not be in alphabet or whitespace: "); 
 ----------------------------------------------------------------------------------------------------
Codec16 -  FL is ranked in the 1
iteration_2 replace buggy code at line 309 Diagnostic: 
 -  throw  new  IllegalArgumentException(    "Bad  space  must  not  be  in  alphabet  or  whitespace    ");  Throwable  cause  =  new  IllegalArgumentException(    "Bad  space  must  not  be  in  alphabet  or  whitespace    ");  
 + Throwable cause = new IllegalArgumentException( "Bad space must not be in alphabet or whitespace... "); 
 ----------------------------------------------------------------------------------------------------
Codec16 -  FL is ranked in the 1
iteration_2 replace buggy code at line 309 Diagnostic: 
 -  throw  new  IllegalArgumentException(    "Bad  space  must  not  be  in  alphabet  or  whitespace    ");  Throwable  cause  =  new  IllegalArgumentException(    "Bad  space  must  not  be  in  alphabet  or  whitespace    ");  
 + Throwable cause = new IllegalArgumentException( "Bad space must not be in alphabet or whitespace, "); 
 ----------------------------------------------------------------------------------------------------
Codec16 -  FL is ranked in the 1
iteration_2 replace buggy code at line 309 Diagnostic: 
 -  throw  new  IllegalArgumentException(    "The  pad  must  not  be  in  alphabet  or  whitespace    ");  IllegalArgumentException(    "The  pad  must  not  be  in  alphabet  or  whitespace    ");  
 + new IllegalArgumentException( "The pad must not be in alphabet or whitespace. "); 
 ----------------------------------------------------------------------------------------------------
Codec16 -  FL is ranked in the 1
iteration_2 replace buggy code at line 309 Diagnostic: 
 -  throw  new  IllegalArgumentException(    "Bad  useHex  must  not  be  in  alphabet  or  whitespace    ");  Throwable  cause  =  new  IllegalArgumentException(  "Bad  useHex  must  not  be  in  alphabet  or  whitespace    ");  
 + Throwable cause = new IllegalArgumentException( "Bad useHex must not be in alphabet or whitespace "); 
 ----------------------------------------------------------------------------------------------------
Codec16 -  FL is ranked in the 1
iteration_2 replace buggy code at line 309 Diagnostic: 
 -  throw  new  IllegalArgumentException(    "Bad  useHex  must  not  be  in  alphabet  or  whitespace    ");  Throwable  cause  =  new  IllegalArgumentException(  "Bad  useHex  must  not  be  in  alphabet  or  whitespace    ");  
 + Throwable cause = new IllegalArgumentException( "Bad useHex must not be in alphabet or whitespace: "); 
 ----------------------------------------------------------------------------------------------------
Codec16 -  FL is ranked in the 1
iteration_2 replace buggy code at line 309 Diagnostic: 
 -  throw  new  IllegalArgumentException(    "Bad  useHex  must  not  be  in  alphabet  or  whitespace    ");  Throwable  cause  =  new  IllegalArgumentException(  "Bad  useHex  must  not  be  in  alphabet  or  whitespace    ");  
 + Throwable cause = new IllegalArgumentException( "Bad useHex must not be in alphabet or whitespace, "); 
 ----------------------------------------------------------------------------------------------------
Codec16 -  FL is ranked in the 1
iteration_2 replace buggy code at line 309 Diagnostic: 
 -  throw  new  IllegalArgumentException(    "Bad  useHex  must  not  be  in  alphabet  or  whitespace    ");  Throwable  cause  =  new  IllegalArgumentException(  "Bad  useHex  must  not  be  in  alphabet  or  whitespace    ");  
 + Throwable cause = new IllegalArgumentException( "Bad useHex must not be in alphabet or whitespace! "); 
 ----------------------------------------------------------------------------------------------------
Codec16 -  FL is ranked in the 1
iteration_2 replace buggy code at line 309 Diagnostic: 
 -  throw  new  IllegalArgumentException(    "Bad  useHex  must  not  be  in  alphabet  or  whitespace    ");  Throwable  cause  =  new  IllegalArgumentException(  "Bad  useHex  must  not  be  in  alphabet  or  whitespace    ");  
 + Throwable cause = new IllegalArgumentException( "Bad useHex must not be in alphabet or whitespace... "); 
 ----------------------------------------------------------------------------------------------------
Codec16 -  FL is ranked in the 1
iteration_2 replace buggy code at line 309 Diagnostic: 
 -  throw  new  IllegalArgumentException(    "Decode  must  not  be  in  alphabet  or  whitespace    ");  Throwable  cause  =  new  IllegalArgumentException(  "Decode  must  not  be  in  alphabet  or  whitespace    ");  
 + Throwable cause = new IllegalArgumentException( "Decode must not be in alphabet or whitespace "); 
 ----------------------------------------------------------------------------------------------------
Codec16 -  FL is ranked in the 1
iteration_2 replace buggy code at line 309 Diagnostic: 
 -  throw  new  IllegalArgumentException(    "Decode  must  not  be  in  alphabet  or  whitespace    ");  Throwable  cause  =  new  IllegalArgumentException(  "Decode  must  not  be  in  alphabet  or  whitespace    ");  
 + Throwable cause = new IllegalArgumentException( "Decode must not be in alphabet or whitespace. "); 
 ----------------------------------------------------------------------------------------------------
Codec16 -  FL is ranked in the 1
iteration_2 replace buggy code at line 309 Diagnostic: 
 -  throw  new  IllegalArgumentException(    "Decode  must  not  be  in  alphabet  or  whitespace    ");  Throwable  cause  =  new  IllegalArgumentException(  "Decode  must  not  be  in  alphabet  or  whitespace    ");  
 + Throwable cause = new IllegalArgumentException( "Decode must not be in alphabet or whitespace... "); 
 ----------------------------------------------------------------------------------------------------
Codec16 -  FL is ranked in the 1
iteration_2 replace buggy code at line 309 Diagnostic: 
 -  throw  new  IllegalArgumentException(    "Decode  must  not  be  in  alphabet  or  whitespace    ");  Throwable  cause  =  new  IllegalArgumentException(  "Decode  must  not  be  in  alphabet  or  whitespace    ");  
 + Throwable cause = new IllegalArgumentException( "Decode must not be in alphabet or whitespace: "); 
 ----------------------------------------------------------------------------------------------------
Codec16 -  FL is ranked in the 1
iteration_2 replace buggy code at line 309 Diagnostic: 
 -  throw  new  IllegalArgumentException(    "Decode  must  not  be  in  alphabet  or  whitespace    ");  Throwable  cause  =  new  IllegalArgumentException(  "Decode  must  not  be  in  alphabet  or  whitespace    ");  
 + Throwable cause = new IllegalArgumentException( "Decode must not be in alphabet or whitespace, "); 
 ----------------------------------------------------------------------------------------------------
Codec16 -  FL is ranked in the 1
iteration_2 replace buggy code at line 309 Diagnostic: 
 -  throw  new  IllegalArgumentException(    "Decode  must  not  be  in  alphabet  or  whitespace    ");  Throwable  cause  =  new  IllegalArgumentException(  "Decode  must  not  be  in  alphabet  or  whitespace    ");  
 + Throwable cause = new IllegalArgumentException( "Decode must not be in alphabet or whitespace! "); 
 ----------------------------------------------------------------------------------------------------
Codec16 -  FL is ranked in the 1
iteration_2 replace buggy code at line 309 Diagnostic: 
 -  throw  new  IllegalArgumentException(    "Sep  must  not  be  in  alphabet  or  whitespace    ");  throw  new  IllegalArgumentException(  "Sep  must  not  be  in  alphabet  or  whitespace    ");  
 + new IllegalArgumentException( "Sep must not be in alphabet or whitespace "); 
 ----------------------------------------------------------------------------------------------------
Codec16 -  FL is ranked in the 1
iteration_2 replace buggy code at line 309 Diagnostic: 
 -  throw  new  IllegalArgumentException(    "Sep  must  not  be  in  alphabet  or  whitespace    ");  Throwable  cause  =  new  IllegalArgumentException(  "Sep  must  not  be  in  alphabet  or  whitespace    ");  
 + Throwable cause = new IllegalArgumentException( "Sep must not be in alphabet or whitespace "); 
 ----------------------------------------------------------------------------------------------------
Codec16 -  FL is ranked in the 1
iteration_2 replace buggy code at line 309 Diagnostic: 
 -  throw  new  IllegalArgumentException(    "Sep  must  not  be  in  alphabet  or  whitespace    ");  Throwable  cause  =  new  IllegalArgumentException(  "Sep  must  not  be  in  alphabet  or  whitespace    ");  
 + Throwable cause = new IllegalArgumentException( "Sep must not be in alphabet or whitespace. "); 
 ----------------------------------------------------------------------------------------------------
Codec16 -  FL is ranked in the 1
iteration_2 replace buggy code at line 309 Diagnostic: 
 -  throw  new  IllegalArgumentException(    "Sep  must  not  be  in  alphabet  or  whitespace    ");  Throwable  cause  =  new  IllegalArgumentException(  "Sep  must  not  be  in  alphabet  or  whitespace    ");  
 + Throwable cause = new IllegalArgumentException( "Sep must not be in alphabet or whitespace! "); 
 ----------------------------------------------------------------------------------------------------
Codec16 -  FL is ranked in the 1
iteration_2 replace buggy code at line 309 Diagnostic: 
 -  throw  new  IllegalArgumentException(    "Sep  must  not  be  in  alphabet  or  whitespace    ");  Throwable  cause  =  new  IllegalArgumentException(  "Sep  must  not  be  in  alphabet  or  whitespace    ");  
 + Throwable cause = new IllegalArgumentException( "Sep must not be in alphabet or whitespace, "); 
 ----------------------------------------------------------------------------------------------------
Codec16 -  FL is ranked in the 1
iteration_2 replace buggy code at line 309 Diagnostic: 
 -  throw  new  IllegalArgumentException(    "Sep  must  not  be  in  alphabet  or  whitespace    ");  Throwable  cause  =  new  IllegalArgumentException(  "Sep  must  not  be  in  alphabet  or  whitespace    ");  
 + Throwable cause = new IllegalArgumentException( "Sep must not be in alphabet or whitespace... "); 
 ----------------------------------------------------------------------------------------------------
Codec16 -  FL is ranked in the 1
iteration_2 replace buggy code at line 309 Diagnostic: 
 -  throw  new  IllegalArgumentException(    "Sep  must  not  be  in  alphabet  or  whitespace    ");  Throwable  cause  =  new  IllegalArgumentException(  "Sep  must  not  be  in  alphabet  or  whitespace    ");  
 + Throwable cause = new IllegalArgumentException( "Sep must not be in alphabet or whitespace: "); 
 ----------------------------------------------------------------------------------------------------
Codec16 -  FL is ranked in the 1
iteration_2 replace buggy code at line 309 Diagnostic: 
 -  throw  new  IllegalArgumentException(    "The  pad  must  not  be  in  alphabet  or  whitespace    ");  Throwable  cause  =  new  IllegalArgumentException(  "The  pad  must  not  be  in  alphabet  or  whitespace    ");  
 + Throwable cause = new IllegalArgumentException( "The pad must not be in alphabet or whitespace. "); 
 ----------------------------------------------------------------------------------------------------
Codec16 -  FL is ranked in the 1
iteration_2 replace buggy code at line 309 Diagnostic: 
 -  throw  new  IllegalArgumentException(    "The  pad  must  not  be  in  alphabet  or  whitespace    ");  Throwable  cause  =  new  IllegalArgumentException(  "The  pad  must  not  be  in  alphabet  or  whitespace    ");  
 + Throwable cause = new IllegalArgumentException( "The pad must not be in alphabet or whitespace "); 
 ----------------------------------------------------------------------------------------------------
Codec16 -  FL is ranked in the 1
iteration_2 replace buggy code at line 309 Diagnostic: 
 -  throw  new  IllegalArgumentException(    "The  pad  must  not  be  in  alphabet  or  whitespace    ");  Throwable  cause  =  new  IllegalArgumentException(  "The  pad  must  not  be  in  alphabet  or  whitespace    ");  
 + Throwable cause = new IllegalArgumentException( "The pad must not be in alphabet or whitespace... "); 
 ----------------------------------------------------------------------------------------------------
Codec16 -  FL is ranked in the 1
iteration_2 replace buggy code at line 309 Diagnostic: 
 -  throw  new  IllegalArgumentException(    "The  pad  must  not  be  in  alphabet  or  whitespace    ");  Throwable  cause  =  new  IllegalArgumentException(  "The  pad  must  not  be  in  alphabet  or  whitespace    ");  
 + Throwable cause = new IllegalArgumentException( "The pad must not be in alphabet or whitespace: "); 
 ----------------------------------------------------------------------------------------------------
Codec16 -  FL is ranked in the 1
iteration_2 replace buggy code at line 309 Diagnostic: 
 -  throw  new  IllegalArgumentException(    "The  pad  must  not  be  in  alphabet  or  whitespace    ");  Throwable  cause  =  new  IllegalArgumentException(  "The  pad  must  not  be  in  alphabet  or  whitespace    ");  
 + Throwable cause = new IllegalArgumentException( "The pad must not be in alphabet or whitespace! "); 
 ----------------------------------------------------------------------------------------------------
Codec16 -  FL is ranked in the 1
iteration_2 replace buggy code at line 309 Diagnostic: 
 -  throw  new  IllegalArgumentException(    "The  pad  must  not  be  in  alphabet  or  whitespace    ");  Throwable  cause  =  new  IllegalArgumentException(  "The  pad  must  not  be  in  alphabet  or  whitespace    ");  
 + Throwable cause = new IllegalArgumentException( "The pad must not be in alphabet or whitespace: " + pad); 
 ----------------------------------------------------------------------------------------------------
Codec16 -  FL is ranked in the 1
iteration_2 replace buggy code at line 309 Diagnostic: 
 -  throw  new  IllegalArgumentException(    "Bytes  must  not  be  in  alphabet  or  whitespace.    ");  Throwable  cause  =  new  IllegalArgumentException(  "Bytes  must  not  be  in  alphabet  or  whitespace.    ");  
 + Throwable cause = new IllegalArgumentException( "Bytes must not be in alphabet or whitespace.. "); 
 ----------------------------------------------------------------------------------------------------
Codec16 -  FL is ranked in the 1
iteration_2 replace buggy code at line 309 Diagnostic: 
 -  throw  new  IllegalArgumentException(    "Bytes  must  not  be  in  alphabet  or  whitespace.    ");  Throwable  cause  =  new  IllegalArgumentException(  "Bytes  must  not  be  in  alphabet  or  whitespace.    ");  
 + Throwable cause = new IllegalArgumentException( "Bytes must not be in alphabet or whitespace.n "); 
 ----------------------------------------------------------------------------------------------------
Codec16 -  FL is ranked in the 1
iteration_2 replace buggy code at line 309 Diagnostic: 
 -  throw  new  IllegalArgumentException(    "Bytes  must  not  be  in  alphabet  or  whitespace.    ");  Throwable  cause  =  new  IllegalArgumentException(  "Bytes  must  not  be  in  alphabet  or  whitespace.    ");  
 + Throwable cause = new IllegalArgumentException( "Bytes must not be in alphabet or whitespace.... "); 
 ----------------------------------------------------------------------------------------------------
Codec16 -  FL is ranked in the 1
iteration_2 replace buggy code at line 309 Diagnostic: 
 -  throw  new  IllegalArgumentException(    "Whitespace  must  not  be  in  alphabet  or  whitespace.    ");  Throwable  cause  =  new  IllegalArgumentException(  "Whitespace  must  not  be  in  alphabet  or  whitespace.    ");  
 + Throwable cause = new IllegalArgumentException( "Whitespace must not be in alphabet or whitespace.n "); 
 ----------------------------------------------------------------------------------------------------
Codec16 -  FL is ranked in the 1
iteration_2 replace buggy code at line 309 Diagnostic: 
 -  throw  new  IllegalArgumentException(    "Whitespace  must  not  be  in  alphabet  or  whitespace.    ");  Throwable  cause  =  new  IllegalArgumentException(  "Whitespace  must  not  be  in  alphabet  or  whitespace.    ");  
 + Throwable cause = new IllegalArgumentException( "Whitespace must not be in alphabet or whitespace.. "); 
 ----------------------------------------------------------------------------------------------------
Codec16 -  FL is ranked in the 1
iteration_2 replace buggy code at line 309 Diagnostic: 
 -  logically(useHex)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  this.decodeSize);  }  
 + if(!useHex) { System.arraycopy(this.lineSeparator, 0, this.lineSeparator, 0, this.decodeSize); } 
 ----------------------------------------------------------------------------------------------------
Codec16 -  FL is ranked in the 1
iteration_2 replace buggy code at line 309 Diagnostic: 
 -  throw  new  IllegalArgumentException(    "Whitespace  must  not  be  in  alphabet  or  blackspace    ");  IllegalArgumentException(    "Whitespace  must  not  be  in  alphabet  or  blackspace    ");  
 + new IllegalArgumentException( "Whitespace must not be in alphabet or blackspace "); 
 ----------------------------------------------------------------------------------------------------
Codec16 -  FL is ranked in the 1
iteration_2 replace buggy code at line 309 Diagnostic: 
 -  throw  new  IllegalArgumentException(    "Whitespace  must  not  be  in  alphabet  or  blackspace    ");  IllegalArgumentException(    "Whitespace  must  not  be  in  alphabet  or  blackspace    ");  
 + new IllegalArgumentException( "Whitespace must not be in alphabet or blackspace. "); 
 ----------------------------------------------------------------------------------------------------
Codec16 -  FL is ranked in the 1
iteration_2 replace buggy code at line 309 Diagnostic: 
 -  throw  new  IllegalArgumentException(    "Decode  must  not  be  in  alphabet  or  whitespace    ");  throw  new  IllegalArgumentException(  "Decode  must  not  be  in  alphabet  or  whitespace    ");  
 + new IllegalArgumentException( "Decode must not be in alphabet or whitespace "); 
 ----------------------------------------------------------------------------------------------------
Codec16 -  FL is ranked in the 1
iteration_2 replace buggy code at line 309 Diagnostic: 
 -  throw  new  IllegalArgumentException(    "Bytes  must  not  be  in  alphabet  or  whitespace    ");  Throwable  cause  =  new  IllegalArgumentException(  "Bytes  must  not  be  in  alphabet  or  whitespace    ");  
 + Throwable cause = new IllegalArgumentException( "Bytes must not be in alphabet or whitespace "); 
 ----------------------------------------------------------------------------------------------------
Codec16 -  FL is ranked in the 1
iteration_2 replace buggy code at line 309 Diagnostic: 
 -  throw  new  IllegalArgumentException(    "Bytes  must  not  be  in  alphabet  or  whitespace    ");  Throwable  cause  =  new  IllegalArgumentException(  "Bytes  must  not  be  in  alphabet  or  whitespace    ");  
 + Throwable cause = new IllegalArgumentException( "Bytes must not be in alphabet or whitespace: "); 
 ----------------------------------------------------------------------------------------------------
Codec16 -  FL is ranked in the 1
iteration_2 replace buggy code at line 309 Diagnostic: 
 -  throw  new  IllegalArgumentException(    "Bytes  must  not  be  in  alphabet  or  whitespace    ");  Throwable  cause  =  new  IllegalArgumentException(  "Bytes  must  not  be  in  alphabet  or  whitespace    ");  
 + Throwable cause = new IllegalArgumentException( "Bytes must not be in alphabet or whitespace... "); 
 ----------------------------------------------------------------------------------------------------
Codec16 -  FL is ranked in the 1
iteration_2 replace buggy code at line 309 Diagnostic: 
 -  throw  new  IllegalArgumentException(    "Bytes  must  not  be  in  alphabet  or  whitespace    ");  Throwable  cause  =  new  IllegalArgumentException(  "Bytes  must  not  be  in  alphabet  or  whitespace    ");  
 + Throwable cause = new IllegalArgumentException( "Bytes must not be in alphabet or whitespace, "); 
 ----------------------------------------------------------------------------------------------------
Codec16 -  FL is ranked in the 1
iteration_2 replace buggy code at line 309 Diagnostic: 
 -  throw  new  IllegalArgumentException(    "Bytes  must  not  be  in  alphabet  or  whitespace    ");  Throwable  cause  =  new  IllegalArgumentException(  "Bytes  must  not  be  in  alphabet  or  whitespace    ");  
 + Throwable cause = new IllegalArgumentException( "Bytes must not be in alphabet or whitespace! "); 
 ----------------------------------------------------------------------------------------------------
Codec16 -  FL is ranked in the 1
iteration_2 replace buggy code at line 309 Diagnostic: 
 -  throw  new  IllegalArgumentException(    "UseHex  must  not  be  in  alphabet  or  whitespace    ");  throw  new  IllegalArgumentException(  "UseHex  must  not  be  in  alphabet  or  whitespace    ");  
 + new IllegalArgumentException( "UseHex must not be in alphabet or whitespace "); 
 ----------------------------------------------------------------------------------------------------
Codec16 -  FL is ranked in the 1
iteration_2 replace buggy code at line 309 Diagnostic: 
 -  throw  new  IllegalArgumentException(    "UseHex  must  not  be  in  alphabet  or  whitespace    ");  Throwable  cause  =  new  IllegalArgumentException(  "UseHex  must  not  be  in  alphabet  or  whitespace    ");  
 + Throwable cause = new IllegalArgumentException( "UseHex must not be in alphabet or whitespace "); 
 ----------------------------------------------------------------------------------------------------
Codec16 -  FL is ranked in the 1
iteration_2 replace buggy code at line 309 Diagnostic: 
 -  throw  new  IllegalArgumentException(    "UseHex  must  not  be  in  alphabet  or  whitespace    ");  Throwable  cause  =  new  IllegalArgumentException(  "UseHex  must  not  be  in  alphabet  or  whitespace    ");  
 + Throwable cause = new IllegalArgumentException( "UseHex must not be in alphabet or whitespace. "); 
 ----------------------------------------------------------------------------------------------------
Codec16 -  FL is ranked in the 1
iteration_2 replace buggy code at line 309 Diagnostic: 
 -  throw  new  IllegalArgumentException(    "UseHex  must  not  be  in  alphabet  or  whitespace    ");  Throwable  cause  =  new  IllegalArgumentException(  "UseHex  must  not  be  in  alphabet  or  whitespace    ");  
 + Throwable cause = new IllegalArgumentException( "UseHex must not be in alphabet or whitespace, "); 
 ----------------------------------------------------------------------------------------------------
Codec16 -  FL is ranked in the 1
iteration_2 replace buggy code at line 309 Diagnostic: 
 -  throw  new  IllegalArgumentException(    "UseHex  must  not  be  in  alphabet  or  whitespace    ");  Throwable  cause  =  new  IllegalArgumentException(  "UseHex  must  not  be  in  alphabet  or  whitespace    ");  
 + Throwable cause = new IllegalArgumentException( "UseHex must not be in alphabet or whitespace! "); 
 ----------------------------------------------------------------------------------------------------
Codec16 -  FL is ranked in the 1
iteration_2 replace buggy code at line 309 Diagnostic: 
 -  throw  new  IllegalArgumentException(    "UseHex  must  not  be  in  alphabet  or  whitespace    ");  Throwable  cause  =  new  IllegalArgumentException(  "UseHex  must  not  be  in  alphabet  or  whitespace    ");  
 + Throwable cause = new IllegalArgumentException( "UseHex must not be in alphabet or whitespace... "); 
 ----------------------------------------------------------------------------------------------------
Codec16 -  FL is ranked in the 1
iteration_2 replace buggy code at line 309 Diagnostic: 
 -  throw  new  IllegalArgumentException(    "UseHex  must  not  be  in  alphabet  or  whitespace    ");  Throwable  cause  =  new  IllegalArgumentException(  "UseHex  must  not  be  in  alphabet  or  whitespace    ");  
 + Throwable cause = new IllegalArgumentException( "UseHex must not be in alphabet or whitespace: "); 
 ----------------------------------------------------------------------------------------------------
Codec16 -  FL is ranked in the 1
iteration_2 replace buggy code at line 309 Diagnostic: 
 -  throw  new  IllegalArgumentException(    "Bad  useHex  must  not  be  in  alphabet  or  whitespace.    ");  Throwable  cause  =  new  IllegalArgumentException(  "Bad  useHex  must  not  be  in  alphabet  or  whitespace.    ");  
 + Throwable cause = new IllegalArgumentException( "Bad useHex must not be in alphabet or whitespace.. "); 
 ----------------------------------------------------------------------------------------------------
Codec16 -  FL is ranked in the 1
iteration_2 replace buggy code at line 309 Diagnostic: 
 -  throw  new  IllegalArgumentException(    "Bad  useHex  must  not  be  in  alphabet  or  whitespace.    ");  Throwable  cause  =  new  IllegalArgumentException(  "Bad  useHex  must  not  be  in  alphabet  or  whitespace.    ");  
 + Throwable cause = new IllegalArgumentException( "Bad useHex must not be in alphabet or whitespace.n "); 
 ----------------------------------------------------------------------------------------------------
Codec16 -  FL is ranked in the 1
iteration_2 replace buggy code at line 309 Diagnostic: 
 -  throw  new  IllegalArgumentException(    "Bad  useHex  must  not  be  in  alphabet  or  whitespace.    ");  Throwable  cause  =  new  IllegalArgumentException(  "Bad  useHex  must  not  be  in  alphabet  or  whitespace.    ");  
 + Throwable cause = new IllegalArgumentException( "Bad useHex must not be in alphabet or whitespace.... "); 
 ----------------------------------------------------------------------------------------------------
Codec16 -  FL is ranked in the 1
iteration_2 replace buggy code at line 309 Diagnostic: 
 -  throw  new  IllegalArgumentException(    "pad  must  not  be  in  alphabet  or  whitespace.    ");  Throwable  cause  =  new  IllegalArgumentException(  "pad  must  not  be  in  alphabet  or  whitespace.    ");  
 + Throwable cause = new IllegalArgumentException( "Encoding must not be in alphabet or whitespace.  "); 
 ----------------------------------------------------------------------------------------------------
Codec16 -  FL is ranked in the 1
iteration_2 replace buggy code at line 309 Diagnostic: 
 -  throw  new  IllegalArgumentException(    "Bad  useHex  must  not  be  in  alphabet  or  whitespace.    ");  throw  new  IllegalArgumentException(    "Bad  useHex  must  not  be  in  alphabet  or  whitespace.    ");  
 + new IllegalArgumentException( "Bad useHex must not be in alphabet or whitespace. "); 
 ----------------------------------------------------------------------------------------------------
Codec16 -  FL is ranked in the 1
iteration_2 replace buggy code at line 309 Diagnostic: 
 -  throw  new  IllegalArgumentException(  "Bad  useHex  must  not  be  in  alphabet  or  whitespace.  Please  check  that  the  pad  does  not  exist.  ");  
 + new IllegalArgumentException( "Bad useHex must not be in alphabet or whitespace. Please check that the pad does not exist. "); 
 ----------------------------------------------------------------------------------------------------
Codec16 -  FL is ranked in the 1
iteration_2 replace buggy code at line 309 Diagnostic: 
 -  throw  new  IllegalArgumentException(    "The  pad  must  not  be  in  alphabet  or  whitespace    ");  IllegalArgumentException(    "The  pad  must  not  be  in  alphabet  or  whitespace    ");  
 + new IllegalArgumentException( "The pad must not be in alphabet or whitespace "); 
 ----------------------------------------------------------------------------------------------------
Codec16 -  FL is ranked in the 1
iteration_2 replace buggy code at line 309 Diagnostic: 
 -  throw  new  IllegalArgumentException(    "Bad  useHex  must  not  be  in  alphabet  or  whitespace    ");  throw  new  IllegalArgumentException(    "Bad  useHex  must  not  be  in  alphabet  or  whitespace    ");  
 + new IllegalArgumentException( "Bad useHex must not be in alphabet or whitespace "); 
 ----------------------------------------------------------------------------------------------------
Codec16 -  FL is ranked in the 1
iteration_2 replace buggy code at line 309 Diagnostic: 
 -  throw  new  IllegalArgumentException(  "Bytes  must  not  be  in  alphabet  or  whitespace.  Please  check  that  the  useHex  is  null.  ");  
 + new IllegalArgumentException( "Bytes must not be in alphabet or whitespace. Please check that the useHex is null. "); 
 ----------------------------------------------------------------------------------------------------
Codec16 -  FL is ranked in the 1
iteration_2 replace buggy code at line 309 Diagnostic: 
 -  throw  new  IllegalArgumentException(  "Bad  useHex  must  not  be  in  alphabet  or  whitespace.  Please  check  that  it  does.  ");  
 + new IllegalArgumentException( "Bad useHex must not be in alphabet or whitespace. Please check that it does. "); 
 ----------------------------------------------------------------------------------------------------
Codec16 -  FL is ranked in the 1
iteration_2 replace buggy code at line 309 Diagnostic: 
 -  throw  new  IllegalArgumentException(    "The  pad  must  not  be  in  alphabet  or  whitespace    ");  Throwable  cause  =  new  IllegalArgumentException(  "The  pad  must  not  be  in  alphabet  or  whitespace    ");  
 + Throwable cause = new IllegalArgumentException( "The pad must not be in alphabet or whitespace, "); 
 ----------------------------------------------------------------------------------------------------
Codec16 -  FL is ranked in the 1
iteration_2 replace buggy code at line 309 Diagnostic: 
 -  throw  new  IllegalArgumentException(  "Bytes  must  not  be  in  alphabet  or  whitespace.  Please  check  that  this  pad  does  not  exist.  ");  
 + new IllegalArgumentException( "Bytes must not be in alphabet or whitespace. Please check that this pad does not exist. "); 
 ----------------------------------------------------------------------------------------------------
Codec16 -  FL is ranked in the 1
iteration_2 replace buggy code at line 309 Diagnostic: 
 -  throw  new  IllegalArgumentException(  "Bytes  must  not  be  in  alphabet  or  whitespace.  Please  check  that  the  pad  does  not  exist:  "  +  pad);  
 + new IllegalArgumentException( "Bytes must not be in alphabet or whitespace. Please check that the pad does not exist: " + pad); 
 ----------------------------------------------------------------------------------------------------
Codec16 -  FL is ranked in the 1
iteration_2 replace buggy code at line 309 Diagnostic: 
 -  throw  new  IllegalArgumentException(    "Bad  space  must  not  be  in  alphabet  or  whitespace    ");  throw  new  IllegalArgumentException(    "Bad  space  must  not  be  in  alphabet  or  whitespace    ");  
 + new IllegalArgumentException( "Bad space must not be in alphabet or whitespace "); 
 ----------------------------------------------------------------------------------------------------
Codec16 -  FL is ranked in the 1
iteration_2 replace buggy code at line 309 Diagnostic: 
 -  throw  new  IllegalArgumentException(  "Bad  useHex  must  not  be  in  alphabet  or  whitespace.  Please  check  that  your  pad  does  not  exist.  ");  
 + new IllegalArgumentException( "Bad useHex must not be in alphabet or whitespace. Please check that your pad does not exist. "); 
 ----------------------------------------------------------------------------------------------------
Codec16 -  FL is ranked in the 1
iteration_2 replace buggy code at line 309 Diagnostic: 
 -  throw  new  IllegalArgumentException(  "Whitespace  must  not  be  in  alphabet  or  whitespace.  Please  check  that  it  does.  ");  
 + new IllegalArgumentException( "Whitespace must not be in alphabet or whitespace. Please check that it does. "); 
 ----------------------------------------------------------------------------------------------------
Codec16 -  FL is ranked in the 1
iteration_2 replace buggy code at line 309 Diagnostic: 
 -  throw  new  IllegalArgumentException(    "Bytes  must  not  be  in  alphabet  or  whitespace    ");  throw  new  IllegalArgumentException(  "Bytes  must  not  be  in  alphabet  or  whitespace    ");  
 + if(!useHex) { throw new IllegalArgumentException( "Bytes must not be in alphabet or whitespace "); } 
 ----------------------------------------------------------------------------------------------------
Codec16 -  FL is ranked in the 1
iteration_2 replace buggy code at line 309 Diagnostic: 
 -  throw  new  IllegalArgumentException(    "Bytes  must  not  be  in  alphabet  or  whitespace    ");  throw  new  IllegalArgumentException(  "Bytes  must  not  be  in  alphabet  or  whitespace    ");  
 + new IllegalArgumentException( "Bytes must not be in alphabet or whitespace "); 
 ----------------------------------------------------------------------------------------------------
Codec16 -  FL is ranked in the 1
iteration_2 replace buggy code at line 309 Diagnostic: 
 -  throw  new  IllegalArgumentException(    "Whitespace  must  not  be  in  alphabet  or  whitespace    ");  throw  new  IllegalArgumentException(    "Whitespace  must  not  be  in  alphabet  or  whitespace    ");  
 + new IllegalArgumentException( "Whitespace must not be in alphabet or whitespace "); 
 ----------------------------------------------------------------------------------------------------
Codec16 -  FL is ranked in the 1
iteration_2 replace buggy code at line 309 Diagnostic: 
 -  throw  new  IllegalArgumentException(  "Whitespace  must  not  be  in  alphabet  or  whitespace.  Please  check  that  the  pad  does  not  exist.  ");  
 + new IllegalArgumentException( "Whitespace must not be in alphabet or whitespace. Please check that the pad does not exist. "); 
 ----------------------------------------------------------------------------------------------------
Codec16 -  FL is ranked in the 1
iteration_2 replace buggy code at line 309 Diagnostic: 
 -  throw  new  IllegalArgumentException(  "Whitespace  must  not  be  in  alphabet  or  whitespace.  Please  check  that  the  useHex  is  null.  ");  
 + new IllegalArgumentException( "Whitespace must not be in alphabet or whitespace. Please check that the useHex is null. "); 
 ----------------------------------------------------------------------------------------------------
Codec16 -  FL is ranked in the 1
iteration_2 replace buggy code at line 309 Diagnostic: 
 -  throw  new  IllegalArgumentException(    "Bytes  must  not  be  in  alphabet  or  whitespace.    ");  throw  new  IllegalArgumentException(  "Bytes  must  not  be  in  alphabet  or  whitespace.    ");  
 + new IllegalArgumentException( "Bytes must not be in alphabet or whitespace. "); 
 ----------------------------------------------------------------------------------------------------
Codec16 -  FL is ranked in the 1
iteration_2 replace buggy code at line 309 Diagnostic: 
 -  throw  new  IllegalArgumentException(  "Bytes  must  not  be  in  alphabet  or  whitespace.  Please  check  that  your  useHex  is  null.  ");  
 + new IllegalArgumentException( "Bytes must not be in alphabet or whitespace. Please check that your useHex is null. "); 
 ----------------------------------------------------------------------------------------------------
Codec16 -  FL is ranked in the 1
iteration_2 replace buggy code at line 309 Diagnostic: 
 -  throw  new  IllegalArgumentException(  "Bytes  must  not  be  in  alphabet  or  whitespace.  Please  check  that  the  pad  does  not  exist.  ");  
 + new IllegalArgumentException( "Bytes must not be in alphabet or whitespace. Please check that the pad does not exist. "); 
 ----------------------------------------------------------------------------------------------------
Codec16 -  FL is ranked in the 1
iteration_2 replace buggy code at line 309 Diagnostic: 
 -  throw  new  IllegalArgumentException(    "Whitespace  must  not  be  in  alphabet  or  whitespace    ");  throw  new  IllegalArgumentException(    "Whitespace  must  not  be  in  alphabet  or  whitespace    ");  
 + if(!useHex) { throw new IllegalArgumentException( "Whitespace must not be in alphabet or whitespace "); } 
 ----------------------------------------------------------------------------------------------------
Codec16 -  FL is ranked in the 1
iteration_2 replace buggy code at line 309 Diagnostic: 
 -  throw  new  IllegalArgumentException(    "Whitespace  must  not  be  in  alphabet  or  whitespace    ");  throw  new  IllegalArgumentException(    "Whitespace  must  not  be  in  alphabet  or  whitespace    ");  
 + if(!useHex) { throw new IllegalArgumentException( "Whitespace must not be in alphabet or whitespace. "); } 
 ----------------------------------------------------------------------------------------------------
Codec16 -  FL is ranked in the 1
iteration_2 replace buggy code at line 309 Diagnostic: 
 -  throw  new  IllegalArgumentException(    "Decode  must  not  be  in  alphabet  or  whitespace    ");  Throwables.throw  new  IllegalArgumentException(  "Decode  must  not  be  in  alphabet  or  whitespace    ");  
 + if(!useHex) { throw new IllegalArgumentException( "Decode must not be in alphabet or whitespace "); } 
 ----------------------------------------------------------------------------------------------------
Codec16 -  FL is ranked in the 1
iteration_2 replace buggy code at line 309 Diagnostic: 
 -  throw  new  IllegalArgumentException(    "Whitespace  must  not  be  in  alphabet  or  whitespace.    ");  Throwable  cause  =  new  IllegalArgumentException(  "Whitespace  must  not  be  in  alphabet  or  whitespace.    ");  
 + Throwable cause = new IllegalArgumentException( "Whitespace must not be in alphabet or whitespace. Try again. "); 
 ----------------------------------------------------------------------------------------------------
Codec16 -  FL is ranked in the 1
iteration_2 replace buggy code at line 309 Diagnostic: 
 -  throw  new  IllegalArgumentException(    "Whitespace  must  not  be  in  alphabet  or  whitespace.    ");  Throwable  cause  =  new  IllegalArgumentException(  "Whitespace  must  not  be  in  alphabet  or  whitespace.    ");  
 + Throwable cause = new IllegalArgumentException( "Whitespace must not be in alphabet or whitespace. Please check that it does. "); 
 ----------------------------------------------------------------------------------------------------
Codec16 -  FL is ranked in the 1
iteration_2 replace buggy code at line 309 Diagnostic: 
 -  throw  new  IllegalArgumentException(    "Whitespace  must  not  be  in  alphabet  or  whitespace.    ");  Throwable  cause  =  new  IllegalArgumentException(  "Whitespace  must  not  be  in  alphabet  or  whitespace.    ");  
 + Throwable cause = new IllegalArgumentException( "Whitespace must not be in alphabet or whitespace. Please check that the pad does not exist. "); 
 ----------------------------------------------------------------------------------------------------
Codec16 -  FL is ranked in the 1
iteration_2 replace buggy code at line 309 Diagnostic: 
 -  throw  new  IllegalArgumentException(    "Bytes  must  not  be  in  alphabet  or  whitespace    ");  throw  new  IllegalArgumentException(  "Bytes  must  not  be  in  alphabet  or  whitespace    ");  
 + if(!useHex) { throw new IllegalArgumentException( "Bytes must not be in alphabet or whitespace. "); } 
 ----------------------------------------------------------------------------------------------------
